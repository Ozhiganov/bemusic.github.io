!function(t){function e(r){if(n[r])return n[r].exports;var u=n[r]={exports:{},id:r,loaded:!1};return t[r].call(u.exports,u,u.exports,e),u.loaded=!0,u.exports}var n={};return e.m=t,e.c=n,e.p="build/",e(0)}([function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}function u(){for(var t,e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];(t=console).log.apply(t,["%c serviceworker %c","background:yellow;color:black",""].concat(n))}function o(t,e){t.respondWith(caches.open(e).then(function(e){return e.match(t.request).then(function(n){return n||fetch(t.request).then(function(n){return u("Cache forever:",t.request.url),e.put(t.request,n.clone()),n})})}))}function s(t,e){t.respondWith(caches.open(e).then(function(e){return fetch(t.request).then(function(n){return n&&n.ok?(u("Fetch OK:",t.request.url),e.put(t.request,n.clone()),n):e.match(t.request)})["catch"](function(){return e.match(t.request)})}))}function i(t,e){t.respondWith(caches.open(e).then(function(e){return e.match(t.request).then(function(n){var r=fetch(t.request).then(function(n){return n&&n.ok&&(u("Updated:",t.request.url),e.put(t.request,n.clone())),n});return n||r})}))}var c=n(1),a=r(c);u("I am a service worker! "+a["default"]);var l="app",f="site-v"+a["default"],h="site-v"+a["default"],d="skin-v"+a["default"],p="songs";self.addEventListener("install",function(t){t.waitUntil(caches.open(f).then(function(t){return t.addAll(["/"])}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(){return u("Service worker activated! Claiming clients now!"),self.clients.claim()}),self.addEventListener("fetch",function(t){if(t.request.headers.get("range"))return void u("Bailing out for ranged request.",t.request.url);var e=location.origin+"/build/",n=location.origin+"/skins/",r=location.origin+"/res/",c=location.origin,a=t.request;return a.url.startsWith(e)&&a.url!==e+"boot.js"?o(t,l):a.url.match(/assets\/[^\/]+\.bemuse$/)?o(t,p):a.url.match(/\.(bms|bme|bml)$/)?s(t,p):a.url.match(/\/index\.json$/)?s(t,p):a.url.match(/\/assets\/metadata\.json$/)?s(t,p):a.url.startsWith(n)?i(t,d):a.url.startsWith(r)?i(t,h):a.url.startsWith(c)?s(t,f):a.url.startsWith("https://fonts.googleapis.com/")?i(t,d):void 0})},function(t,e,n){"use strict";t.exports=n(2)},function(t,e){t.exports="36.0.2"}]);
//# sourceMappingURL=5abf86da0e528e29f0bc.serviceworker.js.map