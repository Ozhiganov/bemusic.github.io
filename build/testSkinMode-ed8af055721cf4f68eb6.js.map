{"version":3,"sources":["webpack:///testSkinMode-ed8af055721cf4f68eb6.js","webpack:///../~/lodash/index.js?933d***","webpack:///../~/pixi.js/bin/pixi.dev.js?3440","webpack:///../~/co/index.js?5989***","webpack:///./scintillator/nodes/lib/base.js?4a93","webpack:///./scintillator/nodes/lib/instance.js?48f8","webpack:///../~/data-structure/index.js?12c8**","webpack:///../~/webpack/buildin/module.js?17a8***","webpack:///./scintillator/expression/index.js?0395","webpack:///../~/webpack/~/node-libs-browser/~/buffer/index.js?d66e**","webpack:///./progress/utils.js?8e3b**","webpack:///../~/webpack/~/node-libs-browser/~/url/url.js?234c**","webpack:///./scintillator/nodes/concerns/display-object.js?0e50","webpack:///../~/keytime/~/eases/bounce-out.js?44c2","webpack:///./game/data/event.js?ef42**","webpack:///./scintillator/index.js?2cfd","webpack:///../~/webpack/~/node-libs-browser/~/buffer/~/base64-js/lib/b64.js?e143**","webpack:///../~/webpack/~/node-libs-browser/~/buffer/~/ieee754/index.js?2e40**","webpack:///../~/webpack/~/node-libs-browser/~/buffer/~/is-array/index.js?a57a**","webpack:///./game/display/note-area.js?7c93**","webpack:///./scintillator/nodes/lib/utils.js?9270","webpack:///../~/keytime/~/lerp-array/index.js?133b","webpack:///./game/data/game-note.js?6ee2**","webpack:///../~/webpack/~/node-libs-browser/~/punycode/punycode.js?1544**","webpack:///../~/webpack/~/node-libs-browser/~/url/~/querystring/decode.js?b000**","webpack:///../~/webpack/~/node-libs-browser/~/url/~/querystring/encode.js?89b7**","webpack:///../~/webpack/~/node-libs-browser/~/url/~/querystring/index.js?c454**","webpack:///./scintillator/nodes/concerns/animation.js?8ddf","webpack:///./scintillator/compiler.js?6d94","webpack:///./scintillator/context.js?b82a","webpack:///./scintillator/loader.js?cf1e","webpack:///./scintillator/nodes/group.js?f4da","webpack:///./scintillator/nodes/if.js?ece4","webpack:///./scintillator/nodes/object.js?8177","webpack:///./scintillator/nodes/skin-root.js?afca","webpack:///./scintillator/nodes/sprite.js?6482","webpack:///./scintillator/nodes/text.js?73ab","webpack:///./scintillator/resources.js?72ec","webpack:///../~/keytime/base.js?f8c9","webpack:///../~/keytime/index.js?f23a","webpack:///../~/keytime/~/eases/back-in-out.js?c838","webpack:///../~/keytime/~/eases/back-in.js?6d4f","webpack:///../~/keytime/~/eases/back-out.js?69a8","webpack:///../~/keytime/~/eases/bounce-in-out.js?adf8","webpack:///../~/keytime/~/eases/bounce-in.js?fab8","webpack:///../~/keytime/~/eases/circ-in-out.js?6a09","webpack:///../~/keytime/~/eases/circ-in.js?eef6","webpack:///../~/keytime/~/eases/circ-out.js?e76a","webpack:///../~/keytime/~/eases/cubic-in-out.js?e2de","webpack:///../~/keytime/~/eases/cubic-in.js?53c8","webpack:///../~/keytime/~/eases/cubic-out.js?00c2","webpack:///../~/keytime/~/eases/elastic-in-out.js?2612","webpack:///../~/keytime/~/eases/elastic-in.js?5d57","webpack:///../~/keytime/~/eases/elastic-out.js?76e8","webpack:///../~/keytime/~/eases/expo-in-out.js?1c50","webpack:///../~/keytime/~/eases/expo-in.js?37d8","webpack:///../~/keytime/~/eases/expo-out.js?1016","webpack:///../~/keytime/~/eases/index.js?2c67","webpack:///../~/keytime/~/eases/linear.js?da91","webpack:///../~/keytime/~/eases/quad-in-out.js?49bf","webpack:///../~/keytime/~/eases/quad-in.js?713a","webpack:///../~/keytime/~/eases/quad-out.js?41e4","webpack:///../~/keytime/~/eases/quart-in-out.js?a43f","webpack:///../~/keytime/~/eases/quart-in.js?1a0e","webpack:///../~/keytime/~/eases/quart-out.js?7cf6","webpack:///../~/keytime/~/eases/quint-in-out.js?7fb0","webpack:///../~/keytime/~/eases/quint-in.js?8c2f","webpack:///../~/keytime/~/eases/quint-out.js?89f8","webpack:///../~/keytime/~/eases/sine-in-out.js?dec9","webpack:///../~/keytime/~/eases/sine-in.js?281e","webpack:///../~/keytime/~/eases/sine-out.js?7403","webpack:///../~/keytime/~/inherits/inherits_browser.js?69d5","webpack:///../~/keytime/~/keyframes/index.js?0dbc","webpack:///../~/keytime/~/keyframes/~/gl-vec3/set.js?d8a3","webpack:///../~/keytime/~/keyframes/~/unlerp/index.js?757f","webpack:///../~/keytime/~/lerp-array/~/lerp/index.js?49ca","webpack:///../~/keytime/~/xtend/immutable.js?e875","webpack:///../~/keytime/property.js?a755","webpack:///./scintillator/expression/parser.pegjs?cb69","webpack:///./devtools/test-skin.js","webpack:///../~/chance/chance.js"],"names":["webpackJsonp",12,"module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_RESULT__","global","baseCompareAscending","value","other","valIsReflexive","othIsReflexive","undefined","baseFindIndex","array","predicate","fromRight","length","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charAtCallback","string","charCodeAt","charsLeftIndex","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","call","wrapperClone","baseLodash","chainAll","actions","this","__wrapped__","__actions__","__chain__","__dir__","__dropCount__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","iteratees","views","arrayCopy","lazyReverse","clone","lazyValue","baseWrapperValue","dir","isRight","view","getView","start","end","takeCount","nativeMin","iterLength","outer","iterIndex","data","type","LAZY_DROP_WHILE_FLAG","done","count","limit","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","key","has","mapGet","mapHas","mapSet","SetCache","values","hash","nativeCreate","set","Set","push","cacheIndexOf","cache","isObject","cachePush","add","source","Array","arrayEach","arrayEachRight","arrayEvery","arrayFilter","arrayMap","arrayMax","NEGATIVE_INFINITY","arrayMin","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","keys","apply","getSymbols","baseAt","collection","isArr","isLength","propsLength","isIndex","baseCopy","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseAssign","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","valIndex","valLength","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","valType","othType","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","valWrapped","othWrapped","equalArrays","equalObjects","pop","baseIsMatch","strictCompareFlags","noCustomizer","objValue","srcValue","baseMap","getLength","constant","isStrictComparable","isKey","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","parseFloat","previous","splice","baseRandom","min","max","floor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","valIsUndef","isReflexive","setLow","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","bufferSlice","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","pad","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","prototype","createCurry","flag","curryFunc","arity","createWrapper","createExtremum","arrayFunc","isMin","noIteratee","isString","toIterable","extremumBy","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","funcName","getFuncName","getData","isLaziable","thru","plant","createForEach","createForIn","createForOwn","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_FLAG","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","ARY_FLAG","CURRY_FLAG","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","ceil","slice","createPartialWrapper","createSortedIndex","mergeData","baseSetData","arrLength","othLength","arrValue","othValue","othIndex","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","exValue","current","target","transforms","size","input","Object","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","MAX_SAFE_INTEGER","prereq","reIsPlainProp","test","reIsDeepProp","srcBitmask","newBitmask","isCombo","REARG_FLAG","pickByArray","pickByCallback","oldArray","shimIsPlainObject","support","shimKeys","allowIndexes","nonEnumArgs","replace","rePropName","match","number","quote","reEscapeChar","chunk","compact","drop","n","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","intersection","caches","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","xor","concat","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","reverse","wrapperToString","wrapperValue","every","filter","findWhere","find","includes","map","pluck","reject","sample","shuffle","rand","some","sortBy","sortByOrder","where","after","temp","before","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","trailingCall","delayed","remaining","now","stamp","isCalled","lastCalled","maxDelayed","trailing","maxWait","debounced","leading","leadingCall","memoize","resolver","memoized","get","Cache","negate","once","otherArgs","spread","throttle","debounceOptions","wrap","cloneDeep","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isMatch","isNaN","isNumber","isNative","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","toArray","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","mapValues","pairs","endIndex","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","parseInt","radix","nativeParseInt","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","offset","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trim","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","matchesProperty","mixin","isObj","methodNames","methodName","noConflict","_","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","id","idCounter","augend","addend","sum","defaults","pick","contextProps","Date","Error","Math","Number","String","arrayProto","objectProto","stringProto","document","window","toString","ArrayBuffer","getOwnPropertySymbols","getPrototypeOf","preventExtensions","propertyIsEnumerable","Uint8Array","WeakMap","Float64Array","e","nativeAssign","1","assign","nativeIsArray","isFinite","nativeKeys","nativeNow","nativeNumIsFinite","pow","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","metaMap","realNames","x","valueOf","y","funcDecomp","funcNames","dom","createDocumentFragment","reEscape","reEvaluate","baseEachRight","byteLength","floatLength","otherFunc","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","pullAt","sortedIndex","sortedLastIndex","union","arrays","without","zip","at","countBy","findLast","forEach","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduce","reduceRight","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","partial","partialRight","rearg","objProto","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","merge","omit","camelCase","word","toLowerCase","kebabCase","padLeft","padRight","whitespace","reHasHexPrefix","snakeCase","startCase","method","methodOf","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","detect","foldl","foldr","head","include","inject","VERSION","isFilter","isDropWhile","filtered","whileName","takeName","dropName","operationName","createCallback","lodashFunc","checkIteratee","retUnwrapped","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","run","toJSON","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow",18,"PIXI","WEBGL_RENDERER","CANVAS_RENDERER","blendModes","NORMAL","ADD","MULTIPLY","SCREEN","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATION","COLOR","LUMINOSITY","scaleModes","DEFAULT","LINEAR","NEAREST","_UID","Float32Array","Uint16Array","Uint32Array","INTERACTION_FREQUENCY","AUTO_PREVENT_DEFAULT","PI_2","PI","RAD_TO_DEG","DEG_TO_RAD","RETINA_PREFIX","dontSayHello","defaultRenderOptions","transparent","antialias","preserveDrawingBuffer","resolution","clearBeforeRender","autoResize","sayHello","navigator","userAgent","console","log","Point","Rectangle","width","height","x1","y1","EmptyRectangle","Polygon","points","p","i","il","closed","inside","j","xi","yi","xj","yj","intersect","Circle","radius","dx","dy","r2","getBounds","Ellipse","normx","normy","RoundedRectangle","Matrix","a","b","c","d","tx","ty","fromArray","transpose","pos","newPos","applyInverse","translate","scale","rotate","angle","cos","sin","a1","c1","tx1","append","matrix","b1","d1","identityMatrix","DisplayObject","pivot","rotation","alpha","visible","hitArea","buttonMode","renderable","stage","worldAlpha","_interactive","defaultCursor","worldTransform","_sr","_cr","filterArea","_bounds","_currentBounds","_mask","_cacheAsBitmap","_cacheIsDirty","defineProperty","dirty","item","isMask","_filters","passes","filterPasses","_filterBlock","_generateCachedSprite","_destroyCachedSprite","updateTransform","pt","wt","rotationCache","displayObjectUpdateTransform","getLocalBounds","setStageReference","generateTexture","scaleMode","renderer","bounds","renderTexture","RenderTexture","_tempMatrix","render","updateCache","toGlobal","toLocal","from","_renderCachedSprite","renderSession","_cachedSprite","gl","Sprite","_renderWebGL","_renderCanvas","texture","resize","tempFilters","filters","anchor","destroy","DisplayObjectContainer","children","_width","_height","addChild","child","addChildAt","removeChild","swapChildren","child2","index1","getChildIndex","index2","setChildIndex","currentIndex","getChildAt","removeChildAt","removeStageReference","removeChildren","beginIndex","begin","removed","displayObjectContainerUpdateTransform","childBounds","childMaxX","childMaxY","minX","Infinity","minY","maxX","maxY","childVisible","matrixCache","spriteBatch","flush","filterManager","pushFilter","stop","maskManager","pushMask","mask","popMask","popFilter","Texture","emptyTexture","tint","blendMode","shader","baseTexture","hasLoaded","onTextureUpdate","on","frame","setTexture","cachedTint","w0","w1","h0","h1","x2","y2","x3","y3","x4","y4","crop","currentBlendMode","globalCompositeOperation","blendModesCanvas","valid","globalAlpha","smoothProperty","roundPixels","setTransform","tintedTexture","CanvasTinter","getTintedTexture","drawImage","fromFrame","frameId","TextureCache","fromImage","imageId","crossorigin","SpriteBatch","textureThing","ready","initWebGL","fastSpriteBatch","WebGLFastSpriteBatch","setContext","shaderManager","setShader","fastShader","isRotated","childTransform","MovieClip","textures","animationSpeed","loop","onComplete","currentFrame","playing","play","gotoAndStop","frameNumber","round","gotoAndPlay","fromFrames","frames","fromImages","images","FilterBlock","Text","text","style","canvas","createElement","getContext","fromCanvas","setText","setStyle","updateText","font","align","stroke","strokeThickness","wordWrap","wordWrapWidth","dropShadow","dropShadowAngle","dropShadowDistance","dropShadowColor","outputText","lines","split","lineWidths","maxLineWidth","fontProperties","determineFontProperties","lineWidth","measureText","lineHeight","fontSize","isCocoonJS","clearRect","strokeStyle","textBaseline","linePositionX","linePositionY","fillStyle","xShadowOffset","yShadowOffset","ascent","fillText","strokeText","updateTexture","fontStyle","fontPropertiesCache","fontPropertiesCanvas","fontPropertiesContext","baseline","fillRect","imagedata","getImageData","pixels","line","idx","descent","spaceLeft","wordWidth","wordWidthWithSpace","destroyBaseTexture","BitmapText","textWidth","textHeight","_pool","fontName","fonts","prevCharCode","charData","kerning","xOffset","yOffset","xAdvance","lineAlignOffsets","alignOffset","lenChildren","lenChars","InteractionData","originalEvent","getLocalPosition","displayObject","point","a00","a01","a02","a10","a11","a12","InteractionManager","mouse","touches","tempPoint","mouseoverEnabled","pool","interactiveItems","interactionDOMElement","onMouseMove","onMouseDown","onMouseOut","onMouseUp","onTouchStart","onTouchEnd","onTouchCancel","onTouchMove","currentCursorStyle","mouseOut","_tempPoint","collectInteractiveSprite","iParent","interactiveChildren","__iParent","setTarget","setTargetDomElement","domElement","removeEvents","msPointerEnabled","addEventListener","removeEventListener","update","diff","rebuildInteractiveGraph","cursor","over","__hit","hitTest","__isOver","mouseover","mouseout","len","interactive","event","rect","getBoundingClientRect","clientX","left","clientY","top","mousemove","preventDefault","isRightButton","button","which","downFunction","clickFunction","buttonIsDown","isDown","up","upFunction","upOutsideFunction","interactionData","worldVisible","Graphics","graphicsData","shape","tempItem","hit","touchData","changedTouches","touchEvent","identifier","touchmove","__touchData","touchstart","__isDown","touchend","touchendoutside","touchcancel","Stage","backgroundColor","interactionManager","setBackgroundColor","setInteractionDelegate","backgroundColorSplit","hex2rgb","hex","substr","backgroundColorString","getMousePosition","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","timeToCall","requestAnimFrame","rgb2hex","rgb","bound","boundArgs","F","proto","AjaxRequest","activexmodes","ActiveXObject","XMLHttpRequest","canUseNewCanvasBlendModes","getNextPowerOfTwo","isPowerOfTwo","EventTarget","obj","listeners","eventName","_listeners","emit","dispatchEvent","__isEventObject","Event","stoppedImmediate","stopped","onceHandlerWrapper","off","_originalHandler","list","removeAllListeners","content","timeStamp","stopPropagation","stopImmediatePropagation","autoDetectRenderer","webgl","WebGLRenderingContext","WebGLRenderer","CanvasRenderer","autoDetectRecommendedRenderer","isAndroid","PolyK","Triangulate","sign","tgs","avl","al","i0","i1","i2","ax","ay","bx","by","cx","cy","earFound","_convex","vi","_PointInTriangle","px","py","v0x","v0y","v1x","v1y","v2x","v2y","dot00","dot01","dot02","dot11","dot12","invDenom","u","v","initDefaultShaders","CompileVertexShader","shaderSrc","_CompileShader","VERTEX_SHADER","CompileFragmentShader","FRAGMENT_SHADER","shaderType","src","join","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","compileProgram","vertexSrc","fragmentSrc","fragmentShader","vertexShader","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","PixiShader","program","textureCount","firstRun","attributes","init","defaultVertexSrc","useProgram","uSampler","getUniformLocation","projectionVector","offsetVector","dimensions","aVertexPosition","getAttribLocation","aTextureCoord","colorAttribute","uniforms","uniformLocation","initUniforms","uniform","_init","initSampler2D","glMatrix","glValueLength","glFunc","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","activeTexture","bindTexture","TEXTURE_2D","_glTextures","textureData","magFilter","minFilter","wrapS","CLAMP_TO_EDGE","wrapT","format","LUMINANCE","RGBA","REPEAT","pixelStorei","UNPACK_FLIP_Y_WEBGL","flipY","border","texImage2D","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","uniform1i","syncUniforms","z","w","_dirty","instances","deleteProgram","PixiFastShader","uMatrix","aPositionCoord","aScale","aRotation","StripShader","translationMatrix","attribute","PrimitiveShader","tintColor","ComplexPrimitiveShader","color","WebGLGraphics","renderGraphics","graphics","webGLData","projection","primitiveShader","updateGraphics","webGL","_webGL","mode","stencilManager","pushStencil","drawElements","TRIANGLE_FAN","UNSIGNED_SHORT","indices","popStencil","uniform1f","uniform2f","uniform3fv","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","ELEMENT_ARRAY_BUFFER","indexBuffer","TRIANGLE_STRIP","clearDirty","reset","graphicsDataPool","POLY","switchMode","canDrawUsingSimple","buildPoly","buildComplexPoly","buildLine","RECT","buildRectangle","CIRC","ELIP","buildCircle","RREC","buildRoundedRectangle","upload","WebGLGraphicsData","rectData","fillColor","fillAlpha","r","g","verts","vertPos","tempPoints","rrectData","recPoints","quadraticBezierCurve","vecPos","triangles","fromX","fromY","cpX","cpY","toX","toY","getPt","n1","n2","perc","xa","ya","xb","yb","circleData","totalSegs","seg","firstPoint","lastPoint","midPointX","midPointY","unshift","p1x","p1y","p2x","p2y","p3x","p3y","perpx","perpy","perp2x","perp2y","perp3x","perp3y","a2","b2","c2","denom","pdist","dist","indexCount","indexStart","lineColor","lineAlpha","sqrt","abs","createBuffer","glPoints","bufferData","STATIC_DRAW","glIndicies","glContexts","defaultRenderer","contextLostBound","handleContextLost","contextRestoredBound","handleContextRestored","_contextOptions","premultipliedAlpha","stencil","WebGLShaderManager","WebGLSpriteBatch","WebGLMaskManager","WebGLFilterManager","WebGLStencilManager","blendModeManager","WebGLBlendModeManager","drawCount","initContext","mapBlendModes","glContextId","disable","DEPTH_TEST","CULL_FACE","enable","BLEND","contextLost","__stage","_interactiveEventsAdded","viewport","bindFramebuffer","FRAMEBUFFER","clearColor","clear","COLOR_BUFFER_BIT","renderDisplayObject","setBlendMode","createTexture","UNPACK_PREMULTIPLY_ALPHA_WEBGL","mipmap","LINEAR_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","generateMipmap","_powerOf2","blendModesWebGL","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","DST_ALPHA","DST_COLOR","blendModeWebGL","blendFunc","maskData","stencilStack","bindGraphics","STENCIL_TEST","STENCIL_BUFFER_BIT","level","colorMask","stencilFunc","ALWAYS","stencilOp","KEEP","INVERT","EQUAL","DECR","INCR","_currentGraphics","complexPrimitiveShader","maxAttibs","attribState","tempAttribState","stack","defaultShader","stripShader","setAttribs","attribs","attribId","enableVertexAttribArray","disableVertexAttribArray","_currentId","currentShader","vertSize","numVerts","numIndices","vertices","positions","colors","lastIndexCount","drawing","currentBatchSize","currentBaseTexture","shaders","sprites","AbstractFilter","vertexBuffer","DYNAMIC_DRAW","sprite","uvs","_uvs","aX","aY","x0","y0","renderTilingSprite","tilingSprite","tilingTexture","TextureUvs","tilePosition","tileScaleOffset","offsetX","offsetY","scaleX","tileScale","scaleY","TEXTURE0","stride","bufferSubData","subarray","nextTexture","nextBlendMode","nextShader","batchSize","blendSwap","shaderSwap","renderBatch","startIndex","TRIANGLES","deleteBuffer","maxSize","renderSprite","filterStack","texturePool","initShaderBuffers","filterBlock","_filterArea","FilterTexture","padding","frameBuffer","_glFilterTexture","vertexArray","uvBuffer","uvArray","inputTexture","outputTexture","filterPass","applyFilterPass","sizeX","sizeY","currentFilter","colorBuffer","colorArray","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","renderBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","framebufferRenderbuffer","DEPTH_STENCIL_ATTACHMENT","renderbufferStorage","DEPTH_STENCIL","deleteFramebuffer","deleteTexture","CanvasBuffer","CanvasMaskManager","save","cacheAlpha","CanvasGraphics","renderGraphicsMask","clip","restore","roundColor","stringColor","tintCache","tintMethod","convertTintToImage","tintImage","Image","toDataURL","tintWithMultiply","tintWithOverlay","tintWithPerPixel","rgbValues","pixelData","putImageData","cacheStepsPerColorChannel","canUseMultiply","refresh","screencanvas","removeView","updateGraphicsTint","_fillTint","_lineTint","beginPath","moveTo","lineTo","closePath","strokeRect","arc","h","kappa","ox","oy","xe","ye","xm","ym","bezierCurveTo","rx","ry","maxRadius","quadraticCurveTo","pts","tintR","tintG","tintB","currentPath","boundsPadding","_localBounds","webGLDirty","cachedSpriteDirty","destroyCachedSprite","lineStyle","drawShape","cpX2","cpY2","dt","dt2","dt3","t2","t3","arcTo","mm","dd","cc","tt","k1","k2","j1","j2","qx","qy","startAngle","atan2","endAngle","anticlockwise","startX","startY","sweep","segs","theta","theta2","cTheta","sTheta","segMinus","remainder","real","s","beginFill","filling","endFill","drawRect","drawRoundedRect","drawCircle","drawEllipse","drawPolygon","canvasBuffer","updateCachedSpriteTexture","updateLocalBounds","cachedSprite","GraphicsData","Strip","canvasPadding","drawMode","DrawModes","_vertexBuffer","_initWebGL","_renderStrip","_indexBuffer","_uvBuffer","_colorBuffer","_renderCanvasTriangleStrip","_renderCanvasTriangles","_renderCanvasDrawTriangle","index0","textureSource","textureWidth","textureHeight","u0","u1","u2","v0","v1","v2","paddingX","paddingY","centerX","centerY","normX","normY","delta","deltaA","deltaB","deltaC","deltaD","deltaE","deltaF","renderStripFlat","strip","updateFrame","rawX","rawY","Rope","amount","total","nextPoint","perp","ratio","perpLength","num","TilingSprite","refreshTexture","generateTilingTexture","needsUpdate","__tilePattern","createPattern","forcePowerOfTwo","targetWidth","targetHeight","originalTexture","isFrame","newTextureRequired","isTiling","spine","radDeg","degRad","BoneData","inheritScale","inheritRotation","flipX","SlotData","boneData","attachmentName","additiveBlending","IkConstraintData","bones","bendDirection","mix","Bone","skeleton","setToSetupPose","yDown","rotationIK","m00","m01","worldX","m10","m11","worldY","worldRotation","worldScaleX","worldScaleY","worldFlipX","worldFlipY","updateWorldTransform","skeletonFlipX","skeletonFlipY","radians","worldToLocal","world","invDet","localToWorld","local","localX","localY","Slot","slotData","bone","_attachmentTime","attachment","attachmentVertices","setAttachment","time","setAttachmentTime","getAttachmentTime","slotDatas","slots","getAttachmentBySlotIndex","IkConstraint","findBone","apply1","apply2","targetX","targetY","parentRotation","childRotation","positionX","positionY","tempPosition","parentParent","childX","childY","len1","len2","cosDenom","childAngle","acos","adjacent","opposite","parentAngle","Skin","attachments","addAttachment","slotIndex","getAttachment","_attachAll","oldSkin","colon","slot","Animation","timelines","duration","events","binarySearch","binarySearch1","linearSearch","Curves","curves","setLinear","frameIndex","setStepped","setCurve","cx1","cy1","cx2","cy2","subdiv1","subdiv2","subdiv3","pre1","pre2","pre4","pre5","tmp1x","tmp1y","tmp2x","tmp2y","dfx","dfy","ddfx","ddfy","dddfx","dddfy","getCurvePercent","percent","prevX","prevY","RotateTimeline","frameCount","boneIndex","getFrameCount","setFrame","firedEvents","prevFrameValue","frameTime","TranslateTimeline","prevFrameX","prevFrameY","ScaleTimeline","ColorTimeline","prevFrameR","prevFrameG","prevFrameB","prevFrameA","AttachmentTimeline","attachmentNames","MAX_VALUE","EventTimeline","DrawOrderTimeline","drawOrders","drawOrder","drawOrderToSetupIndex","FfdTimeline","frameVertices","vertexCount","lastVertices","prevVertices","nextVertices","prev","IkConstraintTimeline","ikConstraintIndex","ikConstraint","ikConstraints","prevFrameMix","FlipXTimeline","flip","FlipYTimeline","SkeletonData","skins","animations","defaultSkin","version","boneName","findBoneIndex","findSlot","slotName","findSlotIndex","findSkin","skinName","findEvent","findAnimation","animationName","findIkConstraint","ikConstraintName","Skeleton","skeletonData","boneCache","skin","ikConstraintsCount","arrayCount","nonIkBones","ii","cacheBones","nn","setBonesToSetupPose","setSlotsToSetupPose","getRootBone","setSkinByName","setSkin","newSkin","getAttachmentBySlotName","EventData","intValue","floatValue","stringValue","AttachmentType","region","boundingbox","mesh","skinnedmesh","RegionAttachment","rendererObject","regionOffsetX","regionOffsetY","regionWidth","regionHeight","regionOriginalWidth","regionOriginalHeight","setUVs","updateOffset","regionScaleX","regionScaleY","localX2","localY2","localXCos","localXSin","localYCos","localYSin","localX2Cos","localX2Sin","localY2Cos","localY2Sin","computeVertices","MeshAttachment","regionUVs","hullLength","regionU","regionV","regionU2","regionV2","regionRotate","edges","updateUVs","computeWorldVertices","worldVertices","verticesCount","vx","vy","SkinnedMeshAttachment","weights","wx","wy","weight","skeletonBones","f","ffd","BoundingBoxAttachment","AnimationStateData","animationToMixTime","defaultMix","setMixByName","fromName","toName","to","setMix","getMix","TrackEntry","next","animation","endTime","timeScale","mixTime","mixDuration","onStart","onEnd","onEvent","AnimationState","stateData","tracks","previousDelta","setCurrent","clearTrack","previousTime","clearTracks","trackIndex","_expandToIndex","entry","setAnimationByName","setAnimation","addAnimationByName","addAnimation","getCurrent","SkeletonJson","attachmentLoader","readSkeletonData","skeletonMap","boneMap","ik","ikMap","ikConstraintData","slotMap","toColor","skinMap","slotEntry","readAttachment","eventMap","eventData","readAnimation","newRegionAttachment","newMeshAttachment","getFloatArray","getIntArray","newSkinnedMeshAttachment","boneCount","newBoundingBoxAttachment","timelineName","timeline","valueMap","readCurve","timelineScale","field","meshMap","meshName","isMesh","verticesValue","meshVertices","drawOrderValues","slotCount","drawOrderMap","offsets","unchanged","originalIndex","unchangedIndex","offsetMap","curve","hexString","colorIndex","Atlas","atlasText","textureLoader","pages","regions","reader","AtlasReader","tuple","page","readLine","AtlasRegion","readValue","readTuple","splits","pads","originalWidth","originalHeight","AtlasPage","Format","TextureFilter","direction","uWrap","TextureWrap","clampToEdge","vWrap","load","findRegion","dispose","unload","intensity","luminanceAlpha","rgb565","rgba4444","rgb888","rgba8888","nearest","linear","mipMap","mipMapNearestNearest","mipMapLinearNearest","mipMapNearestLinear","mipMapLinearLinear","mirroredRepeat","lastMatch","comma","AtlasAttachmentLoader","atlas","SkeletonBounds","polygonPool","polygons","boundingBoxes","updateAabb","boundingBox","polygon","poolCount","aabbCompute","MIN_VALUE","aabbContainsPoint","aabbIntersectsSegment","m","aabbIntersectsSkeleton","containsPoint","polygonContainsPoint","intersectsSegment","prevIndex","vertexY","vertexX","polygonIntersectsSegment","width12","height12","det1","det2","width34","height34","det3","getPolygon","getWidth","getHeight","AnimCache","SpineTextureLoader","basePath","loadingCount","file","BaseTexture","scope","Spine","url","spineData","state","slotContainers","slotContainer","spriteName","createSprite","currentSprite","currentSpriteName","createMesh","currentMesh","currentMeshName","autoUpdate","autoUpdateTransform","meshes","timeDelta","descriptor","spriteRect","spriteTexture","baseRotation","BaseTextureCache","BaseTextureCacheIdGenerator","complete","naturalWidth","naturalHeight","onload","onerror","imageUrl","_pixiId","unloadFromGPU","updateSourceImage","newSrc","glTexture","image","crossOrigin","TextureCacheIdGenerator","FrameCache","noFrame","requiresUpdate","onBaseTextureLoaded","onLoaded","destroyBase","_updateUvs","tw","th","addTextureToCache","removeTextureFromCache","textureBuffer","renderWebGL","renderCanvas","updateBase","realResolution","getImage","getBase64","getCanvas","webGLPixels","readPixels","tempCanvas","canvasData","tempMatrix","VideoTexture","readyState","HAVE_ENOUGH_DATA","HAVE_FUTURE_DATA","updateBound","_onUpdate","_onCanPlay","onCanPlay","onPlayStart","onPlayStop","videoWidth","videoHeight","__loaded","baseTextureFromVideo","video","textureFromVideo","fromUrl","videoSrc","autoPlay","AssetLoader","assetURLs","loadersByType","jpg","ImageLoader","jpeg","png","gif","webp","json","JsonLoader","AtlasLoader","anim","SpineLoader","xml","BitmapFontLoader","fnt","_getDataType","str","sepIdx","info","onLoad","evt","onAssetLoaded","loadCount","fileName","fileType","shift","Constructor","loader","loaded","onProgress","baseUrl","XDomainRequest","ajaxRequest","timeout","onError","ontimeout","onprogress","onJSONLoaded","onreadystatechange","onReadyStateChanged","open","send","status","location","href","responseText","JSON","parse","meta","textureUrl","frameData","textureSize","trimmed","actualSize","sourceSize","realSize","spriteSourceSize","atlasPath","atlasLoader","originalLoader","spineAtlas","spineJsonParser","spineAtlasLoader","onAtlasLoaded","overrideMimeType","lineCount","currentImageId","nameInNextLine","selfOnLoaded","SpriteSheetLoader","jsonLoader","loadFramedSpriteSheet","frameWidth","frameHeight","textureName","cols","rows","onXMLLoaded","protocol","responseXML","domparser","DOMParser","parseFromString","div","innerHTML","getElementsByTagName","getAttribute","common","letters","textureRect","kernings","second","AlphaMaskFilter","mapDimensions","boundLoadedFunction","onTextureLoaded","ColorMatrixFilter","GrayFilter","gray","DisplacementFilter","displacementMap","PixelateFilter","pixelSize","BlurXFilter","blur","BlurYFilter","BlurFilter","blurXFilter","blurYFilter","InvertFilter","SepiaFilter","sepia","TwistFilter","ColorStepFilter","DotScreenFilter","CrossHatchFilter","RGBSplitFilter","red","green","blue",30,"co","gen","ctx","Promise","resolve","onFulfilled","res","ret","onRejected","err","toPromise","isPromise","then","isGeneratorFunction","isGenerator","thunkToPromise","arrayToPromise","objectToPromise","promise","results","promises","displayName","val","createPromise","__generatorFunction__",32,"_createClass","defineProperties","prop","configurable","writable","protoProps","staticProps","_classCallCheck","instance","SkinNode","compile","compiler","$el","node",33,"onChange","_interopRequire","__esModule","_toConsumableArray","arr","arr2","Callbacks","Instance","_context","_object","_children","_bindings","_concerns","onData","onDestroy","bindings","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","_ref","binding","concerns","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","concern","instantiate","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","onCreate","attachTo","_len","pipeline","_key","sideEffect","_parent","detach",41,"DataStructure","validate","schemas","schema","validateObject","maybe","MaybeValidator",51,"webpackPolyfill","deprecate","paths",55,"createFunction","code","eval","Expression","parser","debug",78,"Buffer","subject","encoding","noZero","kMaxLength","RangeError","TYPED_ARRAY_SUPPORT","_augment","_isBuffer","_set","isArrayish","isBuffer","readUInt8","write","poolSize","rootParent","SlowBuffer","buf","hexWrite","strLen","byte","utf8Write","charsWritten","blitBuffer","utf8ToBytes","asciiWrite","asciiToBytes","binaryWrite","base64Write","base64ToBytes","utf16leWrite","utf16leToBytes","base64Slice","base64","fromByteArray","utf8Slice","tmp","decodeUtf8Char","fromCharCode","asciiSlice","binarySlice","hexSlice","out","toHex","utf16leSlice","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","codePoint","leadSurrogate","byteArray","hi","lo","toByteArray","dst","decodeURIComponent","INSPECT_MAX_BYTES","foo","compare","isEncoding","totalLength","copy","loweredCase","equals","inspect","writeUInt8","swap","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target_start","toArrayBuffer","BP","_get","toLocaleString",83,"fixed","progress","report","extra","wrapPromise","watch",86,"Url","slashes","auth","host","port","hostname","query","pathname","urlParse","parseQueryString","slashesDenoteHost","urlFormat","urlResolve","relative","urlResolveObject","resolveObject","arg","isNullOrUndefined","punycode","protocolPattern","portPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","http:","https:","ftp:","gopher:","file:","querystring","lowerProto","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","l","part","newpart","k","validParts","notHost","bit","domainArray","newOut","encode","ae","esc","encodeURIComponent","qm","stringify","rel","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","authInHost","hasTrailingSlash","isAbsolute",89,"parseBlendMode","_inherits","subClass","superClass","enumerable","__proto__","default","_SkinNode","_animation","attr","expression","getter","ref","_this","unref",93,"bounceOut","t","ca","cb",117,"GameEvent","beat",118,"getSkinUrl","innerWidth","innerHeight","Context",127,"lookup","decode","elt","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","L","placeHolders","Arr","uint8ToBase64","uint8","tripletToBase64","extraBytes","output",128,"isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2",129,130,"NoteArea","notes","barLines","_notes","_barLines","getVisibleNotes","headroom","note","entity","getVisibleBarLines",131,"parseFrame",134,"lerp","value1","value2",136,"GameNote","column",230,"error","errors","mapDomain","parts","regexSeparators","labels","encoded","ucs2decode","counter","ucs2encode","stringFromCharCode","basicToDigit","base","digitToBasic","digit","adapt","numPoints","firstTime","damp","baseMinusTMin","tMax","skew","basic","oldi","baseMinusT","inputLength","initialN","bias","initialBias","delimiter","maxInt","tMin","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","toASCII","regexNonASCII","overflow","not-basic","invalid-input","ucs2",231,"qs","sep","eq","regexp","maxKeys","kstr","vstr",232,"stringifyPrimitive","ks",233,249,"_compile","keyframes","_attrs","attrs","keyframe","ease","_createKeyframes","el","$","keytime","createKeytime","def","_properties","_animations","_events","fallback","_getAnimation","animationElements",273,"SkinRootNode","SpriteNode","GroupNode","ObjectNode","TextNode","IfNode","NODES","group","if","Compiler","env","_defs","Map","nodeName","Node","getNodeClass","compileChildren","compileDefs","getDef","_Node",274,"createRenderer","refs","_skin","_instance","_renderer","_setupInteractivity","_teardownInteractivity","_input","onMouse","onUpdateMouse","onNoMouse","onTouch","touch",275,"xmlPath","regeneratorRuntime","mark","callee$1$0","$xml","resources","element","assetUrl","context$2$0","loadXml","sent","Resources","t7","finish","t8","t9","ProgressUtils","loadResources","abrupt","xmlUrl","ajax","dataType","documentElement","urls","_interopRequireWildcard",276,"Mask","_frame","display","maskFrame","container",277,"expr","childNode",278,"ChildManager","initPool","unused","createInstance","batch","manager",279,280,"getTexture","_texture",281,282,"_map",295,"indexOfName","TimelineBase","Property","addProperty","propData","maxTime","frame1","frame2","interpolation","easeName",296,"BasicTimeline","Base","eases","inherits",297,"backInOut",298,"backIn",299,"backOut",300,"bounceInOut",301,"bounceIn",302,"circInOut",303,"circIn",304,"circOut",305,"cubicInOut",306,"cubicIn",307,"cubicOut",308,"elasticInOut",309,"elasticIn",310,"elasticOut",311,"expoInOut",312,"expoIn",313,"expoOut",314,"quadInOut","quadIn","quadOut","quartInOut","quartIn","quartOut","quintInOut","quintIn","quintOut","sineInOut","sineIn","sineOut",315,316,317,318,319,"quarticInOut",320,"quarticIn",321,"quarticOut",322,"qinticInOut",323,"qinticIn",324,"qinticOut",325,326,327,328,"ctor","superCtor","super_","TempCtor",329,"Keyframes","sorted","vec3","nearestIndex","minDist","getIndex","startFrame","endFrame","cur",330,331,332,333,334,"xtend",336,"peg$subclass","SyntaxError","expected","found","peg$reportedPos","peg$currPos","peg$computePosDetails","advance","details","startPos","endPos","ch","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$maxFailPos","peg$maxFailExpected","peg$buildException","cleanupExpected","description","buildMessage","stringEscape","expectedDesc","foundDesc","expectedDescs","posDetails","peg$parseexpr","s0","peg$parselogical_or","s1","s2","s3","s4","s5","s6","s7","peg$parselogical_and","peg$FAILED","peg$parse_","peg$c2","peg$silentFails","peg$c3","peg$c0","peg$c4","peg$parseadd","peg$c5","peg$c6","peg$parsemul","peg$c7","peg$c8","peg$c9","peg$c10","peg$parseval","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$parsenumber","peg$parseidentifier","peg$c26","peg$parseint","peg$parsefrac","peg$parseexp","peg$c27","peg$c25","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c44","peg$c45","peg$c43","operate","operator","operand","combine","peg$result","peg$startRuleFunctions","peg$startRuleFunction","startRule",380,"main","area","columns","updateNotes","started","draw","entities","active","missed","Scintillator","generateRandomNotes","showCanvas","chance","Chance","nextId","integer","_length","bool","likelihood","margin","body","appendChild",498,"__WEBPACK_AMD_DEFINE_ARRAY__","seed","seedling","mt","mersenne_twister","initOptions","testRange","errorMessage","diceFn","natural","_copyObject","o_keys","_copyArray","copyObject","_target","MAX_INT","MIN_INT","NUMBERS","CHARS_LOWER","CHARS_UPPER","HEX_POOL","btoa","character","symbols","casing","precision","num_fixed","toFixed","func_name","comparator","MAX_DUPLICATES","params","old_array","new_array","weighted","weightIndex","scaling_factor","chosen","selected","paragraph","sentences","sentence_array","sentence","word_array","syllable","consonants","vowels","syllables","age","ageRange","birthday","year","getFullYear","date","cpf","d2","gender","middle","middle_initial","suffix","name_prefixes","prefixes","abbreviation","name_prefix","full","ssn","ssnFour","dashes","ssn_pool","dash","name_suffixes","suffixes","name_suffix","android_id","apple_token","wp8_anid2","wp7_anid","guid","bb_pin","grayscale","colorValue","isGrayscale","domain","tld","email","fbid","google_analytics","account","hashtag","ip","ipv6","ip_addr","klout","tlds","twitter","domain_prefix","extensions","extension","address","street","altitude","areacode","parens","city","coordinates","latitude","longitude","countries","country","depth","geohash","geojson","phone","numPick","ukNum","section","sections","formatted","mobile","exchange","subscriber","postal","pd","fsa","ldu","provinces","province","states","us_states_and_dc","territories","armed_forces","short_suffix","street_suffix","street_suffixes","plusfour","ampm","date_string","american","month","raw","numeric","day","days","hour","minute","millisecond","getMonth","getDate","hammertime","twentyfour","months","timestamp","to_generate","cc_type","luhn_calculate","cc_types","types","short_name","currency_types","currency","currency_pair","returnAsString","currencies","acc","dollar","cents","exp","exp_year","exp_month","future","month_int","curMonth","d4","d6","d8","d10","d12","d20","d30","d100","rpg","thrown","bits","rolls","guid_pool","variant_pool","luhn_check","checkDigit","digits","firstNames","male","female","lastNames","o_hasOwnProperty","mac_address","networkVersion","mac_pool","mac","normal","mean","dev","norm","radio","side","fl","tv","cnpj","MersenneTwister","N","M","MATRIX_A","UPPER_MASK","LOWER_MASK","mti","init_genrand","init_by_array","init_key","key_length","genrand_int32","mag01","kk","genrand_int31","genrand_real1","genrand_real3","genrand_res53","importScripts"],"mappings":"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","file":"testSkinMode-ed8af055721cf4f68eb6.js","sourcesContent":["webpackJsonp([6,7],{\n\n/***/ 12:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash 3.7.0 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern -d -o ./index.js`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '3.7.0';\n\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256;\n\n\t  /** Used as default options for `_.trunc`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\n\t  /** Used to detect when a function becomes hot. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_DROP_WHILE_FLAG = 0,\n\t      LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2;\n\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      weakMapTag = '[object WeakMap]';\n\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]+|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?)\\1\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n\t  /**\n\t   * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n\t   * In addition to special characters the forward slash is escaped to allow for\n\t   * easier `eval` use and `Function` compilation.\n\t   */\n\t  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n\t      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n\t  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n\t  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\n\t  /** Used to match [ES template delimiters](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0[xX]/;\n\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n\t  /** Used to match words to create compound words. */\n\t  var reWords = (function() {\n\t    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n\t        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n\t    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n\t  }());\n\n\t  /** Used to detect and test for whitespace. */\n\t  var whitespace = (\n\t    // Basic whitespace characters.\n\t    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\n\t    // Line terminators.\n\t    '\\n\\r\\u2028\\u2029' +\n\n\t    // Unicode category \"Zs\" space separators.\n\t    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n\t  );\n\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n\t    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n\t    'isFinite', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    'window'\n\t  ];\n\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[mapTag] = cloneableTags[setTag] =\n\t  cloneableTags[weakMapTag] = false;\n\n\t  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n\t  var debounceOptions = {\n\t    'leading': false,\n\t    'maxWait': 0,\n\t    'trailing': false\n\t  };\n\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n\t  /** Detect free variable `module`. */\n\t  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it is the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n\t  /*--------------------------------------------------------------------------*/\n\n\t  /**\n\t   * The base implementation of `compareAscending` which compares values and\n\t   * sorts them in ascending order without guaranteeing a stable sort.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare to `other`.\n\t   * @param {*} other The value to compare to `value`.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function baseCompareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsReflexive = value === value,\n\t          othIsReflexive = other === other;\n\n\t      if (value > other || !valIsReflexive || (value === undefined && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if (value < other || !othIsReflexive || (other === undefined && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\n\t  /**\n\t   * The base implementation of `_.indexOf` without support for binary searches.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\n\t  /**\n\t   * The base implementation of `_.isFunction` without support for environments\n\t   * with incorrect `typeof` results.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t   */\n\t  function baseIsFunction(value) {\n\t    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n\t    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n\t    return typeof value == 'function' || false;\n\t  }\n\n\t  /**\n\t   * Converts `value` to a string if it is not one. An empty string is returned\n\t   * for `null` or `undefined` values.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to process.\n\t   * @returns {string} Returns the string.\n\t   */\n\t  function baseToString(value) {\n\t    if (typeof value == 'string') {\n\t      return value;\n\t    }\n\t    return value == null ? '' : (value + '');\n\t  }\n\n\t  /**\n\t   * Used by `_.max` and `_.min` as the default callback for string values.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the code unit of the first character of the string.\n\t   */\n\t  function charAtCallback(string) {\n\t    return string.charCodeAt(0);\n\t  }\n\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the first character not found in `chars`.\n\t   */\n\t  function charsLeftIndex(string, chars) {\n\t    var index = -1,\n\t        length = string.length;\n\n\t    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the last character not found in `chars`.\n\t   */\n\t  function charsRightIndex(string, chars) {\n\t    var index = string.length;\n\n\t    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\n\t  /**\n\t   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n\t   * sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare to `other`.\n\t   * @param {Object} other The object to compare to `object`.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareAscending(object, other) {\n\t    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n\t  }\n\n\t  /**\n\t   * Used by `_.sortByOrder` to compare multiple properties of each element\n\t   * in a collection and stable sort them in the following order:\n\t   *\n\t   * If `orders` is unspecified, sort in ascending order for all properties.\n\t   * Otherwise, for each property, sort in ascending order if its corresponding value in\n\t   * orders is true, and descending order if false.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare to `other`.\n\t   * @param {Object} other The object to compare to `object`.\n\t   * @param {boolean[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\n\t    while (++index < length) {\n\t      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        return result * (orders[index] ? 1 : -1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled\n\t   * string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\n\t  /**\n\t   * Checks if `value` is object-like.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t   */\n\t  function isObjectLike(value) {\n\t    return !!value && typeof value == 'object';\n\t  }\n\n\t  /**\n\t   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n\t   * character code is whitespace.\n\t   *\n\t   * @private\n\t   * @param {number} charCode The character code to inspect.\n\t   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n\t   */\n\t  function isSpace(charCode) {\n\t    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n\t      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n\t  }\n\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\n\t    while (++index < length) {\n\t      if (array[index] === placeholder) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\n\t  /**\n\t   * An implementation of `_.uniq` optimized for sorted arrays without support\n\t   * for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} [iteratee] The function invoked per iteration.\n\t   * @returns {Array} Returns the new duplicate-value-free array.\n\t   */\n\t  function sortedUniq(array, iteratee) {\n\t    var seen,\n\t        index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          computed = iteratee ? iteratee(value, index, array) : value;\n\n\t      if (!index || seen !== computed) {\n\t        seen = computed;\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the first non-whitespace character.\n\t   */\n\t  function trimmedLeftIndex(string) {\n\t    var index = -1,\n\t        length = string.length;\n\n\t    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the last non-whitespace character.\n\t   */\n\t  function trimmedRightIndex(string) {\n\t    var index = string.length;\n\n\t    while (index-- && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\n\t  /*--------------------------------------------------------------------------*/\n\n\t  /**\n\t   * Create a new pristine `lodash` function using the given `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Utility\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // using `context` to mock `Date#getTime` use in `_.now`\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // or creating a suped-up `defer` in Node.js\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    // Avoid issues with some ES3 environments that attempt to use values, named\n\t    // after built-in constructors like `Object`, for the creation of literals.\n\t    // ES5 clears this up by stating that literals must use built-in constructors.\n\t    // See https://es5.github.io/#x11.1.5 for more details.\n\t    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n\t    /** Native constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Number = context.Number,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\n\t    /** Used for native method references. */\n\t    var arrayProto = Array.prototype,\n\t        objectProto = Object.prototype,\n\t        stringProto = String.prototype;\n\n\t    /** Used to detect DOM support. */\n\t    var document = (document = context.window) && document.document;\n\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var fnToString = Function.prototype.toString;\n\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\n\t    /**\n\t     * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objToString = objectProto.toString;\n\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = context._;\n\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      escapeRegExp(objToString)\n\t      .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\n\t    /** Native method references. */\n\t    var ArrayBuffer = isNative(ArrayBuffer = context.ArrayBuffer) && ArrayBuffer,\n\t        bufferSlice = isNative(bufferSlice = ArrayBuffer && new ArrayBuffer(0).slice) && bufferSlice,\n\t        ceil = Math.ceil,\n\t        clearTimeout = context.clearTimeout,\n\t        floor = Math.floor,\n\t        getOwnPropertySymbols = isNative(getOwnPropertySymbols = Object.getOwnPropertySymbols) && getOwnPropertySymbols,\n\t        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n\t        push = arrayProto.push,\n\t        preventExtensions = isNative(Object.preventExtensions = Object.preventExtensions) && preventExtensions,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        Set = isNative(Set = context.Set) && Set,\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice,\n\t        Uint8Array = isNative(Uint8Array = context.Uint8Array) && Uint8Array,\n\t        WeakMap = isNative(WeakMap = context.WeakMap) && WeakMap;\n\n\t    /** Used to clone array buffers. */\n\t    var Float64Array = (function() {\n\t      // Safari 5 errors when using an array buffer to initialize a typed array\n\t      // where the array buffer's `byteLength` is not a multiple of the typed\n\t      // array's `BYTES_PER_ELEMENT`.\n\t      try {\n\t        var func = isNative(func = context.Float64Array) && func,\n\t            result = new func(new ArrayBuffer(10), 0, 1) && func;\n\t      } catch(e) {}\n\t      return result;\n\t    }());\n\n\t    /** Used as `baseAssign`. */\n\t    var nativeAssign = (function() {\n\t      // Avoid `Object.assign` in Firefox 34-37 which have an early implementation\n\t      // with a now defunct try/catch behavior. See https://bugzilla.mozilla.org/show_bug.cgi?id=1103344\n\t      // for more details.\n\t      //\n\t      // Use `Object.preventExtensions` on a plain object instead of simply using\n\t      // `Object('x')` because Chrome and IE fail to throw an error when attempting\n\t      // to assign values to readonly indexes of strings in strict mode.\n\t      var object = { '1': 0 },\n\t          func = preventExtensions && isNative(func = Object.assign) && func;\n\n\t      try { func(preventExtensions(object), 'xo'); } catch(e) {}\n\t      return !object[1] && func;\n\t    }());\n\n\t    /* Native method references for those with the same name as other `lodash` methods. */\n\t    var nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n\t        nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = isNative(nativeNow = Date.now) && nativeNow,\n\t        nativeNumIsFinite = isNative(nativeNumIsFinite = Number.isFinite) && nativeNumIsFinite,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random;\n\n\t    /** Used as references for `-Infinity` and `Infinity`. */\n\t    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n\t        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n\t    /** Used as references for the maximum length and index of an array. */\n\t    var MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1,\n\t        MAX_ARRAY_INDEX =  MAX_ARRAY_LENGTH - 1,\n\t        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n\t    /** Used as the size, in bytes, of each `Float64Array` element. */\n\t    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n\t    /**\n\t     * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n\t     * of an array-like value.\n\t     */\n\t    var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n\t     * Methods that operate on and return arrays, collections, and functions can\n\t     * be chained together. Methods that return a boolean or single value will\n\t     * automatically end the chain returning the unwrapped value. Explicit chaining\n\t     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n\t     * that is, execution is deferred until `_#value` is implicitly or explicitly\n\t     * called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization that merges iteratees to avoid creating intermediate\n\t     * arrays and reduce the number of iteratee executions.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n\t     * `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n\t     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n\t     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n\t     * and `where`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n\t     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n\t     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n\t     * `difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n\t     * `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n\t     * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n\t     * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n\t     * `keysIn`, `map`, `mapValues`, `matches`, `matchesProperty`, `memoize`,\n\t     * `merge`, `mixin`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n\t     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n\t     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `reverse`,\n\t     * `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`, `sortByOrder`, `splice`,\n\t     * `spread`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`,\n\t     * `throttle`, `thru`, `times`, `toArray`, `toPlainObject`, `transform`,\n\t     * `union`, `uniq`, `unshift`, `unzip`, `values`, `valuesIn`, `where`,\n\t     * `without`, `wrap`, `xor`, `zip`, and `zipObject`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n\t     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n\t     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n\t     * `identity`, `includes`, `indexOf`, `inRange`, `isArguments`, `isArray`,\n\t     * `isBoolean`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`, `isFinite`\n\t     * `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`,\n\t     * `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`, `noConflict`,\n\t     * `noop`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`,\n\t     * `reduce`, `reduceRight`, `repeat`, `result`, `runInContext`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`, `startsWith`,\n\t     * `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`, `unescape`,\n\t     * `uniqueId`, `value`, and `words`\n\t     *\n\t     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n\t     * otherwise an unwrapped value is returned.\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Chain\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // returns an unwrapped value\n\t     * wrapped.reduce(function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 6\n\t     *\n\t     * // returns a wrapped value\n\t     * var squares = wrapped.map(function(n) {\n\t     *   return n * n;\n\t     * });\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n\t     */\n\t    function LodashWrapper(value, chainAll, actions) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = actions || [];\n\t      this.__chain__ = !!chainAll;\n\t    }\n\n\t    /**\n\t     * An object environment feature flags.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    var support = lodash.support = {};\n\n\t    (function(x) {\n\t      var Ctor = function() { this.x = x; },\n\t          object = { '0': x, 'length': x },\n\t          props = [];\n\n\t      Ctor.prototype = { 'valueOf': x, 'y': x };\n\t      for (var key in new Ctor) { props.push(key); }\n\n\t      /**\n\t       * Detect if functions can be decompiled by `Function#toString`\n\t       * (all but Firefox OS certified apps, older Opera mobile browsers, and\n\t       * the PlayStation 3; forced `false` for Windows 8 apps).\n\t       *\n\t       * @memberOf _.support\n\t       * @type boolean\n\t       */\n\t      support.funcDecomp = /\\bthis\\b/.test(function() { return this; });\n\n\t      /**\n\t       * Detect if `Function#name` is supported (all but IE).\n\t       *\n\t       * @memberOf _.support\n\t       * @type boolean\n\t       */\n\t      support.funcNames = typeof Function.name == 'string';\n\n\t      /**\n\t       * Detect if the DOM is supported.\n\t       *\n\t       * @memberOf _.support\n\t       * @type boolean\n\t       */\n\t      try {\n\t        support.dom = document.createDocumentFragment().nodeType === 11;\n\t      } catch(e) {\n\t        support.dom = false;\n\t      }\n\n\t      /**\n\t       * Detect if `arguments` object indexes are non-enumerable.\n\t       *\n\t       * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n\t       * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n\t       * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n\t       * checks for indexes that exceed the number of function parameters and\n\t       * whose associated argument values are `0`.\n\t       *\n\t       * @memberOf _.support\n\t       * @type boolean\n\t       */\n\t      try {\n\t        support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n\t      } catch(e) {\n\t        support.nonEnumArgs = true;\n\t      }\n\t    }(1, 0));\n\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    lodash.templateSettings = {\n\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'escape': reEscape,\n\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'evaluate': reEvaluate,\n\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'interpolate': reInterpolate,\n\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t      'variable': '',\n\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type Object\n\t       */\n\t      'imports': {\n\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type Function\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = null;\n\t      this.__dir__ = 1;\n\t      this.__dropCount__ = 0;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = null;\n\t      this.__takeCount__ = POSITIVE_INFINITY;\n\t      this.__views__ = null;\n\t    }\n\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var actions = this.__actions__,\n\t          iteratees = this.__iteratees__,\n\t          views = this.__views__,\n\t          result = new LazyWrapper(this.__wrapped__);\n\n\t      result.__actions__ = actions ? arrayCopy(actions) : null;\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = iteratees ? arrayCopy(iteratees) : null;\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = views ? arrayCopy(views) : null;\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value();\n\t      if (!isArray(array)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var dir = this.__dir__,\n\t          isRight = dir < 0,\n\t          view = getView(0, array.length, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          takeCount = nativeMin(length, this.__takeCount__),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees ? iteratees.length : 0,\n\t          resIndex = 0,\n\t          result = [];\n\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\n\t        var iterIndex = -1,\n\t            value = array[index];\n\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type;\n\n\t          if (type == LAZY_DROP_WHILE_FLAG) {\n\t            if (data.done && (isRight ? (index > data.index) : (index < data.index))) {\n\t              data.count = 0;\n\t              data.done = false;\n\t            }\n\t            data.index = index;\n\t            if (!data.done) {\n\t              var limit = data.limit;\n\t              if (!(data.done = limit > -1 ? (data.count++ >= limit) : !iteratee(value))) {\n\t                continue outer;\n\t              }\n\t            }\n\t          } else {\n\t            var computed = iteratee(value);\n\t            if (type == LAZY_MAP_FLAG) {\n\t              value = computed;\n\t            } else if (!computed) {\n\t              if (type == LAZY_FILTER_FLAG) {\n\t                continue outer;\n\t              } else {\n\t                break outer;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates a cache object to store key/value pairs.\n\t     *\n\t     * @private\n\t     * @static\n\t     * @name Cache\n\t     * @memberOf _.memoize\n\t     */\n\t    function MapCache() {\n\t      this.__data__ = {};\n\t    }\n\n\t    /**\n\t     * Removes `key` and its value from the cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\n\t    /**\n\t     * Gets the cached value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the cached value.\n\t     */\n\t    function mapGet(key) {\n\t      return key == '__proto__' ? undefined : this.__data__[key];\n\t    }\n\n\t    /**\n\t     * Checks if a cached value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n\t    }\n\n\t    /**\n\t     * Sets `value` to `key` of the cache.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to cache.\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      if (key != '__proto__') {\n\t        this.__data__[key] = value;\n\t      }\n\t      return this;\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     *\n\t     * Creates a cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var length = values ? values.length : 0;\n\n\t      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n\t      while (length--) {\n\t        this.push(values[length]);\n\t      }\n\t    }\n\n\t    /**\n\t     * Checks if `value` is in `cache` mimicking the return signature of\n\t     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `0` if `value` is found, else `-1`.\n\t     */\n\t    function cacheIndexOf(cache, value) {\n\t      var data = cache.data,\n\t          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n\t      return result ? 0 : -1;\n\t    }\n\n\t    /**\n\t     * Adds `value` to the cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var data = this.data;\n\t      if (typeof value == 'string' || isObject(value)) {\n\t        data.set.add(value);\n\t      } else {\n\t        data.hash[value] = true;\n\t      }\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayCopy(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.forEach` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEach(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length;\n\n\t      while (++index < length) {\n\t        if (iteratee(array[index], index, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.forEachRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEachRight(array, iteratee) {\n\t      var length = array.length;\n\n\t      while (length--) {\n\t        if (iteratee(array[length], length, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.every` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arrayEvery(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\n\t      while (++index < length) {\n\t        if (!predicate(array[index], index, array)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.filter` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function arrayFilter(array, predicate) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.map` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function arrayMap(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = Array(length);\n\n\t      while (++index < length) {\n\t        result[index] = iteratee(array[index], index, array);\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.max` for arrays without support for iteratees.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     */\n\t    function arrayMax(array) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = NEGATIVE_INFINITY;\n\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value > result) {\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.min` for arrays without support for iteratees.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     */\n\t    function arrayMin(array) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = POSITIVE_INFINITY;\n\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value < result) {\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.reduce` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the first element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n\t      var index = -1,\n\t          length = array.length;\n\n\t      if (initFromArray && length) {\n\t        accumulator = array[++index];\n\t      }\n\t      while (++index < length) {\n\t        accumulator = iteratee(accumulator, array[index], index, array);\n\t      }\n\t      return accumulator;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.reduceRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the last element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n\t      var length = array.length;\n\t      if (initFromArray && length) {\n\t        accumulator = array[--length];\n\t      }\n\t      while (length--) {\n\t        accumulator = iteratee(accumulator, array[length], length, array);\n\t      }\n\t      return accumulator;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.some` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arraySome(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\n\t      while (++index < length) {\n\t        if (predicate(array[index], index, array)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.sum` for arrays without support for iteratees.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function arraySum(array) {\n\t      var length = array.length,\n\t          result = 0;\n\n\t      while (length--) {\n\t        result += +array[length] || 0;\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assign` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : objectValue;\n\t    }\n\n\t    /**\n\t     * Used by `_.template` to customize its `_.assign` use.\n\t     *\n\t     * **Note:** This function is like `assignDefaults` except that it ignores\n\t     * inherited property values when checking if a property is `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @param {string} key The key associated with the object and source values.\n\t     * @param {Object} object The destination object.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n\t      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n\t        ? sourceValue\n\t        : objectValue;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.assign` for customizing assigned values without\n\t     * support for argument juggling, multiple sources, and `this` binding `customizer`\n\t     * functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function assignWith(object, source, customizer) {\n\t      var props = keys(source);\n\t      push.apply(props, getSymbols(source));\n\n\t      var index = -1,\n\t          length = props.length;\n\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key],\n\t            result = customizer(value, source[key], key, object, source);\n\n\t        if ((result === result ? (result !== value) : (value === value)) ||\n\t            (value === undefined && !(key in object))) {\n\t          object[key] = result;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.assign` without support for argument juggling,\n\t     * multiple sources, and `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseAssign = nativeAssign || function(object, source) {\n\t      return source == null\n\t        ? object\n\t        : baseCopy(source, getSymbols(source), baseCopy(source, keys(source), object));\n\t    };\n\n\t    /**\n\t     * The base implementation of `_.at` without support for string collections\n\t     * and individual key arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(collection, props) {\n\t      var index = -1,\n\t          length = collection.length,\n\t          isArr = isLength(length),\n\t          propsLength = props.length,\n\t          result = Array(propsLength);\n\n\t      while(++index < propsLength) {\n\t        var key = props[index];\n\t        if (isArr) {\n\t          result[index] = isIndex(key, length) ? collection[key] : undefined;\n\t        } else {\n\t          result[index] = collection[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseCopy(source, props, object) {\n\t      object || (object = {});\n\n\t      var index = -1,\n\t          length = props.length;\n\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        object[key] = source[key];\n\t      }\n\t      return object;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.callback` which supports specifying the\n\t     * number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function baseCallback(func, thisArg, argCount) {\n\t      var type = typeof func;\n\t      if (type == 'function') {\n\t        return thisArg === undefined\n\t          ? func\n\t          : bindCallback(func, thisArg, argCount);\n\t      }\n\t      if (func == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return baseMatches(func);\n\t      }\n\t      return thisArg === undefined\n\t        ? property(func)\n\t        : baseMatchesProperty(func, thisArg);\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.clone` without support for argument juggling\n\t     * and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The object `value` belongs to.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return arrayCopy(value, result);\n\t        }\n\t      } else {\n\t        var tag = objToString.call(value),\n\t            isFunc = tag == funcTag;\n\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return baseAssign(result, value);\n\t          }\n\t        } else {\n\t          return cloneableTags[tag]\n\t            ? initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : {});\n\t        }\n\t      }\n\t      // Check for circular references and return corresponding clone.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == value) {\n\t          return stackB[length];\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate it with its clone.\n\t      stackA.push(value);\n\t      stackB.push(result);\n\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function Object() {}\n\t      return function(prototype) {\n\t        if (isObject(prototype)) {\n\t          Object.prototype = prototype;\n\t          var result = new Object;\n\t          Object.prototype = null;\n\t        }\n\t        return result || context.Object();\n\t      };\n\t    }());\n\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an index\n\t     * of where to slice the arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.difference` which accepts a single array\n\t     * of values to exclude.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values) {\n\t      var length = array ? array.length : 0,\n\t          result = [];\n\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          cache = (isCommon && values.length >= 200) ? createCache(values) : null,\n\t          valuesLength = values.length;\n\n\t      if (cache) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t        values = cache;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index];\n\n\t        if (isCommon && value === value) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === value) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(values, value, 0) < 0) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.forEach` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n\t    /**\n\t     * The base implementation of `_.every` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : (end >>> 0);\n\t      start >>>= 0;\n\n\t      while (start < length) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.filter` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n\t     * without support for callback shorthands and `this` binding, which iterates\n\t     * over `collection` using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @param {boolean} [retKey] Specify returning the key of the found element\n\t     *  instead of the element itself.\n\t     * @returns {*} Returns the found element or its key, else `undefined`.\n\t     */\n\t    function baseFind(collection, predicate, eachFunc, retKey) {\n\t      var result;\n\t      eachFunc(collection, function(value, key, collection) {\n\t        if (predicate(value, key, collection)) {\n\t          result = retKey ? key : value;\n\t          return false;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.flatten` with added support for restricting\n\t     * flattening and specifying the start index.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} isDeep Specify a deep flatten.\n\t     * @param {boolean} isStrict Restrict flattening to arrays and `arguments` objects.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\n\t      while (++index < length) {\n\t        var value = array[index];\n\n\t        if (isObjectLike(value) && isLength(value.length) && (isArray(value) || isArguments(value))) {\n\t          if (isDeep) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            value = baseFlatten(value, isDeep, isStrict);\n\t          }\n\t          var valIndex = -1,\n\t              valLength = value.length;\n\n\t          result.length += valLength;\n\t          while (++valIndex < valLength) {\n\t            result[++resIndex] = value[valIndex];\n\t          }\n\t        } else if (!isStrict) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\n\t    /**\n\t     * The base implementation of `_.forIn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return baseFor(object, iteratee, keysIn);\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return baseFor(object, iteratee, keys);\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return baseForRight(object, iteratee, keys);\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from those provided.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          resIndex = -1,\n\t          result = [];\n\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (isFunction(object[key])) {\n\t          result[++resIndex] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `get` without support for string paths\n\t     * and default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path of the property to get.\n\t     * @param {string} [pathKey] The key representation of path.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path, pathKey) {\n\t      if (object == null) {\n\t        return;\n\t      }\n\t      if (pathKey !== undefined && pathKey in toObject(object)) {\n\t        path = [pathKey];\n\t      }\n\t      var index = -1,\n\t          length = path.length;\n\n\t      while (object != null && ++index < length) {\n\t        var result = object = object[path[index]];\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.isEqual` without support for `this` binding\n\t     * `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n\t      // Exit early for identical values.\n\t      if (value === other) {\n\t        // Treat `+0` vs. `-0` as not equal.\n\t        return value !== 0 || (1 / value == 1 / other);\n\t      }\n\t      var valType = typeof value,\n\t          othType = typeof other;\n\n\t      // Exit early for unlike primitive values.\n\t      if ((valType != 'function' && valType != 'object' && othType != 'function' && othType != 'object') ||\n\t          value == null || other == null) {\n\t        // Return `false` unless both values are `NaN`.\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n\t    }\n\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\n\t      if (!objIsArr) {\n\t        objTag = objToString.call(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = objToString.call(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag);\n\t      }\n\t      if (!isLoose) {\n\t        var valWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n\t        if (valWrapped || othWrapped) {\n\t          return equalFunc(valWrapped ? object.value() : object, othWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      // For more information on detecting circular references see https://es5.github.io/#JO.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == object) {\n\t          return stackB[length] == other;\n\t        }\n\t      }\n\t      // Add `object` and `other` to the stack of traversed objects.\n\t      stackA.push(object);\n\t      stackB.push(other);\n\n\t      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n\t      stackA.pop();\n\t      stackB.pop();\n\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The source property names to match.\n\t     * @param {Array} values The source values to match.\n\t     * @param {Array} strictCompareFlags Strict comparison flags for source values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, props, values, strictCompareFlags, customizer) {\n\t      var index = -1,\n\t          length = props.length,\n\t          noCustomizer = !customizer;\n\n\t      while (++index < length) {\n\t        if ((noCustomizer && strictCompareFlags[index])\n\t              ? values[index] !== object[props[index]]\n\t              : !(props[index] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      index = -1;\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            objValue = object[key],\n\t            srcValue = values[index];\n\n\t        if (noCustomizer && strictCompareFlags[index]) {\n\t          var result = objValue !== undefined || (key in object);\n\t        } else {\n\t          result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\t          if (result === undefined) {\n\t            result = baseIsEqual(srcValue, objValue, customizer, true);\n\t          }\n\t        }\n\t        if (!result) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.map` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          length = getLength(collection),\n\t          result = isLength(length) ? Array(length) : [];\n\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.matches` which does not clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var props = keys(source),\n\t          length = props.length;\n\n\t      if (!length) {\n\t        return constant(true);\n\t      }\n\t      if (length == 1) {\n\t        var key = props[0],\n\t            value = source[key];\n\n\t        if (isStrictComparable(value)) {\n\t          return function(object) {\n\t            if (object == null) {\n\t              return false;\n\t            }\n\t            return object[key] === value && (value !== undefined || (key in toObject(object)));\n\t          };\n\t        }\n\t      }\n\t      var values = Array(length),\n\t          strictCompareFlags = Array(length);\n\n\t      while (length--) {\n\t        value = source[props[length]];\n\t        values[length] = value;\n\t        strictCompareFlags[length] = isStrictComparable(value);\n\t      }\n\t      return function(object) {\n\t        return object != null && baseIsMatch(toObject(object), props, values, strictCompareFlags);\n\t      };\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which does not which does\n\t     * not clone `value`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} value The value to compare.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, value) {\n\t      var isArr = isArray(path),\n\t          isCommon = isKey(path) && isStrictComparable(value),\n\t          pathKey = (path + '');\n\n\t      path = toPath(path);\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        var key = pathKey;\n\t        object = toObject(object);\n\t        if ((isArr || !isCommon) && !(key in object)) {\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          key = last(path);\n\t          object = toObject(object);\n\t        }\n\t        return object[key] === value\n\t          ? (value !== undefined || (key in object))\n\t          : baseIsEqual(value, object[key], null, true);\n\t      };\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.merge` without support for argument juggling,\n\t     * multiple sources, and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} [customizer] The function to customize merging properties.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseMerge(object, source, customizer, stackA, stackB) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n\t      if (!isSrcArr) {\n\t        var props = keys(source);\n\t        push.apply(props, getSymbols(source));\n\t      }\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObjectLike(srcValue)) {\n\t          stackA || (stackA = []);\n\t          stackB || (stackB = []);\n\t          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n\t        }\n\t        else {\n\t          var value = object[key],\n\t              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t              isCommon = result === undefined;\n\n\t          if (isCommon) {\n\t            result = srcValue;\n\t          }\n\t          if ((isSrcArr || result !== undefined) &&\n\t              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n\t            object[key] = result;\n\t          }\n\t        }\n\t      });\n\t      return object;\n\t    }\n\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize merging properties.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n\t      var length = stackA.length,\n\t          srcValue = source[key];\n\n\t      while (length--) {\n\t        if (stackA[length] == srcValue) {\n\t          object[key] = stackB[length];\n\t          return;\n\t        }\n\t      }\n\t      var value = object[key],\n\t          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t          isCommon = result === undefined;\n\n\t      if (isCommon) {\n\t        result = srcValue;\n\t        if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n\t          result = isArray(value)\n\t            ? value\n\t            : (getLength(value) ? arrayCopy(value) : []);\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          result = isArguments(value)\n\t            ? toPlainObject(value)\n\t            : (isPlainObject(value) ? value : {});\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate\n\t      // it with its merged value.\n\t      stackA.push(srcValue);\n\t      stackB.push(result);\n\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n\t      } else if (result === result ? (result !== value) : (value === value)) {\n\t        object[key] = result;\n\t      }\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      var pathKey = (path + '');\n\t      path = toPath(path);\n\t      return function(object) {\n\t        return baseGet(object, path, pathKey);\n\t      };\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * index arguments and capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = indexes.length;\n\t      while (length--) {\n\t        var index = parseFloat(indexes[length]);\n\t        if (index != previous && isIndex(index)) {\n\t          var previous = index;\n\t          splice.call(array, index, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.random` without support for argument juggling\n\t     * and returning floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} min The minimum possible value.\n\t     * @param {number} max The maximum possible value.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(min, max) {\n\t      return min + floor(nativeRandom() * (max - min + 1));\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.reduce` and `_.reduceRight` without support\n\t     * for callback shorthands and `this` binding, which iterates over `collection`\n\t     * using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} accumulator The initial value.\n\t     * @param {boolean} initFromCollection Specify using the first or last element\n\t     *  of `collection` as the initial value.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n\t      eachFunc(collection, function(value, index, collection) {\n\t        accumulator = initFromCollection\n\t          ? (initFromCollection = false, value)\n\t          : iteratee(accumulator, value, index, collection);\n\t      });\n\t      return accumulator;\n\t    }\n\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.some` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.sortBy` which uses `comparer` to define\n\t     * the sort order of `array` and replaces criteria objects with their\n\t     * corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sort.\n\t     * @param {Function} comparer The function to define sort order.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseSortBy(array, comparer) {\n\t      var length = array.length;\n\n\t      array.sort(comparer);\n\t      while (length--) {\n\t        array[length] = array[length].value;\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.sortByOrder` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseSortByOrder(collection, iteratees, orders) {\n\t      var callback = getCallback(),\n\t          index = -1;\n\n\t      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n\t      var result = baseMap(collection, function(value) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.sum` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function baseSum(collection, iteratee) {\n\t      var result = 0;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result += +iteratee(value, index, collection) || 0;\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.uniq` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The function invoked per iteration.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     */\n\t    function baseUniq(array, iteratee) {\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          length = array.length,\n\t          isCommon = indexOf == baseIndexOf,\n\t          isLarge = isCommon && length >= 200,\n\t          seen = isLarge ? createCache() : null,\n\t          result = [];\n\n\t      if (seen) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t      } else {\n\t        isLarge = false;\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value, index, array) : value;\n\n\t        if (isCommon && value === value) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(seen, computed, 0) < 0) {\n\t          if (iteratee || isLarge) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t     * array of `object` property values corresponding to the property names\n\t     * of `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} props The property names to get values for.\n\t     * @returns {Object} Returns the array of property values.\n\t     */\n\t    function baseValues(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = Array(length);\n\n\t      while (++index < length) {\n\t        result[index] = object[props[index]];\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n\t     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\n\t      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      var index = -1,\n\t          length = actions.length;\n\n\t      while (++index < length) {\n\t        var args = [result],\n\t            action = actions[index];\n\n\t        push.apply(args, action.args);\n\t        result = action.func.apply(action.thisArg, args);\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\n\t          if (retHighest ? (computed <= value) : (computed < value)) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return binaryIndexBy(array, value, identity, retHighest);\n\t    }\n\n\t    /**\n\t     * This function is like `binaryIndex` except that it invokes `iteratee` for\n\t     * `value` and each element of `array` to compute their sort ranking. The\n\t     * iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsUndef = value === undefined;\n\n\t      while (low < high) {\n\t        var mid = floor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isReflexive = computed === computed;\n\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || computed !== undefined);\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\n\t    /**\n\t     * A specialized version of `baseCallback` which only supports `this` binding\n\t     * and specifying the number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function bindCallback(func, thisArg, argCount) {\n\t      if (typeof func != 'function') {\n\t        return identity;\n\t      }\n\t      if (thisArg === undefined) {\n\t        return func;\n\t      }\n\t      switch (argCount) {\n\t        case 1: return function(value) {\n\t          return func.call(thisArg, value);\n\t        };\n\t        case 3: return function(value, index, collection) {\n\t          return func.call(thisArg, value, index, collection);\n\t        };\n\t        case 4: return function(accumulator, value, index, collection) {\n\t          return func.call(thisArg, accumulator, value, index, collection);\n\t        };\n\t        case 5: return function(value, other, key, object, source) {\n\t          return func.call(thisArg, value, other, key, object, source);\n\t        };\n\t      }\n\t      return function() {\n\t        return func.apply(thisArg, arguments);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a clone of the given array buffer.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} buffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function bufferClone(buffer) {\n\t      return bufferSlice.call(buffer, 0);\n\t    }\n\t    if (!bufferSlice) {\n\t      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n\t      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n\t        var byteLength = buffer.byteLength,\n\t            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n\t            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n\t            result = new ArrayBuffer(byteLength);\n\n\t        if (floatLength) {\n\t          var view = new Float64Array(result, 0, floatLength);\n\t          view.set(new Float64Array(buffer, 0, floatLength));\n\t        }\n\t        if (byteLength != offset) {\n\t          view = new Uint8Array(result, offset);\n\t          view.set(new Uint8Array(buffer, offset));\n\t        }\n\t        return result;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders) {\n\t      var holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          result = Array(argsLength + leftLength);\n\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        result[holders[argsIndex]] = args[argsIndex];\n\t      }\n\t      while (argsLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders) {\n\t      var holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          result = Array(argsLength + rightLength);\n\n\t      while (++argsIndex < argsLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var pad = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[pad + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        result[pad + holders[holdersIndex]] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates a function that aggregates a collection, creating an accumulator\n\t     * object composed from the results of running each element in the collection\n\t     * through an iteratee.\n\t     *\n\t     * **Note:** This function is used to create `_.countBy`, `_.groupBy`, `_.indexBy`,\n\t     * and `_.partition`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set keys and values of the accumulator object.\n\t     * @param {Function} [initializer] The function to initialize the accumulator object.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee, thisArg) {\n\t        var result = initializer ? initializer() : {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\n\t        if (isArray(collection)) {\n\t          var index = -1,\n\t              length = collection.length;\n\n\t          while (++index < length) {\n\t            var value = collection[index];\n\t            setter(result, value, iteratee(value, index, collection), collection);\n\t          }\n\t        } else {\n\t          baseEach(collection, function(value, key, collection) {\n\t            setter(result, value, iteratee(value, key, collection), collection);\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that assigns properties of source object(s) to a given\n\t     * destination object.\n\t     *\n\t     * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return restParam(function(object, sources) {\n\t        var index = -1,\n\t            length = object == null ? 0 : sources.length,\n\t            customizer = length > 2 && sources[length - 2],\n\t            guard = length > 2 && sources[2],\n\t            thisArg = length > 1 && sources[length - 1];\n\n\t        if (typeof customizer == 'function') {\n\t          customizer = bindCallback(customizer, thisArg, 5);\n\t          length -= 2;\n\t        } else {\n\t          customizer = typeof thisArg == 'function' ? thisArg : null;\n\t          length -= (customizer ? 1 : 0);\n\t        }\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? null : customizer;\n\t          length = 1;\n\t        }\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        var length = collection ? getLength(collection) : 0;\n\t        if (!isLength(length)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var index = fromRight ? length : -1,\n\t            iterable = toObject(collection);\n\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a base function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var iterable = toObject(object),\n\t            props = keysFunc(object),\n\t            length = props.length,\n\t            index = fromRight ? length : -1;\n\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var key = props[index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createBindWrapper(func, thisArg) {\n\t      var Ctor = createCtorWrapper(func);\n\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(thisArg, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\n\t    /**\n\t     * Creates a `Set` cache object to optimize linear searches of large arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n\t     */\n\t    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n\t      return new SetCache(values);\n\t    };\n\n\t    /**\n\t     * Creates a function that produces compound words out of the words in a\n\t     * given string.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        var index = -1,\n\t            array = words(deburr(string)),\n\t            length = array.length,\n\t            result = '';\n\n\t        while (++index < length) {\n\t          result = callback(result, array[index], index);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, arguments);\n\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a `_.curry` or `_.curryRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The curry bit flag.\n\t     * @returns {Function} Returns the new curry function.\n\t     */\n\t    function createCurry(flag) {\n\t      function curryFunc(func, arity, guard) {\n\t        if (guard && isIterateeCall(func, arity, guard)) {\n\t          arity = null;\n\t        }\n\t        var result = createWrapper(func, flag, null, null, null, null, null, arity);\n\t        result.placeholder = curryFunc.placeholder;\n\t        return result;\n\t      }\n\t      return curryFunc;\n\t    }\n\n\t    /**\n\t     * Creates a `_.max` or `_.min` function.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to get the extremum value from an array.\n\t     * @param {boolean} [isMin] Specify returning the minimum, instead of the maximum,\n\t     *  extremum value.\n\t     * @returns {Function} Returns the new extremum function.\n\t     */\n\t    function createExtremum(arrayFunc, isMin) {\n\t      return function(collection, iteratee, thisArg) {\n\t        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t          iteratee = null;\n\t        }\n\t        var func = getCallback(),\n\t            noIteratee = iteratee == null;\n\n\t        if (!(func === baseCallback && noIteratee)) {\n\t          noIteratee = false;\n\t          iteratee = func(iteratee, thisArg, 3);\n\t        }\n\t        if (noIteratee) {\n\t          var isArr = isArray(collection);\n\t          if (!isArr && isString(collection)) {\n\t            iteratee = charAtCallback;\n\t          } else {\n\t            return arrayFunc(isArr ? collection : toIterable(collection));\n\t          }\n\t        }\n\t        return extremumBy(collection, iteratee, isMin);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(eachFunc, fromRight) {\n\t      return function(collection, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        if (isArray(collection)) {\n\t          var index = baseFindIndex(collection, predicate, fromRight);\n\t          return index > -1 ? collection[index] : undefined;\n\t        }\n\t        return baseFind(collection, predicate, eachFunc);\n\t      }\n\t    }\n\n\t    /**\n\t     * Creates a `_.findIndex` or `_.findLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindIndex(fromRight) {\n\t      return function(array, predicate, thisArg) {\n\t        if (!(array && array.length)) {\n\t          return -1;\n\t        }\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFindIndex(array, predicate, fromRight);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a `_.findKey` or `_.findLastKey` function.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindKey(objectFunc) {\n\t      return function(object, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFind(object, predicate, objectFunc, true);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return function() {\n\t        var length = arguments.length;\n\t        if (!length) {\n\t          return function() { return arguments[0]; };\n\t        }\n\t        var wrapper,\n\t            index = fromRight ? length : -1,\n\t            leftIndex = 0,\n\t            funcs = Array(length);\n\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var func = funcs[leftIndex++] = arguments[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          var funcName = wrapper ? '' : getFuncName(func);\n\t          wrapper = funcName == 'wrapper' ? new LodashWrapper([]) : wrapper;\n\t        }\n\t        index = wrapper ? -1 : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t          funcName = getFuncName(func);\n\n\t          var data = funcName == 'wrapper' ? getData(func) : null;\n\t          if (data && isLaziable(data[0])) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments;\n\t          if (wrapper && args.length == 1 && isArray(args[0])) {\n\t            return wrapper.plant(args[0]).value();\n\t          }\n\t          var index = 0,\n\t              result = funcs[index].apply(this, args);\n\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function for `_.forEach` or `_.forEachRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForEach(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, thisArg) {\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee)\n\t          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForIn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee, keysIn);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForOwn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function for `_.padLeft` or `_.padRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify padding from the right.\n\t     * @returns {Function} Returns the new pad function.\n\t     */\n\t    function createPadDir(fromRight) {\n\t      return function(string, length, chars) {\n\t        string = baseToString(string);\n\t        return string && ((fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string));\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a `_.partial` or `_.partialRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The partial bit flag.\n\t     * @returns {Function} Returns the new partial function.\n\t     */\n\t    function createPartial(flag) {\n\t      var partialFunc = restParam(function(func, partials) {\n\t        var holders = replaceHolders(partials, partialFunc.placeholder);\n\t        return createWrapper(func, flag, null, partials, holders);\n\t      });\n\t      return partialFunc;\n\t    }\n\n\t    /**\n\t     * Creates a function for `_.reduce` or `_.reduceRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createReduce(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, accumulator, thisArg) {\n\t        var initFromArray = arguments.length < 3;\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n\t          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with optional `this`\n\t     * binding of, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurry = bitmask & CURRY_FLAG,\n\t          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n\t          isCurryRight = bitmask & CURRY_RIGHT_FLAG;\n\n\t      var Ctor = !isBindKey && createCtorWrapper(func),\n\t          key = func;\n\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it to other functions.\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight);\n\t        }\n\t        if (isCurry || isCurryRight) {\n\t          var placeholder = wrapper.placeholder,\n\t              argsHolders = replaceHolders(args, placeholder);\n\n\t          length -= argsHolders.length;\n\t          if (length < arity) {\n\t            var newArgPos = argPos ? arrayCopy(argPos) : null,\n\t                newArity = nativeMax(arity - length, 0),\n\t                newsHolders = isCurry ? argsHolders : null,\n\t                newHoldersRight = isCurry ? null : argsHolders,\n\t                newPartials = isCurry ? args : null,\n\t                newPartialsRight = isCurry ? null : args;\n\n\t            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n\t            if (!isCurryBound) {\n\t              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t            }\n\t            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n\t                result = createHybridWrapper.apply(undefined, newData);\n\n\t            if (isLaziable(func)) {\n\t              setData(result, newData);\n\t            }\n\t            result.placeholder = placeholder;\n\t            return result;\n\t          }\n\t        }\n\t        var thisBinding = isBind ? thisArg : this;\n\t        if (isBindKey) {\n\t          func = thisBinding[key];\n\t        }\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        }\n\t        if (isAry && ary < args.length) {\n\t          args.length = ary;\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? (Ctor || createCtorWrapper(func)) : func;\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\n\t    /**\n\t     * Creates the padding required for `string` based on the given `length`.\n\t     * The `chars` string is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the pad for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      var strLength = string.length;\n\t      length = +length;\n\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars == null ? ' ' : (chars + '');\n\t      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n\t    }\n\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it `func`.\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(argsLength + leftLength);\n\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\n\t    /**\n\t     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {Function} Returns the new index function.\n\t     */\n\t    function createSortedIndex(retHighest) {\n\t      return function(array, value, iteratee, thisArg) {\n\t        var func = getCallback(iteratee);\n\t        return (func === baseCallback && iteratee == null)\n\t          ? binaryIndex(array, value, retHighest)\n\t          : binaryIndexBy(array, value, func(iteratee, thisArg, 1), retHighest);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = null;\n\t      }\n\t      length -= (holders ? holders.length : 0);\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\n\t        partials = holders = null;\n\t      }\n\t      var data = isBindKey ? null : getData(func),\n\t          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n\t      if (data) {\n\t        mergeData(newData, data);\n\t        bitmask = newData[1];\n\t        arity = newData[9];\n\t      }\n\t      newData[9] = arity == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : (nativeMax(arity - length, 0) || 0);\n\n\t      if (bitmask == BIND_FLAG) {\n\t        var result = createBindWrapper(newData[0], newData[2]);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n\t        result = createPartialWrapper.apply(undefined, newData);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing arrays.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var index = -1,\n\t          arrLength = array.length,\n\t          othLength = other.length,\n\t          result = true;\n\n\t      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Deep compare the contents, ignoring non-numeric properties.\n\t      while (result && ++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\n\t        result = undefined;\n\t        if (customizer) {\n\t          result = isLoose\n\t            ? customizer(othValue, arrValue, index)\n\t            : customizer(arrValue, othValue, index);\n\t        }\n\t        if (result === undefined) {\n\t          // Recursively compare arrays (susceptible to call stack limits).\n\t          if (isLoose) {\n\t            var othIndex = othLength;\n\t            while (othIndex--) {\n\t              othValue = other[othIndex];\n\t              result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n\t              if (result) {\n\t                break;\n\t              }\n\t            }\n\t          } else {\n\t            result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n\t          }\n\t        }\n\t      }\n\t      return !!result;\n\t    }\n\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} value The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag) {\n\t      switch (tag) {\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object)\n\t            ? other != +other\n\t            // But, treat `-0` vs. `+0` as not equal.\n\t            : (object == 0 ? ((1 / object) == (1 / other)) : object == +other);\n\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t      }\n\t      return false;\n\t    }\n\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\n\t      if (objLength != othLength && !isLoose) {\n\t        return false;\n\t      }\n\t      var skipCtor = isLoose,\n\t          index = -1;\n\n\t      while (++index < objLength) {\n\t        var key = objProps[index],\n\t            result = isLoose ? key in other : hasOwnProperty.call(other, key);\n\n\t        if (result) {\n\t          var objValue = object[key],\n\t              othValue = other[key];\n\n\t          result = undefined;\n\t          if (customizer) {\n\t            result = isLoose\n\t              ? customizer(othValue, objValue, key)\n\t              : customizer(objValue, othValue, key);\n\t          }\n\t          if (result === undefined) {\n\t            // Recursively compare objects (susceptible to call stack limits).\n\t            result = (objValue && objValue === othValue) || equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB);\n\t          }\n\t        }\n\t        if (!result) {\n\t          return false;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (!skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\n\t    /**\n\t     * Gets the extremum value of `collection` invoking `iteratee` for each value\n\t     * in `collection` to generate the criterion by which the value is ranked.\n\t     * The `iteratee` is invoked with three arguments: (value, index, collection).\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [isMin] Specify returning the minimum, instead of the\n\t     *  maximum, extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function extremumBy(collection, iteratee, isMin) {\n\t      var exValue = isMin ? POSITIVE_INFINITY : NEGATIVE_INFINITY,\n\t          computed = exValue,\n\t          result = computed;\n\n\t      baseEach(collection, function(value, index, collection) {\n\t        var current = iteratee(value, index, collection);\n\t        if ((isMin ? (current < computed) : (current > computed)) ||\n\t            (current === exValue && current === result)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseCallback` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getCallback(func, thisArg, argCount) {\n\t      var result = lodash.callback || callback;\n\t      result = result === callback ? baseCallback : result;\n\t      return argCount ? result(func, thisArg, argCount) : result;\n\t    }\n\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    var getFuncName = (function() {\n\t      if (!support.funcNames) {\n\t        return constant('');\n\t      }\n\t      if (constant.name == 'constant') {\n\t        return baseProperty('name');\n\t      }\n\t      return function(func) {\n\t        var result = func.name,\n\t            array = realNames[result],\n\t            length = array ? array.length : 0;\n\n\t        while (length--) {\n\t          var data = array[length],\n\t              otherFunc = data.func;\n\n\t          if (otherFunc == null || otherFunc == func) {\n\t            return data.name;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }());\n\n\t    /**\n\t     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseIndexOf` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function|number} Returns the chosen function or its result.\n\t     */\n\t    function getIndexOf(collection, target, fromIndex) {\n\t      var result = lodash.indexOf || indexOf;\n\t      result = result === indexOf ? baseIndexOf : result;\n\t      return collection ? result(collection, target, fromIndex) : result;\n\t    }\n\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * in Safari on iOS 8.1 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\n\t    /**\n\t     * Creates an array of the own symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = !getOwnPropertySymbols ? constant([]) : function(object) {\n\t      return getOwnPropertySymbols(toObject(object));\n\t    };\n\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} [transforms] The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms ? transforms.length : 0;\n\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = new array.constructor(length);\n\n\t      // Add array properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      var Ctor = object.constructor;\n\t      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n\t        Ctor = Object;\n\t      }\n\t      return new Ctor;\n\t    }\n\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return bufferClone(object);\n\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          var buffer = object.buffer;\n\t          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\n\t        case regexpTag:\n\t          var result = new Ctor(object.source, reFlags.exec(object));\n\t          result.lastIndex = object.lastIndex;\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Invokes the method at `path` on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function invokePath(object, path, args) {\n\t      if (object != null && !isKey(path, object)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : func.apply(object, args);\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      value = +value;\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return value > -1 && value % 1 == 0 && value < length;\n\t    }\n\n\t    /**\n\t     * Checks if the provided arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number') {\n\t        var length = getLength(object),\n\t            prereq = isLength(length) && isIndex(index, length);\n\t      } else {\n\t        prereq = type == 'string' && index in object;\n\t      }\n\t      if (prereq) {\n\t        var other = object[index];\n\t        return value === value ? (value === other) : (other !== other);\n\t      }\n\t      return false;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      var type = typeof value;\n\t      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n\t        return true;\n\t      }\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var result = !reIsDeepProp.test(value);\n\t      return result || (object != null && value in toObject(object));\n\t    }\n\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func);\n\t      return !!funcName && func === lodash[funcName] && funcName in LazyWrapper.prototype;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && (value === 0 ? ((1 / value) > 0) : !isObject(value));\n\t    }\n\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers required to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * augment function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < ARY_FLAG;\n\n\t      var isCombo =\n\t        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n\t        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n\t        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = arrayCopy(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\n\t      return data;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.pick` that picks `object` properties specified\n\t     * by `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByArray(object, props) {\n\t      object = toObject(object);\n\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * A specialized version of `_.pick` that picks `object` properties `predicate`\n\t     * returns truthy for.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByCallback(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key, object) {\n\t        if (predicate(value, key, object)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = arrayCopy(array);\n\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\n\t    /**\n\t     * A fallback implementation of `_.isPlainObject` which checks if `value`\n\t     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n\t     * of `null`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     */\n\t    function shimIsPlainObject(value) {\n\t      var Ctor,\n\t          support = lodash.support;\n\n\t      // Exit early for non `Object` objects.\n\t      if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n\t          (!hasOwnProperty.call(value, 'constructor') &&\n\t            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n\t        return false;\n\t      }\n\t      // IE < 9 iterates inherited properties before own properties. If the first\n\t      // iterated property is an object's own property then there are no inherited\n\t      // enumerable properties.\n\t      var result;\n\t      // In most environments an object's own properties are iterated before\n\t      // its inherited properties. If the last iterated property is an object's\n\t      // own property then there are no inherited enumerable properties.\n\t      baseForIn(value, function(subValue, key) {\n\t        result = key;\n\t      });\n\t      return result === undefined || hasOwnProperty.call(value, result);\n\t    }\n\n\t    /**\n\t     * A fallback implementation of `Object.keys` which creates an array of the\n\t     * own enumerable property names of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function shimKeys(object) {\n\t      var props = keysIn(object),\n\t          propsLength = props.length,\n\t          length = propsLength && object.length,\n\t          support = lodash.support;\n\n\t      var allowIndexes = length && isLength(length) &&\n\t        (isArray(object) || (support.nonEnumArgs && isArguments(object)));\n\n\t      var index = -1,\n\t          result = [];\n\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Converts `value` to an array-like object if it is not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array|Object} Returns the array-like object.\n\t     */\n\t    function toIterable(value) {\n\t      if (value == null) {\n\t        return [];\n\t      }\n\t      if (!isLength(getLength(value))) {\n\t        return values(value);\n\t      }\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\n\t    /**\n\t     * Converts `value` to an object if it is not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Object} Returns the object.\n\t     */\n\t    function toObject(value) {\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\n\t    /**\n\t     * Converts `value` to property path array if it is not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      var result = [];\n\t      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      return wrapper instanceof LazyWrapper\n\t        ? wrapper.clone()\n\t        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `collection` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(+size || 1, 1);\n\t      }\n\t      var index = 0,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = Array(ceil(length / size));\n\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an array excluding all values of the provided arrays using\n\t     * `SameValueZero` for equality comparisons.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The arrays of values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([1, 2, 3], [4, 2]);\n\t     * // => [1, 3]\n\t     */\n\t    var difference = restParam(function(array, values) {\n\t      return (isArray(array) || isArguments(array))\n\t        ? baseDifference(array, baseFlatten(values, false, true))\n\t        : [];\n\t    });\n\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that match the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [1]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n\t        : [];\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n\t        : [];\n\t    }\n\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8], '*', 1, 2);\n\t     * // => [4, '*', 8]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(chr) {\n\t     *   return chr.user == 'barney';\n\t     * });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findIndex(users, 'active', false);\n\t     * // => 0\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    var findIndex = createFindIndex();\n\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(chr) {\n\t     *   return chr.user == 'pebbles';\n\t     * });\n\t     * // => 2\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastIndex(users, 'active', false);\n\t     * // => 2\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    var findLastIndex = createFindIndex(true);\n\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias head\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.first([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.first([]);\n\t     * // => undefined\n\t     */\n\t    function first(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\n\t    /**\n\t     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n\t     * flattened, otherwise it is only flattened a single level.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * // using `isDeep`\n\t     * _.flatten([1, [2, 3, [4]]], true);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flatten(array, isDeep, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (guard && isIterateeCall(array, isDeep, guard)) {\n\t        isDeep = false;\n\t      }\n\t      return length ? baseFlatten(array, isDeep) : [];\n\t    }\n\n\t    /**\n\t     * Recursively flattens a nested array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to recursively flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, true) : [];\n\t    }\n\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using `SameValueZero` for equality comparisons. If `fromIndex` is negative,\n\t     * it is used as the offset from the end of `array`. If `array` is sorted\n\t     * providing `true` for `fromIndex` performs a faster binary search.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n\t     *  to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // using `fromIndex`\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     *\n\t     * // performing a binary search\n\t     * _.indexOf([1, 1, 2, 2], 2, true);\n\t     * // => 2\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      if (typeof fromIndex == 'number') {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n\t      } else if (fromIndex) {\n\t        var index = binaryIndex(array, value),\n\t            other = array[index];\n\n\t        if (value === value ? (value === other) : (other !== other)) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      return baseIndexOf(array, value, fromIndex || 0);\n\t    }\n\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\n\t    /**\n\t     * Creates an array of unique values in all provided arrays using `SameValueZero`\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     * _.intersection([1, 2], [4, 2], [2, 1]);\n\t     * // => [2]\n\t     */\n\t    function intersection() {\n\t      var args = [],\n\t          argsIndex = -1,\n\t          argsLength = arguments.length,\n\t          caches = [],\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          result = [];\n\n\t      while (++argsIndex < argsLength) {\n\t        var value = arguments[argsIndex];\n\t        if (isArray(value) || isArguments(value)) {\n\t          args.push(value);\n\t          caches.push((isCommon && value.length >= 120) ? createCache(argsIndex && value) : null);\n\t        }\n\t      }\n\t      argsLength = args.length;\n\t      if (argsLength < 2) {\n\t        return result;\n\t      }\n\t      var array = args[0],\n\t          index = -1,\n\t          length = array ? array.length : 0,\n\t          seen = caches[0];\n\n\t      outer:\n\t      while (++index < length) {\n\t        value = array[index];\n\t        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n\t          argsIndex = argsLength;\n\t          while (--argsIndex) {\n\t            var cache = caches[argsIndex];\n\t            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value, 0)) < 0) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(value);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n\t     *  or `true` to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // using `fromIndex`\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     *\n\t     * // performing a binary search\n\t     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n\t     * // => 3\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (typeof fromIndex == 'number') {\n\t        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n\t      } else if (fromIndex) {\n\t        index = binaryIndex(array, value, true) - 1;\n\t        var other = array[index];\n\t        if (value === value ? (value === other) : (other !== other)) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\n\t    /**\n\t     * Removes all provided values from `array` using `SameValueZero` for equality\n\t     * comparisons.\n\t     *\n\t     * **Notes:**\n\t     *  - Unlike `_.without`, this method mutates `array`\n\t     *  - [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     *    comparisons are like strict equality comparisons, e.g. `===`, except\n\t     *    that `NaN` matches `NaN`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pull() {\n\t      var args = arguments,\n\t          array = args[0];\n\n\t      if (!(array && array.length)) {\n\t        return array;\n\t      }\n\t      var index = 0,\n\t          indexOf = getIndexOf(),\n\t          length = args.length;\n\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = args[index];\n\n\t        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\n\t    /**\n\t     * Removes elements from `array` corresponding to the given indexes and returns\n\t     * an array of the removed elements. Indexes may be specified as an array of\n\t     * indexes or as individual arguments.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = restParam(function(array, indexes) {\n\t      array || (array = []);\n\t      indexes = baseFlatten(indexes);\n\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(baseCompareAscending));\n\t      return result;\n\t    });\n\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate, thisArg) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias tail\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.rest([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function rest(array) {\n\t      return drop(array, 1);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of `Array#slice` to support node\n\t     * lists in IE < 9 and to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order. If an iteratee\n\t     * function is provided it is invoked for `value` and each element of `array`\n\t     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n\t     * invoked with one argument; (value).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 4, 5, 5], 5);\n\t     * // => 2\n\t     *\n\t     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n\t     *\n\t     * // using an iteratee function\n\t     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n\t     *   return this.data[word];\n\t     * }, dict);\n\t     * // => 1\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n\t     * // => 1\n\t     */\n\t    var sortedIndex = createSortedIndex();\n\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 4, 5, 5], 5);\n\t     * // => 4\n\t     */\n\t    var sortedLastIndex = createSortedIndex(true);\n\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n\t     * and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [2, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n\t        : [];\n\t    }\n\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n\t        : [];\n\t    }\n\n\t    /**\n\t     * Creates an array of unique values, in order, of the provided arrays using\n\t     * `SameValueZero` for equality comparisons.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([1, 2], [4, 2], [2, 1]);\n\t     * // => [1, 2, 4]\n\t     */\n\t    var union = restParam(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, false, true));\n\t    });\n\n\t    /**\n\t     * Creates a duplicate-free version of an array, using `SameValueZero` for\n\t     * equality comparisons, in which only the first occurence of each element\n\t     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n\t     * for sorted arrays. If an iteratee function is provided it is invoked for\n\t     * each element in the array to generate the criterion by which uniqueness\n\t     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias unique\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {boolean} [isSorted] Specify the array is sorted.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     *\n\t     * // using `isSorted`\n\t     * _.uniq([1, 1, 2], true);\n\t     * // => [1, 2]\n\t     *\n\t     * // using an iteratee function\n\t     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => [1, 2.5]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniq(array, isSorted, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (isSorted != null && typeof isSorted != 'boolean') {\n\t        thisArg = iteratee;\n\t        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n\t        isSorted = false;\n\t      }\n\t      var func = getCallback();\n\t      if (!(func === baseCallback && iteratee == null)) {\n\t        iteratee = func(iteratee, thisArg, 3);\n\t      }\n\t      return (isSorted && getIndexOf() == baseIndexOf)\n\t        ? sortedUniq(array, iteratee)\n\t        : baseUniq(array, iteratee);\n\t    }\n\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-`_.zip`\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      var index = -1,\n\t          length = (array && array.length && arrayMax(arrayMap(array, getLength))) >>> 0,\n\t          result = Array(length);\n\n\t      while (++index < length) {\n\t        result[index] = arrayMap(array, baseProperty(index));\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an array excluding all provided values using `SameValueZero` for\n\t     * equality comparisons.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = restParam(function(array, values) {\n\t      return (isArray(array) || isArguments(array))\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\n\t    /**\n\t     * Creates an array that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the provided arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([1, 2], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    function xor() {\n\t      var index = -1,\n\t          length = arguments.length;\n\n\t      while (++index < length) {\n\t        var array = arguments[index];\n\t        if (isArray(array) || isArguments(array)) {\n\t          var result = result\n\t            ? baseDifference(result, array).concat(baseDifference(array, result))\n\t            : array;\n\t        }\n\t      }\n\t      return result ? baseUniq(result) : [];\n\t    }\n\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = restParam(unzip);\n\n\t    /**\n\t     * The inverse of `_.pairs`; this method returns an object composed from arrays\n\t     * of property names and values. Provide either a single two dimensional array,\n\t     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n\t     * and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias object\n\t     * @category Array\n\t     * @param {Array} props The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     *\n\t     * _.zipObject(['fred', 'barney'], [30, 40]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function zipObject(props, values) {\n\t      var index = -1,\n\t          length = props ? props.length : 0,\n\t          result = {};\n\n\t      if (length && !values && !isArray(props[0])) {\n\t        values = [];\n\t      }\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (values) {\n\t          result[key] = values[index];\n\t        } else if (key) {\n\t          result[key[0]] = key[1];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method\n\t     * chaining enabled.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _.chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(chr) {\n\t     *     return chr.user + ' is ' + chr.age;\n\t     *   })\n\t     *   .first()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor is\n\t     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n\t     * this method is to \"tap into\" a method chain in order to perform operations\n\t     * on intermediate results within the chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor, thisArg) {\n\t      interceptor.call(thisArg, value);\n\t      return value;\n\t    }\n\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor, thisArg) {\n\t      return interceptor.call(thisArg, value);\n\t    }\n\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // without explicit chaining\n\t     * _(users).first();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // with explicit chaining\n\t     * _(users).chain()\n\t     *   .first()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapper = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapper = wrapper.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapper.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapper = _(array).map(function(value) {\n\t     *   return Math.pow(value, 2);\n\t     * });\n\t     *\n\t     * var other = [3, 4];\n\t     * var otherWrapper = wrapper.plant(other);\n\t     *\n\t     * otherWrapper.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapper.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Reverses the wrapped array so the first element becomes the last, the\n\t     * second element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        if (this.__actions__.length) {\n\t          value = new LazyWrapper(this);\n\t        }\n\t        return new LodashWrapper(value.reverse(), this.__chain__);\n\t      }\n\t      return this.thru(function(value) {\n\t        return value.reverse();\n\t      });\n\t    }\n\n\t    /**\n\t     * Produces the result of coercing the unwrapped value to a string.\n\t     *\n\t     * @name toString\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {string} Returns the coerced string value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).toString();\n\t     * // => '1,2,3'\n\t     */\n\t    function wrapperToString() {\n\t      return (this.value() + '');\n\t    }\n\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias run, toJSON, valueOf\n\t     * @category Chain\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates an array of elements corresponding to the given keys, or indexes,\n\t     * of `collection`. Keys may be specified as individual arguments or as arrays\n\t     * of keys.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(number|number[]|string|string[])} [props] The property names\n\t     *  or indexes of elements to pick, specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * _.at(['a', 'b', 'c'], [0, 2]);\n\t     * // => ['a', 'c']\n\t     *\n\t     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n\t     * // => ['barney', 'pebbles']\n\t     */\n\t    var at = restParam(function(collection, props) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      if (isLength(length)) {\n\t        collection = toIterable(collection);\n\t      }\n\t      return baseAt(collection, baseFlatten(props));\n\t    });\n\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * The predicate is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias all\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.every(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = null;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias select\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.filter([4, 5, 6], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 6]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.filter(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.filter(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function filter(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, predicate);\n\t    }\n\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias detect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.result(_.find(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.result(_.find(users, 'active', false), 'user');\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.result(_.find(users, 'active'), 'user');\n\t     * // => 'barney'\n\t     */\n\t    var find = createFind(baseEach);\n\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(baseEachRight, true);\n\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning the first element that has equivalent property\n\t     * values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n\t     * // => 'fred'\n\t     */\n\t    function findWhere(collection, source) {\n\t      return find(collection, baseMatches(source));\n\t    }\n\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection). Iteratee functions may exit iteration early\n\t     * by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n\t     * may be used for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from left to right and returns the array\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n\t     *   console.log(n, key);\n\t     * });\n\t     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n\t     */\n\t    var forEach = createForEach(arrayEach, baseEach);\n\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEachRight(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from right to left and returns the array\n\t     */\n\t    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of the elements responsible for generating the key.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\n\t    /**\n\t     * Checks if `value` is in `collection` using `SameValueZero` for equality\n\t     * comparisons. If `fromIndex` is negative, it is used as the offset from\n\t     * the end of `collection`.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias contains, include\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} target The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, target, fromIndex, guard) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      if (!isLength(length)) {\n\t        collection = values(collection);\n\t        length = collection.length;\n\t      }\n\t      if (!length) {\n\t        return false;\n\t      }\n\t      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n\t        fromIndex = 0;\n\t      } else {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n\t      }\n\t      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n\t        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n\t        : (getIndexOf(collection, target, fromIndex) > -1);\n\t    }\n\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var keyData = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.indexBy(keyData, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return String.fromCharCode(object.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return this.fromCharCode(object.code);\n\t     * }, String);\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var indexBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\n\t    /**\n\t     * Invokes the method at `path` on each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it is\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invoke([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invoke = restParam(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          length = getLength(collection),\n\t          result = isLength(length) ? Array(length) : [];\n\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : (isProp && value != null && value[path]);\n\t        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * Many lodash methods are guarded to work as interatees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`, `drop`,\n\t     * `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`, `parseInt`,\n\t     * `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimLeft`,\n\t     * `trimRight`, `trunc`, `random`, `range`, `sample`, `some`, `uniq`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias collect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function timesThree(n) {\n\t     *   return n * 3;\n\t     * }\n\t     *\n\t     * _.map([1, 2], timesThree);\n\t     * // => [3, 6]\n\t     *\n\t     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n\t     * // => [3, 6] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee, thisArg) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return func(collection, iteratee);\n\t    }\n\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, while the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is bound\n\t     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.partition([1, 2, 3], function(n) {\n\t     *   return n % 2;\n\t     * });\n\t     * // => [[1, 3], [2]]\n\t     *\n\t     * _.partition([1.2, 2.3, 3.4], function(n) {\n\t     *   return this.floor(n) % 2;\n\t     * }, Math);\n\t     * // => [[1.2, 3.4], [2.3]]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * var mapper = function(array) {\n\t     *   return _.pluck(array, 'user');\n\t     * };\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n\t     * // => [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.map(_.partition(users, 'active', false), mapper);\n\t     * // => [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(_.partition(users, 'active'), mapper);\n\t     * // => [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\n\t    /**\n\t     * Gets the property value of `path` from all elements in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|string} path The path of the property to pluck.\n\t     * @returns {Array} Returns the property values.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.pluck(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * var userIndex = _.indexBy(users, 'user');\n\t     * _.pluck(userIndex, 'age');\n\t     * // => [36, 40] (iteration order is not guaranteed)\n\t     */\n\t    function pluck(collection, path) {\n\t      return map(collection, property(path));\n\t    }\n\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not provided the first element of `collection` is used as the initial\n\t     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as interatees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `includes`, `merge`, `sortByAll`, and `sortByOrder`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldl, inject\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     *   return result;\n\t     * }, {});\n\t     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n\t     */\n\t    var reduce = createReduce(arrayReduce, baseEach);\n\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldr\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    var reduceRight =  createReduce(arrayReduceRight, baseEachRight);\n\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.reject([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [1, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.reject(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.reject(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function reject(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\n\t    /**\n\t     * Gets a random element or `n` random elements from a collection.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to sample.\n\t     * @param {number} [n] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {*} Returns the random sample(s).\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     *\n\t     * _.sample([1, 2, 3, 4], 2);\n\t     * // => [3, 1]\n\t     */\n\t    function sample(collection, n, guard) {\n\t      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n\t        collection = toIterable(collection);\n\t        var length = collection.length;\n\t        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n\t      }\n\t      var result = shuffle(collection);\n\t      result.length = nativeMin(n < 0 ? 0 : (+n || 0), result.length);\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      collection = toIterable(collection);\n\n\t      var index = -1,\n\t          length = collection.length,\n\t          result = Array(length);\n\n\t      while (++index < length) {\n\t        var rand = baseRandom(0, index);\n\t        if (index != rand) {\n\t          result[index] = result[rand];\n\t        }\n\t        result[rand] = collection[index];\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the size of `collection`.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      return isLength(length) ? length : keys(collection).length;\n\t    }\n\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * The function returns as soon as it finds a passing value and does not iterate\n\t     * over the entire collection. The predicate is bound to `thisArg` and invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias any\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.some(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = null;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through `iteratee`. This method performs\n\t     * a stable sort, that is, it preserves the original sort order of equal elements.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return Math.sin(n);\n\t     * });\n\t     * // => [3, 1, 2]\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return this.sin(n);\n\t     * }, Math);\n\t     * // => [3, 1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred' },\n\t     *   { 'user': 'pebbles' },\n\t     *   { 'user': 'barney' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.sortBy(users, 'user'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function sortBy(collection, iteratee, thisArg) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = null;\n\t      }\n\t      var index = -1;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n\t      });\n\t      return baseSortBy(result, compareAscending);\n\t    }\n\n\t    /**\n\t     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n\t     * or property names.\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n\t     *  The iteratees to sort by, specified as individual values or arrays of values.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n\t     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.map(_.sortByAll(users, 'user', function(chr) {\n\t     *   return Math.floor(chr.age / 10);\n\t     * }), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortByAll = restParam(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var guard = iteratees[2];\n\t      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n\t    });\n\n\t    /**\n\t     * This method is like `_.sortByAll` except that it allows specifying the\n\t     * sort orders of the iteratees to sort by. A truthy value in `orders` will\n\t     * sort the corresponding property name in ascending order while a falsey\n\t     * value will sort it in descending order.\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} orders The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // sort by `user` in ascending order and by `age` in descending order\n\t     * _.map(_.sortByOrder(users, ['user', 'age'], [true, false]), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function sortByOrder(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (guard && isIterateeCall(iteratees, orders, guard)) {\n\t        orders = null;\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseSortByOrder(collection, iteratees, orders);\n\t    }\n\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning an array of all elements that have equivalent\n\t     * property values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n\t     * ];\n\t     *\n\t     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n\t     * // => ['fred']\n\t     */\n\t    function where(collection, source) {\n\t      return filter(collection, baseMatches(source));\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Gets the number of milliseconds that have elapsed since the Unix epoch\n\t     * (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Date\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = nativeNow || function() {\n\t      return new Date().getTime();\n\t    };\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it is called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      n = nativeIsFinite(n = +n) ? n : 0;\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      if (guard && isIterateeCall(func, n, guard)) {\n\t        n = null;\n\t      }\n\t      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n\t      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n\t    }\n\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it is called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery('#add').on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = null;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = restParam(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bind.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method. Method names may be specified as individual arguments or as arrays\n\t     * of method names. If no method names are provided all enumerable function\n\t     * properties, own and inherited, of `object` are bound.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} [methodNames] The object method names to bind,\n\t     *  specified as individual method names or arrays of method names.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view);\n\t     * jQuery('#docs').on('click', view.onClick);\n\t     * // => logs 'clicked docs' when the element is clicked\n\t     */\n\t    var bindAll = restParam(function(object, methodNames) {\n\t      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n\t      var index = -1,\n\t          length = methodNames.length;\n\n\t      while (++index < length) {\n\t        var key = methodNames[index];\n\t        object[key] = createWrapper(object[key], BIND_FLAG, object);\n\t      }\n\t      return object;\n\t    });\n\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object the method belongs to.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = restParam(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bindKey.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\n\t    /**\n\t     * Creates a function that accepts one or more arguments of `func` that when\n\t     * called either invokes `func` returning its result, if all `func` arguments\n\t     * have been provided, or returns a function that accepts one or more of the\n\t     * remaining `func` arguments, and so on. The arity of `func` may be specified\n\t     * if `func.length` is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curry = createCurry(CURRY_FLAG);\n\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n\t    /**\n\t     * Creates a function that delays invoking `func` until after `wait` milliseconds\n\t     * have elapsed since the last time it was invoked. The created function comes\n\t     * with a `cancel` method to cancel delayed invocations. Provide an options\n\t     * object to indicate that `func` should be invoked on the leading and/or\n\t     * trailing edge of the `wait` timeout. Subsequent calls to the debounced\n\t     * function return the result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it is invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // avoid costly calculations while the window size is in flux\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n\t     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n\t     *   'maxWait': 1000\n\t     * }));\n\t     *\n\t     * // cancel a debounced call\n\t     * var todoChanges = _.debounce(batchLog, 1000);\n\t     * Object.observe(models.todo, todoChanges);\n\t     *\n\t     * Object.observe(models, function(changes) {\n\t     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n\t     *     todoChanges.cancel();\n\t     *   }\n\t     * }, ['delete']);\n\t     *\n\t     * // ...at some point `models.todo` is changed\n\t     * models.todo.completed = true;\n\t     *\n\t     * // ...before 1 second has passed `models.todo` is deleted\n\t     * // which cancels the debounced `todoChanges` call\n\t     * delete models.todo;\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          maxWait = false,\n\t          trailing = true;\n\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = wait < 0 ? 0 : (+wait || 0);\n\t      if (options === true) {\n\t        var leading = true;\n\t        trailing = false;\n\t      } else if (isObject(options)) {\n\t        leading = options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n\t        trailing = 'trailing' in options ? options.trailing : trailing;\n\t      }\n\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t      }\n\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          if (maxTimeoutId) {\n\t            clearTimeout(maxTimeoutId);\n\t          }\n\t          var isCalled = trailingCall;\n\t          maxTimeoutId = timeoutId = trailingCall = undefined;\n\t          if (isCalled) {\n\t            lastCalled = now();\n\t            result = func.apply(thisArg, args);\n\t            if (!timeoutId && !maxTimeoutId) {\n\t              args = thisArg = null;\n\t            }\n\t          }\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\n\t      function maxDelayed() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (trailing || (maxWait !== wait)) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = null;\n\t          }\n\t        }\n\t      }\n\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled),\n\t              isCalled = remaining <= 0 || remaining > maxWait;\n\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = null;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      return debounced;\n\t    }\n\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = restParam(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = restParam(function(func, wait, args) {\n\t      return baseDelay(func, wait, args);\n\t    });\n\n\t    /**\n\t     * Creates a function that returns the result of invoking the provided\n\t     * functions with the `this` binding of the created function, where each\n\t     * successive invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the provided functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias backflow, compose\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is coerced to a string and used as the\n\t     * cache key. The `func` is invoked with the `this` binding of the memoized\n\t     * function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var upperCase = _.memoize(function(string) {\n\t     *   return string.toUpperCase();\n\t     * });\n\t     *\n\t     * upperCase('fred');\n\t     * // => 'FRED'\n\t     *\n\t     * // modifying the result cache\n\t     * upperCase.cache.set('fred', 'BARNEY');\n\t     * upperCase('fred');\n\t     * // => 'BARNEY'\n\t     *\n\t     * // replacing `_.memoize.Cache`\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'barney' };\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.memoize.Cache = WeakMap;\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            cache = memoized.cache,\n\t            key = resolver ? resolver.apply(this, args) : args[0];\n\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first call. The `func` is invoked\n\t     * with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // using placeholders\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = createPartial(PARTIAL_FLAG);\n\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // using placeholders\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * var map = _.rearg(_.map, [1, 0]);\n\t     * map(function(n) {\n\t     *   return n * 3;\n\t     * }, [1, 2, 3]);\n\t     * // => [3, 6, 9]\n\t     */\n\t    var rearg = restParam(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, null, null, null, baseFlatten(indexes));\n\t    });\n\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.restParam(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function restParam(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            rest = Array(length);\n\n\t        while (++index < length) {\n\t          rest[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, rest);\n\t          case 1: return func.call(this, args[0], rest);\n\t          case 2: return func.call(this, args[0], args[1], rest);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = rest;\n\t        return func.apply(this, otherArgs);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * // with a Promise\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function(array) {\n\t        return func.apply(this, array);\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates a function that only invokes `func` at most once per every `wait`\n\t     * milliseconds. The created function comes with a `cancel` method to cancel\n\t     * delayed invocations. Provide an options object to indicate that `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n\t     * Subsequent calls to the throttled function return the result of the last\n\t     * `func` call.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // avoid excessively updating the position while scrolling\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n\t     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // cancel a trailing throttled call\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (options === false) {\n\t        leading = false;\n\t      } else if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      debounceOptions.leading = leading;\n\t      debounceOptions.maxWait = +wait;\n\t      debounceOptions.trailing = trailing;\n\t      return debounce(func, wait, debounceOptions);\n\t    }\n\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n\t     * otherwise they are assigned by reference. If `customizer` is provided it is\n\t     * invoked to produce the cloned values. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is bound to\n\t     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var shallow = _.clone(users);\n\t     * shallow[0] === users[0];\n\t     * // => true\n\t     *\n\t     * var deep = _.clone(users, true);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.clone(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 0\n\t     */\n\t    function clone(value, isDeep, customizer, thisArg) {\n\t      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n\t        isDeep = false;\n\t      }\n\t      else if (typeof isDeep == 'function') {\n\t        thisArg = customizer;\n\t        customizer = isDeep;\n\t        isDeep = false;\n\t      }\n\t      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n\t      return baseClone(value, isDeep, customizer);\n\t    }\n\n\t    /**\n\t     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n\t     * to produce the cloned values. If `customizer` returns `undefined` cloning\n\t     * is handled by the method instead. The `customizer` is bound to `thisArg`\n\t     * and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var deep = _.cloneDeep(users);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.cloneDeep(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 20\n\t     */\n\t    function cloneDeep(value, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n\t      return baseClone(value, true, customizer);\n\t    }\n\n\t    /**\n\t     * Checks if `value` is classified as an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      var length = isObjectLike(value) ? value.length : undefined;\n\t      return isLength(length) && objToString.call(value) == argsTag;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(function() { return arguments; }());\n\t     * // => false\n\t     */\n\t    var isArray = nativeIsArray || function(value) {\n\t      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t    };\n\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n\t    }\n\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objToString.call(value) == dateTag;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) &&\n\t        (objToString.call(value).indexOf('Element') > -1);\n\t    }\n\t    // Fallback for environments without DOM support.\n\t    if (!support.dom) {\n\t      isElement = function(value) {\n\t        return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t      };\n\t    }\n\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it is an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      var length = getLength(value);\n\t      if (isLength(length) && (isArray(value) || isString(value) || isArguments(value) ||\n\t          (isObjectLike(value) && isFunction(value.splice)))) {\n\t        return !length;\n\t      }\n\t      return !keys(value).length;\n\t    }\n\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent. If `customizer` is provided it is invoked to compare values.\n\t     * If `customizer` returns `undefined` comparisons are handled by the method\n\t     * instead. The `customizer` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, other [, index|key]).\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. Functions and DOM nodes\n\t     * are **not** supported. Provide a customizer function to extend support\n\t     * for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * object == other;\n\t     * // => false\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * // using a customizer callback\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqual(array, other, function(value, other) {\n\t     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n\t     *     return true;\n\t     *   }\n\t     * });\n\t     * // => true\n\t     */\n\t    function isEqual(value, other, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n\t      if (!customizer && isStrictComparable(value) && isStrictComparable(other)) {\n\t        return value === other;\n\t      }\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(10);\n\t     * // => true\n\t     *\n\t     * _.isFinite('10');\n\t     * // => false\n\t     *\n\t     * _.isFinite(true);\n\t     * // => false\n\t     *\n\t     * _.isFinite(Object(10));\n\t     * // => false\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    var isFinite = nativeNumIsFinite || function(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    };\n\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    var isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in older versions of Chrome and Safari which return 'function' for regexes\n\t      // and Safari 8 equivalents which return 'object' for typed array constructors.\n\t      return objToString.call(value) == funcTag;\n\t    };\n\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(1);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      // Avoid a V8 JIT bug in Chrome 19-20.\n\t      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t      var type = typeof value;\n\t      return type == 'function' || (!!value && type == 'object');\n\t    }\n\n\t    /**\n\t     * Performs a deep comparison between `object` and `source` to determine if\n\t     * `object` contains equivalent property values. If `customizer` is provided\n\t     * it is invoked to compare values. If `customizer` returns `undefined`\n\t     * comparisons are handled by the method instead. The `customizer` is bound\n\t     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n\t     *\n\t     * **Note:** This method supports comparing properties of arrays, booleans,\n\t     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n\t     * and DOM nodes are **not** supported. Provide a customizer function to extend\n\t     * support for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatch(object, source, function(value, other) {\n\t     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n\t     * });\n\t     * // => true\n\t     */\n\t    function isMatch(object, source, customizer, thisArg) {\n\t      var props = keys(source),\n\t          length = props.length;\n\n\t      if (!length) {\n\t        return true;\n\t      }\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n\t      object = toObject(object);\n\t      if (!customizer && length == 1) {\n\t        var key = props[0],\n\t            value = source[key];\n\n\t        if (isStrictComparable(value)) {\n\t          return value === object[key] && (value !== undefined || (key in object));\n\t        }\n\t      }\n\t      var values = Array(length),\n\t          strictCompareFlags = Array(length);\n\n\t      while (length--) {\n\t        value = values[length] = source[props[length]];\n\t        strictCompareFlags[length] = isStrictComparable(value);\n\t      }\n\t      return baseIsMatch(object, props, values, strictCompareFlags, customizer);\n\t    }\n\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (objToString.call(value) == funcTag) {\n\t        return reIsNative.test(fnToString.call(value));\n\t      }\n\t      return isObjectLike(value) && reIsHostCtor.test(value);\n\t    }\n\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(8.4);\n\t     * // => true\n\t     *\n\t     * _.isNumber(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNumber('8.4');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n\t    }\n\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * **Note:** This method assumes objects created by the `Object` constructor\n\t     * have no inherited enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n\t      if (!(value && objToString.call(value) == objectTag)) {\n\t        return false;\n\t      }\n\t      var valueOf = value.valueOf,\n\t          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n\t      return objProto\n\t        ? (value == objProto || getPrototypeOf(value) == objProto)\n\t        : shimIsPlainObject(value);\n\t    };\n\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return (isObjectLike(value) && objToString.call(value) == regexpTag) || false;\n\t    }\n\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n\t    }\n\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n\t    }\n\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * (function() {\n\t     *   return _.toArray(arguments).slice(1);\n\t     * }(1, 2, 3));\n\t     * // => [2, 3]\n\t     */\n\t    function toArray(value) {\n\t      var length = value ? getLength(value) : 0;\n\t      if (!isLength(length)) {\n\t        return values(value);\n\t      }\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      return arrayCopy(value);\n\t    }\n\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return baseCopy(value, keysIn(value));\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object. Subsequent sources overwrite property assignments of previous sources.\n\t     * If `customizer` is provided it is invoked to produce the assigned values.\n\t     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n\t     * (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object` and is based on\n\t     * [`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).\n\t     *\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using a customizer callback\n\t     * var defaults = _.partialRight(_.assign, function(value, other) {\n\t     *   return _.isUndefined(value) ? other : value;\n\t     * });\n\t     *\n\t     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var assign = createAssigner(function(object, source, customizer) {\n\t      return customizer\n\t        ? assignWith(object, source, customizer)\n\t        : baseAssign(object, source);\n\t    });\n\n\t    /**\n\t     * Creates an object that inherits from the given `prototype` object. If a\n\t     * `properties` object is provided its own enumerable properties are assigned\n\t     * to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties, guard) {\n\t      var result = baseCreate(prototype);\n\t      if (guard && isIterateeCall(prototype, properties, guard)) {\n\t        properties = null;\n\t      }\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object for all destination properties that resolve to `undefined`. Once a\n\t     * property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = restParam(function(args) {\n\t      var object = args[0];\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      args.push(assignDefaults);\n\t      return assign.apply(undefined, args);\n\t    });\n\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    var findKey = createFindKey(baseForOwn);\n\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    var findLastKey = createFindKey(baseForOwnRight);\n\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n\t     */\n\t    var forIn = createForIn(baseFor);\n\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n\t     */\n\t    var forInRight = createForIn(baseForRight);\n\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n\t     * three arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n\t     */\n\t    var forOwn = createForOwn(baseForOwn);\n\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n\t     */\n\t    var forOwnRight = createForOwn(baseForOwnRight);\n\n\t    /**\n\t     * Creates an array of function property names from all enumerable properties,\n\t     * own and inherited, of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias methods\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * _.functions(_);\n\t     * // => ['after', 'ary', 'assign', ...]\n\t     */\n\t    function functions(object) {\n\t      return baseFunctions(object, keysIn(object));\n\t    }\n\n\t    /**\n\t     * Gets the property value of `path` on `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\n\t    /**\n\t     * Checks if `path` is a direct property.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     */\n\t    function has(object, path) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasOwnProperty.call(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        path = last(path);\n\t        result = object != null && hasOwnProperty.call(object, path);\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values unless `multiValue` is `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {boolean} [multiValue] Allow multiple values per key.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     *\n\t     * // with `multiValue`\n\t     * _.invert(object, true);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function invert(object, multiValue, guard) {\n\t      if (guard && isIterateeCall(object, multiValue, guard)) {\n\t        multiValue = null;\n\t      }\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = {};\n\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\n\t        if (multiValue) {\n\t          if (hasOwnProperty.call(result, value)) {\n\t            result[value].push(key);\n\t          } else {\n\t            result[value] = [key];\n\t          }\n\t        }\n\t        else {\n\t          result[value] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    var keys = !nativeKeys ? shimKeys : function(object) {\n\t      if (object) {\n\t        var Ctor = object.constructor,\n\t            length = object.length;\n\t      }\n\t      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n\t          (typeof object != 'function' && isLength(length))) {\n\t        return shimKeys(object);\n\t      }\n\t      return isObject(object) ? nativeKeys(object) : [];\n\t    };\n\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      if (!isObject(object)) {\n\t        object = Object(object);\n\t      }\n\t      var length = object.length;\n\t      length = (length && isLength(length) &&\n\t        (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n\t      var Ctor = object.constructor,\n\t          index = -1,\n\t          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n\t          result = Array(length),\n\t          skipIndexes = length > 0;\n\n\t      while (++index < length) {\n\t        result[index] = (index + '');\n\t      }\n\t      for (var key in object) {\n\t        if (!(skipIndexes && isIndex(key, length)) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n\t     *   return n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee, thisArg) {\n\t      var result = {};\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Recursively merges own enumerable properties of the source object(s), that\n\t     * don't resolve to `undefined` into the destination object. Subsequent sources\n\t     * overwrite property assignments of previous sources. If `customizer` is\n\t     * provided it is invoked to produce the merged values of the destination and\n\t     * source properties. If `customizer` returns `undefined` merging is handled\n\t     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n\t     * with five arguments: (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     *\n\t     * // using a customizer callback\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.merge(object, other, function(a, b) {\n\t     *   if (_.isArray(a)) {\n\t     *     return a.concat(b);\n\t     *   }\n\t     * });\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var merge = createAssigner(baseMerge);\n\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     * Property names may be specified as individual arguments or as arrays of\n\t     * property names. If `predicate` is provided it is invoked for each property\n\t     * of `object` omitting the properties `predicate` returns truthy for. The\n\t     * predicate is bound to `thisArg` and invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to omit, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.omit(object, 'age');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.omit(object, _.isNumber);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var omit = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      if (typeof props[0] != 'function') {\n\t        var props = arrayMap(baseFlatten(props), String);\n\t        return pickByArray(object, baseDifference(keysIn(object), props));\n\t      }\n\t      var predicate = bindCallback(props[0], props[1], 3);\n\t      return pickByCallback(object, function(value, key, object) {\n\t        return !predicate(value, key, object);\n\t      });\n\t    });\n\n\t    /**\n\t     * Creates a two dimensional array of the key-value pairs for `object`,\n\t     * e.g. `[[key1, value1], [key2, value2]]`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * _.pairs({ 'barney': 36, 'fred': 40 });\n\t     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n\t     */\n\t    function pairs(object) {\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = Array(length);\n\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        result[index] = [key, object[key]];\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Creates an object composed of the picked `object` properties. Property\n\t     * names may be specified as individual arguments or as arrays of property\n\t     * names. If `predicate` is provided it is invoked for each property of `object`\n\t     * picking the properties `predicate` returns truthy for. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to pick, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.pick(object, 'user');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.pick(object, _.isString);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var pick = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      return typeof props[0] == 'function'\n\t        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n\t        : pickByArray(object, baseFlatten(props));\n\t    });\n\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it is invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a.b.c', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      var result = object == null ? undefined : object[path];\n\t      if (result === undefined) {\n\t        if (object != null && !isKey(path, object)) {\n\t          path = toPath(path);\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          result = object == null ? undefined : object[last(path)];\n\t        }\n\t        result = result === undefined ? defaultValue : result;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\n\t    /**\n\t     * Sets the property value of `path` on `object`. If a portion of `path`\n\t     * does not exist it is created.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to augment.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      var pathKey = (path + '');\n\t      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n\t      var index = -1,\n\t          length = path.length,\n\t          endIndex = length - 1,\n\t          nested = object;\n\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          if (index == endIndex) {\n\t            nested[key] = value;\n\t          } else if (nested[key] == null) {\n\t            nested[key] = isIndex(path[index + 1]) ? [] : {};\n\t          }\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n\t     * with four arguments: (accumulator, value, key, object). Iteratee functions\n\t     * may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     */\n\t    function transform(object, iteratee, accumulator, thisArg) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getCallback(iteratee, thisArg, 4);\n\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = baseCreate(isFunction(Ctor) && Ctor.prototype);\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return baseValues(object, keys(object));\n\t    }\n\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values\n\t     * of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return baseValues(object, keysIn(object));\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it is set to `start` with `start` then set to `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} n The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     */\n\t    function inRange(value, start, end) {\n\t      start = +start || 0;\n\t      if (typeof end === 'undefined') {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n\t    }\n\n\t    /**\n\t     * Produces a random number between `min` and `max` (inclusive). If only one\n\t     * argument is provided a number between `0` and the given number is returned.\n\t     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n\t     * number is returned instead of an integer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [min=0] The minimum possible value.\n\t     * @param {number} [max=1] The maximum possible value.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(min, max, floating) {\n\t      if (floating && isIterateeCall(min, max, floating)) {\n\t        max = floating = null;\n\t      }\n\t      var noMin = min == null,\n\t          noMax = max == null;\n\n\t      if (floating == null) {\n\t        if (noMax && typeof min == 'boolean') {\n\t          floating = min;\n\t          min = 1;\n\t        }\n\t        else if (typeof max == 'boolean') {\n\t          floating = max;\n\t          noMax = true;\n\t        }\n\t      }\n\t      if (noMin && noMax) {\n\t        max = 1;\n\t        noMax = false;\n\t      }\n\t      min = +min || 0;\n\t      if (noMax) {\n\t        max = min;\n\t        min = 0;\n\t      } else {\n\t        max = +max || 0;\n\t      }\n\t      if (floating || min % 1 || max % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n\t      }\n\t      return baseRandom(min, max);\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n\t    });\n\n\t    /**\n\t     * Capitalizes the first character of `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('fred');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      string = baseToString(string);\n\t      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n\t    }\n\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = baseToString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      target = (target + '');\n\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional characters\n\t     * use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't require escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in Internet Explorer < 9, they can break out\n\t     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n\t      string = baseToString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\n\t    /**\n\t     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n\t     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasRegExpChars.test(string))\n\t        ? string.replace(reRegExpChars, '\\\\$&')\n\t        : string;\n\t    }\n\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\n\t    /**\n\t     * Pads `string` on the left and right sides if it is shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = baseToString(string);\n\t      length = +length;\n\n\t      var strLength = string.length;\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = floor(mid),\n\t          rightLength = ceil(mid);\n\n\t      chars = createPadding('', rightLength, chars);\n\t      return chars.slice(0, leftLength) + string + chars;\n\t    }\n\n\t    /**\n\t     * Pads `string` on the left side if it is shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padLeft('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padLeft('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padLeft('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padLeft = createPadDir();\n\n\t    /**\n\t     * Pads `string` on the right side if it is shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padRight('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padRight('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padRight('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padRight = createPadDir(true);\n\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      if (guard && isIterateeCall(string, radix, guard)) {\n\t        radix = 0;\n\t      }\n\t      return nativeParseInt(string, radix);\n\t    }\n\t    // Fallback for environments with pre-ES5 implementations.\n\t    if (nativeParseInt(whitespace + '08') != 8) {\n\t      parseInt = function(string, radix, guard) {\n\t        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n\t        // Chrome fails to trim leading <BOM> whitespace characters.\n\t        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n\t          radix = 0;\n\t        } else if (radix) {\n\t          radix = +radix;\n\t        }\n\t        string = trim(string);\n\t        return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t      };\n\t    }\n\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      var result = '';\n\t      string = baseToString(string);\n\t      n = +n;\n\t      if (n < 1 || !string || !nativeIsFinite(n)) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = floor(n / 2);\n\t        string += string;\n\t      } while (n);\n\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n\t    });\n\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      position = position == null\n\t        ? 0\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is provided it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // using the \"interpolate\" delimiter to create a compiled template\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // using the HTML \"escape\" delimiter to escape data property values\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the internal `print` function in \"evaluate\" delimiters\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // using custom template delimiters\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // using backslashes to treat delimiters as plain text\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // using the `imports` option to import `jQuery` as `jq`\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the `sourceURL` option to specify a custom sourceURL for the template\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // using the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and a stack trace\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, otherOptions) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\n\t      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n\t        options = otherOptions = null;\n\t      }\n\t      string = baseToString(string);\n\t      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n\t      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\n\t        // The JS engine embedded in Adobe products requires returning the `match`\n\t        // string in order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\n\t      source += \"';\\n\";\n\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t      });\n\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n\t      }\n\t      chars = (chars + '');\n\t      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n\t    }\n\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimLeft('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimLeft('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimLeft(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string));\n\t      }\n\t      return string.slice(charsLeftIndex(string, (chars + '')));\n\t    }\n\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimRight('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimRight('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimRight(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(0, trimmedRightIndex(string) + 1);\n\t      }\n\t      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n\t    }\n\n\t    /**\n\t     * Truncates `string` if it is longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object|number} [options] The options object or maximum string length.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', 24);\n\t     * // => 'hi-diddly-ho there, n...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function trunc(string, options, guard) {\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = null;\n\t      }\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\n\t      if (options != null) {\n\t        if (isObject(options)) {\n\t          var separator = 'separator' in options ? options.separator : separator;\n\t          length = 'length' in options ? (+options.length || 0) : length;\n\t          omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t        } else {\n\t          length = +options || 0;\n\t        }\n\t      }\n\t      string = baseToString(string);\n\t      if (length >= string.length) {\n\t        return string;\n\t      }\n\t      var end = length - omission.length;\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = string.slice(0, end);\n\t      if (separator == null) {\n\t        return result + omission;\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              newEnd,\n\t              substring = string.slice(0, end);\n\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd == null ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      if (guard && isIterateeCall(string, pattern, guard)) {\n\t        pattern = null;\n\t      }\n\t      string = baseToString(string);\n\t      return string.match(pattern || reWords) || [];\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // avoid throwing errors for invalid selectors\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = restParam(function(func, args) {\n\t      try {\n\t        return func.apply(undefined, args);\n\t      } catch(e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and arguments of the created function. If `func` is a property name the\n\t     * created callback returns the property value for a given element. If `func`\n\t     * is an object the created callback returns `true` for elements that contain\n\t     * the equivalent object properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias iteratee\n\t     * @category Utility\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // wrap to create custom callback shorthands\n\t     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n\t     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n\t     *   if (!match) {\n\t     *     return callback(func, thisArg);\n\t     *   }\n\t     *   return function(object) {\n\t     *     return match[2] == 'gt'\n\t     *       ? object[match[1]] > match[3]\n\t     *       : object[match[1]] < match[3];\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age__gt36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function callback(func, thisArg, guard) {\n\t      if (guard && isIterateeCall(func, thisArg, guard)) {\n\t        thisArg = null;\n\t      }\n\t      return baseCallback(func, thisArg);\n\t    }\n\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\n\t    /**\n\t     * This method returns the first argument provided to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\n\t    /**\n\t     * Creates a function which performs a deep comparison between a given object\n\t     * and `source`, returning `true` if the given object has equivalent property\n\t     * values, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\n\t    /**\n\t     * Creates a function which compares the property value of `path` on a given\n\t     * object to `value`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} value The value to compare.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, value) {\n\t      return baseMatchesProperty(path, baseClone(value, true));\n\t    }\n\n\t    /**\n\t     * Creates a function which invokes the method at `path` on a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = restParam(function(path, args) {\n\t      return function(object) {\n\t        return invokePath(object, path, args);\n\t      }\n\t    });\n\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function which invokes\n\t     * the method at a given path on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = restParam(function(object, args) {\n\t      return function(path) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * // use `_.runInContext` to avoid conflicts (esp. in Node.js)\n\t     * var _ = require('lodash').runInContext();\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      if (options == null) {\n\t        var isObj = isObject(source),\n\t            props = isObj && keys(source),\n\t            methodNames = props && props.length && baseFunctions(source, props);\n\n\t        if (!(methodNames ? methodNames.length : isObj)) {\n\t          methodNames = false;\n\t          options = source;\n\t          source = object;\n\t          object = this;\n\t        }\n\t      }\n\t      if (!methodNames) {\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = true,\n\t          index = -1,\n\t          isFunc = isFunction(object),\n\t          length = methodNames.length;\n\n\t      if (options === false) {\n\t        chain = false;\n\t      } else if (isObject(options) && 'chain' in options) {\n\t        chain = options.chain;\n\t      }\n\t      while (++index < length) {\n\t        var methodName = methodNames[index],\n\t            func = source[methodName];\n\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = (function(func) {\n\t            return function() {\n\t              var chainAll = this.__chain__;\n\t              if (chain || chainAll) {\n\t                var result = object(this.__wrapped__),\n\t                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n\t                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t                result.__chain__ = chainAll;\n\t                return result;\n\t              }\n\t              var args = [this.value()];\n\t              push.apply(args, arguments);\n\t              return func.apply(object, args);\n\t            };\n\t          }(func));\n\t        }\n\t      }\n\t      return object;\n\t    }\n\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      context._ = oldDash;\n\t      return this;\n\t    }\n\n\t    /**\n\t     * A no-operation function which returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\n\t    /**\n\t     * Creates a function which returns the property value at `path` on a\n\t     * given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function which returns\n\t     * the property value at a given path on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return baseGet(object, toPath(path), path + '');\n\t      };\n\t    }\n\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. If `end` is not specified it is\n\t     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n\t     * a zero-length range is created unless a negative `step` is specified.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    function range(start, end, step) {\n\t      if (step && isIterateeCall(start, end, step)) {\n\t        end = step = null;\n\t      }\n\t      start = +start || 0;\n\t      step = step == null ? 1 : (+step || 0);\n\n\t      if (end == null) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n\t      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\t      var index = -1,\n\t          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\n\t      while (++index < length) {\n\t        result[index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Invokes the iteratee function `n` times, returning an array of the results\n\t     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n\t     * one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n\t     * // => [3, 6, 4]\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   mage.castSpell(n);\n\t     * });\n\t     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   this.cast(n);\n\t     * }, mage);\n\t     * // => also invokes `mage.castSpell(n)` three times\n\t     */\n\t    function times(n, iteratee, thisArg) {\n\t      n = floor(n);\n\n\t      // Exit early to avoid a JSC JIT bug in Safari 8\n\t      // where `Array(0)` is treated as `Array(1)`.\n\t      if (n < 1 || !nativeIsFinite(n)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n\t      iteratee = bindCallback(iteratee, thisArg, 1);\n\t      while (++index < n) {\n\t        if (index < MAX_ARRAY_LENGTH) {\n\t          result[index] = iteratee(index);\n\t        } else {\n\t          iteratee(index);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\n\t    /**\n\t     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {string} [prefix] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return baseToString(prefix) + id;\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number to add.\n\t     * @param {number} addend The second number to add.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      return (+augend || 0) + (+addend || 0);\n\t    }\n\n\t    /**\n\t     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n\t     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => -Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.max(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.max(users, 'age');\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     */\n\t    var max = createExtremum(arrayMax);\n\n\t    /**\n\t     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n\t     * `Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.min(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.min(users, 'age');\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var min = createExtremum(arrayMin, true);\n\n\t    /**\n\t     * Gets the sum of the values in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 6]);\n\t     * // => 10\n\t     *\n\t     * _.sum({ 'a': 4, 'b': 6 });\n\t     * // => 10\n\t     *\n\t     * var objects = [\n\t     *   { 'n': 4 },\n\t     *   { 'n': 6 }\n\t     * ];\n\t     *\n\t     * _.sum(objects, function(object) {\n\t     *   return object.n;\n\t     * });\n\t     * // => 10\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sum(objects, 'n');\n\t     * // => 10\n\t     */\n\t    function sum(collection, iteratee, thisArg) {\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = null;\n\t      }\n\t      var func = getCallback(),\n\t          noIteratee = iteratee == null;\n\n\t      if (!(func === baseCallback && noIteratee)) {\n\t        noIteratee = false;\n\t        iteratee = func(iteratee, thisArg, 3);\n\t      }\n\t      return noIteratee\n\t        ? arraySum(isArray(collection) ? collection : toIterable(collection))\n\t        : baseSum(collection, iteratee);\n\t    }\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\n\t    // Add functions to the `Map` cache.\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\n\t    // Add functions to the `Set` cache.\n\t    SetCache.prototype.push = cachePush;\n\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.callback = callback;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.functions = functions;\n\t    lodash.groupBy = groupBy;\n\t    lodash.indexBy = indexBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.invert = invert;\n\t    lodash.invoke = invoke;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.omit = omit;\n\t    lodash.once = once;\n\t    lodash.pairs = pairs;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pluck = pluck;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.restParam = restParam;\n\t    lodash.set = set;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortByAll = sortByAll;\n\t    lodash.sortByOrder = sortByOrder;\n\t    lodash.spread = spread;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.times = times;\n\t    lodash.toArray = toArray;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.union = union;\n\t    lodash.uniq = uniq;\n\t    lodash.unzip = unzip;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.where = where;\n\t    lodash.without = without;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\n\t    // Add aliases.\n\t    lodash.backflow = flowRight;\n\t    lodash.collect = map;\n\t    lodash.compose = flowRight;\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.extend = assign;\n\t    lodash.iteratee = callback;\n\t    lodash.methods = functions;\n\t    lodash.object = zipObject;\n\t    lodash.select = filter;\n\t    lodash.tail = rest;\n\t    lodash.unique = uniq;\n\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.findWhere = findWhere;\n\t    lodash.first = first;\n\t    lodash.get = get;\n\t    lodash.has = has;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isString = isString;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.max = max;\n\t    lodash.min = min;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padLeft = padLeft;\n\t    lodash.padRight = padRight;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.result = result;\n\t    lodash.runInContext = runInContext;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.sum = sum;\n\t    lodash.template = template;\n\t    lodash.trim = trim;\n\t    lodash.trimLeft = trimLeft;\n\t    lodash.trimRight = trimRight;\n\t    lodash.trunc = trunc;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.words = words;\n\n\t    // Add aliases.\n\t    lodash.all = every;\n\t    lodash.any = some;\n\t    lodash.contains = includes;\n\t    lodash.detect = find;\n\t    lodash.foldl = reduce;\n\t    lodash.foldr = reduceRight;\n\t    lodash.head = first;\n\t    lodash.include = includes;\n\t    lodash.inject = reduce;\n\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!lodash.prototype[methodName]) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), false);\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\t    lodash.sample = sample;\n\n\t    lodash.prototype.sample = function(n) {\n\t      if (!this.__chain__ && n == null) {\n\t        return sample(this.value());\n\t      }\n\t      return this.thru(function(value) {\n\t        return sample(value, n);\n\t      });\n\t    };\n\n\t    /*------------------------------------------------------------------------*/\n\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t    lodash.VERSION = VERSION;\n\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['dropWhile', 'filter', 'map', 'takeWhile'], function(methodName, type) {\n\t      var isFilter = type != LAZY_MAP_FLAG,\n\t          isDropWhile = type == LAZY_DROP_WHILE_FLAG;\n\n\t      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n\t        var filtered = this.__filtered__,\n\t            result = (filtered && isDropWhile) ? new LazyWrapper(this) : this.clone(),\n\t            iteratees = result.__iteratees__ || (result.__iteratees__ = []);\n\n\t        iteratees.push({\n\t          'done': false,\n\t          'count': 0,\n\t          'index': 0,\n\t          'iteratee': getCallback(iteratee, thisArg, 1),\n\t          'limit': -1,\n\t          'type': type\n\t        });\n\n\t        result.__filtered__ = filtered || isFilter;\n\t        return result;\n\t      };\n\t    });\n\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      var whileName = methodName + 'While';\n\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__,\n\t            result = (filtered && !index) ? this.dropWhile() : this.clone();\n\n\t        n = n == null ? 1 : nativeMax(floor(n) || 0, 0);\n\t        if (filtered) {\n\t          if (index) {\n\t            result.__takeCount__ = nativeMin(result.__takeCount__, n);\n\t          } else {\n\t            last(result.__iteratees__).limit = n;\n\t          }\n\t        } else {\n\t          var views = result.__views__ || (result.__views__ = []);\n\t          views.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n\t        }\n\t        return result;\n\t      };\n\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\n\t      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n\t        return this.reverse()[whileName](predicate, thisArg).reverse();\n\t      };\n\t    });\n\n\t    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\t    arrayEach(['first', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\t    arrayEach(['initial', 'rest'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[dropName](1);\n\t      };\n\t    });\n\n\t    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\t    arrayEach(['pluck', 'where'], function(methodName, index) {\n\t      var operationName = index ? 'filter' : 'map',\n\t          createCallback = index ? baseMatches : property;\n\n\t      LazyWrapper.prototype[methodName] = function(value) {\n\t        return this[operationName](createCallback(value));\n\t      };\n\t    });\n\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\n\t    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n\t      predicate = getCallback(predicate, thisArg, 1);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = start == null ? 0 : (+start || 0);\n\t      var result = start < 0 ? this.takeRight(-start) : this.drop(start);\n\n\t      if (end !== undefined) {\n\t        end = (+end || 0);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.drop(0);\n\t    };\n\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n\t          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments,\n\t            length = args.length,\n\t            chainAll = this.__chain__,\n\t            value = this.__wrapped__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // avoid lazy use if the iteratee has a \"length\" value other than `1`\n\t          isLazy = useLazy = false;\n\t        }\n\t        var onlyLazy = isLazy && !isHybrid;\n\t        if (retUnwrapped && !chainAll) {\n\t          return onlyLazy\n\t            ? func.call(value)\n\t            : lodashFunc.call(lodash, this.value());\n\t        }\n\t        var interceptor = function(value) {\n\t          var otherArgs = [value];\n\t          push.apply(otherArgs, args);\n\t          return lodashFunc.apply(lodash, otherArgs);\n\t        };\n\t        if (useLazy) {\n\t          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n\t              result = func.apply(wrapper, args);\n\n\t          if (!retUnwrapped && (isHybrid || result.__actions__)) {\n\t            var actions = result.__actions__ || (result.__actions__ = []);\n\t            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n\t          }\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        return this.thru(interceptor);\n\t      };\n\t    });\n\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['concat', 'join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n\t      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = lodashFunc.name,\n\t            names = realNames[key] || (realNames[key] = []);\n\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\n\t    realNames[createHybridWrapper(null, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': null }];\n\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toString = wrapperToString;\n\t    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n\t    // Add function aliases to the `lodash` wrapper.\n\t    lodash.prototype.collect = lodash.prototype.map;\n\t    lodash.prototype.head = lodash.prototype.first;\n\t    lodash.prototype.select = lodash.prototype.filter;\n\t    lodash.prototype.tail = lodash.prototype.rest;\n\n\t    return lodash;\n\t  }\n\n\t  /*--------------------------------------------------------------------------*/\n\n\t  // Export lodash.\n\t  var _ = runInContext();\n\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Expose lodash to the global object when an AMD loader is present to avoid\n\t    // errors in cases where lodash is loaded by a script tag and not intended\n\t    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n\t    // more details.\n\t    root._ = _;\n\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js or RingoJS.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for Narwhal or Rhino -require.\n\t    else {\n\t      freeExports._ = _;\n\t    }\n\t  }\n\t  else {\n\t    // Export for a browser or Rhino.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(51)(module), (function() { return this; }())))\n\n/***/ },\n\n/***/ 18:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @license\r\n\t * pixi.js - v2.2.7\r\n\t * Copyright (c) 2012-2014, Mat Groves\r\n\t * http://goodboydigital.com/\r\n\t *\r\n\t * Compiled: 2015-02-25\r\n\t *\r\n\t * pixi.js is licensed under the MIT License.\r\n\t * http://www.opensource.org/licenses/mit-license.php\r\n\t */\r\n\t/**\r\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\r\n\t */\r\n\r\n\t(function(){\r\n\r\n\t    var root = this;\r\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The [pixi.js](http://www.pixijs.com/) module/namespace.\n\t *\n\t * @module PIXI\n\t */\n\n\t/**\n\t * Namespace-class for [pixi.js](http://www.pixijs.com/).\n\t *\n\t * Contains assorted static properties and enumerations.\n\t *\n\t * @class PIXI\n\t * @static\n\t */\n\tvar PIXI = PIXI || {};\n\n\t/**\n\t * @property {Number} WEBGL_RENDERER\n\t * @protected\n\t * @static\n\t */\n\tPIXI.WEBGL_RENDERER = 0;\n\t/**\n\t * @property {Number} CANVAS_RENDERER\n\t * @protected\n\t * @static\n\t */\n\tPIXI.CANVAS_RENDERER = 1;\n\n\t/**\n\t * Version of pixi that is loaded.\n\t * @property {String} VERSION\n\t * @static\n\t */\n\tPIXI.VERSION = \"v2.2.7\";\n\n\t/**\n\t * Various blend modes supported by pixi. IMPORTANT - The WebGL renderer only supports the NORMAL, ADD, MULTIPLY and SCREEN blend modes.\n\t * @property {Object} blendModes\n\t * @property {Number} blendModes.NORMAL\n\t * @property {Number} blendModes.ADD\n\t * @property {Number} blendModes.MULTIPLY\n\t * @property {Number} blendModes.SCREEN\n\t * @property {Number} blendModes.OVERLAY\n\t * @property {Number} blendModes.DARKEN\n\t * @property {Number} blendModes.LIGHTEN\n\t * @property {Number} blendModes.COLOR_DODGE\n\t * @property {Number} blendModes.COLOR_BURN\n\t * @property {Number} blendModes.HARD_LIGHT\n\t * @property {Number} blendModes.SOFT_LIGHT\n\t * @property {Number} blendModes.DIFFERENCE\n\t * @property {Number} blendModes.EXCLUSION\n\t * @property {Number} blendModes.HUE\n\t * @property {Number} blendModes.SATURATION\n\t * @property {Number} blendModes.COLOR\n\t * @property {Number} blendModes.LUMINOSITY\n\t * @static\n\t */\n\tPIXI.blendModes = {\n\t    NORMAL:0,\n\t    ADD:1,\n\t    MULTIPLY:2,\n\t    SCREEN:3,\n\t    OVERLAY:4,\n\t    DARKEN:5,\n\t    LIGHTEN:6,\n\t    COLOR_DODGE:7,\n\t    COLOR_BURN:8,\n\t    HARD_LIGHT:9,\n\t    SOFT_LIGHT:10,\n\t    DIFFERENCE:11,\n\t    EXCLUSION:12,\n\t    HUE:13,\n\t    SATURATION:14,\n\t    COLOR:15,\n\t    LUMINOSITY:16\n\t};\n\n\t/**\n\t * The scale modes that are supported by pixi.\n\t *\n\t * The DEFAULT scale mode affects the default scaling mode of future operations.\n\t * It can be re-assigned to either LINEAR or NEAREST, depending upon suitability.\n\t *\n\t * @property {Object} scaleModes\n\t * @property {Number} scaleModes.DEFAULT=LINEAR\n\t * @property {Number} scaleModes.LINEAR Smooth scaling\n\t * @property {Number} scaleModes.NEAREST Pixelating scaling\n\t * @static\n\t */\n\tPIXI.scaleModes = {\n\t    DEFAULT:0,\n\t    LINEAR:0,\n\t    NEAREST:1\n\t};\n\n\t// used to create uids for various pixi objects..\n\tPIXI._UID = 0;\n\n\tif(typeof(Float32Array) != 'undefined')\n\t{\n\t    PIXI.Float32Array = Float32Array;\n\t    PIXI.Uint16Array = Uint16Array;\n\n\t    // Uint32Array and ArrayBuffer only used by WebGL renderer\n\t    // We can suppose that if WebGL is supported then typed arrays are supported too\n\t    // as they predate WebGL support for all browsers:\n\t    // see typed arrays support: http://caniuse.com/#search=TypedArrays\n\t    // see WebGL support: http://caniuse.com/#search=WebGL\n\t    PIXI.Uint32Array = Uint32Array;\n\t    PIXI.ArrayBuffer = ArrayBuffer;\n\t}\n\telse\n\t{\n\t    PIXI.Float32Array = Array;\n\t    PIXI.Uint16Array = Array;\n\t}\n\n\t// interaction frequency\n\tPIXI.INTERACTION_FREQUENCY = 30;\n\tPIXI.AUTO_PREVENT_DEFAULT = true;\n\n\t/**\n\t * @property {Number} PI_2\n\t * @static\n\t */\n\tPIXI.PI_2 = Math.PI * 2;\n\n\t/**\n\t * @property {Number} RAD_TO_DEG\n\t * @static\n\t */\n\tPIXI.RAD_TO_DEG = 180 / Math.PI;\n\n\t/**\n\t * @property {Number} DEG_TO_RAD\n\t * @static\n\t */\n\tPIXI.DEG_TO_RAD = Math.PI / 180;\n\n\t/**\n\t * @property {String} RETINA_PREFIX\n\t * @protected\n\t * @static\n\t */\n\tPIXI.RETINA_PREFIX = \"@2x\";\n\t//PIXI.SCALE_PREFIX \"@x%%\";\n\n\t/**\n\t * If true the default pixi startup (console) banner message will be suppressed.\n\t *\n\t * @property {Boolean} dontSayHello\n\t * @default false\n\t * @static\n\t */\n\tPIXI.dontSayHello = false;\n\n\t/**\n\t * The default render options if none are supplied to\n\t * {{#crossLink \"WebGLRenderer\"}}{{/crossLink}} or {{#crossLink \"CanvasRenderer\"}}{{/crossLink}}.\n\t *\n\t * @property {Object} defaultRenderOptions\n\t * @property {Object} defaultRenderOptions.view=null\n\t * @property {Boolean} defaultRenderOptions.transparent=false\n\t * @property {Boolean} defaultRenderOptions.antialias=false\n\t * @property {Boolean} defaultRenderOptions.preserveDrawingBuffer=false\n\t * @property {Number} defaultRenderOptions.resolution=1\n\t * @property {Boolean} defaultRenderOptions.clearBeforeRender=true\n\t * @property {Boolean} defaultRenderOptions.autoResize=false\n\t * @static\n\t */\n\tPIXI.defaultRenderOptions = {\n\t    view:null,\n\t    transparent:false,\n\t    antialias:false,\n\t    preserveDrawingBuffer:false,\n\t    resolution:1,\n\t    clearBeforeRender:true,\n\t    autoResize:false\n\t}\n\n\tPIXI.sayHello = function (type)\n\t{\n\t    if(PIXI.dontSayHello)return;\n\n\t    if ( navigator.userAgent.toLowerCase().indexOf('chrome') > -1 )\n\t    {\n\t        var args = [\n\t            '%c %c %c Pixi.js ' + PIXI.VERSION + ' - ' + type + '  %c ' + ' %c ' + ' http://www.pixijs.com/  %c %c ♥%c♥%c♥ ',\n\t            'background: #ff66a5',\n\t            'background: #ff66a5',\n\t            'color: #ff66a5; background: #030307;',\n\t            'background: #ff66a5',\n\t            'background: #ffc3dc',\n\t            'background: #ff66a5',\n\t            'color: #ff2424; background: #fff',\n\t            'color: #ff2424; background: #fff',\n\t            'color: #ff2424; background: #fff'\n\t        ];\n\n\t        console.log.apply(console, args);\n\t    }\n\t    else if (window['console'])\n\t    {\n\t        console.log('Pixi.js ' + PIXI.VERSION + ' - http://www.pixijs.com/');\n\t    }\n\n\t    PIXI.dontSayHello = true;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The Point object represents a location in a two-dimensional coordinate system, where x represents the horizontal axis and y represents the vertical axis.\n\t *\n\t * @class Point\n\t * @constructor\n\t * @param x {Number} position of the point on the x axis\n\t * @param y {Number} position of the point on the y axis\n\t */\n\tPIXI.Point = function(x, y)\n\t{\n\t    /**\n\t     * @property x\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.x = x || 0;\n\n\t    /**\n\t     * @property y\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.y = y || 0;\n\t};\n\n\t/**\n\t * Creates a clone of this point\n\t *\n\t * @method clone\n\t * @return {Point} a copy of the point\n\t */\n\tPIXI.Point.prototype.clone = function()\n\t{\n\t    return new PIXI.Point(this.x, this.y);\n\t};\n\n\t/**\n\t * Sets the point to a new x and y position.\n\t * If y is omitted, both x and y will be set to x.\n\t * \n\t * @method set\n\t * @param [x=0] {Number} position of the point on the x axis\n\t * @param [y=0] {Number} position of the point on the y axis\n\t */\n\tPIXI.Point.prototype.set = function(x, y)\n\t{\n\t    this.x = x || 0;\n\t    this.y = y || ( (y !== 0) ? this.x : 0 ) ;\n\t};\n\n\t// constructor\n\tPIXI.Point.prototype.constructor = PIXI.Point;\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/\n\t */\n\n\t/**\n\t * the Rectangle object is an area defined by its position, as indicated by its top-left corner point (x, y) and by its width and its height.\n\t *\n\t * @class Rectangle\n\t * @constructor\n\t * @param x {Number} The X coordinate of the upper-left corner of the rectangle\n\t * @param y {Number} The Y coordinate of the upper-left corner of the rectangle\n\t * @param width {Number} The overall width of this rectangle\n\t * @param height {Number} The overall height of this rectangle\n\t */\n\tPIXI.Rectangle = function(x, y, width, height)\n\t{\n\t    /**\n\t     * @property x\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.x = x || 0;\n\n\t    /**\n\t     * @property y\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.y = y || 0;\n\n\t    /**\n\t     * @property width\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.width = width || 0;\n\n\t    /**\n\t     * @property height\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.height = height || 0;\n\n\t    /**\n\t     * The type of the object, should be one of the Graphics type consts, PIXI.Graphics.RECT in this case\n\t     * @property type\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t};\n\n\t/**\n\t * Creates a clone of this Rectangle\n\t *\n\t * @method clone\n\t * @return {Rectangle} a copy of the rectangle\n\t */\n\tPIXI.Rectangle.prototype.clone = function()\n\t{\n\t    return new PIXI.Rectangle(this.x, this.y, this.width, this.height);\n\t};\n\n\t/**\n\t * Checks whether the x and y coordinates given are contained within this Rectangle\n\t *\n\t * @method contains\n\t * @param x {Number} The X coordinate of the point to test\n\t * @param y {Number} The Y coordinate of the point to test\n\t * @return {Boolean} Whether the x/y coordinates are within this Rectangle\n\t */\n\tPIXI.Rectangle.prototype.contains = function(x, y)\n\t{\n\t    if(this.width <= 0 || this.height <= 0)\n\t        return false;\n\n\t    var x1 = this.x;\n\t    if(x >= x1 && x <= x1 + this.width)\n\t    {\n\t        var y1 = this.y;\n\n\t        if(y >= y1 && y <= y1 + this.height)\n\t        {\n\t            return true;\n\t        }\n\t    }\n\n\t    return false;\n\t};\n\n\t// constructor\n\tPIXI.Rectangle.prototype.constructor = PIXI.Rectangle;\n\n\tPIXI.EmptyRectangle = new PIXI.Rectangle(0,0,0,0);\r\n\t/**\n\t * @author Adrien Brault <adrien.brault@gmail.com>\n\t */\n\n\t/**\n\t * @class Polygon\n\t * @constructor\n\t * @param points* {Array(Point)|Array(Number)|Point...|Number...} This can be an array of Points that form the polygon,\n\t *      a flat array of numbers that will be interpreted as [x,y, x,y, ...], or the arguments passed can be\n\t *      all the points of the polygon e.g. `new PIXI.Polygon(new PIXI.Point(), new PIXI.Point(), ...)`, or the\n\t *      arguments passed can be flat x,y values e.g. `new PIXI.Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are\n\t *      Numbers.\n\t */\n\tPIXI.Polygon = function(points)\n\t{\n\t    //if points isn't an array, use arguments as the array\n\t    if(!(points instanceof Array))points = Array.prototype.slice.call(arguments);\n\n\t    //if this is a flat array of numbers, convert it to points\n\t    if(points[0] instanceof PIXI.Point)\n\t    {\n\t        var p = [];\n\t        for(var i = 0, il = points.length; i < il; i++)\n\t        {\n\t            p.push(points[i].x, points[i].y);\n\t        }\n\n\t        points = p;\n\t    }\n\n\t    this.closed = true;\n\n\t    /**\n\t     * An array of the points of this polygon\n\t     * @property points\n\t     * @type Array(Point)|Array(Number)\n\t     * \n\t     */\n\t    this.points = points;\n\n\t    /**\n\t     * The type of the object, should be one of the Graphics type consts, PIXI.Graphics.POLY in this case\n\t     * @property type\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t};\n\n\t/**\n\t * Creates a clone of this polygon\n\t *\n\t * @method clone\n\t * @return {Polygon} a copy of the polygon\n\t */\n\tPIXI.Polygon.prototype.clone = function()\n\t{\n\t    var points = this.points.slice();\n\t    return new PIXI.Polygon(points);\n\t};\n\n\t/**\n\t * Checks whether the x and y coordinates passed to this function are contained within this polygon\n\t *\n\t * @method contains\n\t * @param x {Number} The X coordinate of the point to test\n\t * @param y {Number} The Y coordinate of the point to test\n\t * @return {Boolean} Whether the x/y coordinates are within this polygon\n\t */\n\tPIXI.Polygon.prototype.contains = function(x, y)\n\t{\n\t    var inside = false;\n\n\t    // use some raycasting to test hits\n\t    // https://github.com/substack/point-in-polygon/blob/master/index.js\n\t    var length = this.points.length / 2;\n\n\t    for(var i = 0, j = length - 1; i < length; j = i++)\n\t    {\n\t        var xi = this.points[i * 2], yi = this.points[i * 2 + 1],\n\t            xj = this.points[j * 2], yj = this.points[j * 2 + 1],\n\t            intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n\n\t        if(intersect) inside = !inside;\n\t    }\n\n\t    return inside;\n\t};\n\n\t// constructor\n\tPIXI.Polygon.prototype.constructor = PIXI.Polygon;\n\r\n\t/**\n\t * @author Chad Engler <chad@pantherdev.com>\n\t */\n\n\t/**\n\t * The Circle object can be used to specify a hit area for displayObjects\n\t *\n\t * @class Circle\n\t * @constructor\n\t * @param x {Number} The X coordinate of the center of this circle\n\t * @param y {Number} The Y coordinate of the center of this circle\n\t * @param radius {Number} The radius of the circle\n\t */\n\tPIXI.Circle = function(x, y, radius)\n\t{\n\t    /**\n\t     * @property x\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.x = x || 0;\n\n\t    /**\n\t     * @property y\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.y = y || 0;\n\n\t    /**\n\t     * @property radius\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.radius = radius || 0;\n\n\t    /**\n\t     * The type of the object, should be one of the Graphics type consts, PIXI.Graphics.CIRC in this case\n\t     * @property type\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t};\n\n\t/**\n\t * Creates a clone of this Circle instance\n\t *\n\t * @method clone\n\t * @return {Circle} a copy of the Circle\n\t */\n\tPIXI.Circle.prototype.clone = function()\n\t{\n\t    return new PIXI.Circle(this.x, this.y, this.radius);\n\t};\n\n\t/**\n\t * Checks whether the x and y coordinates given are contained within this circle\n\t *\n\t * @method contains\n\t * @param x {Number} The X coordinate of the point to test\n\t * @param y {Number} The Y coordinate of the point to test\n\t * @return {Boolean} Whether the x/y coordinates are within this Circle\n\t */\n\tPIXI.Circle.prototype.contains = function(x, y)\n\t{\n\t    if(this.radius <= 0)\n\t        return false;\n\n\t    var dx = (this.x - x),\n\t        dy = (this.y - y),\n\t        r2 = this.radius * this.radius;\n\n\t    dx *= dx;\n\t    dy *= dy;\n\n\t    return (dx + dy <= r2);\n\t};\n\n\t/**\n\t* Returns the framing rectangle of the circle as a PIXI.Rectangle object\n\t*\n\t* @method getBounds\n\t* @return {Rectangle} the framing rectangle\n\t*/\n\tPIXI.Circle.prototype.getBounds = function()\n\t{\n\t    return new PIXI.Rectangle(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);\n\t};\n\n\t// constructor\n\tPIXI.Circle.prototype.constructor = PIXI.Circle;\n\r\n\t/**\n\t * @author Chad Engler <chad@pantherdev.com>\n\t */\n\n\t/**\n\t * The Ellipse object can be used to specify a hit area for displayObjects\n\t *\n\t * @class Ellipse\n\t * @constructor\n\t * @param x {Number} The X coordinate of the center of the ellipse\n\t * @param y {Number} The Y coordinate of the center of the ellipse\n\t * @param width {Number} The half width of this ellipse\n\t * @param height {Number} The half height of this ellipse\n\t */\n\tPIXI.Ellipse = function(x, y, width, height)\n\t{\n\t    /**\n\t     * @property x\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.x = x || 0;\n\n\t    /**\n\t     * @property y\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.y = y || 0;\n\n\t    /**\n\t     * @property width\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.width = width || 0;\n\n\t    /**\n\t     * @property height\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.height = height || 0;\n\n\n\t    /**\n\t     * The type of the object, should be one of the Graphics type consts, PIXI.Graphics.ELIP in this case\n\t     * @property type\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t};\n\n\t/**\n\t * Creates a clone of this Ellipse instance\n\t *\n\t * @method clone\n\t * @return {Ellipse} a copy of the ellipse\n\t */\n\tPIXI.Ellipse.prototype.clone = function()\n\t{\n\t    return new PIXI.Ellipse(this.x, this.y, this.width, this.height);\n\t};\n\n\t/**\n\t * Checks whether the x and y coordinates given are contained within this ellipse\n\t *\n\t * @method contains\n\t * @param x {Number} The X coordinate of the point to test\n\t * @param y {Number} The Y coordinate of the point to test\n\t * @return {Boolean} Whether the x/y coords are within this ellipse\n\t */\n\tPIXI.Ellipse.prototype.contains = function(x, y)\n\t{\n\t    if(this.width <= 0 || this.height <= 0)\n\t        return false;\n\n\t    //normalize the coords to an ellipse with center 0,0\n\t    var normx = ((x - this.x) / this.width),\n\t        normy = ((y - this.y) / this.height);\n\n\t    normx *= normx;\n\t    normy *= normy;\n\n\t    return (normx + normy <= 1);\n\t};\n\n\t/**\n\t* Returns the framing rectangle of the ellipse as a PIXI.Rectangle object\n\t*\n\t* @method getBounds\n\t* @return {Rectangle} the framing rectangle\n\t*/\n\tPIXI.Ellipse.prototype.getBounds = function()\n\t{\n\t    return new PIXI.Rectangle(this.x - this.width, this.y - this.height, this.width, this.height);\n\t};\n\n\t// constructor\n\tPIXI.Ellipse.prototype.constructor = PIXI.Ellipse;\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/\n\t */\n\n\t/**\n\t * The Rounded Rectangle object is an area defined by its position and has nice rounded corners, as indicated by its top-left corner point (x, y) and by its width and its height.\n\t *\n\t * @class RoundedRectangle\n\t * @constructor\n\t * @param x {Number} The X coordinate of the upper-left corner of the rounded rectangle\n\t * @param y {Number} The Y coordinate of the upper-left corner of the rounded rectangle\n\t * @param width {Number} The overall width of this rounded rectangle\n\t * @param height {Number} The overall height of this rounded rectangle\n\t * @param radius {Number} Controls the radius of the rounded corners \n\t */\n\tPIXI.RoundedRectangle = function(x, y, width, height, radius)\n\t{\n\t    /**\n\t     * @property x\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.x = x || 0;\n\n\t    /**\n\t     * @property y\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.y = y || 0;\n\n\t    /**\n\t     * @property width\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.width = width || 0;\n\n\t    /**\n\t     * @property height\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.height = height || 0;\n\n\t    /**\n\t     * @property radius\n\t     * @type Number\n\t     * @default 20\n\t     */\n\t    this.radius = radius || 20;\n\n\t    /**\n\t     * The type of the object, should be one of the Graphics type consts, PIXI.Graphics.RRECT in this case\n\t     * @property type\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t};\n\n\t/**\n\t * Creates a clone of this Rounded Rectangle\n\t *\n\t * @method clone\n\t * @return {RoundedRectangle} a copy of the rounded rectangle\n\t */\n\tPIXI.RoundedRectangle.prototype.clone = function()\n\t{\n\t    return new PIXI.RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n\t};\n\n\t/**\n\t * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n\t *\n\t * @method contains\n\t * @param x {Number} The X coordinate of the point to test\n\t * @param y {Number} The Y coordinate of the point to test\n\t * @return {Boolean} Whether the x/y coordinates are within this Rounded Rectangle\n\t */\n\tPIXI.RoundedRectangle.prototype.contains = function(x, y)\n\t{\n\t    if(this.width <= 0 || this.height <= 0)\n\t        return false;\n\n\t    var x1 = this.x;\n\t    if(x >= x1 && x <= x1 + this.width)\n\t    {\n\t        var y1 = this.y;\n\n\t        if(y >= y1 && y <= y1 + this.height)\n\t        {\n\t            return true;\n\t        }\n\t    }\n\n\t    return false;\n\t};\n\n\t// constructor\n\tPIXI.RoundedRectangle.prototype.constructor = PIXI.RoundedRectangle;\n\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The Matrix class is now an object, which makes it a lot faster, \n\t * here is a representation of it : \n\t * | a | b | tx|\n\t * | c | d | ty|\n\t * | 0 | 0 | 1 |\n\t *\n\t * @class Matrix\n\t * @constructor\n\t */\n\tPIXI.Matrix = function()\n\t{\n\t    /**\n\t     * @property a\n\t     * @type Number\n\t     * @default 1\n\t     */\n\t    this.a = 1;\n\n\t    /**\n\t     * @property b\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.b = 0;\n\n\t    /**\n\t     * @property c\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.c = 0;\n\n\t    /**\n\t     * @property d\n\t     * @type Number\n\t     * @default 1\n\t     */\n\t    this.d = 1;\n\n\t    /**\n\t     * @property tx\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.tx = 0;\n\n\t    /**\n\t     * @property ty\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    this.ty = 0;\n\t};\n\n\t/**\n\t * Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\n\t *\n\t * a = array[0]\n\t * b = array[1]\n\t * c = array[3]\n\t * d = array[4]\n\t * tx = array[2]\n\t * ty = array[5]\n\t *\n\t * @method fromArray\n\t * @param array {Array} The array that the matrix will be populated from.\n\t */\n\tPIXI.Matrix.prototype.fromArray = function(array)\n\t{\n\t    this.a = array[0];\n\t    this.b = array[1];\n\t    this.c = array[3];\n\t    this.d = array[4];\n\t    this.tx = array[2];\n\t    this.ty = array[5];\n\t};\n\n\t/**\n\t * Creates an array from the current Matrix object.\n\t *\n\t * @method toArray\n\t * @param transpose {Boolean} Whether we need to transpose the matrix or not\n\t * @return {Array} the newly created array which contains the matrix\n\t */\n\tPIXI.Matrix.prototype.toArray = function(transpose)\n\t{\n\t    if(!this.array) this.array = new PIXI.Float32Array(9);\n\t    var array = this.array;\n\n\t    if(transpose)\n\t    {\n\t        array[0] = this.a;\n\t        array[1] = this.b;\n\t        array[2] = 0;\n\t        array[3] = this.c;\n\t        array[4] = this.d;\n\t        array[5] = 0;\n\t        array[6] = this.tx;\n\t        array[7] = this.ty;\n\t        array[8] = 1;\n\t    }\n\t    else\n\t    {\n\t        array[0] = this.a;\n\t        array[1] = this.c;\n\t        array[2] = this.tx;\n\t        array[3] = this.b;\n\t        array[4] = this.d;\n\t        array[5] = this.ty;\n\t        array[6] = 0;\n\t        array[7] = 0;\n\t        array[8] = 1;\n\t    }\n\n\t    return array;\n\t};\n\n\t/**\n\t * Get a new position with the current transformation applied.\n\t * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n\t *\n\t * @method apply\n\t * @param pos {Point} The origin\n\t * @param [newPos] {Point} The point that the new position is assigned to (allowed to be same as input)\n\t * @return {Point} The new point, transformed through this matrix\n\t */\n\tPIXI.Matrix.prototype.apply = function(pos, newPos)\n\t{\n\t    newPos = newPos || new PIXI.Point();\n\n\t    newPos.x = this.a * pos.x + this.c * pos.y + this.tx;\n\t    newPos.y = this.b * pos.x + this.d * pos.y + this.ty;\n\n\t    return newPos;\n\t};\n\n\t/**\n\t * Get a new position with the inverse of the current transformation applied.\n\t * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n\t *\n\t * @method applyInverse\n\t * @param pos {Point} The origin\n\t * @param [newPos] {Point} The point that the new position is assigned to (allowed to be same as input)\n\t * @return {Point} The new point, inverse-transformed through this matrix\n\t */\n\tPIXI.Matrix.prototype.applyInverse = function(pos, newPos)\n\t{\n\t    newPos = newPos || new PIXI.Point();\n\n\t    var id = 1 / (this.a * this.d + this.c * -this.b);\n\t     \n\t    newPos.x = this.d * id * pos.x + -this.c * id * pos.y + (this.ty * this.c - this.tx * this.d) * id;\n\t    newPos.y = this.a * id * pos.y + -this.b * id * pos.x + (-this.ty * this.a + this.tx * this.b) * id;\n\n\t    return newPos;\n\t};\n\n\t/**\n\t * Translates the matrix on the x and y.\n\t * \n\t * @method translate\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Matrix} This matrix. Good for chaining method calls.\n\t **/\n\tPIXI.Matrix.prototype.translate = function(x, y)\n\t{\n\t    this.tx += x;\n\t    this.ty += y;\n\t    \n\t    return this;\n\t};\n\n\t/**\n\t * Applies a scale transformation to the matrix.\n\t * \n\t * @method scale\n\t * @param {Number} x The amount to scale horizontally\n\t * @param {Number} y The amount to scale vertically\n\t * @return {Matrix} This matrix. Good for chaining method calls.\n\t **/\n\tPIXI.Matrix.prototype.scale = function(x, y)\n\t{\n\t    this.a *= x;\n\t    this.d *= y;\n\t    this.c *= x;\n\t    this.b *= y;\n\t    this.tx *= x;\n\t    this.ty *= y;\n\n\t    return this;\n\t};\n\n\n\t/**\n\t * Applies a rotation transformation to the matrix.\n\t * @method rotate\n\t * @param {Number} angle The angle in radians.\n\t * @return {Matrix} This matrix. Good for chaining method calls.\n\t **/\n\tPIXI.Matrix.prototype.rotate = function(angle)\n\t{\n\t    var cos = Math.cos( angle );\n\t    var sin = Math.sin( angle );\n\n\t    var a1 = this.a;\n\t    var c1 = this.c;\n\t    var tx1 = this.tx;\n\n\t    this.a = a1 * cos-this.b * sin;\n\t    this.b = a1 * sin+this.b * cos;\n\t    this.c = c1 * cos-this.d * sin;\n\t    this.d = c1 * sin+this.d * cos;\n\t    this.tx = tx1 * cos - this.ty * sin;\n\t    this.ty = tx1 * sin + this.ty * cos;\n\t \n\t    return this;\n\t};\n\n\t/**\n\t * Appends the given Matrix to this Matrix.\n\t * \n\t * @method append\n\t * @param {Matrix} matrix\n\t * @return {Matrix} This matrix. Good for chaining method calls.\n\t */\n\tPIXI.Matrix.prototype.append = function(matrix)\n\t{\n\t    var a1 = this.a;\n\t    var b1 = this.b;\n\t    var c1 = this.c;\n\t    var d1 = this.d;\n\n\t    this.a  = matrix.a * a1 + matrix.b * c1;\n\t    this.b  = matrix.a * b1 + matrix.b * d1;\n\t    this.c  = matrix.c * a1 + matrix.d * c1;\n\t    this.d  = matrix.c * b1 + matrix.d * d1;\n\n\t    this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;\n\t    this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;\n\t    \n\t    return this;\n\t};\n\n\t/**\n\t * Resets this Matix to an identity (default) matrix.\n\t * \n\t * @method identity\n\t * @return {Matrix} This matrix. Good for chaining method calls.\n\t */\n\tPIXI.Matrix.prototype.identity = function()\n\t{\n\t    this.a = 1;\n\t    this.b = 0;\n\t    this.c = 0;\n\t    this.d = 1;\n\t    this.tx = 0;\n\t    this.ty = 0;\n\n\t    return this;\n\t};\n\n\tPIXI.identityMatrix = new PIXI.Matrix();\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The base class for all objects that are rendered on the screen.\n\t * This is an abstract class and should not be used on its own rather it should be extended.\n\t *\n\t * @class DisplayObject\n\t * @constructor\n\t */\n\tPIXI.DisplayObject = function()\n\t{\n\t    /**\n\t     * The coordinate of the object relative to the local coordinates of the parent.\n\t     *\n\t     * @property position\n\t     * @type Point\n\t     */\n\t    this.position = new PIXI.Point();\n\n\t    /**\n\t     * The scale factor of the object.\n\t     *\n\t     * @property scale\n\t     * @type Point\n\t     */\n\t    this.scale = new PIXI.Point(1,1);//{x:1, y:1};\n\n\t    /**\n\t     * The pivot point of the displayObject that it rotates around\n\t     *\n\t     * @property pivot\n\t     * @type Point\n\t     */\n\t    this.pivot = new PIXI.Point(0,0);\n\n\t    /**\n\t     * The rotation of the object in radians.\n\t     *\n\t     * @property rotation\n\t     * @type Number\n\t     */\n\t    this.rotation = 0;\n\n\t    /**\n\t     * The opacity of the object.\n\t     *\n\t     * @property alpha\n\t     * @type Number\n\t     */\n\t    this.alpha = 1;\n\n\t    /**\n\t     * The visibility of the object.\n\t     *\n\t     * @property visible\n\t     * @type Boolean\n\t     */\n\t    this.visible = true;\n\n\t    /**\n\t     * This is the defined area that will pick up mouse / touch events. It is null by default.\n\t     * Setting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)\n\t     *\n\t     * @property hitArea\n\t     * @type Rectangle|Circle|Ellipse|Polygon\n\t     */\n\t    this.hitArea = null;\n\n\t    /**\n\t     * This is used to indicate if the displayObject should display a mouse hand cursor on rollover\n\t     *\n\t     * @property buttonMode\n\t     * @type Boolean\n\t     */\n\t    this.buttonMode = false;\n\n\t    /**\n\t     * Can this object be rendered\n\t     *\n\t     * @property renderable\n\t     * @type Boolean\n\t     */\n\t    this.renderable = false;\n\n\t    /**\n\t     * [read-only] The display object container that contains this display object.\n\t     *\n\t     * @property parent\n\t     * @type DisplayObjectContainer\n\t     * @readOnly\n\t     */\n\t    this.parent = null;\n\n\t    /**\n\t     * [read-only] The stage the display object is connected to, or undefined if it is not connected to the stage.\n\t     *\n\t     * @property stage\n\t     * @type Stage\n\t     * @readOnly\n\t     */\n\t    this.stage = null;\n\n\t    /**\n\t     * [read-only] The multiplied alpha of the displayObject\n\t     *\n\t     * @property worldAlpha\n\t     * @type Number\n\t     * @readOnly\n\t     */\n\t    this.worldAlpha = 1;\n\n\t    /**\n\t     * [read-only] Whether or not the object is interactive, do not toggle directly! use the `interactive` property\n\t     *\n\t     * @property _interactive\n\t     * @type Boolean\n\t     * @readOnly\n\t     * @private\n\t     */\n\t    this._interactive = false;\n\n\t    /**\n\t     * This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\n\t     *\n\t     * @property defaultCursor\n\t     * @type String\n\t     *\n\t    */\n\t    this.defaultCursor = 'pointer';\n\n\t    /**\n\t     * [read-only] Current transform of the object based on world (parent) factors\n\t     *\n\t     * @property worldTransform\n\t     * @type Matrix\n\t     * @readOnly\n\t     * @private\n\t     */\n\t    this.worldTransform = new PIXI.Matrix();\n\n\t    /**\n\t     * cached sin rotation and cos rotation\n\t     *\n\t     * @property _sr\n\t     * @type Number\n\t     * @private\n\t     */\n\t    this._sr = 0;\n\n\t    /**\n\t     * cached sin rotation and cos rotation\n\t     *\n\t     * @property _cr\n\t     * @type Number\n\t     * @private\n\t     */\n\t    this._cr = 1;\n\n\t    /**\n\t     * The area the filter is applied to like the hitArea this is used as more of an optimisation\n\t     * rather than figuring out the dimensions of the displayObject each frame you can set this rectangle\n\t     *\n\t     * @property filterArea\n\t     * @type Rectangle\n\t     */\n\t    this.filterArea = null;//new PIXI.Rectangle(0,0,1,1);\n\n\t    /**\n\t     * The original, cached bounds of the object\n\t     *\n\t     * @property _bounds\n\t     * @type Rectangle\n\t     * @private\n\t     */\n\t    this._bounds = new PIXI.Rectangle(0, 0, 1, 1);\n\n\t    /**\n\t     * The most up-to-date bounds of the object\n\t     *\n\t     * @property _currentBounds\n\t     * @type Rectangle\n\t     * @private\n\t     */\n\t    this._currentBounds = null;\n\n\t    /**\n\t     * The original, cached mask of the object\n\t     *\n\t     * @property _currentBounds\n\t     * @type Rectangle\n\t     * @private\n\t     */\n\t    this._mask = null;\n\n\t    /**\n\t     * Cached internal flag.\n\t     *\n\t     * @property _cacheAsBitmap\n\t     * @type Boolean\n\t     * @private\n\t     */\n\t    this._cacheAsBitmap = false;\n\n\t    /**\n\t     * Cached internal flag.\n\t     *\n\t     * @property _cacheIsDirty\n\t     * @type Boolean\n\t     * @private\n\t     */\n\t    this._cacheIsDirty = false;\n\n\n\t    /*\n\t     * MOUSE Callbacks\n\t     */\n\t    \n\t    /**\n\t     * A callback that is used when the users mouse rolls over the displayObject\n\t     * @method mouseover\n\t     * @param interactionData {InteractionData}\n\t     */\n\n\t    /**\n\t     * A callback that is used when the users mouse leaves the displayObject\n\t     * @method mouseout\n\t     * @param interactionData {InteractionData}\n\t     */\n\n\t    //Left button\n\t    /**\n\t     * A callback that is used when the users clicks on the displayObject with their mouse's left button\n\t     * @method click\n\t     * @param interactionData {InteractionData}\n\t     */\n\n\t    /**\n\t     * A callback that is used when the user clicks the mouse's left button down over the sprite\n\t     * @method mousedown\n\t     * @param interactionData {InteractionData}\n\t     */\n\n\t    /**\n\t     * A callback that is used when the user releases the mouse's left button that was over the displayObject\n\t     * for this callback to be fired, the mouse's left button must have been pressed down over the displayObject\n\t     * @method mouseup\n\t     * @param interactionData {InteractionData}\n\t     */\n\n\t    /**\n\t     * A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\n\t     * for this callback to be fired, the mouse's left button must have been pressed down over the displayObject\n\t     * @method mouseupoutside\n\t     * @param interactionData {InteractionData}\n\t     */\n\n\t    //Right button\n\t    /**\n\t     * A callback that is used when the users clicks on the displayObject with their mouse's right button\n\t     * @method rightclick\n\t     * @param interactionData {InteractionData}\n\t     */\n\n\t    /**\n\t     * A callback that is used when the user clicks the mouse's right button down over the sprite\n\t     * @method rightdown\n\t     * @param interactionData {InteractionData}\n\t     */\n\n\t    /**\n\t     * A callback that is used when the user releases the mouse's right button that was over the displayObject\n\t     * for this callback to be fired the mouse's right button must have been pressed down over the displayObject\n\t     * @method rightup\n\t     * @param interactionData {InteractionData}\n\t     */\n\n\t    /**\n\t     * A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\n\t     * for this callback to be fired, the mouse's right button must have been pressed down over the displayObject\n\t     * @method rightupoutside\n\t     * @param interactionData {InteractionData}\n\t     */\n\n\t    /*\n\t     * TOUCH Callbacks\n\t     */\n\n\t    /**\n\t     * A callback that is used when the users taps on the sprite with their finger\n\t     * basically a touch version of click\n\t     * @method tap\n\t     * @param interactionData {InteractionData}\n\t     */\n\n\t    /**\n\t     * A callback that is used when the user touches over the displayObject\n\t     * @method touchstart\n\t     * @param interactionData {InteractionData}\n\t     */\n\n\t    /**\n\t     * A callback that is used when the user releases a touch over the displayObject\n\t     * @method touchend\n\t     * @param interactionData {InteractionData}\n\t     */\n\n\t    /**\n\t     * A callback that is used when the user releases the touch that was over the displayObject\n\t     * for this callback to be fired, The touch must have started over the sprite\n\t     * @method touchendoutside\n\t     * @param interactionData {InteractionData}\n\t     */\n\t};\n\n\t// constructor\n\tPIXI.DisplayObject.prototype.constructor = PIXI.DisplayObject;\n\n\t/**\n\t * Indicates if the sprite will have touch and mouse interactivity. It is false by default\n\t *\n\t * @property interactive\n\t * @type Boolean\n\t * @default false\n\t */\n\tObject.defineProperty(PIXI.DisplayObject.prototype, 'interactive', {\n\t    get: function() {\n\t        return this._interactive;\n\t    },\n\t    set: function(value) {\n\t        this._interactive = value;\n\n\t        // TODO more to be done here..\n\t        // need to sort out a re-crawl!\n\t        if(this.stage)this.stage.dirty = true;\n\t    }\n\t});\n\n\t/**\n\t * [read-only] Indicates if the sprite is globally visible.\n\t *\n\t * @property worldVisible\n\t * @type Boolean\n\t */\n\tObject.defineProperty(PIXI.DisplayObject.prototype, 'worldVisible', {\n\t    get: function() {\n\t        var item = this;\n\n\t        do\n\t        {\n\t            if(!item.visible)return false;\n\t            item = item.parent;\n\t        }\n\t        while(item);\n\n\t        return true;\n\t    }\n\t});\n\n\t/**\n\t * Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\n\t * In PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\n\t * To remove a mask, set this property to null.\n\t *\n\t * @property mask\n\t * @type Graphics\n\t */\n\tObject.defineProperty(PIXI.DisplayObject.prototype, 'mask', {\n\t    get: function() {\n\t        return this._mask;\n\t    },\n\t    set: function(value) {\n\n\t        if(this._mask)this._mask.isMask = false;\n\t        this._mask = value;\n\t        if(this._mask)this._mask.isMask = true;\n\t    }\n\t});\n\n\t/**\n\t * Sets the filters for the displayObject.\n\t * * IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\n\t * To remove filters simply set this property to 'null'\n\t * @property filters\n\t * @type Array(Filter)\n\t */\n\tObject.defineProperty(PIXI.DisplayObject.prototype, 'filters', {\n\n\t    get: function() {\n\t        return this._filters;\n\t    },\n\n\t    set: function(value) {\n\n\t        if(value)\n\t        {\n\t            // now put all the passes in one place..\n\t            var passes = [];\n\t            for (var i = 0; i < value.length; i++)\n\t            {\n\t                var filterPasses = value[i].passes;\n\t                for (var j = 0; j < filterPasses.length; j++)\n\t                {\n\t                    passes.push(filterPasses[j]);\n\t                }\n\t            }\n\n\t            // TODO change this as it is legacy\n\t            this._filterBlock = {target:this, filterPasses:passes};\n\t        }\n\n\t        this._filters = value;\n\t    }\n\t});\n\n\t/**\n\t * Set if this display object is cached as a bitmap.\n\t * This basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\n\t * To remove simply set this property to 'null'\n\t * @property cacheAsBitmap\n\t * @type Boolean\n\t */\n\tObject.defineProperty(PIXI.DisplayObject.prototype, 'cacheAsBitmap', {\n\n\t    get: function() {\n\t        return  this._cacheAsBitmap;\n\t    },\n\n\t    set: function(value) {\n\n\t        if(this._cacheAsBitmap === value)return;\n\n\t        if(value)\n\t        {\n\t            this._generateCachedSprite();\n\t        }\n\t        else\n\t        {\n\t            this._destroyCachedSprite();\n\t        }\n\n\t        this._cacheAsBitmap = value;\n\t    }\n\t});\n\n\t/*\n\t * Updates the object transform for rendering\n\t *\n\t * @method updateTransform\n\t * @private\n\t */\n\tPIXI.DisplayObject.prototype.updateTransform = function()\n\t{\n\t    // create some matrix refs for easy access\n\t    var pt = this.parent.worldTransform;\n\t    var wt = this.worldTransform;\n\n\t    // temporary matrix variables\n\t    var a, b, c, d, tx, ty;\n\n\t    // so if rotation is between 0 then we can simplify the multiplication process..\n\t    if(this.rotation % PIXI.PI_2)\n\t    {\n\t        // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n\t        if(this.rotation !== this.rotationCache)\n\t        {\n\t            this.rotationCache = this.rotation;\n\t            this._sr = Math.sin(this.rotation);\n\t            this._cr = Math.cos(this.rotation);\n\t        }\n\n\t        // get the matrix values of the displayobject based on its transform properties..\n\t        a  =  this._cr * this.scale.x;\n\t        b  =  this._sr * this.scale.x;\n\t        c  = -this._sr * this.scale.y;\n\t        d  =  this._cr * this.scale.y;\n\t        tx =  this.position.x;\n\t        ty =  this.position.y;\n\t        \n\t        // check for pivot.. not often used so geared towards that fact!\n\t        if(this.pivot.x || this.pivot.y)\n\t        {\n\t            tx -= this.pivot.x * a + this.pivot.y * c;\n\t            ty -= this.pivot.x * b + this.pivot.y * d;\n\t        }\n\n\t        // concat the parent matrix with the objects transform.\n\t        wt.a  = a  * pt.a + b  * pt.c;\n\t        wt.b  = a  * pt.b + b  * pt.d;\n\t        wt.c  = c  * pt.a + d  * pt.c;\n\t        wt.d  = c  * pt.b + d  * pt.d;\n\t        wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n\t        wt.ty = tx * pt.b + ty * pt.d + pt.ty;\n\n\t        \n\t    }\n\t    else\n\t    {\n\t        // lets do the fast version as we know there is no rotation..\n\t        a  = this.scale.x;\n\t        d  = this.scale.y;\n\n\t        tx = this.position.x - this.pivot.x * a;\n\t        ty = this.position.y - this.pivot.y * d;\n\n\t        wt.a  = a  * pt.a;\n\t        wt.b  = a  * pt.b;\n\t        wt.c  = d  * pt.c;\n\t        wt.d  = d  * pt.d;\n\t        wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n\t        wt.ty = tx * pt.b + ty * pt.d + pt.ty;\n\t    }\n\n\t    // multiply the alphas..\n\t    this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\t};\n\n\t// performance increase to avoid using call.. (10x faster)\n\tPIXI.DisplayObject.prototype.displayObjectUpdateTransform = PIXI.DisplayObject.prototype.updateTransform;\n\n\t/**\n\t * Retrieves the bounds of the displayObject as a rectangle object\n\t *\n\t * @method getBounds\n\t * @param matrix {Matrix}\n\t * @return {Rectangle} the rectangular bounding area\n\t */\n\tPIXI.DisplayObject.prototype.getBounds = function(matrix)\n\t{\n\t    matrix = matrix;//just to get passed js hinting (and preserve inheritance)\n\t    return PIXI.EmptyRectangle;\n\t};\n\n\t/**\n\t * Retrieves the local bounds of the displayObject as a rectangle object\n\t *\n\t * @method getLocalBounds\n\t * @return {Rectangle} the rectangular bounding area\n\t */\n\tPIXI.DisplayObject.prototype.getLocalBounds = function()\n\t{\n\t    return this.getBounds(PIXI.identityMatrix);///PIXI.EmptyRectangle();\n\t};\n\n\t/**\n\t * Sets the object's stage reference, the stage this object is connected to\n\t *\n\t * @method setStageReference\n\t * @param stage {Stage} the stage that the object will have as its current stage reference\n\t */\n\tPIXI.DisplayObject.prototype.setStageReference = function(stage)\n\t{\n\t    this.stage = stage;\n\t    if(this._interactive)this.stage.dirty = true;\n\t};\n\n\t/**\n\t * Useful function that returns a texture of the displayObject object that can then be used to create sprites\n\t * This can be quite useful if your displayObject is static / complicated and needs to be reused multiple times.\n\t *\n\t * @method generateTexture\n\t * @param resolution {Number} The resolution of the texture being generated\n\t * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n\t * @param renderer {CanvasRenderer|WebGLRenderer} The renderer used to generate the texture.\n\t * @return {Texture} a texture of the graphics object\n\t */\n\tPIXI.DisplayObject.prototype.generateTexture = function(resolution, scaleMode, renderer)\n\t{\n\t    var bounds = this.getLocalBounds();\n\n\t    var renderTexture = new PIXI.RenderTexture(bounds.width | 0, bounds.height | 0, renderer, scaleMode, resolution);\n\t    \n\t    PIXI.DisplayObject._tempMatrix.tx = -bounds.x;\n\t    PIXI.DisplayObject._tempMatrix.ty = -bounds.y;\n\t    \n\t    renderTexture.render(this, PIXI.DisplayObject._tempMatrix);\n\n\t    return renderTexture;\n\t};\n\n\t/**\n\t * Generates and updates the cached sprite for this object.\n\t *\n\t * @method updateCache\n\t */\n\tPIXI.DisplayObject.prototype.updateCache = function()\n\t{\n\t    this._generateCachedSprite();\n\t};\n\n\t/**\n\t * Calculates the global position of the display object\n\t *\n\t * @method toGlobal\n\t * @param position {Point} The world origin to calculate from\n\t * @return {Point} A point object representing the position of this object\n\t */\n\tPIXI.DisplayObject.prototype.toGlobal = function(position)\n\t{\n\t    // don't need to u[date the lot\n\t    this.displayObjectUpdateTransform();\n\t    return this.worldTransform.apply(position);\n\t};\n\n\t/**\n\t * Calculates the local position of the display object relative to another point\n\t *\n\t * @method toLocal\n\t * @param position {Point} The world origin to calculate from\n\t * @param [from] {DisplayObject} The DisplayObject to calculate the global position from\n\t * @return {Point} A point object representing the position of this object\n\t */\n\tPIXI.DisplayObject.prototype.toLocal = function(position, from)\n\t{\n\t     // \n\t    if (from)\n\t    {\n\t        position = from.toGlobal(position);\n\t    }\n\n\t    // don't need to u[date the lot\n\t    this.displayObjectUpdateTransform();\n\t    return this.worldTransform.applyInverse(position);\n\t};\n\n\t/**\n\t * Internal method.\n\t *\n\t * @method _renderCachedSprite\n\t * @param renderSession {Object} The render session\n\t * @private\n\t */\n\tPIXI.DisplayObject.prototype._renderCachedSprite = function(renderSession)\n\t{\n\t    this._cachedSprite.worldAlpha = this.worldAlpha;\n\n\t    if(renderSession.gl)\n\t    {\n\t        PIXI.Sprite.prototype._renderWebGL.call(this._cachedSprite, renderSession);\n\t    }\n\t    else\n\t    {\n\t        PIXI.Sprite.prototype._renderCanvas.call(this._cachedSprite, renderSession);\n\t    }\n\t};\n\n\t/**\n\t * Internal method.\n\t *\n\t * @method _generateCachedSprite\n\t * @private\n\t */\n\tPIXI.DisplayObject.prototype._generateCachedSprite = function()\n\t{\n\t    this._cacheAsBitmap = false;\n\t    var bounds = this.getLocalBounds();\n\n\t    if(!this._cachedSprite)\n\t    {\n\t        var renderTexture = new PIXI.RenderTexture(bounds.width | 0, bounds.height | 0);//, renderSession.renderer);\n\n\t        this._cachedSprite = new PIXI.Sprite(renderTexture);\n\t        this._cachedSprite.worldTransform = this.worldTransform;\n\t    }\n\t    else\n\t    {\n\t        this._cachedSprite.texture.resize(bounds.width | 0, bounds.height | 0);\n\t    }\n\n\t    //REMOVE filter!\n\t    var tempFilters = this._filters;\n\t    this._filters = null;\n\n\t    this._cachedSprite.filters = tempFilters;\n\n\t    PIXI.DisplayObject._tempMatrix.tx = -bounds.x;\n\t    PIXI.DisplayObject._tempMatrix.ty = -bounds.y;\n\t    \n\t    this._cachedSprite.texture.render(this, PIXI.DisplayObject._tempMatrix, true);\n\n\t    this._cachedSprite.anchor.x = -( bounds.x / bounds.width );\n\t    this._cachedSprite.anchor.y = -( bounds.y / bounds.height );\n\n\t    this._filters = tempFilters;\n\n\t    this._cacheAsBitmap = true;\n\t};\n\n\t/**\n\t* Destroys the cached sprite.\n\t*\n\t* @method _destroyCachedSprite\n\t* @private\n\t*/\n\tPIXI.DisplayObject.prototype._destroyCachedSprite = function()\n\t{\n\t    if(!this._cachedSprite)return;\n\n\t    this._cachedSprite.texture.destroy(true);\n\n\t    // TODO could be object pooled!\n\t    this._cachedSprite = null;\n\t};\n\n\t/**\n\t* Renders the object using the WebGL renderer\n\t*\n\t* @method _renderWebGL\n\t* @param renderSession {RenderSession}\n\t* @private\n\t*/\n\tPIXI.DisplayObject.prototype._renderWebGL = function(renderSession)\n\t{\n\t    // OVERWRITE;\n\t    // this line is just here to pass jshinting :)\n\t    renderSession = renderSession;\n\t};\n\n\t/**\n\t* Renders the object using the Canvas renderer\n\t*\n\t* @method _renderCanvas\n\t* @param renderSession {RenderSession}\n\t* @private\n\t*/\n\tPIXI.DisplayObject.prototype._renderCanvas = function(renderSession)\n\t{\n\t    // OVERWRITE;\n\t    // this line is just here to pass jshinting :)\n\t    renderSession = renderSession;\n\t};\n\n\n\tPIXI.DisplayObject._tempMatrix = new PIXI.Matrix();\n\n\t/**\n\t * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n\t *\n\t * @property x\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.DisplayObject.prototype, 'x', {\n\t    get: function() {\n\t        return  this.position.x;\n\t    },\n\t    set: function(value) {\n\t        this.position.x = value;\n\t    }\n\t});\n\n\t/**\n\t * The position of the displayObject on the y axis relative to the local coordinates of the parent.\n\t *\n\t * @property y\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.DisplayObject.prototype, 'y', {\n\t    get: function() {\n\t        return  this.position.y;\n\t    },\n\t    set: function(value) {\n\t        this.position.y = value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * A DisplayObjectContainer represents a collection of display objects.\n\t * It is the base class of all display objects that act as a container for other objects.\n\t *\n\t * @class DisplayObjectContainer\n\t * @extends DisplayObject\n\t * @constructor\n\t */\n\tPIXI.DisplayObjectContainer = function()\n\t{\n\t    PIXI.DisplayObject.call( this );\n\n\t    /**\n\t     * [read-only] The array of children of this container.\n\t     *\n\t     * @property children\n\t     * @type Array(DisplayObject)\n\t     * @readOnly\n\t     */\n\t    this.children = [];\n\n\t    // fast access to update transform..\n\t    \n\t};\n\n\t// constructor\n\tPIXI.DisplayObjectContainer.prototype = Object.create( PIXI.DisplayObject.prototype );\n\tPIXI.DisplayObjectContainer.prototype.constructor = PIXI.DisplayObjectContainer;\n\n\n\t/**\n\t * The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set\n\t *\n\t * @property width\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.DisplayObjectContainer.prototype, 'width', {\n\t    get: function() {\n\t        return this.scale.x * this.getLocalBounds().width;\n\t    },\n\t    set: function(value) {\n\t        \n\t        var width = this.getLocalBounds().width;\n\n\t        if(width !== 0)\n\t        {\n\t            this.scale.x = value / width;\n\t        }\n\t        else\n\t        {\n\t            this.scale.x = 1;\n\t        }\n\n\t        \n\t        this._width = value;\n\t    }\n\t});\n\n\t/**\n\t * The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set\n\t *\n\t * @property height\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.DisplayObjectContainer.prototype, 'height', {\n\t    get: function() {\n\t        return  this.scale.y * this.getLocalBounds().height;\n\t    },\n\t    set: function(value) {\n\n\t        var height = this.getLocalBounds().height;\n\n\t        if(height !== 0)\n\t        {\n\t            this.scale.y = value / height ;\n\t        }\n\t        else\n\t        {\n\t            this.scale.y = 1;\n\t        }\n\n\t        this._height = value;\n\t    }\n\t});\n\n\t/**\n\t * Adds a child to the container.\n\t *\n\t * @method addChild\n\t * @param child {DisplayObject} The DisplayObject to add to the container\n\t * @return {DisplayObject} The child that was added.\n\t */\n\tPIXI.DisplayObjectContainer.prototype.addChild = function(child)\n\t{\n\t    return this.addChildAt(child, this.children.length);\n\t};\n\n\t/**\n\t * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown\n\t *\n\t * @method addChildAt\n\t * @param child {DisplayObject} The child to add\n\t * @param index {Number} The index to place the child in\n\t * @return {DisplayObject} The child that was added.\n\t */\n\tPIXI.DisplayObjectContainer.prototype.addChildAt = function(child, index)\n\t{\n\t    if(index >= 0 && index <= this.children.length)\n\t    {\n\t        if(child.parent)\n\t        {\n\t            child.parent.removeChild(child);\n\t        }\n\n\t        child.parent = this;\n\n\t        this.children.splice(index, 0, child);\n\n\t        if(this.stage)child.setStageReference(this.stage);\n\n\t        return child;\n\t    }\n\t    else\n\t    {\n\t        throw new Error(child + 'addChildAt: The index '+ index +' supplied is out of bounds ' + this.children.length);\n\t    }\n\t};\n\n\t/**\n\t * Swaps the position of 2 Display Objects within this container.\n\t *\n\t * @method swapChildren\n\t * @param child {DisplayObject}\n\t * @param child2 {DisplayObject}\n\t */\n\tPIXI.DisplayObjectContainer.prototype.swapChildren = function(child, child2)\n\t{\n\t    if(child === child2) {\n\t        return;\n\t    }\n\n\t    var index1 = this.getChildIndex(child);\n\t    var index2 = this.getChildIndex(child2);\n\n\t    if(index1 < 0 || index2 < 0) {\n\t        throw new Error('swapChildren: Both the supplied DisplayObjects must be a child of the caller.');\n\t    }\n\n\t    this.children[index1] = child2;\n\t    this.children[index2] = child;\n\n\t};\n\n\t/**\n\t * Returns the index position of a child DisplayObject instance\n\t *\n\t * @method getChildIndex\n\t * @param child {DisplayObject} The DisplayObject instance to identify\n\t * @return {Number} The index position of the child display object to identify\n\t */\n\tPIXI.DisplayObjectContainer.prototype.getChildIndex = function(child)\n\t{\n\t    var index = this.children.indexOf(child);\n\t    if (index === -1)\n\t    {\n\t        throw new Error('The supplied DisplayObject must be a child of the caller');\n\t    }\n\t    return index;\n\t};\n\n\t/**\n\t * Changes the position of an existing child in the display object container\n\t *\n\t * @method setChildIndex\n\t * @param child {DisplayObject} The child DisplayObject instance for which you want to change the index number\n\t * @param index {Number} The resulting index number for the child display object\n\t */\n\tPIXI.DisplayObjectContainer.prototype.setChildIndex = function(child, index)\n\t{\n\t    if (index < 0 || index >= this.children.length)\n\t    {\n\t        throw new Error('The supplied index is out of bounds');\n\t    }\n\t    var currentIndex = this.getChildIndex(child);\n\t    this.children.splice(currentIndex, 1); //remove from old position\n\t    this.children.splice(index, 0, child); //add at new position\n\t};\n\n\t/**\n\t * Returns the child at the specified index\n\t *\n\t * @method getChildAt\n\t * @param index {Number} The index to get the child from\n\t * @return {DisplayObject} The child at the given index, if any.\n\t */\n\tPIXI.DisplayObjectContainer.prototype.getChildAt = function(index)\n\t{\n\t    if (index < 0 || index >= this.children.length)\n\t    {\n\t        throw new Error('getChildAt: Supplied index '+ index +' does not exist in the child list, or the supplied DisplayObject must be a child of the caller');\n\t    }\n\t    return this.children[index];\n\t    \n\t};\n\n\t/**\n\t * Removes a child from the container.\n\t *\n\t * @method removeChild\n\t * @param child {DisplayObject} The DisplayObject to remove\n\t * @return {DisplayObject} The child that was removed.\n\t */\n\tPIXI.DisplayObjectContainer.prototype.removeChild = function(child)\n\t{\n\t    var index = this.children.indexOf( child );\n\t    if(index === -1)return;\n\t    \n\t    return this.removeChildAt( index );\n\t};\n\n\t/**\n\t * Removes a child from the specified index position.\n\t *\n\t * @method removeChildAt\n\t * @param index {Number} The index to get the child from\n\t * @return {DisplayObject} The child that was removed.\n\t */\n\tPIXI.DisplayObjectContainer.prototype.removeChildAt = function(index)\n\t{\n\t    var child = this.getChildAt( index );\n\t    if(this.stage)\n\t        child.removeStageReference();\n\n\t    child.parent = undefined;\n\t    this.children.splice( index, 1 );\n\t    return child;\n\t};\n\n\t/**\n\t* Removes all children from this container that are within the begin and end indexes.\n\t*\n\t* @method removeChildren\n\t* @param beginIndex {Number} The beginning position. Default value is 0.\n\t* @param endIndex {Number} The ending position. Default value is size of the container.\n\t*/\n\tPIXI.DisplayObjectContainer.prototype.removeChildren = function(beginIndex, endIndex)\n\t{\n\t    var begin = beginIndex || 0;\n\t    var end = typeof endIndex === 'number' ? endIndex : this.children.length;\n\t    var range = end - begin;\n\n\t    if (range > 0 && range <= end)\n\t    {\n\t        var removed = this.children.splice(begin, range);\n\t        for (var i = 0; i < removed.length; i++) {\n\t            var child = removed[i];\n\t            if(this.stage)\n\t                child.removeStageReference();\n\t            child.parent = undefined;\n\t        }\n\t        return removed;\n\t    }\n\t    else if (range === 0 && this.children.length === 0)\n\t    {\n\t        return [];\n\t    }\n\t    else\n\t    {\n\t        throw new Error( 'removeChildren: Range Error, numeric values are outside the acceptable range' );\n\t    }\n\t};\n\n\t/*\n\t * Updates the transform on all children of this container for rendering\n\t *\n\t * @method updateTransform\n\t * @private\n\t */\n\tPIXI.DisplayObjectContainer.prototype.updateTransform = function()\n\t{\n\t    if(!this.visible)return;\n\n\t    this.displayObjectUpdateTransform();\n\n\t    //PIXI.DisplayObject.prototype.updateTransform.call( this );\n\n\t    if(this._cacheAsBitmap)return;\n\n\t    for(var i=0,j=this.children.length; i<j; i++)\n\t    {\n\t        this.children[i].updateTransform();\n\t    }\n\t};\n\n\t// performance increase to avoid using call.. (10x faster)\n\tPIXI.DisplayObjectContainer.prototype.displayObjectContainerUpdateTransform = PIXI.DisplayObjectContainer.prototype.updateTransform;\n\n\t/**\n\t * Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration.\n\t *\n\t * @method getBounds\n\t * @return {Rectangle} The rectangular bounding area\n\t */\n\tPIXI.DisplayObjectContainer.prototype.getBounds = function()\n\t{\n\t    if(this.children.length === 0)return PIXI.EmptyRectangle;\n\n\t    // TODO the bounds have already been calculated this render session so return what we have\n\n\t    var minX = Infinity;\n\t    var minY = Infinity;\n\n\t    var maxX = -Infinity;\n\t    var maxY = -Infinity;\n\n\t    var childBounds;\n\t    var childMaxX;\n\t    var childMaxY;\n\n\t    var childVisible = false;\n\n\t    for(var i=0,j=this.children.length; i<j; i++)\n\t    {\n\t        var child = this.children[i];\n\t        \n\t        if(!child.visible)continue;\n\n\t        childVisible = true;\n\n\t        childBounds = this.children[i].getBounds();\n\t     \n\t        minX = minX < childBounds.x ? minX : childBounds.x;\n\t        minY = minY < childBounds.y ? minY : childBounds.y;\n\n\t        childMaxX = childBounds.width + childBounds.x;\n\t        childMaxY = childBounds.height + childBounds.y;\n\n\t        maxX = maxX > childMaxX ? maxX : childMaxX;\n\t        maxY = maxY > childMaxY ? maxY : childMaxY;\n\t    }\n\n\t    if(!childVisible)\n\t        return PIXI.EmptyRectangle;\n\n\t    var bounds = this._bounds;\n\n\t    bounds.x = minX;\n\t    bounds.y = minY;\n\t    bounds.width = maxX - minX;\n\t    bounds.height = maxY - minY;\n\n\t    // TODO: store a reference so that if this function gets called again in the render cycle we do not have to recalculate\n\t    //this._currentBounds = bounds;\n\t   \n\t    return bounds;\n\t};\n\n\t/**\n\t * Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration.\n\t *\n\t * @method getLocalBounds\n\t * @return {Rectangle} The rectangular bounding area\n\t */\n\tPIXI.DisplayObjectContainer.prototype.getLocalBounds = function()\n\t{\n\t    var matrixCache = this.worldTransform;\n\n\t    this.worldTransform = PIXI.identityMatrix;\n\n\t    for(var i=0,j=this.children.length; i<j; i++)\n\t    {\n\t        this.children[i].updateTransform();\n\t    }\n\n\t    var bounds = this.getBounds();\n\n\t    this.worldTransform = matrixCache;\n\n\t    return bounds;\n\t};\n\n\t/**\n\t * Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to.\n\t *\n\t * @method setStageReference\n\t * @param stage {Stage} the stage that the container will have as its current stage reference\n\t */\n\tPIXI.DisplayObjectContainer.prototype.setStageReference = function(stage)\n\t{\n\t    this.stage = stage;\n\t    if(this._interactive)this.stage.dirty = true;\n\n\t    for(var i=0,j=this.children.length; i<j; i++)\n\t    {\n\t        var child = this.children[i];\n\t        child.setStageReference(stage);\n\t    }\n\t};\n\n\t/**\n\t * Removes the current stage reference from the container and all of its children.\n\t *\n\t * @method removeStageReference\n\t */\n\tPIXI.DisplayObjectContainer.prototype.removeStageReference = function()\n\t{\n\n\t    for(var i=0,j=this.children.length; i<j; i++)\n\t    {\n\t        var child = this.children[i];\n\t        child.removeStageReference();\n\t    }\n\n\t    if(this._interactive)this.stage.dirty = true;\n\t    \n\t    this.stage = null;\n\t};\n\n\t/**\n\t* Renders the object using the WebGL renderer\n\t*\n\t* @method _renderWebGL\n\t* @param renderSession {RenderSession} \n\t* @private\n\t*/\n\tPIXI.DisplayObjectContainer.prototype._renderWebGL = function(renderSession)\n\t{\n\t    if(!this.visible || this.alpha <= 0)return;\n\t    \n\t    if(this._cacheAsBitmap)\n\t    {\n\t        this._renderCachedSprite(renderSession);\n\t        return;\n\t    }\n\t    \n\t    var i,j;\n\n\t    if(this._mask || this._filters)\n\t    {\n\t        \n\t        // push filter first as we need to ensure the stencil buffer is correct for any masking\n\t        if(this._filters)\n\t        {\n\t            renderSession.spriteBatch.flush();\n\t            renderSession.filterManager.pushFilter(this._filterBlock);\n\t        }\n\n\t        if(this._mask)\n\t        {\n\t            renderSession.spriteBatch.stop();\n\t            renderSession.maskManager.pushMask(this.mask, renderSession);\n\t            renderSession.spriteBatch.start();\n\t        }\n\n\t        // simple render children!\n\t        for(i=0,j=this.children.length; i<j; i++)\n\t        {\n\t            this.children[i]._renderWebGL(renderSession);\n\t        }\n\n\t        renderSession.spriteBatch.stop();\n\n\t        if(this._mask)renderSession.maskManager.popMask(this._mask, renderSession);\n\t        if(this._filters)renderSession.filterManager.popFilter();\n\t        \n\t        renderSession.spriteBatch.start();\n\t    }\n\t    else\n\t    {\n\t        // simple render children!\n\t        for(i=0,j=this.children.length; i<j; i++)\n\t        {\n\t            this.children[i]._renderWebGL(renderSession);\n\t        }\n\t    }\n\t};\n\n\t/**\n\t* Renders the object using the Canvas renderer\n\t*\n\t* @method _renderCanvas\n\t* @param renderSession {RenderSession} \n\t* @private\n\t*/\n\tPIXI.DisplayObjectContainer.prototype._renderCanvas = function(renderSession)\n\t{\n\t    if(this.visible === false || this.alpha === 0)return;\n\n\t    if(this._cacheAsBitmap)\n\t    {\n\n\t        this._renderCachedSprite(renderSession);\n\t        return;\n\t    }\n\n\t    if(this._mask)\n\t    {\n\t        renderSession.maskManager.pushMask(this._mask, renderSession);\n\t    }\n\n\t    for(var i=0,j=this.children.length; i<j; i++)\n\t    {\n\t        var child = this.children[i];\n\t        child._renderCanvas(renderSession);\n\t    }\n\n\t    if(this._mask)\n\t    {\n\t        renderSession.maskManager.popMask(renderSession);\n\t    }\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The Sprite object is the base for all textured objects that are rendered to the screen\n\t *\n\t * @class Sprite\n\t * @extends DisplayObjectContainer\n\t * @constructor\n\t * @param texture {Texture} The texture for this sprite\n\t *\n\t * A sprite can be created directly from an image like this :\n\t * var sprite = new PIXI.Sprite.fromImage('assets/image.png');\n\t * yourStage.addChild(sprite);\n\t * then obviously don't forget to add it to the stage you have already created\n\t */\n\tPIXI.Sprite = function(texture)\n\t{\n\t    PIXI.DisplayObjectContainer.call( this );\n\n\t    /**\n\t     * The anchor sets the origin point of the texture.\n\t     * The default is 0,0 this means the texture's origin is the top left\n\t     * Setting than anchor to 0.5,0.5 means the textures origin is centered\n\t     * Setting the anchor to 1,1 would mean the textures origin points will be the bottom right corner\n\t     *\n\t     * @property anchor\n\t     * @type Point\n\t     */\n\t    this.anchor = new PIXI.Point();\n\n\t    /**\n\t     * The texture that the sprite is using\n\t     *\n\t     * @property texture\n\t     * @type Texture\n\t     */\n\t    this.texture = texture || PIXI.Texture.emptyTexture;\n\t    \n\t    /**\n\t     * The width of the sprite (this is initially set by the texture)\n\t     *\n\t     * @property _width\n\t     * @type Number\n\t     * @private\n\t     */\n\t    this._width = 0;\n\n\t    /**\n\t     * The height of the sprite (this is initially set by the texture)\n\t     *\n\t     * @property _height\n\t     * @type Number\n\t     * @private\n\t     */\n\t    this._height = 0;\n\n\t    /**\n\t     * The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.\n\t     *\n\t     * @property tint\n\t     * @type Number\n\t     * @default 0xFFFFFF\n\t     */\n\t    this.tint = 0xFFFFFF;\n\n\t    /**\n\t     * The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.\n\t     *\n\t     * @property blendMode\n\t     * @type Number\n\t     * @default PIXI.blendModes.NORMAL;\n\t     */\n\t    this.blendMode = PIXI.blendModes.NORMAL;\n\n\t    /**\n\t     * The shader that will be used to render the texture to the stage. Set to null to remove a current shader.\n\t     *\n\t     * @property shader\n\t     * @type AbstractFilter\n\t     * @default null\n\t     */\n\t    this.shader = null;\n\n\t    if(this.texture.baseTexture.hasLoaded)\n\t    {\n\t        this.onTextureUpdate();\n\t    }\n\t    else\n\t    {\n\t        this.texture.on( 'update', this.onTextureUpdate.bind(this) );\n\t    }\n\n\t    this.renderable = true;\n\n\t};\n\n\t// constructor\n\tPIXI.Sprite.prototype = Object.create( PIXI.DisplayObjectContainer.prototype );\n\tPIXI.Sprite.prototype.constructor = PIXI.Sprite;\n\n\t/**\n\t * The width of the sprite, setting this will actually modify the scale to achieve the value set\n\t *\n\t * @property width\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.Sprite.prototype, 'width', {\n\t    get: function() {\n\t        return this.scale.x * this.texture.frame.width;\n\t    },\n\t    set: function(value) {\n\t        this.scale.x = value / this.texture.frame.width;\n\t        this._width = value;\n\t    }\n\t});\n\n\t/**\n\t * The height of the sprite, setting this will actually modify the scale to achieve the value set\n\t *\n\t * @property height\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.Sprite.prototype, 'height', {\n\t    get: function() {\n\t        return  this.scale.y * this.texture.frame.height;\n\t    },\n\t    set: function(value) {\n\t        this.scale.y = value / this.texture.frame.height;\n\t        this._height = value;\n\t    }\n\t});\n\n\t/**\n\t * Sets the texture of the sprite\n\t *\n\t * @method setTexture\n\t * @param texture {Texture} The PIXI texture that is displayed by the sprite\n\t */\n\tPIXI.Sprite.prototype.setTexture = function(texture)\n\t{\n\t    this.texture = texture;\n\t    this.cachedTint = 0xFFFFFF;\n\t};\n\n\t/**\n\t * When the texture is updated, this event will fire to update the scale and frame\n\t *\n\t * @method onTextureUpdate\n\t * @param event\n\t * @private\n\t */\n\tPIXI.Sprite.prototype.onTextureUpdate = function()\n\t{\n\t    // so if _width is 0 then width was not set..\n\t    if(this._width)this.scale.x = this._width / this.texture.frame.width;\n\t    if(this._height)this.scale.y = this._height / this.texture.frame.height;\n\n\t    //this.updateFrame = true;\n\t};\n\n\t/**\n\t* Returns the bounds of the Sprite as a rectangle. The bounds calculation takes the worldTransform into account.\n\t*\n\t* @method getBounds\n\t* @param matrix {Matrix} the transformation matrix of the sprite\n\t* @return {Rectangle} the framing rectangle\n\t*/\n\tPIXI.Sprite.prototype.getBounds = function(matrix)\n\t{\n\t    var width = this.texture.frame.width;\n\t    var height = this.texture.frame.height;\n\n\t    var w0 = width * (1-this.anchor.x);\n\t    var w1 = width * -this.anchor.x;\n\n\t    var h0 = height * (1-this.anchor.y);\n\t    var h1 = height * -this.anchor.y;\n\n\t    var worldTransform = matrix || this.worldTransform ;\n\n\t    var a = worldTransform.a;\n\t    var b = worldTransform.b;\n\t    var c = worldTransform.c;\n\t    var d = worldTransform.d;\n\t    var tx = worldTransform.tx;\n\t    var ty = worldTransform.ty;\n\n\t    var maxX = -Infinity;\n\t    var maxY = -Infinity;\n\n\t    var minX = Infinity;\n\t    var minY = Infinity;\n\n\t    if(b === 0 && c === 0)\n\t    {\n\t        // scale may be negative!\n\t        if(a < 0)a *= -1;\n\t        if(d < 0)d *= -1;\n\n\t        // this means there is no rotation going on right? RIGHT?\n\t        // if thats the case then we can avoid checking the bound values! yay         \n\t        minX = a * w1 + tx;\n\t        maxX = a * w0 + tx;\n\t        minY = d * h1 + ty;\n\t        maxY = d * h0 + ty;\n\t    }\n\t    else\n\t    {\n\t        var x1 = a * w1 + c * h1 + tx;\n\t        var y1 = d * h1 + b * w1 + ty;\n\n\t        var x2 = a * w0 + c * h1 + tx;\n\t        var y2 = d * h1 + b * w0 + ty;\n\n\t        var x3 = a * w0 + c * h0 + tx;\n\t        var y3 = d * h0 + b * w0 + ty;\n\n\t        var x4 =  a * w1 + c * h0 + tx;\n\t        var y4 =  d * h0 + b * w1 + ty;\n\n\t        minX = x1 < minX ? x1 : minX;\n\t        minX = x2 < minX ? x2 : minX;\n\t        minX = x3 < minX ? x3 : minX;\n\t        minX = x4 < minX ? x4 : minX;\n\n\t        minY = y1 < minY ? y1 : minY;\n\t        minY = y2 < minY ? y2 : minY;\n\t        minY = y3 < minY ? y3 : minY;\n\t        minY = y4 < minY ? y4 : minY;\n\n\t        maxX = x1 > maxX ? x1 : maxX;\n\t        maxX = x2 > maxX ? x2 : maxX;\n\t        maxX = x3 > maxX ? x3 : maxX;\n\t        maxX = x4 > maxX ? x4 : maxX;\n\n\t        maxY = y1 > maxY ? y1 : maxY;\n\t        maxY = y2 > maxY ? y2 : maxY;\n\t        maxY = y3 > maxY ? y3 : maxY;\n\t        maxY = y4 > maxY ? y4 : maxY;\n\t    }\n\n\t    var bounds = this._bounds;\n\n\t    bounds.x = minX;\n\t    bounds.width = maxX - minX;\n\n\t    bounds.y = minY;\n\t    bounds.height = maxY - minY;\n\n\t    // store a reference so that if this function gets called again in the render cycle we do not have to recalculate\n\t    this._currentBounds = bounds;\n\n\t    return bounds;\n\t};\n\n\t/**\n\t* Renders the object using the WebGL renderer\n\t*\n\t* @method _renderWebGL\n\t* @param renderSession {RenderSession}\n\t* @private\n\t*/\n\tPIXI.Sprite.prototype._renderWebGL = function(renderSession)\n\t{\n\t    // if the sprite is not visible or the alpha is 0 then no need to render this element\n\t    if(!this.visible || this.alpha <= 0)return;\n\n\t    var i,j;\n\n\t    // do a quick check to see if this element has a mask or a filter.\n\t    if(this._mask || this._filters)\n\t    {\n\t        var spriteBatch =  renderSession.spriteBatch;\n\n\t        // push filter first as we need to ensure the stencil buffer is correct for any masking\n\t        if(this._filters)\n\t        {\n\t            spriteBatch.flush();\n\t            renderSession.filterManager.pushFilter(this._filterBlock);\n\t        }\n\n\t        if(this._mask)\n\t        {\n\t            spriteBatch.stop();\n\t            renderSession.maskManager.pushMask(this.mask, renderSession);\n\t            spriteBatch.start();\n\t        }\n\n\t        // add this sprite to the batch\n\t        spriteBatch.render(this);\n\n\t        // now loop through the children and make sure they get rendered\n\t        for(i=0,j=this.children.length; i<j; i++)\n\t        {\n\t            this.children[i]._renderWebGL(renderSession);\n\t        }\n\n\t        // time to stop the sprite batch as either a mask element or a filter draw will happen next\n\t        spriteBatch.stop();\n\n\t        if(this._mask)renderSession.maskManager.popMask(this._mask, renderSession);\n\t        if(this._filters)renderSession.filterManager.popFilter();\n\n\t        spriteBatch.start();\n\t    }\n\t    else\n\t    {\n\t        renderSession.spriteBatch.render(this);\n\n\t        // simple render children!\n\t        for(i=0,j=this.children.length; i<j; i++)\n\t        {\n\t            this.children[i]._renderWebGL(renderSession);\n\t        }\n\n\t    }\n\t};\n\n\t/**\n\t* Renders the object using the Canvas renderer\n\t*\n\t* @method _renderCanvas\n\t* @param renderSession {RenderSession}\n\t* @private\n\t*/\n\tPIXI.Sprite.prototype._renderCanvas = function(renderSession)\n\t{\n\t    // If the sprite is not visible or the alpha is 0 then no need to render this element\n\t    if (this.visible === false || this.alpha === 0 || this.texture.crop.width <= 0 || this.texture.crop.height <= 0) return;\n\n\t    if (this.blendMode !== renderSession.currentBlendMode)\n\t    {\n\t        renderSession.currentBlendMode = this.blendMode;\n\t        renderSession.context.globalCompositeOperation = PIXI.blendModesCanvas[renderSession.currentBlendMode];\n\t    }\n\n\t    if (this._mask)\n\t    {\n\t        renderSession.maskManager.pushMask(this._mask, renderSession);\n\t    }\n\n\t    //  Ignore null sources\n\t    if (this.texture.valid)\n\t    {\n\t        var resolution = this.texture.baseTexture.resolution / renderSession.resolution;\n\n\t        renderSession.context.globalAlpha = this.worldAlpha;\n\n\t         //  If smoothingEnabled is supported and we need to change the smoothing property for this texture\n\t        if (renderSession.smoothProperty && renderSession.scaleMode !== this.texture.baseTexture.scaleMode)\n\t        {\n\t            renderSession.scaleMode = this.texture.baseTexture.scaleMode;\n\t            renderSession.context[renderSession.smoothProperty] = (renderSession.scaleMode === PIXI.scaleModes.LINEAR);\n\t        }\n\n\t        //  If the texture is trimmed we offset by the trim x/y, otherwise we use the frame dimensions\n\t        var dx = (this.texture.trim) ? this.texture.trim.x - this.anchor.x * this.texture.trim.width : this.anchor.x * -this.texture.frame.width;\n\t        var dy = (this.texture.trim) ? this.texture.trim.y - this.anchor.y * this.texture.trim.height : this.anchor.y * -this.texture.frame.height;\n\n\t        //  Allow for pixel rounding\n\t        if (renderSession.roundPixels)\n\t        {\n\t            renderSession.context.setTransform(\n\t                this.worldTransform.a,\n\t                this.worldTransform.b,\n\t                this.worldTransform.c,\n\t                this.worldTransform.d,\n\t                (this.worldTransform.tx * renderSession.resolution) | 0,\n\t                (this.worldTransform.ty * renderSession.resolution) | 0);\n\n\t            dx = dx | 0;\n\t            dy = dy | 0;\n\t        }\n\t        else\n\t        {\n\t            renderSession.context.setTransform(\n\t                this.worldTransform.a,\n\t                this.worldTransform.b,\n\t                this.worldTransform.c,\n\t                this.worldTransform.d,\n\t                this.worldTransform.tx * renderSession.resolution,\n\t                this.worldTransform.ty * renderSession.resolution);\n\t        }\n\n\t       \n\n\t     \n\t        if (this.tint !== 0xFFFFFF)\n\t        {\n\t            if (this.cachedTint !== this.tint)\n\t            {\n\t                this.cachedTint = this.tint;\n\n\t                //  TODO clean up caching - how to clean up the caches?\n\t                this.tintedTexture = PIXI.CanvasTinter.getTintedTexture(this, this.tint);\n\t            }\n\n\t            renderSession.context.drawImage(\n\t                                this.tintedTexture,\n\t                                0,\n\t                                0,\n\t                                this.texture.crop.width,\n\t                                this.texture.crop.height,\n\t                                dx / resolution,\n\t                                dy / resolution,\n\t                                this.texture.crop.width / resolution,\n\t                                this.texture.crop.height / resolution);\n\t        }\n\t        else\n\t        {\n\t            renderSession.context.drawImage(\n\t                                this.texture.baseTexture.source,\n\t                                this.texture.crop.x,\n\t                                this.texture.crop.y,\n\t                                this.texture.crop.width,\n\t                                this.texture.crop.height,\n\t                                dx / resolution,\n\t                                dy / resolution,\n\t                                this.texture.crop.width / resolution,\n\t                                this.texture.crop.height / resolution);\n\t        }\n\t    }\n\n\t    // OVERWRITE\n\t    for (var i = 0, j = this.children.length; i < j; i++)\n\t    {\n\t        this.children[i]._renderCanvas(renderSession);\n\t    }\n\n\t    if (this._mask)\n\t    {\n\t        renderSession.maskManager.popMask(renderSession);\n\t    }\n\t};\n\n\t// some helper functions..\n\n\t/**\n\t *\n\t * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n\t * The frame ids are created when a Texture packer file has been loaded\n\t *\n\t * @method fromFrame\n\t * @static\n\t * @param frameId {String} The frame Id of the texture in the cache\n\t * @return {Sprite} A new Sprite using a texture from the texture cache matching the frameId\n\t */\n\tPIXI.Sprite.fromFrame = function(frameId)\n\t{\n\t    var texture = PIXI.TextureCache[frameId];\n\t    if(!texture) throw new Error('The frameId \"' + frameId + '\" does not exist in the texture cache' + this);\n\t    return new PIXI.Sprite(texture);\n\t};\n\n\t/**\n\t *\n\t * Helper function that creates a sprite that will contain a texture based on an image url\n\t * If the image is not in the texture cache it will be loaded\n\t *\n\t * @method fromImage\n\t * @static\n\t * @param imageId {String} The image url of the texture\n\t * @return {Sprite} A new Sprite using a texture from the texture cache matching the image id\n\t */\n\tPIXI.Sprite.fromImage = function(imageId, crossorigin, scaleMode)\n\t{\n\t    var texture = PIXI.Texture.fromImage(imageId, crossorigin, scaleMode);\n\t    return new PIXI.Sprite(texture);\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/\n\t */\n\n\t/**\n\t * The SpriteBatch class is a really fast version of the DisplayObjectContainer\n\t * built solely for speed, so use when you need a lot of sprites or particles.\n\t * And it's extremely easy to use :\n\n\t    var container = new PIXI.SpriteBatch();\n\n\t    stage.addChild(container);\n\n\t    for(var i  = 0; i < 100; i++)\n\t    {\n\t        var sprite = new PIXI.Sprite.fromImage(\"myImage.png\");\n\t        container.addChild(sprite);\n\t    }\n\t * And here you have a hundred sprites that will be renderer at the speed of light\n\t *\n\t * @class SpriteBatch\n\t * @constructor\n\t * @param texture {Texture}\n\t */\n\n\t//TODO RENAME to PARTICLE CONTAINER?\n\tPIXI.SpriteBatch = function(texture)\n\t{\n\t    PIXI.DisplayObjectContainer.call( this);\n\n\t    this.textureThing = texture;\n\n\t    this.ready = false;\n\t};\n\n\tPIXI.SpriteBatch.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);\n\tPIXI.SpriteBatch.prototype.constructor = PIXI.SpriteBatch;\n\n\t/*\n\t * Initialises the spriteBatch\n\t *\n\t * @method initWebGL\n\t * @param gl {WebGLContext} the current WebGL drawing context\n\t */\n\tPIXI.SpriteBatch.prototype.initWebGL = function(gl)\n\t{\n\t    // TODO only one needed for the whole engine really?\n\t    this.fastSpriteBatch = new PIXI.WebGLFastSpriteBatch(gl);\n\n\t    this.ready = true;\n\t};\n\n\t/*\n\t * Updates the object transform for rendering\n\t *\n\t * @method updateTransform\n\t * @private\n\t */\n\tPIXI.SpriteBatch.prototype.updateTransform = function()\n\t{\n\t    // TODO don't need to!\n\t    this.displayObjectUpdateTransform();\n\t    //  PIXI.DisplayObjectContainer.prototype.updateTransform.call( this );\n\t};\n\n\t/**\n\t* Renders the object using the WebGL renderer\n\t*\n\t* @method _renderWebGL\n\t* @param renderSession {RenderSession}\n\t* @private\n\t*/\n\tPIXI.SpriteBatch.prototype._renderWebGL = function(renderSession)\n\t{\n\t    if(!this.visible || this.alpha <= 0 || !this.children.length)return;\n\n\t    if(!this.ready)this.initWebGL( renderSession.gl );\n\n\t    if(this.fastSpriteBatch.gl !== renderSession.gl) this.fastSpriteBatch.setContext(renderSession.gl);\n\n\t    renderSession.spriteBatch.stop();\n\n\t    renderSession.shaderManager.setShader(renderSession.shaderManager.fastShader);\n\n\t    this.fastSpriteBatch.begin(this, renderSession);\n\t    this.fastSpriteBatch.render(this);\n\n\t    renderSession.spriteBatch.start();\n\n\t};\n\n\t/**\n\t* Renders the object using the Canvas renderer\n\t*\n\t* @method _renderCanvas\n\t* @param renderSession {RenderSession}\n\t* @private\n\t*/\n\tPIXI.SpriteBatch.prototype._renderCanvas = function(renderSession)\n\t{\n\t    if(!this.visible || this.alpha <= 0 || !this.children.length)return;\n\n\t    var context = renderSession.context;\n\t    context.globalAlpha = this.worldAlpha;\n\n\t    this.displayObjectUpdateTransform();\n\n\t    var transform = this.worldTransform;\n\t    // alow for trimming\n\n\t    var isRotated = true;\n\n\t    for (var i = 0; i < this.children.length; i++) {\n\n\t        var child = this.children[i];\n\n\t        if(!child.visible)continue;\n\n\t        var texture = child.texture;\n\t        var frame = texture.frame;\n\n\t        context.globalAlpha = this.worldAlpha * child.alpha;\n\n\t        if(child.rotation % (Math.PI * 2) === 0)\n\t        {\n\t            if(isRotated)\n\t            {\n\t                context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n\t                isRotated = false;\n\t            }\n\n\t            // this is the fastest  way to optimise! - if rotation is 0 then we can avoid any kind of setTransform call\n\t            context.drawImage(texture.baseTexture.source,\n\t                                 frame.x,\n\t                                 frame.y,\n\t                                 frame.width,\n\t                                 frame.height,\n\t                                 ((child.anchor.x) * (-frame.width * child.scale.x) + child.position.x  + 0.5) | 0,\n\t                                 ((child.anchor.y) * (-frame.height * child.scale.y) + child.position.y  + 0.5) | 0,\n\t                                 frame.width * child.scale.x,\n\t                                 frame.height * child.scale.y);\n\t        }\n\t        else\n\t        {\n\t            if(!isRotated)isRotated = true;\n\n\t            child.displayObjectUpdateTransform();\n\n\t            var childTransform = child.worldTransform;\n\n\t            // allow for trimming\n\n\t            if (renderSession.roundPixels)\n\t            {\n\t                context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx | 0, childTransform.ty | 0);\n\t            }\n\t            else\n\t            {\n\t                context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx, childTransform.ty);\n\t            }\n\n\t            context.drawImage(texture.baseTexture.source,\n\t                                 frame.x,\n\t                                 frame.y,\n\t                                 frame.width,\n\t                                 frame.height,\n\t                                 ((child.anchor.x) * (-frame.width) + 0.5) | 0,\n\t                                 ((child.anchor.y) * (-frame.height) + 0.5) | 0,\n\t                                 frame.width,\n\t                                 frame.height);\n\n\n\t        }\n\n\t       // context.restore();\n\t    }\n\n\t//    context.restore();\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * A MovieClip is a simple way to display an animation depicted by a list of textures.\n\t *\n\t * @class MovieClip\n\t * @extends Sprite\n\t * @constructor\n\t * @param textures {Array(Texture)} an array of {Texture} objects that make up the animation\n\t */\n\tPIXI.MovieClip = function(textures)\n\t{\n\t    PIXI.Sprite.call(this, textures[0]);\n\n\t    /**\n\t     * The array of textures that make up the animation\n\t     *\n\t     * @property textures\n\t     * @type Array(Texture)\n\t     */\n\t    this.textures = textures;\n\n\t    /**\n\t     * The speed that the MovieClip will play at. Higher is faster, lower is slower\n\t     *\n\t     * @property animationSpeed\n\t     * @type Number\n\t     * @default 1\n\t     */\n\t    this.animationSpeed = 1;\n\n\t    /**\n\t     * Whether or not the movie clip repeats after playing.\n\t     *\n\t     * @property loop\n\t     * @type Boolean\n\t     * @default true\n\t     */\n\t    this.loop = true;\n\n\t    /**\n\t     * Function to call when a MovieClip finishes playing\n\t     *\n\t     * @property onComplete\n\t     * @type Function\n\t     */\n\t    this.onComplete = null;\n\n\t    /**\n\t     * [read-only] The MovieClips current frame index (this may not have to be a whole number)\n\t     *\n\t     * @property currentFrame\n\t     * @type Number\n\t     * @default 0\n\t     * @readOnly\n\t     */\n\t    this.currentFrame = 0;\n\n\t    /**\n\t     * [read-only] Indicates if the MovieClip is currently playing\n\t     *\n\t     * @property playing\n\t     * @type Boolean\n\t     * @readOnly\n\t     */\n\t    this.playing = false;\n\t};\n\n\t// constructor\n\tPIXI.MovieClip.prototype = Object.create( PIXI.Sprite.prototype );\n\tPIXI.MovieClip.prototype.constructor = PIXI.MovieClip;\n\n\t/**\n\t* [read-only] totalFrames is the total number of frames in the MovieClip. This is the same as number of textures\n\t* assigned to the MovieClip.\n\t*\n\t* @property totalFrames\n\t* @type Number\n\t* @default 0\n\t* @readOnly\n\t*/\n\tObject.defineProperty( PIXI.MovieClip.prototype, 'totalFrames', {\n\t\tget: function() {\n\n\t\t\treturn this.textures.length;\n\t\t}\n\t});\n\n\t/**\n\t * Stops the MovieClip\n\t *\n\t * @method stop\n\t */\n\tPIXI.MovieClip.prototype.stop = function()\n\t{\n\t    this.playing = false;\n\t};\n\n\t/**\n\t * Plays the MovieClip\n\t *\n\t * @method play\n\t */\n\tPIXI.MovieClip.prototype.play = function()\n\t{\n\t    this.playing = true;\n\t};\n\n\t/**\n\t * Stops the MovieClip and goes to a specific frame\n\t *\n\t * @method gotoAndStop\n\t * @param frameNumber {Number} frame index to stop at\n\t */\n\tPIXI.MovieClip.prototype.gotoAndStop = function(frameNumber)\n\t{\n\t    this.playing = false;\n\t    this.currentFrame = frameNumber;\n\t    var round = (this.currentFrame + 0.5) | 0;\n\t    this.setTexture(this.textures[round % this.textures.length]);\n\t};\n\n\t/**\n\t * Goes to a specific frame and begins playing the MovieClip\n\t *\n\t * @method gotoAndPlay\n\t * @param frameNumber {Number} frame index to start at\n\t */\n\tPIXI.MovieClip.prototype.gotoAndPlay = function(frameNumber)\n\t{\n\t    this.currentFrame = frameNumber;\n\t    this.playing = true;\n\t};\n\n\t/*\n\t * Updates the object transform for rendering\n\t *\n\t * @method updateTransform\n\t * @private\n\t */\n\tPIXI.MovieClip.prototype.updateTransform = function()\n\t{\n\t    this.displayObjectContainerUpdateTransform();\n\n\t    if(!this.playing)return;\n\n\t    this.currentFrame += this.animationSpeed;\n\n\t    var round = (this.currentFrame + 0.5) | 0;\n\n\t    this.currentFrame = this.currentFrame % this.textures.length;\n\n\t    if(this.loop || round < this.textures.length)\n\t    {\n\t        this.setTexture(this.textures[round % this.textures.length]);\n\t    }\n\t    else if(round >= this.textures.length)\n\t    {\n\t        this.gotoAndStop(this.textures.length - 1);\n\t        if(this.onComplete)\n\t        {\n\t            this.onComplete();\n\t        }\n\t    }\n\t};\n\n\t/**\n\t * A short hand way of creating a movieclip from an array of frame ids\n\t *\n\t * @static\n\t * @method fromFrames\n\t * @param frames {Array} the array of frames ids the movieclip will use as its texture frames\n\t * @return {MovieClip}\n\t */\n\tPIXI.MovieClip.fromFrames = function(frames)\n\t{\n\t    var textures = [];\n\n\t    for (var i = 0; i < frames.length; i++)\n\t    {\n\t        textures.push(new PIXI.Texture.fromFrame(frames[i]));\n\t    }\n\n\t    return new PIXI.MovieClip(textures);\n\t};\n\n\t/**\n\t * A short hand way of creating a movieclip from an array of image ids\n\t *\n\t * @static\n\t * @method fromImages\n\t * @param frames {Array} the array of image ids the movieclip will use as its texture frames\n\t * @return {MovieClip}\n\t */\n\tPIXI.MovieClip.fromImages = function(images)\n\t{\n\t    var textures = [];\n\n\t    for (var i = 0; i < images.length; i++)\n\t    {\n\t        textures.push(new PIXI.Texture.fromImage(images[i]));\n\t    }\n\n\t    return new PIXI.MovieClip(textures);\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * A target and pass info object for filters.\n\t * \n\t * @class FilterBlock\n\t * @constructor\n\t */\n\tPIXI.FilterBlock = function()\n\t{\n\t    /**\n\t     * The visible state of this FilterBlock.\n\t     *\n\t     * @property visible\n\t     * @type Boolean\n\t     */\n\t    this.visible = true;\n\n\t    /**\n\t     * The renderable state of this FilterBlock.\n\t     *\n\t     * @property renderable\n\t     * @type Boolean\n\t     */\n\t    this.renderable = true;\n\t};\n\n\tPIXI.FilterBlock.prototype.constructor = PIXI.FilterBlock;\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t * Modified by Tom Slezakowski http://www.tomslezakowski.com @TomSlezakowski (24/03/2014) - Added dropShadowColor.\n\t */\n\n\t/**\n\t * A Text Object will create a line or multiple lines of text. To split a line you can use '\\n' in your text string,\n\t * or add a wordWrap property set to true and and wordWrapWidth property with a value in the style object.\n\t *\n\t * @class Text\n\t * @extends Sprite\n\t * @constructor\n\t * @param text {String} The copy that you would like the text to display\n\t * @param [style] {Object} The style parameters\n\t * @param [style.font] {String} default 'bold 20px Arial' The style and size of the font\n\t * @param [style.fill='black'] {String|Number} A canvas fillstyle that will be used on the text e.g 'red', '#00FF00'\n\t * @param [style.align='left'] {String} Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text\n\t * @param [style.stroke] {String|Number} A canvas fillstyle that will be used on the text stroke e.g 'blue', '#FCFF00'\n\t * @param [style.strokeThickness=0] {Number} A number that represents the thickness of the stroke. Default is 0 (no stroke)\n\t * @param [style.wordWrap=false] {Boolean} Indicates if word wrap should be used\n\t * @param [style.wordWrapWidth=100] {Number} The width at which text will wrap, it needs wordWrap to be set to true\n\t * @param [style.dropShadow=false] {Boolean} Set a drop shadow for the text\n\t * @param [style.dropShadowColor='#000000'] {String} A fill style to be used on the dropshadow e.g 'red', '#00FF00'\n\t * @param [style.dropShadowAngle=Math.PI/4] {Number} Set a angle of the drop shadow\n\t * @param [style.dropShadowDistance=5] {Number} Set a distance of the drop shadow\n\t */\n\tPIXI.Text = function(text, style)\n\t{\n\t    /**\n\t     * The canvas element that everything is drawn to\n\t     *\n\t     * @property canvas\n\t     * @type HTMLCanvasElement\n\t     */\n\t    this.canvas = document.createElement('canvas');\n\n\t    /**\n\t     * The canvas 2d context that everything is drawn with\n\t     * @property context\n\t     * @type CanvasRenderingContext2D\n\t     */\n\t    this.context = this.canvas.getContext('2d');\n\n\t    /**\n\t     * The resolution of the canvas.\n\t     * @property resolution\n\t     * @type Number\n\t     */\n\t    this.resolution = 1;\n\n\t    PIXI.Sprite.call(this, PIXI.Texture.fromCanvas(this.canvas));\n\n\t    this.setText(text);\n\t    this.setStyle(style);\n\n\t};\n\n\t// constructor\n\tPIXI.Text.prototype = Object.create(PIXI.Sprite.prototype);\n\tPIXI.Text.prototype.constructor = PIXI.Text;\n\n\t/**\n\t * The width of the Text, setting this will actually modify the scale to achieve the value set\n\t *\n\t * @property width\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.Text.prototype, 'width', {\n\t    get: function() {\n\n\t        if(this.dirty)\n\t        {\n\t            this.updateText();\n\t            this.dirty = false;\n\t        }\n\n\n\t        return this.scale.x * this.texture.frame.width;\n\t    },\n\t    set: function(value) {\n\t        this.scale.x = value / this.texture.frame.width;\n\t        this._width = value;\n\t    }\n\t});\n\n\t/**\n\t * The height of the Text, setting this will actually modify the scale to achieve the value set\n\t *\n\t * @property height\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.Text.prototype, 'height', {\n\t    get: function() {\n\n\t        if(this.dirty)\n\t        {\n\t            this.updateText();\n\t            this.dirty = false;\n\t        }\n\n\n\t        return  this.scale.y * this.texture.frame.height;\n\t    },\n\t    set: function(value) {\n\t        this.scale.y = value / this.texture.frame.height;\n\t        this._height = value;\n\t    }\n\t});\n\n\t/**\n\t * Set the style of the text\n\t *\n\t * @method setStyle\n\t * @param [style] {Object} The style parameters\n\t * @param [style.font='bold 20pt Arial'] {String} The style and size of the font\n\t * @param [style.fill='black'] {Object} A canvas fillstyle that will be used on the text eg 'red', '#00FF00'\n\t * @param [style.align='left'] {String} Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text\n\t * @param [style.stroke='black'] {String} A canvas fillstyle that will be used on the text stroke eg 'blue', '#FCFF00'\n\t * @param [style.strokeThickness=0] {Number} A number that represents the thickness of the stroke. Default is 0 (no stroke)\n\t * @param [style.wordWrap=false] {Boolean} Indicates if word wrap should be used\n\t * @param [style.wordWrapWidth=100] {Number} The width at which text will wrap\n\t * @param [style.dropShadow=false] {Boolean} Set a drop shadow for the text\n\t * @param [style.dropShadowColor='#000000'] {String} A fill style to be used on the dropshadow e.g 'red', '#00FF00'\n\t * @param [style.dropShadowAngle=Math.PI/4] {Number} Set a angle of the drop shadow\n\t * @param [style.dropShadowDistance=5] {Number} Set a distance of the drop shadow\n\t */\n\tPIXI.Text.prototype.setStyle = function(style)\n\t{\n\t    style = style || {};\n\t    style.font = style.font || 'bold 20pt Arial';\n\t    style.fill = style.fill || 'black';\n\t    style.align = style.align || 'left';\n\t    style.stroke = style.stroke || 'black'; //provide a default, see: https://github.com/GoodBoyDigital/pixi.js/issues/136\n\t    style.strokeThickness = style.strokeThickness || 0;\n\t    style.wordWrap = style.wordWrap || false;\n\t    style.wordWrapWidth = style.wordWrapWidth || 100;\n\t    \n\t    style.dropShadow = style.dropShadow || false;\n\t    style.dropShadowAngle = style.dropShadowAngle || Math.PI / 6;\n\t    style.dropShadowDistance = style.dropShadowDistance || 4;\n\t    style.dropShadowColor = style.dropShadowColor || 'black';\n\n\t    this.style = style;\n\t    this.dirty = true;\n\t};\n\n\t/**\n\t * Set the copy for the text object. To split a line you can use '\\n'.\n\t *\n\t * @method setText\n\t * @param text {String} The copy that you would like the text to display\n\t */\n\tPIXI.Text.prototype.setText = function(text)\n\t{\n\t    this.text = text.toString() || ' ';\n\t    this.dirty = true;\n\t};\n\n\t/**\n\t * Renders text and updates it when needed\n\t *\n\t * @method updateText\n\t * @private\n\t */\n\tPIXI.Text.prototype.updateText = function()\n\t{\n\t    this.texture.baseTexture.resolution = this.resolution;\n\n\t    this.context.font = this.style.font;\n\n\t    var outputText = this.text;\n\n\t    // word wrap\n\t    // preserve original text\n\t    if(this.style.wordWrap)outputText = this.wordWrap(this.text);\n\n\t    //split text into lines\n\t    var lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n\n\t    //calculate text width\n\t    var lineWidths = [];\n\t    var maxLineWidth = 0;\n\t    var fontProperties = this.determineFontProperties(this.style.font);\n\t    for (var i = 0; i < lines.length; i++)\n\t    {\n\t        var lineWidth = this.context.measureText(lines[i]).width;\n\t        lineWidths[i] = lineWidth;\n\t        maxLineWidth = Math.max(maxLineWidth, lineWidth);\n\t    }\n\n\t    var width = maxLineWidth + this.style.strokeThickness;\n\t    if(this.style.dropShadow)width += this.style.dropShadowDistance;\n\n\t    this.canvas.width = ( width + this.context.lineWidth ) * this.resolution;\n\t    \n\t    //calculate text height\n\t    var lineHeight = fontProperties.fontSize + this.style.strokeThickness;\n\t \n\t    var height = lineHeight * lines.length;\n\t    if(this.style.dropShadow)height += this.style.dropShadowDistance;\n\n\t    this.canvas.height = height * this.resolution;\n\n\t    this.context.scale( this.resolution, this.resolution);\n\n\t    if(navigator.isCocoonJS) this.context.clearRect(0,0,this.canvas.width,this.canvas.height);\n\t    \n\t    // used for debugging..\n\t    //this.context.fillStyle =\"#FF0000\"\n\t    //this.context.fillRect(0, 0, this.canvas.width,this.canvas.height);\n\n\t    this.context.font = this.style.font;\n\t    this.context.strokeStyle = this.style.stroke;\n\t    this.context.lineWidth = this.style.strokeThickness;\n\t    this.context.textBaseline = 'alphabetic';\n\t    //this.context.lineJoin = 'round';\n\n\t    var linePositionX;\n\t    var linePositionY;\n\n\t    if(this.style.dropShadow)\n\t    {\n\t        this.context.fillStyle = this.style.dropShadowColor;\n\n\t        var xShadowOffset = Math.sin(this.style.dropShadowAngle) * this.style.dropShadowDistance;\n\t        var yShadowOffset = Math.cos(this.style.dropShadowAngle) * this.style.dropShadowDistance;\n\n\t        for (i = 0; i < lines.length; i++)\n\t        {\n\t            linePositionX = this.style.strokeThickness / 2;\n\t            linePositionY = (this.style.strokeThickness / 2 + i * lineHeight) + fontProperties.ascent;\n\n\t            if(this.style.align === 'right')\n\t            {\n\t                linePositionX += maxLineWidth - lineWidths[i];\n\t            }\n\t            else if(this.style.align === 'center')\n\t            {\n\t                linePositionX += (maxLineWidth - lineWidths[i]) / 2;\n\t            }\n\n\t            if(this.style.fill)\n\t            {\n\t                this.context.fillText(lines[i], linePositionX + xShadowOffset, linePositionY + yShadowOffset);\n\t            }\n\n\t          //  if(dropShadow)\n\t        }\n\t    }\n\n\t    //set canvas text styles\n\t    this.context.fillStyle = this.style.fill;\n\t    \n\t    //draw lines line by line\n\t    for (i = 0; i < lines.length; i++)\n\t    {\n\t        linePositionX = this.style.strokeThickness / 2;\n\t        linePositionY = (this.style.strokeThickness / 2 + i * lineHeight) + fontProperties.ascent;\n\n\t        if(this.style.align === 'right')\n\t        {\n\t            linePositionX += maxLineWidth - lineWidths[i];\n\t        }\n\t        else if(this.style.align === 'center')\n\t        {\n\t            linePositionX += (maxLineWidth - lineWidths[i]) / 2;\n\t        }\n\n\t        if(this.style.stroke && this.style.strokeThickness)\n\t        {\n\t            this.context.strokeText(lines[i], linePositionX, linePositionY);\n\t        }\n\n\t        if(this.style.fill)\n\t        {\n\t            this.context.fillText(lines[i], linePositionX, linePositionY);\n\t        }\n\n\t      //  if(dropShadow)\n\t    }\n\n\t    this.updateTexture();\n\t};\n\n\t/**\n\t * Updates texture size based on canvas size\n\t *\n\t * @method updateTexture\n\t * @private\n\t */\n\tPIXI.Text.prototype.updateTexture = function()\n\t{\n\t    this.texture.baseTexture.width = this.canvas.width;\n\t    this.texture.baseTexture.height = this.canvas.height;\n\t    this.texture.crop.width = this.texture.frame.width = this.canvas.width;\n\t    this.texture.crop.height = this.texture.frame.height = this.canvas.height;\n\n\t    this._width = this.canvas.width;\n\t    this._height = this.canvas.height;\n\n\t    // update the dirty base textures\n\t    this.texture.baseTexture.dirty();\n\t};\n\n\t/**\n\t* Renders the object using the WebGL renderer\n\t*\n\t* @method _renderWebGL\n\t* @param renderSession {RenderSession} \n\t* @private\n\t*/\n\tPIXI.Text.prototype._renderWebGL = function(renderSession)\n\t{\n\t    if(this.dirty)\n\t    {\n\t        this.resolution = renderSession.resolution;\n\n\t        this.updateText();\n\t        this.dirty = false;\n\t    }\n\n\t    PIXI.Sprite.prototype._renderWebGL.call(this, renderSession);\n\t};\n\n\t/**\n\t* Renders the object using the Canvas renderer\n\t*\n\t* @method _renderCanvas\n\t* @param renderSession {RenderSession} \n\t* @private\n\t*/\n\tPIXI.Text.prototype._renderCanvas = function(renderSession)\n\t{\n\t    if(this.dirty)\n\t    {\n\t        this.resolution = renderSession.resolution;\n\n\t        this.updateText();\n\t        this.dirty = false;\n\t    }\n\t     \n\t    PIXI.Sprite.prototype._renderCanvas.call(this, renderSession);\n\t};\n\n\t/**\n\t* Calculates the ascent, descent and fontSize of a given fontStyle\n\t*\n\t* @method determineFontProperties\n\t* @param fontStyle {Object}\n\t* @private\n\t*/\n\tPIXI.Text.prototype.determineFontProperties = function(fontStyle)\n\t{\n\t    var properties = PIXI.Text.fontPropertiesCache[fontStyle];\n\n\t    if(!properties)\n\t    {\n\t        properties = {};\n\t        \n\t        var canvas = PIXI.Text.fontPropertiesCanvas;\n\t        var context = PIXI.Text.fontPropertiesContext;\n\n\t        context.font = fontStyle;\n\n\t        var width = Math.ceil(context.measureText('|Mq').width);\n\t        var baseline = Math.ceil(context.measureText('M').width);\n\t        var height = 2 * baseline;\n\n\t        baseline = baseline * 1.4 | 0;\n\n\t        canvas.width = width;\n\t        canvas.height = height;\n\n\t        context.fillStyle = '#f00';\n\t        context.fillRect(0, 0, width, height);\n\n\t        context.font = fontStyle;\n\n\t        context.textBaseline = 'alphabetic';\n\t        context.fillStyle = '#000';\n\t        context.fillText('|MÉq', 0, baseline);\n\n\t        var imagedata = context.getImageData(0, 0, width, height).data;\n\t        var pixels = imagedata.length;\n\t        var line = width * 4;\n\n\t        var i, j;\n\n\t        var idx = 0;\n\t        var stop = false;\n\n\t        // ascent. scan from top to bottom until we find a non red pixel\n\t        for(i = 0; i < baseline; i++)\n\t        {\n\t            for(j = 0; j < line; j += 4)\n\t            {\n\t                if(imagedata[idx + j] !== 255)\n\t                {\n\t                    stop = true;\n\t                    break;\n\t                }\n\t            }\n\t            if(!stop)\n\t            {\n\t                idx += line;\n\t            }\n\t            else\n\t            {\n\t                break;\n\t            }\n\t        }\n\n\t        properties.ascent = baseline - i;\n\n\t        idx = pixels - line;\n\t        stop = false;\n\n\t        // descent. scan from bottom to top until we find a non red pixel\n\t        for(i = height; i > baseline; i--)\n\t        {\n\t            for(j = 0; j < line; j += 4)\n\t            {\n\t                if(imagedata[idx + j] !== 255)\n\t                {\n\t                    stop = true;\n\t                    break;\n\t                }\n\t            }\n\t            if(!stop)\n\t            {\n\t                idx -= line;\n\t            }\n\t            else\n\t            {\n\t                break;\n\t            }\n\t        }\n\n\t        properties.descent = i - baseline;\n\t        //TODO might need a tweak. kind of a temp fix!\n\t        properties.descent += 6;\n\t        properties.fontSize = properties.ascent + properties.descent;\n\n\t        PIXI.Text.fontPropertiesCache[fontStyle] = properties;\n\t    }\n\n\t    return properties;\n\t};\n\n\t/**\n\t * Applies newlines to a string to have it optimally fit into the horizontal\n\t * bounds set by the Text object's wordWrapWidth property.\n\t *\n\t * @method wordWrap\n\t * @param text {String}\n\t * @private\n\t */\n\tPIXI.Text.prototype.wordWrap = function(text)\n\t{\n\t    // Greedy wrapping algorithm that will wrap words as the line grows longer\n\t    // than its horizontal bounds.\n\t    var result = '';\n\t    var lines = text.split('\\n');\n\t    for (var i = 0; i < lines.length; i++)\n\t    {\n\t        var spaceLeft = this.style.wordWrapWidth;\n\t        var words = lines[i].split(' ');\n\t        for (var j = 0; j < words.length; j++)\n\t        {\n\t            var wordWidth = this.context.measureText(words[j]).width;\n\t            var wordWidthWithSpace = wordWidth + this.context.measureText(' ').width;\n\t            if(j === 0 || wordWidthWithSpace > spaceLeft)\n\t            {\n\t                // Skip printing the newline if it's the first word of the line that is\n\t                // greater than the word wrap width.\n\t                if(j > 0)\n\t                {\n\t                    result += '\\n';\n\t                }\n\t                result += words[j];\n\t                spaceLeft = this.style.wordWrapWidth - wordWidth;\n\t            }\n\t            else\n\t            {\n\t                spaceLeft -= wordWidthWithSpace;\n\t                result += ' ' + words[j];\n\t            }\n\t        }\n\n\t        if (i < lines.length-1)\n\t        {\n\t            result += '\\n';\n\t        }\n\t    }\n\t    return result;\n\t};\n\n\t/**\n\t* Returns the bounds of the Text as a rectangle. The bounds calculation takes the worldTransform into account.\n\t*\n\t* @method getBounds\n\t* @param matrix {Matrix} the transformation matrix of the Text\n\t* @return {Rectangle} the framing rectangle\n\t*/\n\tPIXI.Text.prototype.getBounds = function(matrix)\n\t{\n\t    if(this.dirty)\n\t    {\n\t        this.updateText();\n\t        this.dirty = false;\n\t    }\n\n\t    return PIXI.Sprite.prototype.getBounds.call(this, matrix);\n\t};\n\n\t/**\n\t * Destroys this text object.\n\t *\n\t * @method destroy\n\t * @param destroyBaseTexture {Boolean} whether to destroy the base texture as well\n\t */\n\tPIXI.Text.prototype.destroy = function(destroyBaseTexture)\n\t{\n\t    // make sure to reset the the context and canvas.. dont want this hanging around in memory!\n\t    this.context = null;\n\t    this.canvas = null;\n\n\t    this.texture.destroy(destroyBaseTexture === undefined ? true : destroyBaseTexture);\n\t};\n\n\tPIXI.Text.fontPropertiesCache = {};\n\tPIXI.Text.fontPropertiesCanvas = document.createElement('canvas');\n\tPIXI.Text.fontPropertiesContext = PIXI.Text.fontPropertiesCanvas.getContext('2d');\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * A BitmapText object will create a line or multiple lines of text using bitmap font. To split a line you can use '\\n', '\\r' or '\\r\\n' in your string.\n\t * You can generate the fnt files using\n\t * http://www.angelcode.com/products/bmfont/ for windows or\n\t * http://www.bmglyph.com/ for mac.\n\t *\n\t * @class BitmapText\n\t * @extends DisplayObjectContainer\n\t * @constructor\n\t * @param text {String} The copy that you would like the text to display\n\t * @param style {Object} The style parameters\n\t * @param style.font {String} The size (optional) and bitmap font id (required) eq 'Arial' or '20px Arial' (must have loaded previously)\n\t * @param [style.align='left'] {String} Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text\n\t */\n\tPIXI.BitmapText = function(text, style)\n\t{\n\t    PIXI.DisplayObjectContainer.call(this);\n\n\t    /**\n\t     * [read-only] The width of the overall text, different from fontSize,\n\t     * which is defined in the style object\n\t     *\n\t     * @property textWidth\n\t     * @type Number\n\t     * @readOnly\n\t     */\n\t    this.textWidth = 0;\n\n\t    /**\n\t     * [read-only] The height of the overall text, different from fontSize,\n\t     * which is defined in the style object\n\t     *\n\t     * @property textHeight\n\t     * @type Number\n\t     * @readOnly\n\t     */\n\t    this.textHeight = 0;\n\n\t    /**\n\t     * @property _pool\n\t     * @type Array\n\t     * @private\n\t     */\n\t    this._pool = [];\n\n\t    this.setText(text);\n\t    this.setStyle(style);\n\t    this.updateText();\n\n\t    /**\n\t     * The dirty state of this object.\n\t     * @property dirty\n\t     * @type Boolean\n\t     */\n\t    this.dirty = false;\n\t};\n\n\t// constructor\n\tPIXI.BitmapText.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);\n\tPIXI.BitmapText.prototype.constructor = PIXI.BitmapText;\n\n\t/**\n\t * Set the text string to be rendered.\n\t *\n\t * @method setText\n\t * @param text {String} The text that you would like displayed\n\t */\n\tPIXI.BitmapText.prototype.setText = function(text)\n\t{\n\t    this.text = text || ' ';\n\t    this.dirty = true;\n\t};\n\n\t/**\n\t * Set the style of the text\n\t * style.font {String} The size (optional) and bitmap font id (required) eq 'Arial' or '20px Arial' (must have loaded previously)\n\t * [style.align='left'] {String} Alignment for multiline text ('left', 'center' or 'right'), does not affect single lines of text\n\t *\n\t * @method setStyle\n\t * @param style {Object} The style parameters, contained as properties of an object\n\t */\n\tPIXI.BitmapText.prototype.setStyle = function(style)\n\t{\n\t    style = style || {};\n\t    style.align = style.align || 'left';\n\t    this.style = style;\n\n\t    var font = style.font.split(' ');\n\t    this.fontName = font[font.length - 1];\n\t    this.fontSize = font.length >= 2 ? parseInt(font[font.length - 2], 10) : PIXI.BitmapText.fonts[this.fontName].size;\n\n\t    this.dirty = true;\n\t    this.tint = style.tint;\n\t};\n\n\t/**\n\t * Renders text and updates it when needed\n\t *\n\t * @method updateText\n\t * @private\n\t */\n\tPIXI.BitmapText.prototype.updateText = function()\n\t{\n\t    var data = PIXI.BitmapText.fonts[this.fontName];\n\t    var pos = new PIXI.Point();\n\t    var prevCharCode = null;\n\t    var chars = [];\n\t    var maxLineWidth = 0;\n\t    var lineWidths = [];\n\t    var line = 0;\n\t    var scale = this.fontSize / data.size;\n\n\t    for(var i = 0; i < this.text.length; i++)\n\t    {\n\t        var charCode = this.text.charCodeAt(i);\n\n\t        if(/(?:\\r\\n|\\r|\\n)/.test(this.text.charAt(i)))\n\t        {\n\t            lineWidths.push(pos.x);\n\t            maxLineWidth = Math.max(maxLineWidth, pos.x);\n\t            line++;\n\n\t            pos.x = 0;\n\t            pos.y += data.lineHeight;\n\t            prevCharCode = null;\n\t            continue;\n\t        }\n\n\t        var charData = data.chars[charCode];\n\n\t        if(!charData) continue;\n\n\t        if(prevCharCode && charData.kerning[prevCharCode])\n\t        {\n\t            pos.x += charData.kerning[prevCharCode];\n\t        }\n\n\t        chars.push({texture:charData.texture, line: line, charCode: charCode, position: new PIXI.Point(pos.x + charData.xOffset, pos.y + charData.yOffset)});\n\t        pos.x += charData.xAdvance;\n\n\t        prevCharCode = charCode;\n\t    }\n\n\t    lineWidths.push(pos.x);\n\t    maxLineWidth = Math.max(maxLineWidth, pos.x);\n\n\t    var lineAlignOffsets = [];\n\n\t    for(i = 0; i <= line; i++)\n\t    {\n\t        var alignOffset = 0;\n\t        if(this.style.align === 'right')\n\t        {\n\t            alignOffset = maxLineWidth - lineWidths[i];\n\t        }\n\t        else if(this.style.align === 'center')\n\t        {\n\t            alignOffset = (maxLineWidth - lineWidths[i]) / 2;\n\t        }\n\t        lineAlignOffsets.push(alignOffset);\n\t    }\n\n\t    var lenChildren = this.children.length;\n\t    var lenChars = chars.length;\n\t    var tint = this.tint || 0xFFFFFF;\n\n\t    for(i = 0; i < lenChars; i++)\n\t    {\n\t        var c = i < lenChildren ? this.children[i] : this._pool.pop(); // get old child if have. if not - take from pool.\n\n\t        if (c) c.setTexture(chars[i].texture); // check if got one before.\n\t        else c = new PIXI.Sprite(chars[i].texture); // if no create new one.\n\n\t        c.position.x = (chars[i].position.x + lineAlignOffsets[chars[i].line]) * scale;\n\t        c.position.y = chars[i].position.y * scale;\n\t        c.scale.x = c.scale.y = scale;\n\t        c.tint = tint;\n\t        if (!c.parent) this.addChild(c);\n\t    }\n\n\t    // remove unnecessary children.\n\t    // and put their into the pool.\n\t    while(this.children.length > lenChars)\n\t    {\n\t        var child = this.getChildAt(this.children.length - 1);\n\t        this._pool.push(child);\n\t        this.removeChild(child);\n\t    }\n\n\t    this.textWidth = maxLineWidth * scale;\n\t    this.textHeight = (pos.y + data.lineHeight) * scale;\n\t};\n\n\t/**\n\t * Updates the transform of this object\n\t *\n\t * @method updateTransform\n\t * @private\n\t */\n\tPIXI.BitmapText.prototype.updateTransform = function()\n\t{\n\t    if(this.dirty)\n\t    {\n\t        this.updateText();\n\t        this.dirty = false;\n\t    }\n\n\t    PIXI.DisplayObjectContainer.prototype.updateTransform.call(this);\n\t};\n\n\tPIXI.BitmapText.fonts = {};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * Holds all information related to an Interaction event\n\t *\n\t * @class InteractionData\n\t * @constructor\n\t */\n\tPIXI.InteractionData = function()\n\t{\n\t    /**\n\t     * This point stores the global coords of where the touch/mouse event happened\n\t     *\n\t     * @property global\n\t     * @type Point\n\t     */\n\t    this.global = new PIXI.Point();\n\n\t    /**\n\t     * The target Sprite that was interacted with\n\t     *\n\t     * @property target\n\t     * @type Sprite\n\t     */\n\t    this.target = null;\n\n\t    /**\n\t     * When passed to an event handler, this will be the original DOM Event that was captured\n\t     *\n\t     * @property originalEvent\n\t     * @type Event\n\t     */\n\t    this.originalEvent = null;\n\t};\n\n\t/**\n\t * This will return the local coordinates of the specified displayObject for this InteractionData\n\t *\n\t * @method getLocalPosition\n\t * @param displayObject {DisplayObject} The DisplayObject that you would like the local coords off\n\t * @param [point] {Point} A Point object in which to store the value, optional (otherwise will create a new point)\n\t * @return {Point} A point containing the coordinates of the InteractionData position relative to the DisplayObject\n\t */\n\tPIXI.InteractionData.prototype.getLocalPosition = function(displayObject, point)\n\t{\n\t    var worldTransform = displayObject.worldTransform;\n\t    var global = this.global;\n\n\t    // do a cheeky transform to get the mouse coords;\n\t    var a00 = worldTransform.a, a01 = worldTransform.c, a02 = worldTransform.tx,\n\t        a10 = worldTransform.b, a11 = worldTransform.d, a12 = worldTransform.ty,\n\t        id = 1 / (a00 * a11 + a01 * -a10);\n\n\t    point = point || new PIXI.Point();\n\n\t    point.x = a11 * id * global.x + -a01 * id * global.y + (a12 * a01 - a02 * a11) * id;\n\t    point.y = a00 * id * global.y + -a10 * id * global.x + (-a12 * a00 + a02 * a10) * id;\n\n\t    // set the mouse coords...\n\t    return point;\n\t};\n\n\t// constructor\n\tPIXI.InteractionData.prototype.constructor = PIXI.InteractionData;\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t /**\n\t * The interaction manager deals with mouse and touch events. Any DisplayObject can be interactive\n\t * if its interactive parameter is set to true\n\t * This manager also supports multitouch.\n\t *\n\t * @class InteractionManager\n\t * @constructor\n\t * @param stage {Stage} The stage to handle interactions\n\t */\n\tPIXI.InteractionManager = function(stage)\n\t{\n\t    /**\n\t     * A reference to the stage\n\t     *\n\t     * @property stage\n\t     * @type Stage\n\t     */\n\t    this.stage = stage;\n\n\t    /**\n\t     * The mouse data\n\t     *\n\t     * @property mouse\n\t     * @type InteractionData\n\t     */\n\t    this.mouse = new PIXI.InteractionData();\n\n\t    /**\n\t     * An object that stores current touches (InteractionData) by id reference\n\t     *\n\t     * @property touches\n\t     * @type Object\n\t     */\n\t    this.touches = {};\n\n\t    /**\n\t     * @property tempPoint\n\t     * @type Point\n\t     * @private\n\t     */\n\t    this.tempPoint = new PIXI.Point();\n\n\t    /**\n\t     * @property mouseoverEnabled\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    this.mouseoverEnabled = true;\n\n\t    /**\n\t     * Tiny little interactiveData pool !\n\t     *\n\t     * @property pool\n\t     * @type Array\n\t     */\n\t    this.pool = [];\n\n\t    /**\n\t     * An array containing all the iterative items from the our interactive tree\n\t     * @property interactiveItems\n\t     * @type Array\n\t     * @private\n\t     */\n\t    this.interactiveItems = [];\n\n\t    /**\n\t     * Our canvas\n\t     * @property interactionDOMElement\n\t     * @type HTMLCanvasElement\n\t     * @private\n\t     */\n\t    this.interactionDOMElement = null;\n\n\t    //this will make it so that you don't have to call bind all the time\n\n\t    /**\n\t     * @property onMouseMove\n\t     * @type Function\n\t     */\n\t    this.onMouseMove = this.onMouseMove.bind( this );\n\n\t    /**\n\t     * @property onMouseDown\n\t     * @type Function\n\t     */\n\t    this.onMouseDown = this.onMouseDown.bind(this);\n\n\t    /**\n\t     * @property onMouseOut\n\t     * @type Function\n\t     */\n\t    this.onMouseOut = this.onMouseOut.bind(this);\n\n\t    /**\n\t     * @property onMouseUp\n\t     * @type Function\n\t     */\n\t    this.onMouseUp = this.onMouseUp.bind(this);\n\n\t    /**\n\t     * @property onTouchStart\n\t     * @type Function\n\t     */\n\t    this.onTouchStart = this.onTouchStart.bind(this);\n\n\t    /**\n\t     * @property onTouchEnd\n\t     * @type Function\n\t     */\n\t    this.onTouchEnd = this.onTouchEnd.bind(this);\n\n\t    /**\n\t     * @property onTouchCancel\n\t     * @type Function\n\t     */\n\t    this.onTouchCancel = this.onTouchCancel.bind(this);\n\n\t    /**\n\t     * @property onTouchMove\n\t     * @type Function\n\t     */\n\t    this.onTouchMove = this.onTouchMove.bind(this);\n\n\t    /**\n\t     * @property last\n\t     * @type Number\n\t     */\n\t    this.last = 0;\n\n\t    /**\n\t     * The css style of the cursor that is being used\n\t     * @property currentCursorStyle\n\t     * @type String\n\t     */\n\t    this.currentCursorStyle = 'inherit';\n\n\t    /**\n\t     * Is set to true when the mouse is moved out of the canvas\n\t     * @property mouseOut\n\t     * @type Boolean\n\t     */\n\t    this.mouseOut = false;\n\n\t    /**\n\t     * @property resolution\n\t     * @type Number\n\t     */\n\t    this.resolution = 1;\n\n\t    // used for hit testing\n\t    this._tempPoint = new PIXI.Point();\n\t};\n\n\t// constructor\n\tPIXI.InteractionManager.prototype.constructor = PIXI.InteractionManager;\n\n\t/**\n\t * Collects an interactive sprite recursively to have their interactions managed\n\t *\n\t * @method collectInteractiveSprite\n\t * @param displayObject {DisplayObject} the displayObject to collect\n\t * @param iParent {DisplayObject} the display object's parent\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.collectInteractiveSprite = function(displayObject, iParent)\n\t{\n\t    var children = displayObject.children;\n\t    var length = children.length;\n\n\t    // make an interaction tree... {item.__interactiveParent}\n\t    for (var i = length - 1; i >= 0; i--)\n\t    {\n\t        var child = children[i];\n\n\t        // push all interactive bits\n\t        if (child._interactive)\n\t        {\n\t            iParent.interactiveChildren = true;\n\t            //child.__iParent = iParent;\n\t            this.interactiveItems.push(child);\n\n\t            if (child.children.length > 0) {\n\t                this.collectInteractiveSprite(child, child);\n\t            }\n\t        }\n\t        else\n\t        {\n\t            child.__iParent = null;\n\t            if (child.children.length > 0)\n\t            {\n\t                this.collectInteractiveSprite(child, iParent);\n\t            }\n\t        }\n\n\t    }\n\t};\n\n\t/**\n\t * Sets the target for event delegation\n\t *\n\t * @method setTarget\n\t * @param target {WebGLRenderer|CanvasRenderer} the renderer to bind events to\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.setTarget = function(target)\n\t{\n\t    this.target = target;\n\t    this.resolution = target.resolution;\n\n\t    // Check if the dom element has been set. If it has don't do anything.\n\t    if (this.interactionDOMElement !== null) return;\n\n\t    this.setTargetDomElement (target.view);\n\t};\n\n\t/**\n\t * Sets the DOM element which will receive mouse/touch events. This is useful for when you have other DOM\n\t * elements on top of the renderers Canvas element. With this you'll be able to delegate another DOM element\n\t * to receive those events\n\t *\n\t * @method setTargetDomElement\n\t * @param domElement {DOMElement} the DOM element which will receive mouse and touch events\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.setTargetDomElement = function(domElement)\n\t{\n\t    this.removeEvents();\n\n\t    if (window.navigator.msPointerEnabled)\n\t    {\n\t        // time to remove some of that zoom in ja..\n\t        domElement.style['-ms-content-zooming'] = 'none';\n\t        domElement.style['-ms-touch-action'] = 'none';\n\t    }\n\n\t    this.interactionDOMElement = domElement;\n\n\t    domElement.addEventListener('mousemove',  this.onMouseMove, true);\n\t    domElement.addEventListener('mousedown',  this.onMouseDown, true);\n\t    domElement.addEventListener('mouseout',   this.onMouseOut, true);\n\n\t    // aint no multi touch just yet!\n\t    domElement.addEventListener('touchstart', this.onTouchStart, true);\n\t    domElement.addEventListener('touchend', this.onTouchEnd, true);\n\t    domElement.addEventListener('touchleave', this.onTouchCancel, true);\n\t    domElement.addEventListener('touchcancel', this.onTouchCancel, true);\n\t    domElement.addEventListener('touchmove', this.onTouchMove, true);\n\n\t    window.addEventListener('mouseup',  this.onMouseUp, true);\n\t};\n\n\t/**\n\t * @method removeEvents\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.removeEvents = function()\n\t{\n\t    if (!this.interactionDOMElement) return;\n\n\t    this.interactionDOMElement.style['-ms-content-zooming'] = '';\n\t    this.interactionDOMElement.style['-ms-touch-action'] = '';\n\n\t    this.interactionDOMElement.removeEventListener('mousemove',  this.onMouseMove, true);\n\t    this.interactionDOMElement.removeEventListener('mousedown',  this.onMouseDown, true);\n\t    this.interactionDOMElement.removeEventListener('mouseout',   this.onMouseOut, true);\n\n\t    // aint no multi touch just yet!\n\t    this.interactionDOMElement.removeEventListener('touchstart', this.onTouchStart, true);\n\t    this.interactionDOMElement.removeEventListener('touchend', this.onTouchEnd, true);\n\t    this.interactionDOMElement.removeEventListener('touchleave', this.onTouchCancel, true);\n\t    this.interactionDOMElement.removeEventListener('touchcancel', this.onTouchCancel, true);\n\t    this.interactionDOMElement.removeEventListener('touchmove', this.onTouchMove, true);\n\n\t    this.interactionDOMElement = null;\n\n\t    window.removeEventListener('mouseup',  this.onMouseUp, true);\n\t};\n\n\t/**\n\t * updates the state of interactive objects\n\t *\n\t * @method update\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.update = function()\n\t{\n\t    if (!this.target) return;\n\n\t    // frequency of 30fps??\n\t    var now = Date.now();\n\t    var diff = now - this.last;\n\t    diff = (diff * PIXI.INTERACTION_FREQUENCY ) / 1000;\n\t    if (diff < 1) return;\n\t    this.last = now;\n\n\t    var i = 0;\n\n\t    // ok.. so mouse events??\n\t    // yes for now :)\n\t    // OPTIMISE - how often to check??\n\t    if (this.dirty)\n\t    {\n\t        this.rebuildInteractiveGraph();\n\t    }\n\n\t    // loop through interactive objects!\n\t    var length = this.interactiveItems.length;\n\t    var cursor = 'inherit';\n\t    var over = false;\n\n\t    for (i = 0; i < length; i++)\n\t    {\n\t        var item = this.interactiveItems[i];\n\n\t        // OPTIMISATION - only calculate every time if the mousemove function exists..\n\t        // OK so.. does the object have any other interactive functions?\n\t        // hit-test the clip!\n\t       // if (item.mouseover || item.mouseout || item.buttonMode)\n\t       // {\n\t        // ok so there are some functions so lets hit test it..\n\t        item.__hit = this.hitTest(item, this.mouse);\n\t        this.mouse.target = item;\n\t        // ok so deal with interactions..\n\t        // looks like there was a hit!\n\t        if (item.__hit && !over)\n\t        {\n\t            if (item.buttonMode) cursor = item.defaultCursor;\n\n\t            if (!item.interactiveChildren)\n\t            {\n\t                over = true;\n\t            }\n\n\t            if (!item.__isOver)\n\t            {\n\t                if (item.mouseover)\n\t                {\n\t                    item.mouseover (this.mouse);\n\t                }\n\t                item.__isOver = true;\n\t            }\n\t        }\n\t        else\n\t        {\n\t            if (item.__isOver)\n\t            {\n\t                // roll out!\n\t                if (item.mouseout)\n\t                {\n\t                    item.mouseout (this.mouse);\n\t                }\n\t                item.__isOver = false;\n\t            }\n\t        }\n\t    }\n\n\t    if (this.currentCursorStyle !== cursor)\n\t    {\n\t        this.currentCursorStyle = cursor;\n\t        this.interactionDOMElement.style.cursor = cursor;\n\t    }\n\t};\n\n\t/**\n\t * @method rebuildInteractiveGraph\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.rebuildInteractiveGraph = function()\n\t{\n\t    this.dirty = false;\n\n\t    var len = this.interactiveItems.length;\n\n\t    for (var i = 0; i < len; i++) {\n\t        this.interactiveItems[i].interactiveChildren = false;\n\t    }\n\n\t    this.interactiveItems = [];\n\n\t    if (this.stage.interactive)\n\t    {\n\t        this.interactiveItems.push(this.stage);\n\t    }\n\n\t    // Go through and collect all the objects that are interactive..\n\t    this.collectInteractiveSprite(this.stage, this.stage);\n\t};\n\n\t/**\n\t * Is called when the mouse moves across the renderer element\n\t *\n\t * @method onMouseMove\n\t * @param event {Event} The DOM event of the mouse moving\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.onMouseMove = function(event)\n\t{\n\t    if (this.dirty)\n\t    {\n\t        this.rebuildInteractiveGraph();\n\t    }\n\n\t    this.mouse.originalEvent = event;\n\n\t    // TODO optimize by not check EVERY TIME! maybe half as often? //\n\t    var rect = this.interactionDOMElement.getBoundingClientRect();\n\n\t    this.mouse.global.x = (event.clientX - rect.left) * (this.target.width / rect.width) / this.resolution;\n\t    this.mouse.global.y = (event.clientY - rect.top) * ( this.target.height / rect.height) / this.resolution;\n\n\t    var length = this.interactiveItems.length;\n\n\t    for (var i = 0; i < length; i++)\n\t    {\n\t        var item = this.interactiveItems[i];\n\n\t        // Call the function!\n\t        if (item.mousemove)\n\t        {\n\t            item.mousemove(this.mouse);\n\t        }\n\t    }\n\t};\n\n\t/**\n\t * Is called when the mouse button is pressed down on the renderer element\n\t *\n\t * @method onMouseDown\n\t * @param event {Event} The DOM event of a mouse button being pressed down\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.onMouseDown = function(event)\n\t{\n\t    if (this.dirty)\n\t    {\n\t        this.rebuildInteractiveGraph();\n\t    }\n\n\t    this.mouse.originalEvent = event;\n\n\t    if (PIXI.AUTO_PREVENT_DEFAULT)\n\t    {\n\t        this.mouse.originalEvent.preventDefault();\n\t    }\n\n\t    // loop through interaction tree...\n\t    // hit test each item! ->\n\t    // get interactive items under point??\n\t    //stage.__i\n\t    var length = this.interactiveItems.length;\n\n\t    var e = this.mouse.originalEvent;\n\t    var isRightButton = e.button === 2 || e.which === 3;\n\t    var downFunction = isRightButton ? 'rightdown' : 'mousedown';\n\t    var clickFunction = isRightButton ? 'rightclick' : 'click';\n\t    var buttonIsDown = isRightButton ? '__rightIsDown' : '__mouseIsDown';\n\t    var isDown = isRightButton ? '__isRightDown' : '__isDown';\n\n\t    // while\n\t    // hit test\n\t    for (var i = 0; i < length; i++)\n\t    {\n\t        var item = this.interactiveItems[i];\n\n\t        if (item[downFunction] || item[clickFunction])\n\t        {\n\t            item[buttonIsDown] = true;\n\t            item.__hit = this.hitTest(item, this.mouse);\n\n\t            if (item.__hit)\n\t            {\n\t                //call the function!\n\t                if (item[downFunction])\n\t                {\n\t                    item[downFunction](this.mouse);\n\t                }\n\t                item[isDown] = true;\n\n\t                // just the one!\n\t                if (!item.interactiveChildren) break;\n\t            }\n\t        }\n\t    }\n\t};\n\n\t/**\n\t * Is called when the mouse is moved out of the renderer element\n\t *\n\t * @method onMouseOut\n\t * @param event {Event} The DOM event of a mouse being moved out\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.onMouseOut = function(event)\n\t{\n\t    if (this.dirty)\n\t    {\n\t        this.rebuildInteractiveGraph();\n\t    }\n\n\t    this.mouse.originalEvent = event;\n\n\t    var length = this.interactiveItems.length;\n\n\t    this.interactionDOMElement.style.cursor = 'inherit';\n\n\t    for (var i = 0; i < length; i++)\n\t    {\n\t        var item = this.interactiveItems[i];\n\t        if (item.__isOver)\n\t        {\n\t            this.mouse.target = item;\n\t            if (item.mouseout)\n\t            {\n\t                item.mouseout(this.mouse);\n\t            }\n\t            item.__isOver = false;\n\t        }\n\t    }\n\n\t    this.mouseOut = true;\n\n\t    // move the mouse to an impossible position\n\t    this.mouse.global.x = -10000;\n\t    this.mouse.global.y = -10000;\n\t};\n\n\t/**\n\t * Is called when the mouse button is released on the renderer element\n\t *\n\t * @method onMouseUp\n\t * @param event {Event} The DOM event of a mouse button being released\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.onMouseUp = function(event)\n\t{\n\t    if (this.dirty)\n\t    {\n\t        this.rebuildInteractiveGraph();\n\t    }\n\n\t    this.mouse.originalEvent = event;\n\n\t    var length = this.interactiveItems.length;\n\t    var up = false;\n\n\t    var e = this.mouse.originalEvent;\n\t    var isRightButton = e.button === 2 || e.which === 3;\n\n\t    var upFunction = isRightButton ? 'rightup' : 'mouseup';\n\t    var clickFunction = isRightButton ? 'rightclick' : 'click';\n\t    var upOutsideFunction = isRightButton ? 'rightupoutside' : 'mouseupoutside';\n\t    var isDown = isRightButton ? '__isRightDown' : '__isDown';\n\n\t    for (var i = 0; i < length; i++)\n\t    {\n\t        var item = this.interactiveItems[i];\n\n\t        if (item[clickFunction] || item[upFunction] || item[upOutsideFunction])\n\t        {\n\t            item.__hit = this.hitTest(item, this.mouse);\n\n\t            if (item.__hit && !up)\n\t            {\n\t                //call the function!\n\t                if (item[upFunction])\n\t                {\n\t                    item[upFunction](this.mouse);\n\t                }\n\t                if (item[isDown])\n\t                {\n\t                    if (item[clickFunction])\n\t                    {\n\t                        item[clickFunction](this.mouse);\n\t                    }\n\t                }\n\n\t                if (!item.interactiveChildren)\n\t                {\n\t                    up = true;\n\t                }\n\t            }\n\t            else\n\t            {\n\t                if (item[isDown])\n\t                {\n\t                    if (item[upOutsideFunction]) item[upOutsideFunction](this.mouse);\n\t                }\n\t            }\n\n\t            item[isDown] = false;\n\t        }\n\t    }\n\t};\n\n\t/**\n\t * Tests if the current mouse coordinates hit a sprite\n\t *\n\t * @method hitTest\n\t * @param item {DisplayObject} The displayObject to test for a hit\n\t * @param interactionData {InteractionData} The interactionData object to update in the case there is a hit\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.hitTest = function(item, interactionData)\n\t{\n\t    var global = interactionData.global;\n\n\t    if (!item.worldVisible)\n\t    {\n\t        return false;\n\t    }\n\n\t    // map the global point to local space.\n\t    item.worldTransform.applyInverse(global,  this._tempPoint);\n\n\t    var x = this._tempPoint.x,\n\t        y = this._tempPoint.y,\n\t        i;\n\n\t    interactionData.target = item;\n\n\t    //a sprite or display object with a hit area defined\n\t    if (item.hitArea && item.hitArea.contains)\n\t    {\n\t        return item.hitArea.contains(x, y);\n\t    }\n\t    // a sprite with no hitarea defined\n\t    else if(item instanceof PIXI.Sprite)\n\t    {\n\t        var width = item.texture.frame.width;\n\t        var height = item.texture.frame.height;\n\t        var x1 = -width * item.anchor.x;\n\t        var y1;\n\n\t        if (x > x1 && x < x1 + width)\n\t        {\n\t            y1 = -height * item.anchor.y;\n\n\t            if (y > y1 && y < y1 + height)\n\t            {\n\t                // set the target property if a hit is true!\n\t                return true;\n\t            }\n\t        }\n\t    }\n\t    else if(item instanceof PIXI.Graphics)\n\t    {\n\t        var graphicsData = item.graphicsData;\n\t        for (i = 0; i < graphicsData.length; i++)\n\t        {\n\t            var data = graphicsData[i];\n\t            if(!data.fill)continue;\n\n\t            // only deal with fills..\n\t            if(data.shape)\n\t            {\n\t                if(data.shape.contains(x, y))\n\t                {\n\t                    //interactionData.target = item;\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t    }\n\n\t    var length = item.children.length;\n\n\t    for (i = 0; i < length; i++)\n\t    {\n\t        var tempItem = item.children[i];\n\t        var hit = this.hitTest(tempItem, interactionData);\n\t        if (hit)\n\t        {\n\t            // hmm.. TODO SET CORRECT TARGET?\n\t            interactionData.target = item;\n\t            return true;\n\t        }\n\t    }\n\t    return false;\n\t};\n\n\t/**\n\t * Is called when a touch is moved across the renderer element\n\t *\n\t * @method onTouchMove\n\t * @param event {Event} The DOM event of a touch moving across the renderer view\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.onTouchMove = function(event)\n\t{\n\t    if (this.dirty)\n\t    {\n\t        this.rebuildInteractiveGraph();\n\t    }\n\n\t    var rect = this.interactionDOMElement.getBoundingClientRect();\n\t    var changedTouches = event.changedTouches;\n\t    var touchData;\n\t    var i = 0;\n\n\t    for (i = 0; i < changedTouches.length; i++)\n\t    {\n\t        var touchEvent = changedTouches[i];\n\t        touchData = this.touches[touchEvent.identifier];\n\t        touchData.originalEvent = event;\n\n\t        // update the touch position\n\t        touchData.global.x = ( (touchEvent.clientX - rect.left) * (this.target.width / rect.width) ) / this.resolution;\n\t        touchData.global.y = ( (touchEvent.clientY - rect.top)  * (this.target.height / rect.height) )  / this.resolution;\n\t        if (navigator.isCocoonJS && !rect.left && !rect.top && !event.target.style.width && !event.target.style.height)\n\t        {\n\t            //Support for CocoonJS fullscreen scale modes\n\t            touchData.global.x = touchEvent.clientX;\n\t            touchData.global.y = touchEvent.clientY;\n\t        }\n\n\t        for (var j = 0; j < this.interactiveItems.length; j++)\n\t        {\n\t            var item = this.interactiveItems[j];\n\t            if (item.touchmove && item.__touchData && item.__touchData[touchEvent.identifier])\n\t            {\n\t                item.touchmove(touchData);\n\t            }\n\t        }\n\t    }\n\t};\n\n\t/**\n\t * Is called when a touch is started on the renderer element\n\t *\n\t * @method onTouchStart\n\t * @param event {Event} The DOM event of a touch starting on the renderer view\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.onTouchStart = function(event)\n\t{\n\t    if (this.dirty)\n\t    {\n\t        this.rebuildInteractiveGraph();\n\t    }\n\n\t    var rect = this.interactionDOMElement.getBoundingClientRect();\n\n\t    if (PIXI.AUTO_PREVENT_DEFAULT)\n\t    {\n\t        event.preventDefault();\n\t    }\n\n\t    var changedTouches = event.changedTouches;\n\t    for (var i=0; i < changedTouches.length; i++)\n\t    {\n\t        var touchEvent = changedTouches[i];\n\n\t        var touchData = this.pool.pop();\n\t        if (!touchData)\n\t        {\n\t            touchData = new PIXI.InteractionData();\n\t        }\n\n\t        touchData.originalEvent = event;\n\n\t        this.touches[touchEvent.identifier] = touchData;\n\t        touchData.global.x = ( (touchEvent.clientX - rect.left) * (this.target.width / rect.width) ) / this.resolution;\n\t        touchData.global.y = ( (touchEvent.clientY - rect.top)  * (this.target.height / rect.height) ) / this.resolution;\n\t        if (navigator.isCocoonJS && !rect.left && !rect.top && !event.target.style.width && !event.target.style.height)\n\t        {\n\t            //Support for CocoonJS fullscreen scale modes\n\t            touchData.global.x = touchEvent.clientX;\n\t            touchData.global.y = touchEvent.clientY;\n\t        }\n\n\t        var length = this.interactiveItems.length;\n\n\t        for (var j = 0; j < length; j++)\n\t        {\n\t            var item = this.interactiveItems[j];\n\n\t            if (item.touchstart || item.tap)\n\t            {\n\t                item.__hit = this.hitTest(item, touchData);\n\n\t                if (item.__hit)\n\t                {\n\t                    //call the function!\n\t                    if (item.touchstart)item.touchstart(touchData);\n\t                    item.__isDown = true;\n\t                    item.__touchData = item.__touchData || {};\n\t                    item.__touchData[touchEvent.identifier] = touchData;\n\n\t                    if (!item.interactiveChildren) break;\n\t                }\n\t            }\n\t        }\n\t    }\n\t};\n\n\t/**\n\t * Is called when a touch is ended on the renderer element\n\t *\n\t * @method onTouchEnd\n\t * @param event {Event} The DOM event of a touch ending on the renderer view\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.onTouchEnd = function(event)\n\t{\n\t    if (this.dirty)\n\t    {\n\t        this.rebuildInteractiveGraph();\n\t    }\n\n\t    var rect = this.interactionDOMElement.getBoundingClientRect();\n\t    var changedTouches = event.changedTouches;\n\n\t    for (var i=0; i < changedTouches.length; i++)\n\t    {\n\t        var touchEvent = changedTouches[i];\n\t        var touchData = this.touches[touchEvent.identifier];\n\t        var up = false;\n\t        touchData.global.x = ( (touchEvent.clientX - rect.left) * (this.target.width / rect.width) ) / this.resolution;\n\t        touchData.global.y = ( (touchEvent.clientY - rect.top)  * (this.target.height / rect.height) ) / this.resolution;\n\t        if (navigator.isCocoonJS && !rect.left && !rect.top && !event.target.style.width && !event.target.style.height)\n\t        {\n\t            //Support for CocoonJS fullscreen scale modes\n\t            touchData.global.x = touchEvent.clientX;\n\t            touchData.global.y = touchEvent.clientY;\n\t        }\n\n\t        var length = this.interactiveItems.length;\n\t        for (var j = 0; j < length; j++)\n\t        {\n\t            var item = this.interactiveItems[j];\n\n\t            if (item.__touchData && item.__touchData[touchEvent.identifier])\n\t            {\n\n\t                item.__hit = this.hitTest(item, item.__touchData[touchEvent.identifier]);\n\n\t                // so this one WAS down...\n\t                touchData.originalEvent = event;\n\t                // hitTest??\n\n\t                if (item.touchend || item.tap)\n\t                {\n\t                    if (item.__hit && !up)\n\t                    {\n\t                        if (item.touchend)\n\t                        {\n\t                            item.touchend(touchData);\n\t                        }\n\t                        if (item.__isDown && item.tap)\n\t                        {\n\t                            item.tap(touchData);\n\t                        }\n\t                        if (!item.interactiveChildren)\n\t                        {\n\t                            up = true;\n\t                        }\n\t                    }\n\t                    else\n\t                    {\n\t                        if (item.__isDown && item.touchendoutside)\n\t                        {\n\t                            item.touchendoutside(touchData);\n\t                        }\n\t                    }\n\n\t                    item.__isDown = false;\n\t                }\n\n\t                item.__touchData[touchEvent.identifier] = null;\n\t            }\n\t        }\n\t        // remove the touch..\n\t        this.pool.push(touchData);\n\t        this.touches[touchEvent.identifier] = null;\n\t    }\n\t};\n\n\t/**\n\t * Is called when a touch is canceled\n\t *\n\t * @method onTouchCancel\n\t * @param event {Event} The DOM event of a touch canceled\n\t * @private\n\t */\n\tPIXI.InteractionManager.prototype.onTouchCancel = function(event)\n\t{\n\t    if (this.dirty)\n\t    {\n\t        this.rebuildInteractiveGraph();\n\t    }\n\n\t    var rect = this.interactionDOMElement.getBoundingClientRect();\n\t    var changedTouches = event.changedTouches;\n\n\t    for (var i=0; i < changedTouches.length; i++)\n\t    {\n\t        var touchEvent = changedTouches[i];\n\t        var touchData = this.touches[touchEvent.identifier];\n\t        var up = false;\n\t        touchData.global.x = ( (touchEvent.clientX - rect.left) * (this.target.width / rect.width) ) / this.resolution;\n\t        touchData.global.y = ( (touchEvent.clientY - rect.top)  * (this.target.height / rect.height) ) / this.resolution;\n\t        if (navigator.isCocoonJS && !rect.left && !rect.top && !event.target.style.width && !event.target.style.height)\n\t        {\n\t            //Support for CocoonJS fullscreen scale modes\n\t            touchData.global.x = touchEvent.clientX;\n\t            touchData.global.y = touchEvent.clientY;\n\t        }\n\n\t        var length = this.interactiveItems.length;\n\t        for (var j = 0; j < length; j++)\n\t        {\n\t            var item = this.interactiveItems[j];\n\n\t            if (item.__touchData && item.__touchData[touchEvent.identifier])\n\t            {\n\n\t                item.__hit = this.hitTest(item, item.__touchData[touchEvent.identifier]);\n\n\t                // so this one WAS down...\n\t                touchData.originalEvent = event;\n\t                // hitTest??\n\n\t                if (item.touchcancel && !up)\n\t                {\n\t                    item.touchcancel(touchData);\n\t                    if (!item.interactiveChildren)\n\t                    {\n\t                        up = true;\n\t                    }\n\t                }\n\n\t                item.__isDown = false;\n\t                item.__touchData[touchEvent.identifier] = null;\n\t            }\n\t        }\n\t        // remove the touch..\n\t        this.pool.push(touchData);\n\t        this.touches[touchEvent.identifier] = null;\n\t    }\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * A Stage represents the root of the display tree. Everything connected to the stage is rendered\n\t *\n\t * @class Stage\n\t * @extends DisplayObjectContainer\n\t * @constructor\n\t * @param backgroundColor {Number} the background color of the stage, you have to pass this in is in hex format\n\t *      like: 0xFFFFFF for white\n\t * \n\t * Creating a stage is a mandatory process when you use Pixi, which is as simple as this : \n\t * var stage = new PIXI.Stage(0xFFFFFF);\n\t * where the parameter given is the background colour of the stage, in hex\n\t * you will use this stage instance to add your sprites to it and therefore to the renderer\n\t * Here is how to add a sprite to the stage : \n\t * stage.addChild(sprite);\n\t */\n\tPIXI.Stage = function(backgroundColor)\n\t{\n\t    PIXI.DisplayObjectContainer.call( this );\n\n\t    /**\n\t     * [read-only] Current transform of the object based on world (parent) factors\n\t     *\n\t     * @property worldTransform\n\t     * @type Matrix\n\t     * @readOnly\n\t     * @private\n\t     */\n\t    this.worldTransform = new PIXI.Matrix();\n\n\t    /**\n\t     * Whether or not the stage is interactive\n\t     *\n\t     * @property interactive\n\t     * @type Boolean\n\t     */\n\t    this.interactive = true;\n\n\t    /**\n\t     * The interaction manage for this stage, manages all interactive activity on the stage\n\t     *\n\t     * @property interactionManager\n\t     * @type InteractionManager\n\t     */\n\t    this.interactionManager = new PIXI.InteractionManager(this);\n\n\t    /**\n\t     * Whether the stage is dirty and needs to have interactions updated\n\t     *\n\t     * @property dirty\n\t     * @type Boolean\n\t     * @private\n\t     */\n\t    this.dirty = true;\n\n\t    //the stage is its own stage\n\t    this.stage = this;\n\n\t    //optimize hit detection a bit\n\t    this.stage.hitArea = new PIXI.Rectangle(0, 0, 100000, 100000);\n\n\t    this.setBackgroundColor(backgroundColor);\n\t};\n\n\t// constructor\n\tPIXI.Stage.prototype = Object.create( PIXI.DisplayObjectContainer.prototype );\n\tPIXI.Stage.prototype.constructor = PIXI.Stage;\n\n\t/**\n\t * Sets another DOM element which can receive mouse/touch interactions instead of the default Canvas element.\n\t * This is useful for when you have other DOM elements on top of the Canvas element.\n\t *\n\t * @method setInteractionDelegate\n\t * @param domElement {DOMElement} This new domElement which will receive mouse/touch events\n\t */\n\tPIXI.Stage.prototype.setInteractionDelegate = function(domElement)\n\t{\n\t    this.interactionManager.setTargetDomElement( domElement );\n\t};\n\n\t/*\n\t * Updates the object transform for rendering\n\t *\n\t * @method updateTransform\n\t * @private\n\t */\n\tPIXI.Stage.prototype.updateTransform = function()\n\t{\n\t    this.worldAlpha = 1;\n\n\t    for(var i=0,j=this.children.length; i<j; i++)\n\t    {\n\t        this.children[i].updateTransform();\n\t    }\n\n\t    if(this.dirty)\n\t    {\n\t        this.dirty = false;\n\t        // update interactive!\n\t        this.interactionManager.dirty = true;\n\t    }\n\n\t    if(this.interactive)this.interactionManager.update();\n\t};\n\n\t/**\n\t * Sets the background color for the stage\n\t *\n\t * @method setBackgroundColor\n\t * @param backgroundColor {Number} the color of the background, easiest way to pass this in is in hex format\n\t *      like: 0xFFFFFF for white\n\t */\n\tPIXI.Stage.prototype.setBackgroundColor = function(backgroundColor)\n\t{\n\t    this.backgroundColor = backgroundColor || 0x000000;\n\t    this.backgroundColorSplit = PIXI.hex2rgb(this.backgroundColor);\n\t    var hex = this.backgroundColor.toString(16);\n\t    hex = '000000'.substr(0, 6 - hex.length) + hex;\n\t    this.backgroundColorString = '#' + hex;\n\t};\n\n\t/**\n\t * This will return the point containing global coordinates of the mouse.\n\t *\n\t * @method getMousePosition\n\t * @return {Point} A point containing the coordinates of the global InteractionData position.\n\t */\n\tPIXI.Stage.prototype.getMousePosition = function()\n\t{\n\t    return this.interactionManager.mouse.global;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\t \n\t// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n\t// requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\n\n\t// MIT license\n\n\t/**\n\t * A polyfill for requestAnimationFrame\n\t * You can actually use both requestAnimationFrame and requestAnimFrame, \n\t * you will still benefit from the polyfill\n\t *\n\t * @method requestAnimationFrame\n\t */\n\n\t/**\n\t * A polyfill for cancelAnimationFrame\n\t *\n\t * @method cancelAnimationFrame\n\t */\n\t(function(window) {\n\t    var lastTime = 0;\n\t    var vendors = ['ms', 'moz', 'webkit', 'o'];\n\t    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n\t        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] ||\n\t            window[vendors[x] + 'CancelRequestAnimationFrame'];\n\t    }\n\n\t    if (!window.requestAnimationFrame) {\n\t        window.requestAnimationFrame = function(callback) {\n\t            var currTime = new Date().getTime();\n\t            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n\t              timeToCall);\n\t            lastTime = currTime + timeToCall;\n\t            return id;\n\t        };\n\t    }\n\n\t    if (!window.cancelAnimationFrame) {\n\t        window.cancelAnimationFrame = function(id) {\n\t            clearTimeout(id);\n\t        };\n\t    }\n\n\t    window.requestAnimFrame = window.requestAnimationFrame;\n\t})(this);\n\n\t/**\n\t * Converts a hex color number to an [R, G, B] array\n\t *\n\t * @method hex2rgb\n\t * @param hex {Number}\n\t */\n\tPIXI.hex2rgb = function(hex) {\n\t    return [(hex >> 16 & 0xFF) / 255, ( hex >> 8 & 0xFF) / 255, (hex & 0xFF)/ 255];\n\t};\n\n\t/**\n\t * Converts a color as an [R, G, B] array to a hex number\n\t *\n\t * @method rgb2hex\n\t * @param rgb {Array}\n\t */\n\tPIXI.rgb2hex = function(rgb) {\n\t    return ((rgb[0]*255 << 16) + (rgb[1]*255 << 8) + rgb[2]*255);\n\t};\n\n\t/**\n\t * A polyfill for Function.prototype.bind\n\t *\n\t * @method bind\n\t */\n\tif (typeof Function.prototype.bind !== 'function') {\n\t    Function.prototype.bind = (function () {\n\t        return function (thisArg) {\n\t            var target = this, i = arguments.length - 1, boundArgs = [];\n\t            if (i > 0)\n\t            {\n\t                boundArgs.length = i;\n\t                while (i--) boundArgs[i] = arguments[i + 1];\n\t            }\n\n\t            if (typeof target !== 'function') throw new TypeError();\n\n\t            function bound() {\n\t                var i = arguments.length, args = new Array(i);\n\t                while (i--) args[i] = arguments[i];\n\t                args = boundArgs.concat(args);\n\t                return target.apply(this instanceof bound ? this : thisArg, args);\n\t            }\n\n\t            bound.prototype = (function F(proto) {\n\t                if (proto) F.prototype = proto;\n\t                if (!(this instanceof F)) return new F();\n\t            })(target.prototype);\n\n\t            return bound;\n\t        };\n\t    })();\n\t}\n\n\t/**\n\t * A wrapper for ajax requests to be handled cross browser\n\t *\n\t * @class AjaxRequest\n\t * @constructor\n\t */\n\tPIXI.AjaxRequest = function()\n\t{\n\t    var activexmodes = ['Msxml2.XMLHTTP.6.0', 'Msxml2.XMLHTTP.3.0', 'Microsoft.XMLHTTP']; //activeX versions to check for in IE\n\n\t    if (window.ActiveXObject)\n\t    { //Test for support for ActiveXObject in IE first (as XMLHttpRequest in IE7 is broken)\n\t        for (var i=0; i<activexmodes.length; i++)\n\t        {\n\t            try{\n\t                return new window.ActiveXObject(activexmodes[i]);\n\t            }\n\t            catch(e) {\n\t                //suppress error\n\t            }\n\t        }\n\t    }\n\t    else if (window.XMLHttpRequest) // if Mozilla, Safari etc\n\t    {\n\t        return new window.XMLHttpRequest();\n\t    }\n\t    else\n\t    {\n\t        return false;\n\t    }\n\t};\n\t/*\n\tPIXI.packColorRGBA = function(r, g, b, a)//r, g, b, a)\n\t{\n\t  //  console.log(r, b, c, d)\n\t  return (Math.floor((r)*63) << 18) | (Math.floor((g)*63) << 12) | (Math.floor((b)*63) << 6);// | (Math.floor((a)*63))\n\t  //  i = i | (Math.floor((a)*63));\n\t   // return i;\n\t   // var r = (i / 262144.0 ) / 64;\n\t   // var g = (i / 4096.0)%64 / 64;\n\t  //  var b = (i / 64.0)%64 / 64;\n\t  //  var a = (i)%64 / 64;\n\t     \n\t  //  console.log(r, g, b, a);\n\t  //  return i;\n\n\t};\n\t*/\n\t/*\n\tPIXI.packColorRGB = function(r, g, b)//r, g, b, a)\n\t{\n\t    return (Math.floor((r)*255) << 16) | (Math.floor((g)*255) << 8) | (Math.floor((b)*255));\n\t};\n\n\tPIXI.unpackColorRGB = function(r, g, b)//r, g, b, a)\n\t{\n\t    return (Math.floor((r)*255) << 16) | (Math.floor((g)*255) << 8) | (Math.floor((b)*255));\n\t};\n\t*/\n\n\t/**\n\t * Checks whether the Canvas BlendModes are supported by the current browser\n\t *\n\t * @method canUseNewCanvasBlendModes\n\t * @return {Boolean} whether they are supported\n\t */\n\tPIXI.canUseNewCanvasBlendModes = function()\n\t{\n\t    if (typeof document === 'undefined') return false;\n\t    var canvas = document.createElement('canvas');\n\t    canvas.width = 1;\n\t    canvas.height = 1;\n\t    var context = canvas.getContext('2d');\n\t    context.fillStyle = '#000';\n\t    context.fillRect(0,0,1,1);\n\t    context.globalCompositeOperation = 'multiply';\n\t    context.fillStyle = '#fff';\n\t    context.fillRect(0,0,1,1);\n\t    return context.getImageData(0,0,1,1).data[0] === 0;\n\t};\n\n\t/**\n\t * Given a number, this function returns the closest number that is a power of two\n\t * this function is taken from Starling Framework as its pretty neat ;)\n\t *\n\t * @method getNextPowerOfTwo\n\t * @param number {Number}\n\t * @return {Number} the closest number that is a power of two\n\t */\n\tPIXI.getNextPowerOfTwo = function(number)\n\t{\n\t    if (number > 0 && (number & (number - 1)) === 0) // see: http://goo.gl/D9kPj\n\t        return number;\n\t    else\n\t    {\n\t        var result = 1;\n\t        while (result < number) result <<= 1;\n\t        return result;\n\t    }\n\t};\n\n\t/**\n\t * checks if the given width and height make a power of two texture\n\t * @method isPowerOfTwo\n\t * @param width {Number}\n\t * @param height {Number}\n\t * @return {Boolean} \n\t */\n\tPIXI.isPowerOfTwo = function(width, height)\n\t{\n\t    return (width > 0 && (width & (width - 1)) === 0 && height > 0 && (height & (height - 1)) === 0);\n\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t * @author Chad Engler https://github.com/englercj @Rolnaaba\n\t */\n\n\t/**\n\t * Originally based on https://github.com/mrdoob/eventtarget.js/ from mr Doob.\n\t * Currently takes inspiration from the nodejs EventEmitter, EventEmitter3, and smokesignals\n\t */\n\n\t/**\n\t * Mixins event emitter functionality to a class\n\t *\n\t * @class EventTarget\n\t * @example\n\t *      function MyEmitter() {}\n\t *\n\t *      PIXI.EventTarget.mixin(MyEmitter.prototype);\n\t *\n\t *      var em = new MyEmitter();\n\t *      em.emit('eventName', 'some data', 'some more data', {}, null, ...);\n\t */\n\tPIXI.EventTarget = {\n\t    /**\n\t     * Backward compat from when this used to be a function\n\t     */\n\t    call: function callCompat(obj) {\n\t        if(obj) {\n\t            obj = obj.prototype || obj;\n\t            PIXI.EventTarget.mixin(obj);\n\t        }\n\t    },\n\n\t    /**\n\t     * Mixes in the properties of the EventTarget prototype onto another object\n\t     *\n\t     * @method mixin\n\t     * @param object {Object} The obj to mix into\n\t     */\n\t    mixin: function mixin(obj) {\n\t        /**\n\t         * Return a list of assigned event listeners.\n\t         *\n\t         * @method listeners\n\t         * @param eventName {String} The events that should be listed.\n\t         * @return {Array} An array of listener functions\n\t         */\n\t        obj.listeners = function listeners(eventName) {\n\t            this._listeners = this._listeners || {};\n\n\t            return this._listeners[eventName] ? this._listeners[eventName].slice() : [];\n\t        };\n\n\t        /**\n\t         * Emit an event to all registered event listeners.\n\t         *\n\t         * @method emit\n\t         * @alias dispatchEvent\n\t         * @param eventName {String} The name of the event.\n\t         * @return {Boolean} Indication if we've emitted an event.\n\t         */\n\t        obj.emit = obj.dispatchEvent = function emit(eventName, data) {\n\t            this._listeners = this._listeners || {};\n\n\t            //backwards compat with old method \".emit({ type: 'something' })\"\n\t            if(typeof eventName === 'object') {\n\t                data = eventName;\n\t                eventName = eventName.type;\n\t            }\n\n\t            //ensure we are using a real pixi event\n\t            if(!data || data.__isEventObject !== true) {\n\t                data = new PIXI.Event(this, eventName, data);\n\t            }\n\n\t            //iterate the listeners\n\t            if(this._listeners && this._listeners[eventName]) {\n\t                var listeners = this._listeners[eventName].slice(0),\n\t                    length = listeners.length,\n\t                    fn = listeners[0],\n\t                    i;\n\n\t                for(i = 0; i < length; fn = listeners[++i]) {\n\t                    //call the event listener\n\t                    fn.call(this, data);\n\n\t                    //if \"stopImmediatePropagation\" is called, stop calling sibling events\n\t                    if(data.stoppedImmediate) {\n\t                        return this;\n\t                    }\n\t                }\n\n\t                //if \"stopPropagation\" is called then don't bubble the event\n\t                if(data.stopped) {\n\t                    return this;\n\t                }\n\t            }\n\n\t            //bubble this event up the scene graph\n\t            if(this.parent && this.parent.emit) {\n\t                this.parent.emit.call(this.parent, eventName, data);\n\t            }\n\n\t            return this;\n\t        };\n\n\t        /**\n\t         * Register a new EventListener for the given event.\n\t         *\n\t         * @method on\n\t         * @alias addEventListener\n\t         * @param eventName {String} Name of the event.\n\t         * @param callback {Functon} fn Callback function.\n\t         */\n\t        obj.on = obj.addEventListener = function on(eventName, fn) {\n\t            this._listeners = this._listeners || {};\n\n\t            (this._listeners[eventName] = this._listeners[eventName] || [])\n\t                .push(fn);\n\n\t            return this;\n\t        };\n\n\t        /**\n\t         * Add an EventListener that's only called once.\n\t         *\n\t         * @method once\n\t         * @param eventName {String} Name of the event.\n\t         * @param callback {Function} Callback function.\n\t         */\n\t        obj.once = function once(eventName, fn) {\n\t            this._listeners = this._listeners || {};\n\n\t            var self = this;\n\t            function onceHandlerWrapper() {\n\t                fn.apply(self.off(eventName, onceHandlerWrapper), arguments);\n\t            }\n\t            onceHandlerWrapper._originalHandler = fn;\n\n\t            return this.on(eventName, onceHandlerWrapper);\n\t        };\n\n\t        /**\n\t         * Remove event listeners.\n\t         *\n\t         * @method off\n\t         * @alias removeEventListener\n\t         * @param eventName {String} The event we want to remove.\n\t         * @param callback {Function} The listener that we need to find.\n\t         */\n\t        obj.off = obj.removeEventListener = function off(eventName, fn) {\n\t            this._listeners = this._listeners || {};\n\n\t            if(!this._listeners[eventName])\n\t                return this;\n\n\t            var list = this._listeners[eventName],\n\t                i = fn ? list.length : 0;\n\n\t            while(i-- > 0) {\n\t                if(list[i] === fn || list[i]._originalHandler === fn) {\n\t                    list.splice(i, 1);\n\t                }\n\t            }\n\n\t            if(list.length === 0) {\n\t                delete this._listeners[eventName];\n\t            }\n\n\t            return this;\n\t        };\n\n\t        /**\n\t         * Remove all listeners or only the listeners for the specified event.\n\t         *\n\t         * @method removeAllListeners\n\t         * @param eventName {String} The event you want to remove all listeners for.\n\t         */\n\t        obj.removeAllListeners = function removeAllListeners(eventName) {\n\t            this._listeners = this._listeners || {};\n\n\t            if(!this._listeners[eventName])\n\t                return this;\n\n\t            delete this._listeners[eventName];\n\n\t            return this;\n\t        };\n\t    }\n\t};\n\n\t/**\n\t * Creates an homogenous object for tracking events so users can know what to expect.\n\t *\n\t * @class Event\n\t * @extends Object\n\t * @constructor\n\t * @param target {Object} The target object that the event is called on\n\t * @param name {String} The string name of the event that was triggered\n\t * @param data {Object} Arbitrary event data to pass along\n\t */\n\tPIXI.Event = function(target, name, data) {\n\t    //for duck typing in the \".on()\" function\n\t    this.__isEventObject = true;\n\n\t    /**\n\t     * Tracks the state of bubbling propagation. Do not\n\t     * set this directly, instead use `event.stopPropagation()`\n\t     *\n\t     * @property stopped\n\t     * @type Boolean\n\t     * @private\n\t     * @readOnly\n\t     */\n\t    this.stopped = false;\n\n\t    /**\n\t     * Tracks the state of sibling listener propagation. Do not\n\t     * set this directly, instead use `event.stopImmediatePropagation()`\n\t     *\n\t     * @property stoppedImmediate\n\t     * @type Boolean\n\t     * @private\n\t     * @readOnly\n\t     */\n\t    this.stoppedImmediate = false;\n\n\t    /**\n\t     * The original target the event triggered on.\n\t     *\n\t     * @property target\n\t     * @type Object\n\t     * @readOnly\n\t     */\n\t    this.target = target;\n\n\t    /**\n\t     * The string name of the event that this represents.\n\t     *\n\t     * @property type\n\t     * @type String\n\t     * @readOnly\n\t     */\n\t    this.type = name;\n\n\t    /**\n\t     * The data that was passed in with this event.\n\t     *\n\t     * @property data\n\t     * @type Object\n\t     * @readOnly\n\t     */\n\t    this.data = data;\n\n\t    //backwards compat with older version of events\n\t    this.content = data;\n\n\t    /**\n\t     * The timestamp when the event occurred.\n\t     *\n\t     * @property timeStamp\n\t     * @type Number\n\t     * @readOnly\n\t     */\n\t    this.timeStamp = Date.now();\n\t};\n\n\t/**\n\t * Stops the propagation of events up the scene graph (prevents bubbling).\n\t *\n\t * @method stopPropagation\n\t */\n\tPIXI.Event.prototype.stopPropagation = function stopPropagation() {\n\t    this.stopped = true;\n\t};\n\n\t/**\n\t * Stops the propagation of events to sibling listeners (no longer calls any listeners).\n\t *\n\t * @method stopImmediatePropagation\n\t */\n\tPIXI.Event.prototype.stopImmediatePropagation = function stopImmediatePropagation() {\n\t    this.stoppedImmediate = true;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * This helper function will automatically detect which renderer you should be using.\n\t * WebGL is the preferred renderer as it is a lot faster. If webGL is not supported by\n\t * the browser then this function will return a canvas renderer\n\t *\n\t * @method autoDetectRenderer\n\t * @for PIXI\n\t * @static\n\t * @param width=800 {Number} the width of the renderers view\n\t * @param height=600 {Number} the height of the renderers view\n\t * \n\t * @param [options] {Object} The optional renderer parameters\n\t * @param [options.view] {HTMLCanvasElement} the canvas to use as a view, optional\n\t * @param [options.transparent=false] {Boolean} If the render view is transparent, default false\n\t * @param [options.antialias=false] {Boolean} sets antialias (only applicable in chrome at the moment)\n\t * @param [options.preserveDrawingBuffer=false] {Boolean} enables drawing buffer preservation, enable this if you need to call toDataUrl on the webgl context\n\t * @param [options.resolution=1] {Number} the resolution of the renderer retina would be 2\n\t * \n\t */\n\tPIXI.autoDetectRenderer = function(width, height, options)\n\t{\n\t    if(!width)width = 800;\n\t    if(!height)height = 600;\n\n\t    // BORROWED from Mr Doob (mrdoob.com)\n\t    var webgl = ( function () { try {\n\t                                    var canvas = document.createElement( 'canvas' );\n\t                                    return !! window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) );\n\t                                } catch( e ) {\n\t                                    return false;\n\t                                }\n\t                            } )();\n\n\t    if( webgl )\n\t    {\n\t        return new PIXI.WebGLRenderer(width, height, options);\n\t    }\n\n\t    return  new PIXI.CanvasRenderer(width, height, options);\n\t};\n\n\t/**\n\t * This helper function will automatically detect which renderer you should be using.\n\t * This function is very similar to the autoDetectRenderer function except that is will return a canvas renderer for android.\n\t * Even thought both android chrome supports webGL the canvas implementation perform better at the time of writing. \n\t * This function will likely change and update as webGL performance improves on these devices.\n\t * \n\t * @method autoDetectRecommendedRenderer\n\t * @for PIXI\n\t * @static\n\t * @param width=800 {Number} the width of the renderers view\n\t * @param height=600 {Number} the height of the renderers view\n\t * \n\t * @param [options] {Object} The optional renderer parameters\n\t * @param [options.view] {HTMLCanvasElement} the canvas to use as a view, optional\n\t * @param [options.transparent=false] {Boolean} If the render view is transparent, default false\n\t * @param [options.antialias=false] {Boolean} sets antialias (only applicable in chrome at the moment)\n\t * @param [options.preserveDrawingBuffer=false] {Boolean} enables drawing buffer preservation, enable this if you need to call toDataUrl on the webgl context\n\t * @param [options.resolution=1] {Number} the resolution of the renderer retina would be 2\n\t * \n\t */\n\tPIXI.autoDetectRecommendedRenderer = function(width, height, options)\n\t{\n\t    if(!width)width = 800;\n\t    if(!height)height = 600;\n\n\t    // BORROWED from Mr Doob (mrdoob.com)\n\t    var webgl = ( function () { try {\n\t                                    var canvas = document.createElement( 'canvas' );\n\t                                    return !! window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) );\n\t                                } catch( e ) {\n\t                                    return false;\n\t                                }\n\t                            } )();\n\n\t    var isAndroid = /Android/i.test(navigator.userAgent);\n\n\t    if( webgl && !isAndroid)\n\t    {\n\t        return new PIXI.WebGLRenderer(width, height, options);\n\t    }\n\n\t    return  new PIXI.CanvasRenderer(width, height, options);\n\t};\n\r\n\t/*\n\t    PolyK library\n\t    url: http://polyk.ivank.net\n\t    Released under MIT licence.\n\n\t    Copyright (c) 2012 Ivan Kuckir\n\n\t    Permission is hereby granted, free of charge, to any person\n\t    obtaining a copy of this software and associated documentation\n\t    files (the \"Software\"), to deal in the Software without\n\t    restriction, including without limitation the rights to use,\n\t    copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t    copies of the Software, and to permit persons to whom the\n\t    Software is furnished to do so, subject to the following\n\t    conditions:\n\n\t    The above copyright notice and this permission notice shall be\n\t    included in all copies or substantial portions of the Software.\n\n\t    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t    OTHER DEALINGS IN THE SOFTWARE.\n\n\t    This is an amazing lib!\n\n\t    Slightly modified by Mat Groves (matgroves.com);\n\t*/\n\n\t/**\n\t * Based on the Polyk library http://polyk.ivank.net released under MIT licence.\n\t * This is an amazing lib!\n\t * Slightly modified by Mat Groves (matgroves.com);\n\t * @class PolyK\n\t */\n\tPIXI.PolyK = {};\n\n\t/**\n\t * Triangulates shapes for webGL graphic fills.\n\t *\n\t * @method Triangulate\n\t */\n\tPIXI.PolyK.Triangulate = function(p)\n\t{\n\t    var sign = true;\n\n\t    var n = p.length >> 1;\n\t    if(n < 3) return [];\n\n\t    var tgs = [];\n\t    var avl = [];\n\t    for(var i = 0; i < n; i++) avl.push(i);\n\n\t    i = 0;\n\t    var al = n;\n\t    while(al > 3)\n\t    {\n\t        var i0 = avl[(i+0)%al];\n\t        var i1 = avl[(i+1)%al];\n\t        var i2 = avl[(i+2)%al];\n\n\t        var ax = p[2*i0],  ay = p[2*i0+1];\n\t        var bx = p[2*i1],  by = p[2*i1+1];\n\t        var cx = p[2*i2],  cy = p[2*i2+1];\n\n\t        var earFound = false;\n\t        if(PIXI.PolyK._convex(ax, ay, bx, by, cx, cy, sign))\n\t        {\n\t            earFound = true;\n\t            for(var j = 0; j < al; j++)\n\t            {\n\t                var vi = avl[j];\n\t                if(vi === i0 || vi === i1 || vi === i2) continue;\n\n\t                if(PIXI.PolyK._PointInTriangle(p[2*vi], p[2*vi+1], ax, ay, bx, by, cx, cy)) {\n\t                    earFound = false;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\n\t        if(earFound)\n\t        {\n\t            tgs.push(i0, i1, i2);\n\t            avl.splice((i+1)%al, 1);\n\t            al--;\n\t            i = 0;\n\t        }\n\t        else if(i++ > 3*al)\n\t        {\n\t            // need to flip flip reverse it!\n\t            // reset!\n\t            if(sign)\n\t            {\n\t                tgs = [];\n\t                avl = [];\n\t                for(i = 0; i < n; i++) avl.push(i);\n\n\t                i = 0;\n\t                al = n;\n\n\t                sign = false;\n\t            }\n\t            else\n\t            {\n\t             //   window.console.log(\"PIXI Warning: shape too complex to fill\");\n\t                return null;\n\t            }\n\t        }\n\t    }\n\n\t    tgs.push(avl[0], avl[1], avl[2]);\n\t    return tgs;\n\t};\n\n\t/**\n\t * Checks whether a point is within a triangle\n\t *\n\t * @method _PointInTriangle\n\t * @param px {Number} x coordinate of the point to test\n\t * @param py {Number} y coordinate of the point to test\n\t * @param ax {Number} x coordinate of the a point of the triangle\n\t * @param ay {Number} y coordinate of the a point of the triangle\n\t * @param bx {Number} x coordinate of the b point of the triangle\n\t * @param by {Number} y coordinate of the b point of the triangle\n\t * @param cx {Number} x coordinate of the c point of the triangle\n\t * @param cy {Number} y coordinate of the c point of the triangle\n\t * @private\n\t * @return {Boolean}\n\t */\n\tPIXI.PolyK._PointInTriangle = function(px, py, ax, ay, bx, by, cx, cy)\n\t{\n\t    var v0x = cx-ax;\n\t    var v0y = cy-ay;\n\t    var v1x = bx-ax;\n\t    var v1y = by-ay;\n\t    var v2x = px-ax;\n\t    var v2y = py-ay;\n\n\t    var dot00 = v0x*v0x+v0y*v0y;\n\t    var dot01 = v0x*v1x+v0y*v1y;\n\t    var dot02 = v0x*v2x+v0y*v2y;\n\t    var dot11 = v1x*v1x+v1y*v1y;\n\t    var dot12 = v1x*v2x+v1y*v2y;\n\n\t    var invDenom = 1 / (dot00 * dot11 - dot01 * dot01);\n\t    var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n\t    var v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n\n\t    // Check if point is in triangle\n\t    return (u >= 0) && (v >= 0) && (u + v < 1);\n\t};\n\n\t/**\n\t * Checks whether a shape is convex\n\t *\n\t * @method _convex\n\t * @private\n\t * @return {Boolean}\n\t */\n\tPIXI.PolyK._convex = function(ax, ay, bx, by, cx, cy, sign)\n\t{\n\t    return ((ay-by)*(cx-bx) + (bx-ax)*(cy-by) >= 0) === sign;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t* @method initDefaultShaders\n\t* @static\n\t* @private\n\t*/\n\tPIXI.initDefaultShaders = function()\n\t{\n\t};\n\n\t/**\n\t* @method CompileVertexShader\n\t* @static\n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t* @param shaderSrc {Array}\n\t* @return {Any}\n\t*/\n\tPIXI.CompileVertexShader = function(gl, shaderSrc)\n\t{\n\t    return PIXI._CompileShader(gl, shaderSrc, gl.VERTEX_SHADER);\n\t};\n\n\t/**\n\t* @method CompileFragmentShader\n\t* @static\n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t* @param shaderSrc {Array}\n\t* @return {Any}\n\t*/\n\tPIXI.CompileFragmentShader = function(gl, shaderSrc)\n\t{\n\t    return PIXI._CompileShader(gl, shaderSrc, gl.FRAGMENT_SHADER);\n\t};\n\n\t/**\n\t* @method _CompileShader\n\t* @static\n\t* @private\n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t* @param shaderSrc {Array}\n\t* @param shaderType {Number}\n\t* @return {Any}\n\t*/\n\tPIXI._CompileShader = function(gl, shaderSrc, shaderType)\n\t{\n\t    var src = shaderSrc.join(\"\\n\");\n\t    var shader = gl.createShader(shaderType);\n\t    gl.shaderSource(shader, src);\n\t    gl.compileShader(shader);\n\n\t    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n\t    {\n\t        window.console.log(gl.getShaderInfoLog(shader));\n\t        return null;\n\t    }\n\n\t    return shader;\n\t};\n\n\t/**\n\t* @method compileProgram\n\t* @static\n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t* @param vertexSrc {Array}\n\t* @param fragmentSrc {Array}\n\t* @return {Any}\n\t*/\n\tPIXI.compileProgram = function(gl, vertexSrc, fragmentSrc)\n\t{\n\t    var fragmentShader = PIXI.CompileFragmentShader(gl, fragmentSrc);\n\t    var vertexShader = PIXI.CompileVertexShader(gl, vertexSrc);\n\n\t    var shaderProgram = gl.createProgram();\n\n\t    gl.attachShader(shaderProgram, vertexShader);\n\t    gl.attachShader(shaderProgram, fragmentShader);\n\t    gl.linkProgram(shaderProgram);\n\n\t    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS))\n\t    {\n\t        window.console.log(\"Could not initialise shaders\");\n\t    }\n\n\t    return shaderProgram;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t * @author Richard Davey http://www.photonstorm.com @photonstorm\n\t */\n\n\t/**\n\t* @class PixiShader\n\t* @constructor\n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t*/\n\tPIXI.PixiShader = function(gl)\n\t{\n\t    /**\n\t     * @property _UID\n\t     * @type Number\n\t     * @private\n\t     */\n\t    this._UID = PIXI._UID++;\n\n\t    /**\n\t     * @property gl\n\t     * @type WebGLContext\n\t     */\n\t    this.gl = gl;\n\n\t    /**\n\t     * The WebGL program.\n\t     * @property program\n\t     * @type Any\n\t     */\n\t    this.program = null;\n\n\t    /**\n\t     * The fragment shader.\n\t     * @property fragmentSrc\n\t     * @type Array\n\t     */\n\t    this.fragmentSrc = [\n\t        'precision lowp float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform sampler2D uSampler;',\n\t        'void main(void) {',\n\t        '   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;',\n\t        '}'\n\t    ];\n\n\t    /**\n\t     * A local texture counter for multi-texture shaders.\n\t     * @property textureCount\n\t     * @type Number\n\t     */\n\t    this.textureCount = 0;\n\n\t    /**\n\t     * A local flag\n\t     * @property firstRun\n\t     * @type Boolean\n\t     * @private\n\t     */\n\t    this.firstRun = true;\n\n\t    /**\n\t     * A dirty flag\n\t     * @property dirty\n\t     * @type Boolean\n\t     */\n\t    this.dirty = true;\n\n\t    /**\n\t     * Uniform attributes cache.\n\t     * @property attributes\n\t     * @type Array\n\t     * @private\n\t     */\n\t    this.attributes = [];\n\n\t    this.init();\n\t};\n\n\tPIXI.PixiShader.prototype.constructor = PIXI.PixiShader;\n\n\t/**\n\t* Initialises the shader.\n\t*\n\t* @method init\n\t*/\n\tPIXI.PixiShader.prototype.init = function()\n\t{\n\t    var gl = this.gl;\n\n\t    var program = PIXI.compileProgram(gl, this.vertexSrc || PIXI.PixiShader.defaultVertexSrc, this.fragmentSrc);\n\n\t    gl.useProgram(program);\n\n\t    // get and store the uniforms for the shader\n\t    this.uSampler = gl.getUniformLocation(program, 'uSampler');\n\t    this.projectionVector = gl.getUniformLocation(program, 'projectionVector');\n\t    this.offsetVector = gl.getUniformLocation(program, 'offsetVector');\n\t    this.dimensions = gl.getUniformLocation(program, 'dimensions');\n\n\t    // get and store the attributes\n\t    this.aVertexPosition = gl.getAttribLocation(program, 'aVertexPosition');\n\t    this.aTextureCoord = gl.getAttribLocation(program, 'aTextureCoord');\n\t    this.colorAttribute = gl.getAttribLocation(program, 'aColor');\n\n\t    // Begin worst hack eva //\n\n\t    // WHY??? ONLY on my chrome pixel the line above returns -1 when using filters?\n\t    // maybe its something to do with the current state of the gl context.\n\t    // I'm convinced this is a bug in the chrome browser as there is NO reason why this should be returning -1 especially as it only manifests on my chrome pixel\n\t    // If theres any webGL people that know why could happen please help :)\n\t    if(this.colorAttribute === -1)\n\t    {\n\t        this.colorAttribute = 2;\n\t    }\n\n\t    this.attributes = [this.aVertexPosition, this.aTextureCoord, this.colorAttribute];\n\n\t    // End worst hack eva //\n\n\t    // add those custom shaders!\n\t    for (var key in this.uniforms)\n\t    {\n\t        // get the uniform locations..\n\t        this.uniforms[key].uniformLocation = gl.getUniformLocation(program, key);\n\t    }\n\n\t    this.initUniforms();\n\n\t    this.program = program;\n\t};\n\n\t/**\n\t* Initialises the shader uniform values.\n\t*\n\t* Uniforms are specified in the GLSL_ES Specification: http://www.khronos.org/registry/webgl/specs/latest/1.0/\n\t* http://www.khronos.org/registry/gles/specs/2.0/GLSL_ES_Specification_1.0.17.pdf\n\t*\n\t* @method initUniforms\n\t*/\n\tPIXI.PixiShader.prototype.initUniforms = function()\n\t{\n\t    this.textureCount = 1;\n\t    var gl = this.gl;\n\t    var uniform;\n\n\t    for (var key in this.uniforms)\n\t    {\n\t        uniform = this.uniforms[key];\n\n\t        var type = uniform.type;\n\n\t        if (type === 'sampler2D')\n\t        {\n\t            uniform._init = false;\n\n\t            if (uniform.value !== null)\n\t            {\n\t                this.initSampler2D(uniform);\n\t            }\n\t        }\n\t        else if (type === 'mat2' || type === 'mat3' || type === 'mat4')\n\t        {\n\t            //  These require special handling\n\t            uniform.glMatrix = true;\n\t            uniform.glValueLength = 1;\n\n\t            if (type === 'mat2')\n\t            {\n\t                uniform.glFunc = gl.uniformMatrix2fv;\n\t            }\n\t            else if (type === 'mat3')\n\t            {\n\t                uniform.glFunc = gl.uniformMatrix3fv;\n\t            }\n\t            else if (type === 'mat4')\n\t            {\n\t                uniform.glFunc = gl.uniformMatrix4fv;\n\t            }\n\t        }\n\t        else\n\t        {\n\t            //  GL function reference\n\t            uniform.glFunc = gl['uniform' + type];\n\n\t            if (type === '2f' || type === '2i')\n\t            {\n\t                uniform.glValueLength = 2;\n\t            }\n\t            else if (type === '3f' || type === '3i')\n\t            {\n\t                uniform.glValueLength = 3;\n\t            }\n\t            else if (type === '4f' || type === '4i')\n\t            {\n\t                uniform.glValueLength = 4;\n\t            }\n\t            else\n\t            {\n\t                uniform.glValueLength = 1;\n\t            }\n\t        }\n\t    }\n\n\t};\n\n\t/**\n\t* Initialises a Sampler2D uniform (which may only be available later on after initUniforms once the texture has loaded)\n\t*\n\t* @method initSampler2D\n\t*/\n\tPIXI.PixiShader.prototype.initSampler2D = function(uniform)\n\t{\n\t    if (!uniform.value || !uniform.value.baseTexture || !uniform.value.baseTexture.hasLoaded)\n\t    {\n\t        return;\n\t    }\n\n\t    var gl = this.gl;\n\n\t    gl.activeTexture(gl['TEXTURE' + this.textureCount]);\n\t    gl.bindTexture(gl.TEXTURE_2D, uniform.value.baseTexture._glTextures[gl.id]);\n\n\t    //  Extended texture data\n\t    if (uniform.textureData)\n\t    {\n\t        var data = uniform.textureData;\n\n\t        // GLTexture = mag linear, min linear_mipmap_linear, wrap repeat + gl.generateMipmap(gl.TEXTURE_2D);\n\t        // GLTextureLinear = mag/min linear, wrap clamp\n\t        // GLTextureNearestRepeat = mag/min NEAREST, wrap repeat\n\t        // GLTextureNearest = mag/min nearest, wrap clamp\n\t        // AudioTexture = whatever + luminance + width 512, height 2, border 0\n\t        // KeyTexture = whatever + luminance + width 256, height 2, border 0\n\n\t        //  magFilter can be: gl.LINEAR, gl.LINEAR_MIPMAP_LINEAR or gl.NEAREST\n\t        //  wrapS/T can be: gl.CLAMP_TO_EDGE or gl.REPEAT\n\n\t        var magFilter = (data.magFilter) ? data.magFilter : gl.LINEAR;\n\t        var minFilter = (data.minFilter) ? data.minFilter : gl.LINEAR;\n\t        var wrapS = (data.wrapS) ? data.wrapS : gl.CLAMP_TO_EDGE;\n\t        var wrapT = (data.wrapT) ? data.wrapT : gl.CLAMP_TO_EDGE;\n\t        var format = (data.luminance) ? gl.LUMINANCE : gl.RGBA;\n\n\t        if (data.repeat)\n\t        {\n\t            wrapS = gl.REPEAT;\n\t            wrapT = gl.REPEAT;\n\t        }\n\n\t        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, !!data.flipY);\n\n\t        if (data.width)\n\t        {\n\t            var width = (data.width) ? data.width : 512;\n\t            var height = (data.height) ? data.height : 2;\n\t            var border = (data.border) ? data.border : 0;\n\n\t            // void texImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, ArrayBufferView? pixels);\n\t            gl.texImage2D(gl.TEXTURE_2D, 0, format, width, height, border, format, gl.UNSIGNED_BYTE, null);\n\t        }\n\t        else\n\t        {\n\t            //  void texImage2D(GLenum target, GLint level, GLenum internalformat, GLenum format, GLenum type, ImageData? pixels);\n\t            gl.texImage2D(gl.TEXTURE_2D, 0, format, gl.RGBA, gl.UNSIGNED_BYTE, uniform.value.baseTexture.source);\n\t        }\n\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n\t    }\n\n\t    gl.uniform1i(uniform.uniformLocation, this.textureCount);\n\n\t    uniform._init = true;\n\n\t    this.textureCount++;\n\n\t};\n\n\t/**\n\t* Updates the shader uniform values.\n\t*\n\t* @method syncUniforms\n\t*/\n\tPIXI.PixiShader.prototype.syncUniforms = function()\n\t{\n\t    this.textureCount = 1;\n\t    var uniform;\n\t    var gl = this.gl;\n\n\t    //  This would probably be faster in an array and it would guarantee key order\n\t    for (var key in this.uniforms)\n\t    {\n\t        uniform = this.uniforms[key];\n\n\t        if (uniform.glValueLength === 1)\n\t        {\n\t            if (uniform.glMatrix === true)\n\t            {\n\t                uniform.glFunc.call(gl, uniform.uniformLocation, uniform.transpose, uniform.value);\n\t            }\n\t            else\n\t            {\n\t                uniform.glFunc.call(gl, uniform.uniformLocation, uniform.value);\n\t            }\n\t        }\n\t        else if (uniform.glValueLength === 2)\n\t        {\n\t            uniform.glFunc.call(gl, uniform.uniformLocation, uniform.value.x, uniform.value.y);\n\t        }\n\t        else if (uniform.glValueLength === 3)\n\t        {\n\t            uniform.glFunc.call(gl, uniform.uniformLocation, uniform.value.x, uniform.value.y, uniform.value.z);\n\t        }\n\t        else if (uniform.glValueLength === 4)\n\t        {\n\t            uniform.glFunc.call(gl, uniform.uniformLocation, uniform.value.x, uniform.value.y, uniform.value.z, uniform.value.w);\n\t        }\n\t        else if (uniform.type === 'sampler2D')\n\t        {\n\t            if (uniform._init)\n\t            {\n\t                gl.activeTexture(gl['TEXTURE' + this.textureCount]);\n\n\t                if(uniform.value.baseTexture._dirty[gl.id])\n\t                {\n\t                    PIXI.instances[gl.id].updateTexture(uniform.value.baseTexture);\n\t                }\n\t                else\n\t                {\n\t                    // bind the current texture\n\t                    gl.bindTexture(gl.TEXTURE_2D, uniform.value.baseTexture._glTextures[gl.id]);\n\t                }\n\n\t             //   gl.bindTexture(gl.TEXTURE_2D, uniform.value.baseTexture._glTextures[gl.id] || PIXI.createWebGLTexture( uniform.value.baseTexture, gl));\n\t                gl.uniform1i(uniform.uniformLocation, this.textureCount);\n\t                this.textureCount++;\n\t            }\n\t            else\n\t            {\n\t                this.initSampler2D(uniform);\n\t            }\n\t        }\n\t    }\n\n\t};\n\n\t/**\n\t* Destroys the shader.\n\t*\n\t* @method destroy\n\t*/\n\tPIXI.PixiShader.prototype.destroy = function()\n\t{\n\t    this.gl.deleteProgram( this.program );\n\t    this.uniforms = null;\n\t    this.gl = null;\n\n\t    this.attributes = null;\n\t};\n\n\t/**\n\t* The Default Vertex shader source.\n\t*\n\t* @property defaultVertexSrc\n\t* @type String\n\t*/\n\tPIXI.PixiShader.defaultVertexSrc = [\n\t    'attribute vec2 aVertexPosition;',\n\t    'attribute vec2 aTextureCoord;',\n\t    'attribute vec4 aColor;',\n\n\t    'uniform vec2 projectionVector;',\n\t    'uniform vec2 offsetVector;',\n\n\t    'varying vec2 vTextureCoord;',\n\t    'varying vec4 vColor;',\n\n\t    'const vec2 center = vec2(-1.0, 1.0);',\n\n\t    'void main(void) {',\n\t    '   gl_Position = vec4( ((aVertexPosition + offsetVector) / projectionVector) + center , 0.0, 1.0);',\n\t    '   vTextureCoord = aTextureCoord;',\n\t    '   vColor = vec4(aColor.rgb * aColor.a, aColor.a);',\n\t    '}'\n\t];\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t* @class PixiFastShader\n\t* @constructor\n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t*/\n\tPIXI.PixiFastShader = function(gl)\n\t{\n\t    /**\n\t     * @property _UID\n\t     * @type Number\n\t     * @private\n\t     */\n\t    this._UID = PIXI._UID++;\n\t    \n\t    /**\n\t     * @property gl\n\t     * @type WebGLContext\n\t     */\n\t    this.gl = gl;\n\n\t    /**\n\t     * The WebGL program.\n\t     * @property program\n\t     * @type Any\n\t     */\n\t    this.program = null;\n\n\t    /**\n\t     * The fragment shader.\n\t     * @property fragmentSrc\n\t     * @type Array\n\t     */\n\t    this.fragmentSrc = [\n\t        'precision lowp float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying float vColor;',\n\t        'uniform sampler2D uSampler;',\n\t        'void main(void) {',\n\t        '   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;',\n\t        '}'\n\t    ];\n\n\t    /**\n\t     * The vertex shader.\n\t     * @property vertexSrc\n\t     * @type Array\n\t     */\n\t    this.vertexSrc = [\n\t        'attribute vec2 aVertexPosition;',\n\t        'attribute vec2 aPositionCoord;',\n\t        'attribute vec2 aScale;',\n\t        'attribute float aRotation;',\n\t        'attribute vec2 aTextureCoord;',\n\t        'attribute float aColor;',\n\n\t        'uniform vec2 projectionVector;',\n\t        'uniform vec2 offsetVector;',\n\t        'uniform mat3 uMatrix;',\n\n\t        'varying vec2 vTextureCoord;',\n\t        'varying float vColor;',\n\n\t        'const vec2 center = vec2(-1.0, 1.0);',\n\n\t        'void main(void) {',\n\t        '   vec2 v;',\n\t        '   vec2 sv = aVertexPosition * aScale;',\n\t        '   v.x = (sv.x) * cos(aRotation) - (sv.y) * sin(aRotation);',\n\t        '   v.y = (sv.x) * sin(aRotation) + (sv.y) * cos(aRotation);',\n\t        '   v = ( uMatrix * vec3(v + aPositionCoord , 1.0) ).xy ;',\n\t        '   gl_Position = vec4( ( v / projectionVector) + center , 0.0, 1.0);',\n\t        '   vTextureCoord = aTextureCoord;',\n\t      //  '   vec3 color = mod(vec3(aColor.y/65536.0, aColor.y/256.0, aColor.y), 256.0) / 256.0;',\n\t        '   vColor = aColor;',\n\t        '}'\n\t    ];\n\n\t    /**\n\t     * A local texture counter for multi-texture shaders.\n\t     * @property textureCount\n\t     * @type Number\n\t     */\n\t    this.textureCount = 0;\n\t    \n\t    this.init();\n\t};\n\n\tPIXI.PixiFastShader.prototype.constructor = PIXI.PixiFastShader;\n\n\t/**\n\t* Initialises the shader.\n\t* \n\t* @method init\n\t*/\n\tPIXI.PixiFastShader.prototype.init = function()\n\t{\n\t    var gl = this.gl;\n\n\t    var program = PIXI.compileProgram(gl, this.vertexSrc, this.fragmentSrc);\n\t    \n\t    gl.useProgram(program);\n\n\t    // get and store the uniforms for the shader\n\t    this.uSampler = gl.getUniformLocation(program, 'uSampler');\n\n\t    this.projectionVector = gl.getUniformLocation(program, 'projectionVector');\n\t    this.offsetVector = gl.getUniformLocation(program, 'offsetVector');\n\t    this.dimensions = gl.getUniformLocation(program, 'dimensions');\n\t    this.uMatrix = gl.getUniformLocation(program, 'uMatrix');\n\n\t    // get and store the attributes\n\t    this.aVertexPosition = gl.getAttribLocation(program, 'aVertexPosition');\n\t    this.aPositionCoord = gl.getAttribLocation(program, 'aPositionCoord');\n\n\t    this.aScale = gl.getAttribLocation(program, 'aScale');\n\t    this.aRotation = gl.getAttribLocation(program, 'aRotation');\n\n\t    this.aTextureCoord = gl.getAttribLocation(program, 'aTextureCoord');\n\t    this.colorAttribute = gl.getAttribLocation(program, 'aColor');\n\t   \n\t    // Begin worst hack eva //\n\n\t    // WHY??? ONLY on my chrome pixel the line above returns -1 when using filters?\n\t    // maybe its somthing to do with the current state of the gl context.\n\t    // Im convinced this is a bug in the chrome browser as there is NO reason why this should be returning -1 especially as it only manifests on my chrome pixel\n\t    // If theres any webGL people that know why could happen please help :)\n\t    if(this.colorAttribute === -1)\n\t    {\n\t        this.colorAttribute = 2;\n\t    }\n\n\t    this.attributes = [this.aVertexPosition, this.aPositionCoord,  this.aScale, this.aRotation, this.aTextureCoord, this.colorAttribute];\n\t    \n\t    // End worst hack eva //\n\n\t    this.program = program;\n\t};\n\n\t/**\n\t* Destroys the shader.\n\t* \n\t* @method destroy\n\t*/\n\tPIXI.PixiFastShader.prototype.destroy = function()\n\t{\n\t    this.gl.deleteProgram( this.program );\n\t    this.uniforms = null;\n\t    this.gl = null;\n\n\t    this.attributes = null;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t* @class StripShader\n\t* @constructor\n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t*/\n\tPIXI.StripShader = function(gl)\n\t{\n\t    /**\n\t     * @property _UID\n\t     * @type Number\n\t     * @private\n\t     */\n\t    this._UID = PIXI._UID++;\n\t    \n\t    /**\n\t     * @property gl\n\t     * @type WebGLContext\n\t     */\n\t    this.gl = gl;\n\n\t    /**\n\t     * The WebGL program.\n\t     * @property program\n\t     * @type Any\n\t     */\n\t    this.program = null;\n\n\t    /**\n\t     * The fragment shader.\n\t     * @property fragmentSrc\n\t     * @type Array\n\t     */\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t     //   'varying float vColor;',\n\t        'uniform float alpha;',\n\t        'uniform sampler2D uSampler;',\n\n\t        'void main(void) {',\n\t        '   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * alpha;',\n\t      //  '   gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);',//gl_FragColor * alpha;',\n\t        '}'\n\t    ];\n\n\t    /**\n\t     * The vertex shader.\n\t     * @property vertexSrc\n\t     * @type Array\n\t     */\n\t    this.vertexSrc  = [\n\t        'attribute vec2 aVertexPosition;',\n\t        'attribute vec2 aTextureCoord;',\n\t        'uniform mat3 translationMatrix;',\n\t        'uniform vec2 projectionVector;',\n\t        'uniform vec2 offsetVector;',\n\t      //  'uniform float alpha;',\n\t       // 'uniform vec3 tint;',\n\t        'varying vec2 vTextureCoord;',\n\t      //  'varying vec4 vColor;',\n\n\t        'void main(void) {',\n\t        '   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);',\n\t        '   v -= offsetVector.xyx;',\n\t        '   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);',\n\t        '   vTextureCoord = aTextureCoord;',\n\t       // '   vColor = aColor * vec4(tint * alpha, alpha);',\n\t        '}'\n\t    ];\n\n\t    this.init();\n\t};\n\n\tPIXI.StripShader.prototype.constructor = PIXI.StripShader;\n\n\t/**\n\t* Initialises the shader.\n\t* \n\t* @method init\n\t*/\n\tPIXI.StripShader.prototype.init = function()\n\t{\n\t    var gl = this.gl;\n\n\t    var program = PIXI.compileProgram(gl, this.vertexSrc, this.fragmentSrc);\n\t    gl.useProgram(program);\n\n\t    // get and store the uniforms for the shader\n\t    this.uSampler = gl.getUniformLocation(program, 'uSampler');\n\t    this.projectionVector = gl.getUniformLocation(program, 'projectionVector');\n\t    this.offsetVector = gl.getUniformLocation(program, 'offsetVector');\n\t    this.colorAttribute = gl.getAttribLocation(program, 'aColor');\n\t    //this.dimensions = gl.getUniformLocation(this.program, 'dimensions');\n\n\t    // get and store the attributes\n\t    this.aVertexPosition = gl.getAttribLocation(program, 'aVertexPosition');\n\t    this.aTextureCoord = gl.getAttribLocation(program, 'aTextureCoord');\n\n\t    this.attributes = [this.aVertexPosition, this.aTextureCoord];\n\n\t    this.translationMatrix = gl.getUniformLocation(program, 'translationMatrix');\n\t    this.alpha = gl.getUniformLocation(program, 'alpha');\n\n\t    this.program = program;\n\t};\n\n\t/**\n\t* Destroys the shader.\n\t* \n\t* @method destroy\n\t*/\n\tPIXI.StripShader.prototype.destroy = function()\n\t{\n\t    this.gl.deleteProgram( this.program );\n\t    this.uniforms = null;\n\t    this.gl = null;\n\n\t    this.attribute = null;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t* @class PrimitiveShader\n\t* @constructor\n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t*/\n\tPIXI.PrimitiveShader = function(gl)\n\t{\n\t    /**\n\t     * @property _UID\n\t     * @type Number\n\t     * @private\n\t     */\n\t    this._UID = PIXI._UID++;\n\t \n\t    /**\n\t     * @property gl\n\t     * @type WebGLContext\n\t     */\n\t    this.gl = gl;\n\n\t    /**\n\t     * The WebGL program.\n\t     * @property program\n\t     * @type Any\n\t     */\n\t    this.program = null;\n\n\t    /**\n\t     * The fragment shader.\n\t     * @property fragmentSrc\n\t     * @type Array\n\t     */\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec4 vColor;',\n\n\t        'void main(void) {',\n\t        '   gl_FragColor = vColor;',\n\t        '}'\n\t    ];\n\n\t    /**\n\t     * The vertex shader.\n\t     * @property vertexSrc\n\t     * @type Array\n\t     */\n\t    this.vertexSrc  = [\n\t        'attribute vec2 aVertexPosition;',\n\t        'attribute vec4 aColor;',\n\t        'uniform mat3 translationMatrix;',\n\t        'uniform vec2 projectionVector;',\n\t        'uniform vec2 offsetVector;',\n\t        'uniform float alpha;',\n\t        'uniform float flipY;',\n\t        'uniform vec3 tint;',\n\t        'varying vec4 vColor;',\n\n\t        'void main(void) {',\n\t        '   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);',\n\t        '   v -= offsetVector.xyx;',\n\t        '   gl_Position = vec4( v.x / projectionVector.x -1.0, (v.y / projectionVector.y * -flipY) + flipY , 0.0, 1.0);',\n\t        '   vColor = aColor * vec4(tint * alpha, alpha);',\n\t        '}'\n\t    ];\n\n\t    this.init();\n\t};\n\n\tPIXI.PrimitiveShader.prototype.constructor = PIXI.PrimitiveShader;\n\n\t/**\n\t* Initialises the shader.\n\t* \n\t* @method init\n\t*/\n\tPIXI.PrimitiveShader.prototype.init = function()\n\t{\n\t    var gl = this.gl;\n\n\t    var program = PIXI.compileProgram(gl, this.vertexSrc, this.fragmentSrc);\n\t    gl.useProgram(program);\n\n\t    // get and store the uniforms for the shader\n\t    this.projectionVector = gl.getUniformLocation(program, 'projectionVector');\n\t    this.offsetVector = gl.getUniformLocation(program, 'offsetVector');\n\t    this.tintColor = gl.getUniformLocation(program, 'tint');\n\t    this.flipY = gl.getUniformLocation(program, 'flipY');\n\n\t    // get and store the attributes\n\t    this.aVertexPosition = gl.getAttribLocation(program, 'aVertexPosition');\n\t    this.colorAttribute = gl.getAttribLocation(program, 'aColor');\n\n\t    this.attributes = [this.aVertexPosition, this.colorAttribute];\n\n\t    this.translationMatrix = gl.getUniformLocation(program, 'translationMatrix');\n\t    this.alpha = gl.getUniformLocation(program, 'alpha');\n\n\t    this.program = program;\n\t};\n\n\t/**\n\t* Destroys the shader.\n\t* \n\t* @method destroy\n\t*/\n\tPIXI.PrimitiveShader.prototype.destroy = function()\n\t{\n\t    this.gl.deleteProgram( this.program );\n\t    this.uniforms = null;\n\t    this.gl = null;\n\n\t    this.attributes = null;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t* @class ComplexPrimitiveShader\n\t* @constructor\n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t*/\n\tPIXI.ComplexPrimitiveShader = function(gl)\n\t{\n\t    /**\n\t     * @property _UID\n\t     * @type Number\n\t     * @private\n\t     */\n\t    this._UID = PIXI._UID++;\n\n\t    /**\n\t     * @property gl\n\t     * @type WebGLContext\n\t     */\n\t    this.gl = gl;\n\n\t    /**\n\t     * The WebGL program.\n\t     * @property program\n\t     * @type Any\n\t     */\n\t    this.program = null;\n\n\t    /**\n\t     * The fragment shader.\n\t     * @property fragmentSrc\n\t     * @type Array\n\t     */\n\t    this.fragmentSrc = [\n\n\t        'precision mediump float;',\n\n\t        'varying vec4 vColor;',\n\n\t        'void main(void) {',\n\t        '   gl_FragColor = vColor;',\n\t        '}'\n\t    ];\n\n\t    /**\n\t     * The vertex shader.\n\t     * @property vertexSrc\n\t     * @type Array\n\t     */\n\t    this.vertexSrc  = [\n\t        'attribute vec2 aVertexPosition;',\n\t        //'attribute vec4 aColor;',\n\t        'uniform mat3 translationMatrix;',\n\t        'uniform vec2 projectionVector;',\n\t        'uniform vec2 offsetVector;',\n\t        \n\t        'uniform vec3 tint;',\n\t        'uniform float alpha;',\n\t        'uniform vec3 color;',\n\t        'uniform float flipY;',\n\t        'varying vec4 vColor;',\n\n\t        'void main(void) {',\n\t        '   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);',\n\t        '   v -= offsetVector.xyx;',\n\t        '   gl_Position = vec4( v.x / projectionVector.x -1.0, (v.y / projectionVector.y * -flipY) + flipY , 0.0, 1.0);',\n\t        '   vColor = vec4(color * alpha * tint, alpha);',//\" * vec4(tint * alpha, alpha);',\n\t        '}'\n\t    ];\n\n\t    this.init();\n\t};\n\n\tPIXI.ComplexPrimitiveShader.prototype.constructor = PIXI.ComplexPrimitiveShader;\n\n\t/**\n\t* Initialises the shader.\n\t* \n\t* @method init\n\t*/\n\tPIXI.ComplexPrimitiveShader.prototype.init = function()\n\t{\n\t    var gl = this.gl;\n\n\t    var program = PIXI.compileProgram(gl, this.vertexSrc, this.fragmentSrc);\n\t    gl.useProgram(program);\n\n\t    // get and store the uniforms for the shader\n\t    this.projectionVector = gl.getUniformLocation(program, 'projectionVector');\n\t    this.offsetVector = gl.getUniformLocation(program, 'offsetVector');\n\t    this.tintColor = gl.getUniformLocation(program, 'tint');\n\t    this.color = gl.getUniformLocation(program, 'color');\n\t    this.flipY = gl.getUniformLocation(program, 'flipY');\n\n\t    // get and store the attributes\n\t    this.aVertexPosition = gl.getAttribLocation(program, 'aVertexPosition');\n\t   // this.colorAttribute = gl.getAttribLocation(program, 'aColor');\n\n\t    this.attributes = [this.aVertexPosition, this.colorAttribute];\n\n\t    this.translationMatrix = gl.getUniformLocation(program, 'translationMatrix');\n\t    this.alpha = gl.getUniformLocation(program, 'alpha');\n\n\t    this.program = program;\n\t};\n\n\t/**\n\t* Destroys the shader.\n\t* \n\t* @method destroy\n\t*/\n\tPIXI.ComplexPrimitiveShader.prototype.destroy = function()\n\t{\n\t    this.gl.deleteProgram( this.program );\n\t    this.uniforms = null;\n\t    this.gl = null;\n\n\t    this.attribute = null;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * A set of functions used by the webGL renderer to draw the primitive graphics data\n\t *\n\t * @class WebGLGraphics\n\t * @private\n\t * @static\n\t */\n\tPIXI.WebGLGraphics = function()\n\t{\n\t};\n\n\t/**\n\t * Renders the graphics object\n\t *\n\t * @static\n\t * @private\n\t * @method renderGraphics\n\t * @param graphics {Graphics}\n\t * @param renderSession {Object}\n\t */\n\tPIXI.WebGLGraphics.renderGraphics = function(graphics, renderSession)//projection, offset)\n\t{\n\t    var gl = renderSession.gl;\n\t    var projection = renderSession.projection,\n\t        offset = renderSession.offset,\n\t        shader = renderSession.shaderManager.primitiveShader,\n\t        webGLData;\n\n\t    if(graphics.dirty)\n\t    {\n\t        PIXI.WebGLGraphics.updateGraphics(graphics, gl);\n\t    }\n\n\t    var webGL = graphics._webGL[gl.id];\n\n\t    // This  could be speeded up for sure!\n\n\t    for (var i = 0; i < webGL.data.length; i++)\n\t    {\n\t        if(webGL.data[i].mode === 1)\n\t        {\n\t            webGLData = webGL.data[i];\n\n\t            renderSession.stencilManager.pushStencil(graphics, webGLData, renderSession);\n\n\t            // render quad..\n\t            gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_SHORT, ( webGLData.indices.length - 4 ) * 2 );\n\t            \n\t            renderSession.stencilManager.popStencil(graphics, webGLData, renderSession);\n\t        }\n\t        else\n\t        {\n\t            webGLData = webGL.data[i];\n\t           \n\n\t            renderSession.shaderManager.setShader( shader );//activatePrimitiveShader();\n\t            shader = renderSession.shaderManager.primitiveShader;\n\t            gl.uniformMatrix3fv(shader.translationMatrix, false, graphics.worldTransform.toArray(true));\n\t            \n\t            gl.uniform1f(shader.flipY, 1);\n\t            \n\t            gl.uniform2f(shader.projectionVector, projection.x, -projection.y);\n\t            gl.uniform2f(shader.offsetVector, -offset.x, -offset.y);\n\n\t            gl.uniform3fv(shader.tintColor, PIXI.hex2rgb(graphics.tint));\n\n\t            gl.uniform1f(shader.alpha, graphics.worldAlpha);\n\t            \n\n\t            gl.bindBuffer(gl.ARRAY_BUFFER, webGLData.buffer);\n\n\t            gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 6, 0);\n\t            gl.vertexAttribPointer(shader.colorAttribute, 4, gl.FLOAT, false,4 * 6, 2 * 4);\n\n\t            // set the index buffer!\n\t            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, webGLData.indexBuffer);\n\t            gl.drawElements(gl.TRIANGLE_STRIP,  webGLData.indices.length, gl.UNSIGNED_SHORT, 0 );\n\t        }\n\t    }\n\t};\n\n\t/**\n\t * Updates the graphics object\n\t *\n\t * @static\n\t * @private\n\t * @method updateGraphics\n\t * @param graphicsData {Graphics} The graphics object to update\n\t * @param gl {WebGLContext} the current WebGL drawing context\n\t */\n\tPIXI.WebGLGraphics.updateGraphics = function(graphics, gl)\n\t{\n\t    // get the contexts graphics object\n\t    var webGL = graphics._webGL[gl.id];\n\t    // if the graphics object does not exist in the webGL context time to create it!\n\t    if(!webGL)webGL = graphics._webGL[gl.id] = {lastIndex:0, data:[], gl:gl};\n\n\t    // flag the graphics as not dirty as we are about to update it...\n\t    graphics.dirty = false;\n\n\t    var i;\n\n\t    // if the user cleared the graphics object we will need to clear every object\n\t    if(graphics.clearDirty)\n\t    {\n\t        graphics.clearDirty = false;\n\n\t        // lop through and return all the webGLDatas to the object pool so than can be reused later on\n\t        for (i = 0; i < webGL.data.length; i++)\n\t        {\n\t            var graphicsData = webGL.data[i];\n\t            graphicsData.reset();\n\t            PIXI.WebGLGraphics.graphicsDataPool.push( graphicsData );\n\t        }\n\n\t        // clear the array and reset the index.. \n\t        webGL.data = [];\n\t        webGL.lastIndex = 0;\n\t    }\n\t    \n\t    var webGLData;\n\t    \n\t    // loop through the graphics datas and construct each one..\n\t    // if the object is a complex fill then the new stencil buffer technique will be used\n\t    // other wise graphics objects will be pushed into a batch..\n\t    for (i = webGL.lastIndex; i < graphics.graphicsData.length; i++)\n\t    {\n\t        var data = graphics.graphicsData[i];\n\n\t        if(data.type === PIXI.Graphics.POLY)\n\t        {\n\t            // need to add the points the the graphics object..\n\t            data.points = data.shape.points.slice();\n\t            if(data.shape.closed)\n\t            {\n\t                // close the poly if the value is true!\n\t                if(data.points[0] !== data.points[data.points.length-2] || data.points[1] !== data.points[data.points.length-1])\n\t                {\n\t                    data.points.push(data.points[0], data.points[1]);\n\t                }\n\t            }\n\n\t            // MAKE SURE WE HAVE THE CORRECT TYPE..\n\t            if(data.fill)\n\t            {\n\t                if(data.points.length >= 6)\n\t                {\n\t                    if(data.points.length < 6 * 2)\n\t                    {\n\t                        webGLData = PIXI.WebGLGraphics.switchMode(webGL, 0);\n\t                        \n\t                        var canDrawUsingSimple = PIXI.WebGLGraphics.buildPoly(data, webGLData);\n\t                   //     console.log(canDrawUsingSimple);\n\n\t                        if(!canDrawUsingSimple)\n\t                        {\n\t                        //    console.log(\"<>>>\")\n\t                            webGLData = PIXI.WebGLGraphics.switchMode(webGL, 1);\n\t                            PIXI.WebGLGraphics.buildComplexPoly(data, webGLData);\n\t                        }\n\t                        \n\t                    }\n\t                    else\n\t                    {\n\t                        webGLData = PIXI.WebGLGraphics.switchMode(webGL, 1);\n\t                        PIXI.WebGLGraphics.buildComplexPoly(data, webGLData);\n\t                    }\n\t                }\n\t            }\n\n\t            if(data.lineWidth > 0)\n\t            {\n\t                webGLData = PIXI.WebGLGraphics.switchMode(webGL, 0);\n\t                PIXI.WebGLGraphics.buildLine(data, webGLData);\n\n\t            }\n\t        }\n\t        else\n\t        {\n\t            webGLData = PIXI.WebGLGraphics.switchMode(webGL, 0);\n\t            \n\t            if(data.type === PIXI.Graphics.RECT)\n\t            {\n\t                PIXI.WebGLGraphics.buildRectangle(data, webGLData);\n\t            }\n\t            else if(data.type === PIXI.Graphics.CIRC || data.type === PIXI.Graphics.ELIP)\n\t            {\n\t                PIXI.WebGLGraphics.buildCircle(data, webGLData);\n\t            }\n\t            else if(data.type === PIXI.Graphics.RREC)\n\t            {\n\t                PIXI.WebGLGraphics.buildRoundedRectangle(data, webGLData);\n\t            }\n\t        }\n\n\t        webGL.lastIndex++;\n\t    }\n\n\t    // upload all the dirty data...\n\t    for (i = 0; i < webGL.data.length; i++)\n\t    {\n\t        webGLData = webGL.data[i];\n\t        if(webGLData.dirty)webGLData.upload();\n\t    }\n\t};\n\n\t/**\n\t * @static\n\t * @private\n\t * @method switchMode\n\t * @param webGL {WebGLContext}\n\t * @param type {Number}\n\t */\n\tPIXI.WebGLGraphics.switchMode = function(webGL, type)\n\t{\n\t    var webGLData;\n\n\t    if(!webGL.data.length)\n\t    {\n\t        webGLData = PIXI.WebGLGraphics.graphicsDataPool.pop() || new PIXI.WebGLGraphicsData(webGL.gl);\n\t        webGLData.mode = type;\n\t        webGL.data.push(webGLData);\n\t    }\n\t    else\n\t    {\n\t        webGLData = webGL.data[webGL.data.length-1];\n\n\t        if(webGLData.mode !== type || type === 1)\n\t        {\n\t            webGLData = PIXI.WebGLGraphics.graphicsDataPool.pop() || new PIXI.WebGLGraphicsData(webGL.gl);\n\t            webGLData.mode = type;\n\t            webGL.data.push(webGLData);\n\t        }\n\t    }\n\n\t    webGLData.dirty = true;\n\n\t    return webGLData;\n\t};\n\n\t/**\n\t * Builds a rectangle to draw\n\t *\n\t * @static\n\t * @private\n\t * @method buildRectangle\n\t * @param graphicsData {Graphics} The graphics object containing all the necessary properties\n\t * @param webGLData {Object}\n\t */\n\tPIXI.WebGLGraphics.buildRectangle = function(graphicsData, webGLData)\n\t{\n\t    // --- //\n\t    // need to convert points to a nice regular data\n\t    //\n\t    var rectData = graphicsData.shape;\n\t    var x = rectData.x;\n\t    var y = rectData.y;\n\t    var width = rectData.width;\n\t    var height = rectData.height;\n\n\t    if(graphicsData.fill)\n\t    {\n\t        var color = PIXI.hex2rgb(graphicsData.fillColor);\n\t        var alpha = graphicsData.fillAlpha;\n\n\t        var r = color[0] * alpha;\n\t        var g = color[1] * alpha;\n\t        var b = color[2] * alpha;\n\n\t        var verts = webGLData.points;\n\t        var indices = webGLData.indices;\n\n\t        var vertPos = verts.length/6;\n\n\t        // start\n\t        verts.push(x, y);\n\t        verts.push(r, g, b, alpha);\n\n\t        verts.push(x + width, y);\n\t        verts.push(r, g, b, alpha);\n\n\t        verts.push(x , y + height);\n\t        verts.push(r, g, b, alpha);\n\n\t        verts.push(x + width, y + height);\n\t        verts.push(r, g, b, alpha);\n\n\t        // insert 2 dead triangles..\n\t        indices.push(vertPos, vertPos, vertPos+1, vertPos+2, vertPos+3, vertPos+3);\n\t    }\n\n\t    if(graphicsData.lineWidth)\n\t    {\n\t        var tempPoints = graphicsData.points;\n\n\t        graphicsData.points = [x, y,\n\t                  x + width, y,\n\t                  x + width, y + height,\n\t                  x, y + height,\n\t                  x, y];\n\n\n\t        PIXI.WebGLGraphics.buildLine(graphicsData, webGLData);\n\n\t        graphicsData.points = tempPoints;\n\t    }\n\t};\n\n\t/**\n\t * Builds a rounded rectangle to draw\n\t *\n\t * @static\n\t * @private\n\t * @method buildRoundedRectangle\n\t * @param graphicsData {Graphics} The graphics object containing all the necessary properties\n\t * @param webGLData {Object}\n\t */\n\tPIXI.WebGLGraphics.buildRoundedRectangle = function(graphicsData, webGLData)\n\t{\n\t    var rrectData = graphicsData.shape;\n\t    var x = rrectData.x;\n\t    var y = rrectData.y;\n\t    var width = rrectData.width;\n\t    var height = rrectData.height;\n\n\t    var radius = rrectData.radius;\n\n\t    var recPoints = [];\n\t    recPoints.push(x, y + radius);\n\t    recPoints = recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x, y + height - radius, x, y + height, x + radius, y + height));\n\t    recPoints = recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x + width - radius, y + height, x + width, y + height, x + width, y + height - radius));\n\t    recPoints = recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x + width, y + radius, x + width, y, x + width - radius, y));\n\t    recPoints = recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x + radius, y, x, y, x, y + radius));\n\n\t    if (graphicsData.fill) {\n\t        var color = PIXI.hex2rgb(graphicsData.fillColor);\n\t        var alpha = graphicsData.fillAlpha;\n\n\t        var r = color[0] * alpha;\n\t        var g = color[1] * alpha;\n\t        var b = color[2] * alpha;\n\n\t        var verts = webGLData.points;\n\t        var indices = webGLData.indices;\n\n\t        var vecPos = verts.length/6;\n\n\t        var triangles = PIXI.PolyK.Triangulate(recPoints);\n\n\t        // \n\t        \n\t        var i = 0;\n\t        for (i = 0; i < triangles.length; i+=3)\n\t        {\n\t            indices.push(triangles[i] + vecPos);\n\t            indices.push(triangles[i] + vecPos);\n\t            indices.push(triangles[i+1] + vecPos);\n\t            indices.push(triangles[i+2] + vecPos);\n\t            indices.push(triangles[i+2] + vecPos);\n\t        }\n\n\n\t        for (i = 0; i < recPoints.length; i++)\n\t        {\n\t            verts.push(recPoints[i], recPoints[++i], r, g, b, alpha);\n\t        }\n\t    }\n\n\t    if (graphicsData.lineWidth) {\n\t        var tempPoints = graphicsData.points;\n\n\t        graphicsData.points = recPoints;\n\n\t        PIXI.WebGLGraphics.buildLine(graphicsData, webGLData);\n\n\t        graphicsData.points = tempPoints;\n\t    }\n\t};\n\n\t/**\n\t * Calculate the points for a quadratic bezier curve. (helper function..)\n\t * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n\t *\n\t * @static\n\t * @private\n\t * @method quadraticBezierCurve\n\t * @param fromX {Number} Origin point x\n\t * @param fromY {Number} Origin point x\n\t * @param cpX {Number} Control point x\n\t * @param cpY {Number} Control point y\n\t * @param toX {Number} Destination point x\n\t * @param toY {Number} Destination point y\n\t * @return {Array(Number)}\n\t */\n\tPIXI.WebGLGraphics.quadraticBezierCurve = function(fromX, fromY, cpX, cpY, toX, toY) {\n\n\t    var xa,\n\t        ya,\n\t        xb,\n\t        yb,\n\t        x,\n\t        y,\n\t        n = 20,\n\t        points = [];\n\n\t    function getPt(n1 , n2, perc) {\n\t        var diff = n2 - n1;\n\n\t        return n1 + ( diff * perc );\n\t    }\n\n\t    var j = 0;\n\t    for (var i = 0; i <= n; i++ )\n\t    {\n\t        j = i / n;\n\n\t        // The Green Line\n\t        xa = getPt( fromX , cpX , j );\n\t        ya = getPt( fromY , cpY , j );\n\t        xb = getPt( cpX , toX , j );\n\t        yb = getPt( cpY , toY , j );\n\n\t        // The Black Dot\n\t        x = getPt( xa , xb , j );\n\t        y = getPt( ya , yb , j );\n\n\t        points.push(x, y);\n\t    }\n\t    return points;\n\t};\n\n\t/**\n\t * Builds a circle to draw\n\t *\n\t * @static\n\t * @private\n\t * @method buildCircle\n\t * @param graphicsData {Graphics} The graphics object to draw\n\t * @param webGLData {Object}\n\t */\n\tPIXI.WebGLGraphics.buildCircle = function(graphicsData, webGLData)\n\t{\n\t    // need to convert points to a nice regular data\n\t    var circleData = graphicsData.shape;\n\t    var x = circleData.x;\n\t    var y = circleData.y;\n\t    var width;\n\t    var height;\n\t    \n\t    // TODO - bit hacky??\n\t    if(graphicsData.type === PIXI.Graphics.CIRC)\n\t    {\n\t        width = circleData.radius;\n\t        height = circleData.radius;\n\t    }\n\t    else\n\t    {\n\t        width = circleData.width;\n\t        height = circleData.height;\n\t    }\n\n\t    var totalSegs = 40;\n\t    var seg = (Math.PI * 2) / totalSegs ;\n\n\t    var i = 0;\n\n\t    if(graphicsData.fill)\n\t    {\n\t        var color = PIXI.hex2rgb(graphicsData.fillColor);\n\t        var alpha = graphicsData.fillAlpha;\n\n\t        var r = color[0] * alpha;\n\t        var g = color[1] * alpha;\n\t        var b = color[2] * alpha;\n\n\t        var verts = webGLData.points;\n\t        var indices = webGLData.indices;\n\n\t        var vecPos = verts.length/6;\n\n\t        indices.push(vecPos);\n\n\t        for (i = 0; i < totalSegs + 1 ; i++)\n\t        {\n\t            verts.push(x,y, r, g, b, alpha);\n\n\t            verts.push(x + Math.sin(seg * i) * width,\n\t                       y + Math.cos(seg * i) * height,\n\t                       r, g, b, alpha);\n\n\t            indices.push(vecPos++, vecPos++);\n\t        }\n\n\t        indices.push(vecPos-1);\n\t    }\n\n\t    if(graphicsData.lineWidth)\n\t    {\n\t        var tempPoints = graphicsData.points;\n\n\t        graphicsData.points = [];\n\n\t        for (i = 0; i < totalSegs + 1; i++)\n\t        {\n\t            graphicsData.points.push(x + Math.sin(seg * i) * width,\n\t                                     y + Math.cos(seg * i) * height);\n\t        }\n\n\t        PIXI.WebGLGraphics.buildLine(graphicsData, webGLData);\n\n\t        graphicsData.points = tempPoints;\n\t    }\n\t};\n\n\t/**\n\t * Builds a line to draw\n\t *\n\t * @static\n\t * @private\n\t * @method buildLine\n\t * @param graphicsData {Graphics} The graphics object containing all the necessary properties\n\t * @param webGLData {Object}\n\t */\n\tPIXI.WebGLGraphics.buildLine = function(graphicsData, webGLData)\n\t{\n\t    // TODO OPTIMISE!\n\t    var i = 0;\n\t    var points = graphicsData.points;\n\t    if(points.length === 0)return;\n\n\t    // if the line width is an odd number add 0.5 to align to a whole pixel\n\t    if(graphicsData.lineWidth%2)\n\t    {\n\t        for (i = 0; i < points.length; i++) {\n\t            points[i] += 0.5;\n\t        }\n\t    }\n\n\t    // get first and last point.. figure out the middle!\n\t    var firstPoint = new PIXI.Point( points[0], points[1] );\n\t    var lastPoint = new PIXI.Point( points[points.length - 2], points[points.length - 1] );\n\n\t    // if the first point is the last point - gonna have issues :)\n\t    if(firstPoint.x === lastPoint.x && firstPoint.y === lastPoint.y)\n\t    {\n\t        // need to clone as we are going to slightly modify the shape..\n\t        points = points.slice();\n\n\t        points.pop();\n\t        points.pop();\n\n\t        lastPoint = new PIXI.Point( points[points.length - 2], points[points.length - 1] );\n\n\t        var midPointX = lastPoint.x + (firstPoint.x - lastPoint.x) *0.5;\n\t        var midPointY = lastPoint.y + (firstPoint.y - lastPoint.y) *0.5;\n\n\t        points.unshift(midPointX, midPointY);\n\t        points.push(midPointX, midPointY);\n\t    }\n\n\t    var verts = webGLData.points;\n\t    var indices = webGLData.indices;\n\t    var length = points.length / 2;\n\t    var indexCount = points.length;\n\t    var indexStart = verts.length/6;\n\n\t    // DRAW the Line\n\t    var width = graphicsData.lineWidth / 2;\n\n\t    // sort color\n\t    var color = PIXI.hex2rgb(graphicsData.lineColor);\n\t    var alpha = graphicsData.lineAlpha;\n\t    var r = color[0] * alpha;\n\t    var g = color[1] * alpha;\n\t    var b = color[2] * alpha;\n\n\t    var px, py, p1x, p1y, p2x, p2y, p3x, p3y;\n\t    var perpx, perpy, perp2x, perp2y, perp3x, perp3y;\n\t    var a1, b1, c1, a2, b2, c2;\n\t    var denom, pdist, dist;\n\n\t    p1x = points[0];\n\t    p1y = points[1];\n\n\t    p2x = points[2];\n\t    p2y = points[3];\n\n\t    perpx = -(p1y - p2y);\n\t    perpy =  p1x - p2x;\n\n\t    dist = Math.sqrt(perpx*perpx + perpy*perpy);\n\n\t    perpx /= dist;\n\t    perpy /= dist;\n\t    perpx *= width;\n\t    perpy *= width;\n\n\t    // start\n\t    verts.push(p1x - perpx , p1y - perpy,\n\t                r, g, b, alpha);\n\n\t    verts.push(p1x + perpx , p1y + perpy,\n\t                r, g, b, alpha);\n\n\t    for (i = 1; i < length-1; i++)\n\t    {\n\t        p1x = points[(i-1)*2];\n\t        p1y = points[(i-1)*2 + 1];\n\n\t        p2x = points[(i)*2];\n\t        p2y = points[(i)*2 + 1];\n\n\t        p3x = points[(i+1)*2];\n\t        p3y = points[(i+1)*2 + 1];\n\n\t        perpx = -(p1y - p2y);\n\t        perpy = p1x - p2x;\n\n\t        dist = Math.sqrt(perpx*perpx + perpy*perpy);\n\t        perpx /= dist;\n\t        perpy /= dist;\n\t        perpx *= width;\n\t        perpy *= width;\n\n\t        perp2x = -(p2y - p3y);\n\t        perp2y = p2x - p3x;\n\n\t        dist = Math.sqrt(perp2x*perp2x + perp2y*perp2y);\n\t        perp2x /= dist;\n\t        perp2y /= dist;\n\t        perp2x *= width;\n\t        perp2y *= width;\n\n\t        a1 = (-perpy + p1y) - (-perpy + p2y);\n\t        b1 = (-perpx + p2x) - (-perpx + p1x);\n\t        c1 = (-perpx + p1x) * (-perpy + p2y) - (-perpx + p2x) * (-perpy + p1y);\n\t        a2 = (-perp2y + p3y) - (-perp2y + p2y);\n\t        b2 = (-perp2x + p2x) - (-perp2x + p3x);\n\t        c2 = (-perp2x + p3x) * (-perp2y + p2y) - (-perp2x + p2x) * (-perp2y + p3y);\n\n\t        denom = a1*b2 - a2*b1;\n\n\t        if(Math.abs(denom) < 0.1 )\n\t        {\n\n\t            denom+=10.1;\n\t            verts.push(p2x - perpx , p2y - perpy,\n\t                r, g, b, alpha);\n\n\t            verts.push(p2x + perpx , p2y + perpy,\n\t                r, g, b, alpha);\n\n\t            continue;\n\t        }\n\n\t        px = (b1*c2 - b2*c1)/denom;\n\t        py = (a2*c1 - a1*c2)/denom;\n\n\n\t        pdist = (px -p2x) * (px -p2x) + (py -p2y) + (py -p2y);\n\n\n\t        if(pdist > 140 * 140)\n\t        {\n\t            perp3x = perpx - perp2x;\n\t            perp3y = perpy - perp2y;\n\n\t            dist = Math.sqrt(perp3x*perp3x + perp3y*perp3y);\n\t            perp3x /= dist;\n\t            perp3y /= dist;\n\t            perp3x *= width;\n\t            perp3y *= width;\n\n\t            verts.push(p2x - perp3x, p2y -perp3y);\n\t            verts.push(r, g, b, alpha);\n\n\t            verts.push(p2x + perp3x, p2y +perp3y);\n\t            verts.push(r, g, b, alpha);\n\n\t            verts.push(p2x - perp3x, p2y -perp3y);\n\t            verts.push(r, g, b, alpha);\n\n\t            indexCount++;\n\t        }\n\t        else\n\t        {\n\n\t            verts.push(px , py);\n\t            verts.push(r, g, b, alpha);\n\n\t            verts.push(p2x - (px-p2x), p2y - (py - p2y));\n\t            verts.push(r, g, b, alpha);\n\t        }\n\t    }\n\n\t    p1x = points[(length-2)*2];\n\t    p1y = points[(length-2)*2 + 1];\n\n\t    p2x = points[(length-1)*2];\n\t    p2y = points[(length-1)*2 + 1];\n\n\t    perpx = -(p1y - p2y);\n\t    perpy = p1x - p2x;\n\n\t    dist = Math.sqrt(perpx*perpx + perpy*perpy);\n\t    perpx /= dist;\n\t    perpy /= dist;\n\t    perpx *= width;\n\t    perpy *= width;\n\n\t    verts.push(p2x - perpx , p2y - perpy);\n\t    verts.push(r, g, b, alpha);\n\n\t    verts.push(p2x + perpx , p2y + perpy);\n\t    verts.push(r, g, b, alpha);\n\n\t    indices.push(indexStart);\n\n\t    for (i = 0; i < indexCount; i++)\n\t    {\n\t        indices.push(indexStart++);\n\t    }\n\n\t    indices.push(indexStart-1);\n\t};\n\n\t/**\n\t * Builds a complex polygon to draw\n\t *\n\t * @static\n\t * @private\n\t * @method buildComplexPoly\n\t * @param graphicsData {Graphics} The graphics object containing all the necessary properties\n\t * @param webGLData {Object}\n\t */\n\tPIXI.WebGLGraphics.buildComplexPoly = function(graphicsData, webGLData)\n\t{\n\t    //TODO - no need to copy this as it gets turned into a FLoat32Array anyways..\n\t    var points = graphicsData.points.slice();\n\t    if(points.length < 6)return;\n\n\t    // get first and last point.. figure out the middle!\n\t    var indices = webGLData.indices;\n\t    webGLData.points = points;\n\t    webGLData.alpha = graphicsData.fillAlpha;\n\t    webGLData.color = PIXI.hex2rgb(graphicsData.fillColor);\n\n\t    /*\n\t        calclate the bounds..\n\t    */\n\t    var minX = Infinity;\n\t    var maxX = -Infinity;\n\n\t    var minY = Infinity;\n\t    var maxY = -Infinity;\n\n\t    var x,y;\n\n\t    // get size..\n\t    for (var i = 0; i < points.length; i+=2)\n\t    {\n\t        x = points[i];\n\t        y = points[i+1];\n\n\t        minX = x < minX ? x : minX;\n\t        maxX = x > maxX ? x : maxX;\n\n\t        minY = y < minY ? y : minY;\n\t        maxY = y > maxY ? y : maxY;\n\t    }\n\n\t    // add a quad to the end cos there is no point making another buffer!\n\t    points.push(minX, minY,\n\t                maxX, minY,\n\t                maxX, maxY,\n\t                minX, maxY);\n\n\t    // push a quad onto the end.. \n\t    \n\t    //TODO - this aint needed!\n\t    var length = points.length / 2;\n\t    for (i = 0; i < length; i++)\n\t    {\n\t        indices.push( i );\n\t    }\n\n\t};\n\n\t/**\n\t * Builds a polygon to draw\n\t *\n\t * @static\n\t * @private\n\t * @method buildPoly\n\t * @param graphicsData {Graphics} The graphics object containing all the necessary properties\n\t * @param webGLData {Object}\n\t */\n\tPIXI.WebGLGraphics.buildPoly = function(graphicsData, webGLData)\n\t{\n\t    var points = graphicsData.points;\n\n\t    if(points.length < 6)return;\n\t    // get first and last point.. figure out the middle!\n\t    var verts = webGLData.points;\n\t    var indices = webGLData.indices;\n\n\t    var length = points.length / 2;\n\n\t    // sort color\n\t    var color = PIXI.hex2rgb(graphicsData.fillColor);\n\t    var alpha = graphicsData.fillAlpha;\n\t    var r = color[0] * alpha;\n\t    var g = color[1] * alpha;\n\t    var b = color[2] * alpha;\n\n\t    var triangles = PIXI.PolyK.Triangulate(points);\n\n\t    if(!triangles)return false;\n\n\t    var vertPos = verts.length / 6;\n\n\t    var i = 0;\n\n\t    for (i = 0; i < triangles.length; i+=3)\n\t    {\n\t        indices.push(triangles[i] + vertPos);\n\t        indices.push(triangles[i] + vertPos);\n\t        indices.push(triangles[i+1] + vertPos);\n\t        indices.push(triangles[i+2] +vertPos);\n\t        indices.push(triangles[i+2] + vertPos);\n\t    }\n\n\t    for (i = 0; i < length; i++)\n\t    {\n\t        verts.push(points[i * 2], points[i * 2 + 1],\n\t                   r, g, b, alpha);\n\t    }\n\n\t    return true;\n\t};\n\n\tPIXI.WebGLGraphics.graphicsDataPool = [];\n\n\t/**\n\t * @class WebGLGraphicsData\n\t * @private\n\t * @static\n\t */\n\tPIXI.WebGLGraphicsData = function(gl)\n\t{\n\t    this.gl = gl;\n\n\t    //TODO does this need to be split before uploding??\n\t    this.color = [0,0,0]; // color split!\n\t    this.points = [];\n\t    this.indices = [];\n\t    this.buffer = gl.createBuffer();\n\t    this.indexBuffer = gl.createBuffer();\n\t    this.mode = 1;\n\t    this.alpha = 1;\n\t    this.dirty = true;\n\t};\n\n\t/**\n\t * @method reset\n\t */\n\tPIXI.WebGLGraphicsData.prototype.reset = function()\n\t{\n\t    this.points = [];\n\t    this.indices = [];\n\t};\n\n\t/**\n\t * @method upload\n\t */\n\tPIXI.WebGLGraphicsData.prototype.upload = function()\n\t{\n\t    var gl = this.gl;\n\n\t//    this.lastIndex = graphics.graphicsData.length;\n\t    this.glPoints = new PIXI.Float32Array(this.points);\n\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n\t    gl.bufferData(gl.ARRAY_BUFFER, this.glPoints, gl.STATIC_DRAW);\n\n\t    this.glIndicies = new PIXI.Uint16Array(this.indices);\n\n\t    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\t    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.glIndicies, gl.STATIC_DRAW);\n\n\t    this.dirty = false;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\tPIXI.glContexts = []; // this is where we store the webGL contexts for easy access.\n\tPIXI.instances = [];\n\n\t/**\n\t * The WebGLRenderer draws the stage and all its content onto a webGL enabled canvas. This renderer\n\t * should be used for browsers that support webGL. This Render works by automatically managing webGLBatchs.\n\t * So no need for Sprite Batches or Sprite Clouds.\n\t * Don't forget to add the view to your DOM or you will not see anything :)\n\t *\n\t * @class WebGLRenderer\n\t * @constructor\n\t * @param [width=0] {Number} the width of the canvas view\n\t * @param [height=0] {Number} the height of the canvas view\n\t * @param [options] {Object} The optional renderer parameters\n\t * @param [options.view] {HTMLCanvasElement} the canvas to use as a view, optional\n\t * @param [options.transparent=false] {Boolean} If the render view is transparent, default false\n\t * @param [options.autoResize=false] {Boolean} If the render view is automatically resized, default false\n\t * @param [options.antialias=false] {Boolean} sets antialias (only applicable in chrome at the moment)\n\t * @param [options.preserveDrawingBuffer=false] {Boolean} enables drawing buffer preservation, enable this if you need to call toDataUrl on the webgl context\n\t * @param [options.resolution=1] {Number} the resolution of the renderer retina would be 2\n\t */\n\tPIXI.WebGLRenderer = function(width, height, options)\n\t{\n\t    if(options)\n\t    {\n\t        for (var i in PIXI.defaultRenderOptions)\n\t        {\n\t            if (typeof options[i] === 'undefined') options[i] = PIXI.defaultRenderOptions[i];\n\t        }\n\t    }\n\t    else\n\t    {\n\t        options = PIXI.defaultRenderOptions;\n\t    }\n\n\t    if(!PIXI.defaultRenderer)\n\t    {\n\t        PIXI.sayHello('webGL');\n\t        PIXI.defaultRenderer = this;\n\t    }\n\n\t    /**\n\t     * @property type\n\t     * @type Number\n\t     */\n\t    this.type = PIXI.WEBGL_RENDERER;\n\n\t    /**\n\t     * The resolution of the renderer\n\t     *\n\t     * @property resolution\n\t     * @type Number\n\t     * @default 1\n\t     */\n\t    this.resolution = options.resolution;\n\n\t    // do a catch.. only 1 webGL renderer..\n\n\t    /**\n\t     * Whether the render view is transparent\n\t     *\n\t     * @property transparent\n\t     * @type Boolean\n\t     */\n\t    this.transparent = options.transparent;\n\n\t    /**\n\t     * Whether the render view should be resized automatically\n\t     *\n\t     * @property autoResize\n\t     * @type Boolean\n\t     */\n\t    this.autoResize = options.autoResize || false;\n\n\t    /**\n\t     * The value of the preserveDrawingBuffer flag affects whether or not the contents of the stencil buffer is retained after rendering.\n\t     *\n\t     * @property preserveDrawingBuffer\n\t     * @type Boolean\n\t     */\n\t    this.preserveDrawingBuffer = options.preserveDrawingBuffer;\n\n\t    /**\n\t     * This sets if the WebGLRenderer will clear the context texture or not before the new render pass. If true:\n\t     * If the Stage is NOT transparent, Pixi will clear to alpha (0, 0, 0, 0).\n\t     * If the Stage is transparent, Pixi will clear to the target Stage's background color.\n\t     * Disable this by setting this to false. For example: if your game has a canvas filling background image, you often don't need this set.\n\t     *\n\t     * @property clearBeforeRender\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    this.clearBeforeRender = options.clearBeforeRender;\n\n\t    /**\n\t     * The width of the canvas view\n\t     *\n\t     * @property width\n\t     * @type Number\n\t     * @default 800\n\t     */\n\t    this.width = width || 800;\n\n\t    /**\n\t     * The height of the canvas view\n\t     *\n\t     * @property height\n\t     * @type Number\n\t     * @default 600\n\t     */\n\t    this.height = height || 600;\n\n\t    /**\n\t     * The canvas element that everything is drawn to\n\t     *\n\t     * @property view\n\t     * @type HTMLCanvasElement\n\t     */\n\t    this.view = options.view || document.createElement( 'canvas' );\n\n\t    // deal with losing context..\n\n\t    /**\n\t     * @property contextLostBound\n\t     * @type Function\n\t     */\n\t    this.contextLostBound = this.handleContextLost.bind(this);\n\n\t    /**\n\t     * @property contextRestoredBound\n\t     * @type Function\n\t     */\n\t    this.contextRestoredBound = this.handleContextRestored.bind(this);\n\n\t    this.view.addEventListener('webglcontextlost', this.contextLostBound, false);\n\t    this.view.addEventListener('webglcontextrestored', this.contextRestoredBound, false);\n\n\t    /**\n\t     * @property _contextOptions\n\t     * @type Object\n\t     * @private\n\t     */\n\t    this._contextOptions = {\n\t        alpha: this.transparent,\n\t        antialias: options.antialias, // SPEED UP??\n\t        premultipliedAlpha:this.transparent && this.transparent !== 'notMultiplied',\n\t        stencil:true,\n\t        preserveDrawingBuffer: options.preserveDrawingBuffer\n\t    };\n\n\t    /**\n\t     * @property projection\n\t     * @type Point\n\t     */\n\t    this.projection = new PIXI.Point();\n\n\t    /**\n\t     * @property offset\n\t     * @type Point\n\t     */\n\t    this.offset = new PIXI.Point(0, 0);\n\n\t    // time to create the render managers! each one focuses on managing a state in webGL\n\n\t    /**\n\t     * Deals with managing the shader programs and their attribs\n\t     * @property shaderManager\n\t     * @type WebGLShaderManager\n\t     */\n\t    this.shaderManager = new PIXI.WebGLShaderManager();\n\n\t    /**\n\t     * Manages the rendering of sprites\n\t     * @property spriteBatch\n\t     * @type WebGLSpriteBatch\n\t     */\n\t    this.spriteBatch = new PIXI.WebGLSpriteBatch();\n\n\t    /**\n\t     * Manages the masks using the stencil buffer\n\t     * @property maskManager\n\t     * @type WebGLMaskManager\n\t     */\n\t    this.maskManager = new PIXI.WebGLMaskManager();\n\n\t    /**\n\t     * Manages the filters\n\t     * @property filterManager\n\t     * @type WebGLFilterManager\n\t     */\n\t    this.filterManager = new PIXI.WebGLFilterManager();\n\n\t    /**\n\t     * Manages the stencil buffer\n\t     * @property stencilManager\n\t     * @type WebGLStencilManager\n\t     */\n\t    this.stencilManager = new PIXI.WebGLStencilManager();\n\n\t    /**\n\t     * Manages the blendModes\n\t     * @property blendModeManager\n\t     * @type WebGLBlendModeManager\n\t     */\n\t    this.blendModeManager = new PIXI.WebGLBlendModeManager();\n\n\t    /**\n\t     * TODO remove\n\t     * @property renderSession\n\t     * @type Object\n\t     */\n\t    this.renderSession = {};\n\t    this.renderSession.gl = this.gl;\n\t    this.renderSession.drawCount = 0;\n\t    this.renderSession.shaderManager = this.shaderManager;\n\t    this.renderSession.maskManager = this.maskManager;\n\t    this.renderSession.filterManager = this.filterManager;\n\t    this.renderSession.blendModeManager = this.blendModeManager;\n\t    this.renderSession.spriteBatch = this.spriteBatch;\n\t    this.renderSession.stencilManager = this.stencilManager;\n\t    this.renderSession.renderer = this;\n\t    this.renderSession.resolution = this.resolution;\n\n\t    // time init the context..\n\t    this.initContext();\n\n\t    // map some webGL blend modes..\n\t    this.mapBlendModes();\n\t};\n\n\t// constructor\n\tPIXI.WebGLRenderer.prototype.constructor = PIXI.WebGLRenderer;\n\n\t/**\n\t* @method initContext\n\t*/\n\tPIXI.WebGLRenderer.prototype.initContext = function()\n\t{\n\t    var gl = this.view.getContext('webgl', this._contextOptions) || this.view.getContext('experimental-webgl', this._contextOptions);\n\t    this.gl = gl;\n\n\t    if (!gl) {\n\t        // fail, not able to get a context\n\t        throw new Error('This browser does not support webGL. Try using the canvas renderer');\n\t    }\n\n\t    this.glContextId = gl.id = PIXI.WebGLRenderer.glContextId ++;\n\n\t    PIXI.glContexts[this.glContextId] = gl;\n\n\t    PIXI.instances[this.glContextId] = this;\n\n\t    // set up the default pixi settings..\n\t    gl.disable(gl.DEPTH_TEST);\n\t    gl.disable(gl.CULL_FACE);\n\t    gl.enable(gl.BLEND);\n\n\t    // need to set the context for all the managers...\n\t    this.shaderManager.setContext(gl);\n\t    this.spriteBatch.setContext(gl);\n\t    this.maskManager.setContext(gl);\n\t    this.filterManager.setContext(gl);\n\t    this.blendModeManager.setContext(gl);\n\t    this.stencilManager.setContext(gl);\n\n\t    this.renderSession.gl = this.gl;\n\n\t    // now resize and we are good to go!\n\t    this.resize(this.width, this.height);\n\t};\n\n\t/**\n\t * Renders the stage to its webGL view\n\t *\n\t * @method render\n\t * @param stage {Stage} the Stage element to be rendered\n\t */\n\tPIXI.WebGLRenderer.prototype.render = function(stage)\n\t{\n\t    // no point rendering if our context has been blown up!\n\t    if(this.contextLost)return;\n\n\t    // if rendering a new stage clear the batches..\n\t    if(this.__stage !== stage)\n\t    {\n\t        if(stage.interactive)stage.interactionManager.removeEvents();\n\n\t        // TODO make this work\n\t        // dont think this is needed any more?\n\t        this.__stage = stage;\n\t    }\n\n\t    // update the scene graph\n\t    stage.updateTransform();\n\n\t    var gl = this.gl;\n\n\t    // interaction\n\t    if(stage._interactive)\n\t    {\n\t        //need to add some events!\n\t        if(!stage._interactiveEventsAdded)\n\t        {\n\t            stage._interactiveEventsAdded = true;\n\t            stage.interactionManager.setTarget(this);\n\t        }\n\t    }\n\t    else\n\t    {\n\t        if(stage._interactiveEventsAdded)\n\t        {\n\t            stage._interactiveEventsAdded = false;\n\t            stage.interactionManager.setTarget(this);\n\t        }\n\t    }\n\n\t    // -- Does this need to be set every frame? -- //\n\t    gl.viewport(0, 0, this.width, this.height);\n\n\t    // make sure we are bound to the main frame buffer\n\t    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t    if (this.clearBeforeRender)\n\t        {\n\t        if(this.transparent)\n\t        {\n\t            gl.clearColor(0, 0, 0, 0);\n\t        }\n\t        else\n\t        {\n\t            gl.clearColor(stage.backgroundColorSplit[0],stage.backgroundColorSplit[1],stage.backgroundColorSplit[2], 1);\n\t        }\n\n\t        gl.clear (gl.COLOR_BUFFER_BIT);\n\t    }\n\n\t    this.renderDisplayObject( stage, this.projection );\n\t};\n\n\t/**\n\t * Renders a Display Object.\n\t *\n\t * @method renderDisplayObject\n\t * @param displayObject {DisplayObject} The DisplayObject to render\n\t * @param projection {Point} The projection\n\t * @param buffer {Array} a standard WebGL buffer\n\t */\n\tPIXI.WebGLRenderer.prototype.renderDisplayObject = function(displayObject, projection, buffer)\n\t{\n\t    this.renderSession.blendModeManager.setBlendMode(PIXI.blendModes.NORMAL);\n\n\t    // reset the render session data..\n\t    this.renderSession.drawCount = 0;\n\n\t    // make sure to flip the Y if using a render texture..\n\t    this.renderSession.flipY = buffer ? -1 : 1;\n\n\t    // set the default projection\n\t    this.renderSession.projection = projection;\n\n\t    //set the default offset\n\t    this.renderSession.offset = this.offset;\n\n\t    // start the sprite batch\n\t    this.spriteBatch.begin(this.renderSession);\n\n\t    // start the filter manager\n\t    this.filterManager.begin(this.renderSession, buffer);\n\n\t    // render the scene!\n\t    displayObject._renderWebGL(this.renderSession);\n\n\t    // finish the sprite batch\n\t    this.spriteBatch.end();\n\t};\n\n\t/**\n\t * Resizes the webGL view to the specified width and height.\n\t *\n\t * @method resize\n\t * @param width {Number} the new width of the webGL view\n\t * @param height {Number} the new height of the webGL view\n\t */\n\tPIXI.WebGLRenderer.prototype.resize = function(width, height)\n\t{\n\t    this.width = width * this.resolution;\n\t    this.height = height * this.resolution;\n\n\t    this.view.width = this.width;\n\t    this.view.height = this.height;\n\n\t    if (this.autoResize) {\n\t        this.view.style.width = this.width / this.resolution + 'px';\n\t        this.view.style.height = this.height / this.resolution + 'px';\n\t    }\n\n\t    this.gl.viewport(0, 0, this.width, this.height);\n\n\t    this.projection.x =  this.width / 2 / this.resolution;\n\t    this.projection.y =  -this.height / 2 / this.resolution;\n\t};\n\n\t/**\n\t * Updates and Creates a WebGL texture for the renderers context.\n\t *\n\t * @method updateTexture\n\t * @param texture {Texture} the texture to update\n\t */\n\tPIXI.WebGLRenderer.prototype.updateTexture = function(texture)\n\t{\n\t    if(!texture.hasLoaded )return;\n\n\t    var gl = this.gl;\n\n\t    if(!texture._glTextures[gl.id])texture._glTextures[gl.id] = gl.createTexture();\n\n\t    gl.bindTexture(gl.TEXTURE_2D, texture._glTextures[gl.id]);\n\n\t    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultipliedAlpha);\n\t    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, texture.source);\n\n\t    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, texture.scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR : gl.NEAREST);\n\t    \n\n\t    if(texture.mipmap && PIXI.isPowerOfTwo(texture.width, texture.height))\n\t    {\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, texture.scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR_MIPMAP_LINEAR : gl.NEAREST_MIPMAP_NEAREST);\n\t        gl.generateMipmap(gl.TEXTURE_2D);\n\t    }\n\t    else\n\t    {\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, texture.scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR : gl.NEAREST);\n\t    }\n\n\t    // reguler...\n\t    if(!texture._powerOf2)\n\t    {\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t    }\n\t    else\n\t    {\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n\t    }\n\n\t    texture._dirty[gl.id] = false;\n\n\t    return  texture._glTextures[gl.id];\n\t};\n\n\t/**\n\t * Handles a lost webgl context\n\t *\n\t * @method handleContextLost\n\t * @param event {Event}\n\t * @private\n\t */\n\tPIXI.WebGLRenderer.prototype.handleContextLost = function(event)\n\t{\n\t    event.preventDefault();\n\t    this.contextLost = true;\n\t};\n\n\t/**\n\t * Handles a restored webgl context\n\t *\n\t * @method handleContextRestored\n\t * @param event {Event}\n\t * @private\n\t */\n\tPIXI.WebGLRenderer.prototype.handleContextRestored = function()\n\t{\n\t    this.initContext();\n\n\t    // empty all the ol gl textures as they are useless now\n\t    for(var key in PIXI.TextureCache)\n\t    {\n\t        var texture = PIXI.TextureCache[key].baseTexture;\n\t        texture._glTextures = [];\n\t    }\n\n\t    this.contextLost = false;\n\t};\n\n\t/**\n\t * Removes everything from the renderer (event listeners, spritebatch, etc...)\n\t *\n\t * @method destroy\n\t */\n\tPIXI.WebGLRenderer.prototype.destroy = function()\n\t{\n\t    // remove listeners\n\t    this.view.removeEventListener('webglcontextlost', this.contextLostBound);\n\t    this.view.removeEventListener('webglcontextrestored', this.contextRestoredBound);\n\n\t    PIXI.glContexts[this.glContextId] = null;\n\n\t    this.projection = null;\n\t    this.offset = null;\n\n\t    // time to create the render managers! each one focuses on managine a state in webGL\n\t    this.shaderManager.destroy();\n\t    this.spriteBatch.destroy();\n\t    this.maskManager.destroy();\n\t    this.filterManager.destroy();\n\n\t    this.shaderManager = null;\n\t    this.spriteBatch = null;\n\t    this.maskManager = null;\n\t    this.filterManager = null;\n\n\t    this.gl = null;\n\t    this.renderSession = null;\n\t};\n\n\t/**\n\t * Maps Pixi blend modes to WebGL blend modes.\n\t *\n\t * @method mapBlendModes\n\t */\n\tPIXI.WebGLRenderer.prototype.mapBlendModes = function()\n\t{\n\t    var gl = this.gl;\n\n\t    if(!PIXI.blendModesWebGL)\n\t    {\n\t        PIXI.blendModesWebGL = [];\n\n\t        PIXI.blendModesWebGL[PIXI.blendModes.NORMAL]        = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.ADD]           = [gl.SRC_ALPHA, gl.DST_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.MULTIPLY]      = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.SCREEN]        = [gl.SRC_ALPHA, gl.ONE];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.OVERLAY]       = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.DARKEN]        = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.LIGHTEN]       = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.COLOR_DODGE]   = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.COLOR_BURN]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.HARD_LIGHT]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.SOFT_LIGHT]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.DIFFERENCE]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.EXCLUSION]     = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.HUE]           = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.SATURATION]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.COLOR]         = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t        PIXI.blendModesWebGL[PIXI.blendModes.LUMINOSITY]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n\t    }\n\t};\n\n\tPIXI.WebGLRenderer.glContextId = 0;\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t* @class WebGLBlendModeManager\n\t* @constructor\n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t*/\n\tPIXI.WebGLBlendModeManager = function()\n\t{\n\t    /**\n\t     * @property currentBlendMode\n\t     * @type Number\n\t     */\n\t    this.currentBlendMode = 99999;\n\t};\n\n\tPIXI.WebGLBlendModeManager.prototype.constructor = PIXI.WebGLBlendModeManager;\n\n\t/**\n\t * Sets the WebGL Context.\n\t *\n\t * @method setContext\n\t * @param gl {WebGLContext} the current WebGL drawing context\n\t */\n\tPIXI.WebGLBlendModeManager.prototype.setContext = function(gl)\n\t{\n\t    this.gl = gl;\n\t};\n\n\t/**\n\t* Sets-up the given blendMode from WebGL's point of view.\n\t* \n\t* @method setBlendMode \n\t* @param blendMode {Number} the blendMode, should be a Pixi const, such as PIXI.BlendModes.ADD\n\t*/\n\tPIXI.WebGLBlendModeManager.prototype.setBlendMode = function(blendMode)\n\t{\n\t    if(this.currentBlendMode === blendMode)return false;\n\n\t    this.currentBlendMode = blendMode;\n\t    \n\t    var blendModeWebGL = PIXI.blendModesWebGL[this.currentBlendMode];\n\t    this.gl.blendFunc(blendModeWebGL[0], blendModeWebGL[1]);\n\t    \n\t    return true;\n\t};\n\n\t/**\n\t* Destroys this object.\n\t* \n\t* @method destroy\n\t*/\n\tPIXI.WebGLBlendModeManager.prototype.destroy = function()\n\t{\n\t    this.gl = null;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t* @class WebGLMaskManager\n\t* @constructor\n\t* @private\n\t*/\n\tPIXI.WebGLMaskManager = function()\n\t{\n\t};\n\n\tPIXI.WebGLMaskManager.prototype.constructor = PIXI.WebGLMaskManager;\n\n\t/**\n\t* Sets the drawing context to the one given in parameter.\n\t* \n\t* @method setContext \n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t*/\n\tPIXI.WebGLMaskManager.prototype.setContext = function(gl)\n\t{\n\t    this.gl = gl;\n\t};\n\n\t/**\n\t* Applies the Mask and adds it to the current filter stack.\n\t* \n\t* @method pushMask\n\t* @param maskData {Array}\n\t* @param renderSession {Object}\n\t*/\n\tPIXI.WebGLMaskManager.prototype.pushMask = function(maskData, renderSession)\n\t{\n\t    var gl = renderSession.gl;\n\n\t    if(maskData.dirty)\n\t    {\n\t        PIXI.WebGLGraphics.updateGraphics(maskData, gl);\n\t    }\n\n\t    if(!maskData._webGL[gl.id].data.length)return;\n\n\t    renderSession.stencilManager.pushStencil(maskData, maskData._webGL[gl.id].data[0], renderSession);\n\t};\n\n\t/**\n\t* Removes the last filter from the filter stack and doesn't return it.\n\t* \n\t* @method popMask\n\t* @param maskData {Array}\n\t* @param renderSession {Object} an object containing all the useful parameters\n\t*/\n\tPIXI.WebGLMaskManager.prototype.popMask = function(maskData, renderSession)\n\t{\n\t    var gl = this.gl;\n\t    renderSession.stencilManager.popStencil(maskData, maskData._webGL[gl.id].data[0], renderSession);\n\t};\n\n\t/**\n\t* Destroys the mask stack.\n\t* \n\t* @method destroy\n\t*/\n\tPIXI.WebGLMaskManager.prototype.destroy = function()\n\t{\n\t    this.gl = null;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t* @class WebGLStencilManager\n\t* @constructor\n\t* @private\n\t*/\n\tPIXI.WebGLStencilManager = function()\n\t{\n\t    this.stencilStack = [];\n\t    this.reverse = true;\n\t    this.count = 0;\n\t};\n\n\t/**\n\t* Sets the drawing context to the one given in parameter.\n\t* \n\t* @method setContext \n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t*/\n\tPIXI.WebGLStencilManager.prototype.setContext = function(gl)\n\t{\n\t    this.gl = gl;\n\t};\n\n\t/**\n\t* Applies the Mask and adds it to the current filter stack.\n\t* \n\t* @method pushMask\n\t* @param graphics {Graphics}\n\t* @param webGLData {Array}\n\t* @param renderSession {Object}\n\t*/\n\tPIXI.WebGLStencilManager.prototype.pushStencil = function(graphics, webGLData, renderSession)\n\t{\n\t    var gl = this.gl;\n\t    this.bindGraphics(graphics, webGLData, renderSession);\n\n\t    if(this.stencilStack.length === 0)\n\t    {\n\t        gl.enable(gl.STENCIL_TEST);\n\t        gl.clear(gl.STENCIL_BUFFER_BIT);\n\t        this.reverse = true;\n\t        this.count = 0;\n\t    }\n\n\t    this.stencilStack.push(webGLData);\n\n\t    var level = this.count;\n\n\t    gl.colorMask(false, false, false, false);\n\n\t    gl.stencilFunc(gl.ALWAYS,0,0xFF);\n\t    gl.stencilOp(gl.KEEP,gl.KEEP,gl.INVERT);\n\n\t    // draw the triangle strip!\n\n\t    if(webGLData.mode === 1)\n\t    {\n\t        gl.drawElements(gl.TRIANGLE_FAN,  webGLData.indices.length - 4, gl.UNSIGNED_SHORT, 0 );\n\t       \n\t        if(this.reverse)\n\t        {\n\t            gl.stencilFunc(gl.EQUAL, 0xFF - level, 0xFF);\n\t            gl.stencilOp(gl.KEEP,gl.KEEP,gl.DECR);\n\t        }\n\t        else\n\t        {\n\t            gl.stencilFunc(gl.EQUAL,level, 0xFF);\n\t            gl.stencilOp(gl.KEEP,gl.KEEP,gl.INCR);\n\t        }\n\n\t        // draw a quad to increment..\n\t        gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_SHORT, ( webGLData.indices.length - 4 ) * 2 );\n\t               \n\t        if(this.reverse)\n\t        {\n\t            gl.stencilFunc(gl.EQUAL,0xFF-(level+1), 0xFF);\n\t        }\n\t        else\n\t        {\n\t            gl.stencilFunc(gl.EQUAL,level+1, 0xFF);\n\t        }\n\n\t        this.reverse = !this.reverse;\n\t    }\n\t    else\n\t    {\n\t        if(!this.reverse)\n\t        {\n\t            gl.stencilFunc(gl.EQUAL, 0xFF - level, 0xFF);\n\t            gl.stencilOp(gl.KEEP,gl.KEEP,gl.DECR);\n\t        }\n\t        else\n\t        {\n\t            gl.stencilFunc(gl.EQUAL,level, 0xFF);\n\t            gl.stencilOp(gl.KEEP,gl.KEEP,gl.INCR);\n\t        }\n\n\t        gl.drawElements(gl.TRIANGLE_STRIP,  webGLData.indices.length, gl.UNSIGNED_SHORT, 0 );\n\n\t        if(!this.reverse)\n\t        {\n\t            gl.stencilFunc(gl.EQUAL,0xFF-(level+1), 0xFF);\n\t        }\n\t        else\n\t        {\n\t            gl.stencilFunc(gl.EQUAL,level+1, 0xFF);\n\t        }\n\t    }\n\n\t    gl.colorMask(true, true, true, true);\n\t    gl.stencilOp(gl.KEEP,gl.KEEP,gl.KEEP);\n\n\t    this.count++;\n\t};\n\n\t/**\n\t * TODO this does not belong here!\n\t * \n\t * @method bindGraphics\n\t * @param graphics {Graphics}\n\t * @param webGLData {Array}\n\t * @param renderSession {Object}\n\t */\n\tPIXI.WebGLStencilManager.prototype.bindGraphics = function(graphics, webGLData, renderSession)\n\t{\n\t    //if(this._currentGraphics === graphics)return;\n\t    this._currentGraphics = graphics;\n\n\t    var gl = this.gl;\n\n\t     // bind the graphics object..\n\t    var projection = renderSession.projection,\n\t        offset = renderSession.offset,\n\t        shader;// = renderSession.shaderManager.primitiveShader;\n\n\t    if(webGLData.mode === 1)\n\t    {\n\t        shader = renderSession.shaderManager.complexPrimitiveShader;\n\n\t        renderSession.shaderManager.setShader( shader );\n\n\t        gl.uniform1f(shader.flipY, renderSession.flipY);\n\t       \n\t        gl.uniformMatrix3fv(shader.translationMatrix, false, graphics.worldTransform.toArray(true));\n\n\t        gl.uniform2f(shader.projectionVector, projection.x, -projection.y);\n\t        gl.uniform2f(shader.offsetVector, -offset.x, -offset.y);\n\n\t        gl.uniform3fv(shader.tintColor, PIXI.hex2rgb(graphics.tint));\n\t        gl.uniform3fv(shader.color, webGLData.color);\n\n\t        gl.uniform1f(shader.alpha, graphics.worldAlpha * webGLData.alpha);\n\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, webGLData.buffer);\n\n\t        gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 2, 0);\n\n\n\t        // now do the rest..\n\t        // set the index buffer!\n\t        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, webGLData.indexBuffer);\n\t    }\n\t    else\n\t    {\n\t        //renderSession.shaderManager.activatePrimitiveShader();\n\t        shader = renderSession.shaderManager.primitiveShader;\n\t        renderSession.shaderManager.setShader( shader );\n\n\t        gl.uniformMatrix3fv(shader.translationMatrix, false, graphics.worldTransform.toArray(true));\n\n\t        gl.uniform1f(shader.flipY, renderSession.flipY);\n\t        gl.uniform2f(shader.projectionVector, projection.x, -projection.y);\n\t        gl.uniform2f(shader.offsetVector, -offset.x, -offset.y);\n\n\t        gl.uniform3fv(shader.tintColor, PIXI.hex2rgb(graphics.tint));\n\n\t        gl.uniform1f(shader.alpha, graphics.worldAlpha);\n\t        \n\t        gl.bindBuffer(gl.ARRAY_BUFFER, webGLData.buffer);\n\n\t        gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 6, 0);\n\t        gl.vertexAttribPointer(shader.colorAttribute, 4, gl.FLOAT, false,4 * 6, 2 * 4);\n\n\t        // set the index buffer!\n\t        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, webGLData.indexBuffer);\n\t    }\n\t};\n\n\t/**\n\t * @method popStencil\n\t * @param graphics {Graphics}\n\t * @param webGLData {Array}\n\t * @param renderSession {Object}\n\t */\n\tPIXI.WebGLStencilManager.prototype.popStencil = function(graphics, webGLData, renderSession)\n\t{\n\t\tvar gl = this.gl;\n\t    this.stencilStack.pop();\n\t   \n\t    this.count--;\n\n\t    if(this.stencilStack.length === 0)\n\t    {\n\t        // the stack is empty!\n\t        gl.disable(gl.STENCIL_TEST);\n\n\t    }\n\t    else\n\t    {\n\n\t        var level = this.count;\n\n\t        this.bindGraphics(graphics, webGLData, renderSession);\n\n\t        gl.colorMask(false, false, false, false);\n\t    \n\t        if(webGLData.mode === 1)\n\t        {\n\t            this.reverse = !this.reverse;\n\n\t            if(this.reverse)\n\t            {\n\t                gl.stencilFunc(gl.EQUAL, 0xFF - (level+1), 0xFF);\n\t                gl.stencilOp(gl.KEEP,gl.KEEP,gl.INCR);\n\t            }\n\t            else\n\t            {\n\t                gl.stencilFunc(gl.EQUAL,level+1, 0xFF);\n\t                gl.stencilOp(gl.KEEP,gl.KEEP,gl.DECR);\n\t            }\n\n\t            // draw a quad to increment..\n\t            gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_SHORT, ( webGLData.indices.length - 4 ) * 2 );\n\t            \n\t            gl.stencilFunc(gl.ALWAYS,0,0xFF);\n\t            gl.stencilOp(gl.KEEP,gl.KEEP,gl.INVERT);\n\n\t            // draw the triangle strip!\n\t            gl.drawElements(gl.TRIANGLE_FAN,  webGLData.indices.length - 4, gl.UNSIGNED_SHORT, 0 );\n\t           \n\t            if(!this.reverse)\n\t            {\n\t                gl.stencilFunc(gl.EQUAL,0xFF-(level), 0xFF);\n\t            }\n\t            else\n\t            {\n\t                gl.stencilFunc(gl.EQUAL,level, 0xFF);\n\t            }\n\n\t        }\n\t        else\n\t        {\n\t          //  console.log(\"<<>>\")\n\t            if(!this.reverse)\n\t            {\n\t                gl.stencilFunc(gl.EQUAL, 0xFF - (level+1), 0xFF);\n\t                gl.stencilOp(gl.KEEP,gl.KEEP,gl.INCR);\n\t            }\n\t            else\n\t            {\n\t                gl.stencilFunc(gl.EQUAL,level+1, 0xFF);\n\t                gl.stencilOp(gl.KEEP,gl.KEEP,gl.DECR);\n\t            }\n\n\t            gl.drawElements(gl.TRIANGLE_STRIP,  webGLData.indices.length, gl.UNSIGNED_SHORT, 0 );\n\n\t            if(!this.reverse)\n\t            {\n\t                gl.stencilFunc(gl.EQUAL,0xFF-(level), 0xFF);\n\t            }\n\t            else\n\t            {\n\t                gl.stencilFunc(gl.EQUAL,level, 0xFF);\n\t            }\n\t        }\n\n\t        gl.colorMask(true, true, true, true);\n\t        gl.stencilOp(gl.KEEP,gl.KEEP,gl.KEEP);\n\n\n\t    }\n\t};\n\n\t/**\n\t* Destroys the mask stack.\n\t* \n\t* @method destroy\n\t*/\n\tPIXI.WebGLStencilManager.prototype.destroy = function()\n\t{\n\t    this.stencilStack = null;\n\t    this.gl = null;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t* @class WebGLShaderManager\n\t* @constructor\n\t* @private\n\t*/\n\tPIXI.WebGLShaderManager = function()\n\t{\n\t    /**\n\t     * @property maxAttibs\n\t     * @type Number\n\t     */\n\t    this.maxAttibs = 10;\n\n\t    /**\n\t     * @property attribState\n\t     * @type Array\n\t     */\n\t    this.attribState = [];\n\n\t    /**\n\t     * @property tempAttribState\n\t     * @type Array\n\t     */\n\t    this.tempAttribState = [];\n\n\t    for (var i = 0; i < this.maxAttibs; i++)\n\t    {\n\t        this.attribState[i] = false;\n\t    }\n\n\t    /**\n\t     * @property stack\n\t     * @type Array\n\t     */\n\t    this.stack = [];\n\n\t};\n\n\tPIXI.WebGLShaderManager.prototype.constructor = PIXI.WebGLShaderManager;\n\n\t/**\n\t* Initialises the context and the properties.\n\t* \n\t* @method setContext \n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t*/\n\tPIXI.WebGLShaderManager.prototype.setContext = function(gl)\n\t{\n\t    this.gl = gl;\n\t    \n\t    // the next one is used for rendering primitives\n\t    this.primitiveShader = new PIXI.PrimitiveShader(gl);\n\n\t    // the next one is used for rendering triangle strips\n\t    this.complexPrimitiveShader = new PIXI.ComplexPrimitiveShader(gl);\n\n\t    // this shader is used for the default sprite rendering\n\t    this.defaultShader = new PIXI.PixiShader(gl);\n\n\t    // this shader is used for the fast sprite rendering\n\t    this.fastShader = new PIXI.PixiFastShader(gl);\n\n\t    // the next one is used for rendering triangle strips\n\t    this.stripShader = new PIXI.StripShader(gl);\n\t    this.setShader(this.defaultShader);\n\t};\n\n\t/**\n\t* Takes the attributes given in parameters.\n\t* \n\t* @method setAttribs\n\t* @param attribs {Array} attribs \n\t*/\n\tPIXI.WebGLShaderManager.prototype.setAttribs = function(attribs)\n\t{\n\t    // reset temp state\n\t    var i;\n\n\t    for (i = 0; i < this.tempAttribState.length; i++)\n\t    {\n\t        this.tempAttribState[i] = false;\n\t    }\n\n\t    // set the new attribs\n\t    for (i = 0; i < attribs.length; i++)\n\t    {\n\t        var attribId = attribs[i];\n\t        this.tempAttribState[attribId] = true;\n\t    }\n\n\t    var gl = this.gl;\n\n\t    for (i = 0; i < this.attribState.length; i++)\n\t    {\n\t        if(this.attribState[i] !== this.tempAttribState[i])\n\t        {\n\t            this.attribState[i] = this.tempAttribState[i];\n\n\t            if(this.tempAttribState[i])\n\t            {\n\t                gl.enableVertexAttribArray(i);\n\t            }\n\t            else\n\t            {\n\t                gl.disableVertexAttribArray(i);\n\t            }\n\t        }\n\t    }\n\t};\n\n\t/**\n\t* Sets the current shader.\n\t* \n\t* @method setShader\n\t* @param shader {Any}\n\t*/\n\tPIXI.WebGLShaderManager.prototype.setShader = function(shader)\n\t{\n\t    if(this._currentId === shader._UID)return false;\n\t    \n\t    this._currentId = shader._UID;\n\n\t    this.currentShader = shader;\n\n\t    this.gl.useProgram(shader.program);\n\t    this.setAttribs(shader.attributes);\n\n\t    return true;\n\t};\n\n\t/**\n\t* Destroys this object.\n\t* \n\t* @method destroy\n\t*/\n\tPIXI.WebGLShaderManager.prototype.destroy = function()\n\t{\n\t    this.attribState = null;\n\n\t    this.tempAttribState = null;\n\n\t    this.primitiveShader.destroy();\n\n\t    this.complexPrimitiveShader.destroy();\n\n\t    this.defaultShader.destroy();\n\n\t    this.fastShader.destroy();\n\n\t    this.stripShader.destroy();\n\n\t    this.gl = null;\n\t};\n\r\n\t/**\n\t * @author Mat Groves\n\t * \n\t * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n\t * for creating the original pixi version!\n\t * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they now share 4 bytes on the vertex buffer\n\t * \n\t * Heavily inspired by LibGDX's WebGLSpriteBatch:\n\t * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/WebGLSpriteBatch.java\n\t */\n\n\t /**\n\t *\n\t * @class WebGLSpriteBatch\n\t * @private\n\t * @constructor\n\t */\n\tPIXI.WebGLSpriteBatch = function()\n\t{\n\t    /**\n\t     * @property vertSize\n\t     * @type Number\n\t     */\n\t    this.vertSize = 5;\n\n\t    /**\n\t     * The number of images in the SpriteBatch before it flushes\n\t     * @property size\n\t     * @type Number\n\t     */\n\t    this.size = 2000;//Math.pow(2, 16) /  this.vertSize;\n\n\t    //the total number of bytes in our batch\n\t    var numVerts = this.size * 4 * 4 * this.vertSize;\n\t    //the total number of indices in our batch\n\t    var numIndices = this.size * 6;\n\n\t    /**\n\t    * Holds the vertices\n\t    *\n\t    * @property vertices\n\t    * @type ArrayBuffer\n\t    */\n\t    this.vertices = new PIXI.ArrayBuffer(numVerts);\n\n\t    /**\n\t    * View on the vertices as a Float32Array\n\t    *\n\t    * @property positions\n\t    * @type Float32Array\n\t    */\n\t    this.positions = new PIXI.Float32Array(this.vertices);\n\n\t    /**\n\t    * View on the vertices as a Uint32Array\n\t    *\n\t    * @property colors\n\t    * @type Uint32Array\n\t    */\n\t    this.colors = new PIXI.Uint32Array(this.vertices);\n\n\t    /**\n\t     * Holds the indices\n\t     *\n\t     * @property indices\n\t     * @type Uint16Array\n\t     */\n\t    this.indices = new PIXI.Uint16Array(numIndices);\n\t    \n\t    /**\n\t     * @property lastIndexCount\n\t     * @type Number\n\t     */\n\t    this.lastIndexCount = 0;\n\n\t    for (var i=0, j=0; i < numIndices; i += 6, j += 4)\n\t    {\n\t        this.indices[i + 0] = j + 0;\n\t        this.indices[i + 1] = j + 1;\n\t        this.indices[i + 2] = j + 2;\n\t        this.indices[i + 3] = j + 0;\n\t        this.indices[i + 4] = j + 2;\n\t        this.indices[i + 5] = j + 3;\n\t    }\n\n\t    /**\n\t     * @property drawing\n\t     * @type Boolean\n\t     */\n\t    this.drawing = false;\n\n\t    /**\n\t     * @property currentBatchSize\n\t     * @type Number\n\t     */\n\t    this.currentBatchSize = 0;\n\n\t    /**\n\t     * @property currentBaseTexture\n\t     * @type BaseTexture\n\t     */\n\t    this.currentBaseTexture = null;\n\n\t    /**\n\t     * @property dirty\n\t     * @type Boolean\n\t     */\n\t    this.dirty = true;\n\n\t    /**\n\t     * @property textures\n\t     * @type Array\n\t     */\n\t    this.textures = [];\n\n\t    /**\n\t     * @property blendModes\n\t     * @type Array\n\t     */\n\t    this.blendModes = [];\n\n\t    /**\n\t     * @property shaders\n\t     * @type Array\n\t     */\n\t    this.shaders = [];\n\n\t    /**\n\t     * @property sprites\n\t     * @type Array\n\t     */\n\t    this.sprites = [];\n\n\t    /**\n\t     * @property defaultShader\n\t     * @type AbstractFilter\n\t     */\n\t    this.defaultShader = new PIXI.AbstractFilter([\n\t        'precision lowp float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform sampler2D uSampler;',\n\t        'void main(void) {',\n\t        '   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;',\n\t        '}'\n\t    ]);\n\t};\n\n\t/**\n\t* @method setContext\n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t*/\n\tPIXI.WebGLSpriteBatch.prototype.setContext = function(gl)\n\t{\n\t    this.gl = gl;\n\n\t    // create a couple of buffers\n\t    this.vertexBuffer = gl.createBuffer();\n\t    this.indexBuffer = gl.createBuffer();\n\n\t    // 65535 is max index, so 65535 / 6 = 10922.\n\n\t    //upload the index data\n\t    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\t    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);\n\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t    gl.bufferData(gl.ARRAY_BUFFER, this.vertices, gl.DYNAMIC_DRAW);\n\n\t    this.currentBlendMode = 99999;\n\n\t    var shader = new PIXI.PixiShader(gl);\n\n\t    shader.fragmentSrc = this.defaultShader.fragmentSrc;\n\t    shader.uniforms = {};\n\t    shader.init();\n\n\t    this.defaultShader.shaders[gl.id] = shader;\n\t};\n\n\t/**\n\t* @method begin\n\t* @param renderSession {Object} The RenderSession object\n\t*/\n\tPIXI.WebGLSpriteBatch.prototype.begin = function(renderSession)\n\t{\n\t    this.renderSession = renderSession;\n\t    this.shader = this.renderSession.shaderManager.defaultShader;\n\n\t    this.start();\n\t};\n\n\t/**\n\t* @method end\n\t*/\n\tPIXI.WebGLSpriteBatch.prototype.end = function()\n\t{\n\t    this.flush();\n\t};\n\n\t/**\n\t* @method render\n\t* @param sprite {Sprite} the sprite to render when using this spritebatch\n\t*/\n\tPIXI.WebGLSpriteBatch.prototype.render = function(sprite)\n\t{\n\t    var texture = sprite.texture;\n\n\t   //TODO set blend modes.. \n\t    // check texture..\n\t    if(this.currentBatchSize >= this.size)\n\t    {\n\t        this.flush();\n\t        this.currentBaseTexture = texture.baseTexture;\n\t    }\n\n\t    // get the uvs for the texture\n\t    var uvs = texture._uvs;\n\t    // if the uvs have not updated then no point rendering just yet!\n\t    if(!uvs)return;\n\n\t    // TODO trim??\n\t    var aX = sprite.anchor.x;\n\t    var aY = sprite.anchor.y;\n\n\t    var w0, w1, h0, h1;\n\t        \n\t    if (texture.trim)\n\t    {\n\t        // if the sprite is trimmed then we need to add the extra space before transforming the sprite coords..\n\t        var trim = texture.trim;\n\n\t        w1 = trim.x - aX * trim.width;\n\t        w0 = w1 + texture.crop.width;\n\n\t        h1 = trim.y - aY * trim.height;\n\t        h0 = h1 + texture.crop.height;\n\n\t    }\n\t    else\n\t    {\n\t        w0 = (texture.frame.width ) * (1-aX);\n\t        w1 = (texture.frame.width ) * -aX;\n\n\t        h0 = texture.frame.height * (1-aY);\n\t        h1 = texture.frame.height * -aY;\n\t    }\n\n\t    var index = this.currentBatchSize * 4 * this.vertSize;\n\t    \n\t    var resolution = texture.baseTexture.resolution;\n\n\t    var worldTransform = sprite.worldTransform;\n\n\t    var a = worldTransform.a / resolution;\n\t    var b = worldTransform.b / resolution;\n\t    var c = worldTransform.c / resolution;\n\t    var d = worldTransform.d / resolution;\n\t    var tx = worldTransform.tx;\n\t    var ty = worldTransform.ty;\n\n\t    var colors = this.colors;\n\t    var positions = this.positions;\n\n\t    if(this.renderSession.roundPixels)\n\t    {\n\t        // xy\n\t        positions[index] = a * w1 + c * h1 + tx | 0;\n\t        positions[index+1] = d * h1 + b * w1 + ty | 0;\n\n\t        // xy\n\t        positions[index+5] = a * w0 + c * h1 + tx | 0;\n\t        positions[index+6] = d * h1 + b * w0 + ty | 0;\n\n\t         // xy\n\t        positions[index+10] = a * w0 + c * h0 + tx | 0;\n\t        positions[index+11] = d * h0 + b * w0 + ty | 0;\n\n\t        // xy\n\t        positions[index+15] = a * w1 + c * h0 + tx | 0;\n\t        positions[index+16] = d * h0 + b * w1 + ty | 0;\n\t    }\n\t    else\n\t    {\n\t        // xy\n\t        positions[index] = a * w1 + c * h1 + tx;\n\t        positions[index+1] = d * h1 + b * w1 + ty;\n\n\t        // xy\n\t        positions[index+5] = a * w0 + c * h1 + tx;\n\t        positions[index+6] = d * h1 + b * w0 + ty;\n\n\t         // xy\n\t        positions[index+10] = a * w0 + c * h0 + tx;\n\t        positions[index+11] = d * h0 + b * w0 + ty;\n\n\t        // xy\n\t        positions[index+15] = a * w1 + c * h0 + tx;\n\t        positions[index+16] = d * h0 + b * w1 + ty;\n\t    }\n\t    \n\t    // uv\n\t    positions[index+2] = uvs.x0;\n\t    positions[index+3] = uvs.y0;\n\n\t    // uv\n\t    positions[index+7] = uvs.x1;\n\t    positions[index+8] = uvs.y1;\n\n\t     // uv\n\t    positions[index+12] = uvs.x2;\n\t    positions[index+13] = uvs.y2;\n\n\t    // uv\n\t    positions[index+17] = uvs.x3;\n\t    positions[index+18] = uvs.y3;\n\n\t    // color and alpha\n\t    var tint = sprite.tint;\n\t    colors[index+4] = colors[index+9] = colors[index+14] = colors[index+19] = (tint >> 16) + (tint & 0xff00) + ((tint & 0xff) << 16) + (sprite.worldAlpha * 255 << 24);\n\n\t    // increment the batchsize\n\t    this.sprites[this.currentBatchSize++] = sprite;\n\n\n\t};\n\n\t/**\n\t* Renders a TilingSprite using the spriteBatch.\n\t* \n\t* @method renderTilingSprite\n\t* @param sprite {TilingSprite} the tilingSprite to render\n\t*/\n\tPIXI.WebGLSpriteBatch.prototype.renderTilingSprite = function(tilingSprite)\n\t{\n\t    var texture = tilingSprite.tilingTexture;\n\n\t    // check texture..\n\t    if(this.currentBatchSize >= this.size)\n\t    {\n\t        //return;\n\t        this.flush();\n\t        this.currentBaseTexture = texture.baseTexture;\n\t    }\n\n\t     // set the textures uvs temporarily\n\t    // TODO create a separate texture so that we can tile part of a texture\n\n\t    if(!tilingSprite._uvs)tilingSprite._uvs = new PIXI.TextureUvs();\n\n\t    var uvs = tilingSprite._uvs;\n\n\t    tilingSprite.tilePosition.x %= texture.baseTexture.width * tilingSprite.tileScaleOffset.x;\n\t    tilingSprite.tilePosition.y %= texture.baseTexture.height * tilingSprite.tileScaleOffset.y;\n\n\t    var offsetX =  tilingSprite.tilePosition.x/(texture.baseTexture.width*tilingSprite.tileScaleOffset.x);\n\t    var offsetY =  tilingSprite.tilePosition.y/(texture.baseTexture.height*tilingSprite.tileScaleOffset.y);\n\n\t    var scaleX =  (tilingSprite.width / texture.baseTexture.width)  / (tilingSprite.tileScale.x * tilingSprite.tileScaleOffset.x);\n\t    var scaleY =  (tilingSprite.height / texture.baseTexture.height) / (tilingSprite.tileScale.y * tilingSprite.tileScaleOffset.y);\n\n\t    uvs.x0 = 0 - offsetX;\n\t    uvs.y0 = 0 - offsetY;\n\n\t    uvs.x1 = (1 * scaleX) - offsetX;\n\t    uvs.y1 = 0 - offsetY;\n\n\t    uvs.x2 = (1 * scaleX) - offsetX;\n\t    uvs.y2 = (1 * scaleY) - offsetY;\n\n\t    uvs.x3 = 0 - offsetX;\n\t    uvs.y3 = (1 * scaleY) - offsetY;\n\n\t    // get the tilingSprites current alpha and tint and combining them into a single color\n\t    var tint = tilingSprite.tint;\n\t    var color = (tint >> 16) + (tint & 0xff00) + ((tint & 0xff) << 16) + (tilingSprite.alpha * 255 << 24);\n\n\t    var positions = this.positions;\n\t    var colors = this.colors;\n\n\t    var width = tilingSprite.width;\n\t    var height = tilingSprite.height;\n\n\t    // TODO trim??\n\t    var aX = tilingSprite.anchor.x;\n\t    var aY = tilingSprite.anchor.y;\n\t    var w0 = width * (1-aX);\n\t    var w1 = width * -aX;\n\n\t    var h0 = height * (1-aY);\n\t    var h1 = height * -aY;\n\n\t    var index = this.currentBatchSize * 4 * this.vertSize;\n\n\t    var resolution = texture.baseTexture.resolution;\n\n\t    var worldTransform = tilingSprite.worldTransform;\n\n\t    var a = worldTransform.a / resolution;//[0];\n\t    var b = worldTransform.b / resolution;//[3];\n\t    var c = worldTransform.c / resolution;//[1];\n\t    var d = worldTransform.d / resolution;//[4];\n\t    var tx = worldTransform.tx;//[2];\n\t    var ty = worldTransform.ty;//[5];\n\n\t    // xy\n\t    positions[index++] = a * w1 + c * h1 + tx;\n\t    positions[index++] = d * h1 + b * w1 + ty;\n\t    // uv\n\t    positions[index++] = uvs.x0;\n\t    positions[index++] = uvs.y0;\n\t    // color\n\t    colors[index++] = color;\n\n\t    // xy\n\t    positions[index++] = (a * w0 + c * h1 + tx);\n\t    positions[index++] = d * h1 + b * w0 + ty;\n\t    // uv\n\t    positions[index++] = uvs.x1;\n\t    positions[index++] = uvs.y1;\n\t    // color\n\t    colors[index++] = color;\n\t    \n\t    // xy\n\t    positions[index++] = a * w0 + c * h0 + tx;\n\t    positions[index++] = d * h0 + b * w0 + ty;\n\t    // uv\n\t    positions[index++] = uvs.x2;\n\t    positions[index++] = uvs.y2;\n\t    // color\n\t    colors[index++] = color;\n\n\t    // xy\n\t    positions[index++] = a * w1 + c * h0 + tx;\n\t    positions[index++] = d * h0 + b * w1 + ty;\n\t    // uv\n\t    positions[index++] = uvs.x3;\n\t    positions[index++] = uvs.y3;\n\t    // color\n\t    colors[index++] = color;\n\n\t    // increment the batchsize\n\t    this.sprites[this.currentBatchSize++] = tilingSprite;\n\t};\n\n\t/**\n\t* Renders the content and empties the current batch.\n\t*\n\t* @method flush\n\t*/\n\tPIXI.WebGLSpriteBatch.prototype.flush = function()\n\t{\n\t    // If the batch is length 0 then return as there is nothing to draw\n\t    if (this.currentBatchSize===0)return;\n\n\t    var gl = this.gl;\n\t    var shader;\n\n\t    if(this.dirty)\n\t    {\n\t        this.dirty = false;\n\t        // bind the main texture\n\t        gl.activeTexture(gl.TEXTURE0);\n\n\t        // bind the buffers\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\n\t        shader =  this.defaultShader.shaders[gl.id];\n\n\t        // this is the same for each shader?\n\t        var stride =  this.vertSize * 4;\n\t        gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, stride, 0);\n\t        gl.vertexAttribPointer(shader.aTextureCoord, 2, gl.FLOAT, false, stride, 2 * 4);\n\n\t        // color attributes will be interpreted as unsigned bytes and normalized\n\t        gl.vertexAttribPointer(shader.colorAttribute, 4, gl.UNSIGNED_BYTE, true, stride, 4 * 4);\n\t    }\n\n\t    // upload the verts to the buffer  \n\t    if(this.currentBatchSize > ( this.size * 0.5 ) )\n\t    {\n\t        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertices);\n\t    }\n\t    else\n\t    {\n\t        var view = this.positions.subarray(0, this.currentBatchSize * 4 * this.vertSize);\n\t        gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n\t    }\n\n\t    var nextTexture, nextBlendMode, nextShader;\n\t    var batchSize = 0;\n\t    var start = 0;\n\n\t    var currentBaseTexture = null;\n\t    var currentBlendMode = this.renderSession.blendModeManager.currentBlendMode;\n\t    var currentShader = null;\n\n\t    var blendSwap = false;\n\t    var shaderSwap = false;\n\t    var sprite;\n\n\t    for (var i = 0, j = this.currentBatchSize; i < j; i++) {\n\t        \n\t        sprite = this.sprites[i];\n\n\t        nextTexture = sprite.texture.baseTexture;\n\t        nextBlendMode = sprite.blendMode;\n\t        nextShader = sprite.shader || this.defaultShader;\n\n\t        blendSwap = currentBlendMode !== nextBlendMode;\n\t        shaderSwap = currentShader !== nextShader; // should I use _UIDS???\n\n\t        if(currentBaseTexture !== nextTexture || blendSwap || shaderSwap)\n\t        {\n\t            this.renderBatch(currentBaseTexture, batchSize, start);\n\n\t            start = i;\n\t            batchSize = 0;\n\t            currentBaseTexture = nextTexture;\n\n\t            if( blendSwap )\n\t            {\n\t                currentBlendMode = nextBlendMode;\n\t                this.renderSession.blendModeManager.setBlendMode( currentBlendMode );\n\t            }\n\n\t            if( shaderSwap )\n\t            {\n\t                currentShader = nextShader;\n\t                \n\t                shader = currentShader.shaders[gl.id];\n\n\t                if(!shader)\n\t                {\n\t                    shader = new PIXI.PixiShader(gl);\n\n\t                    shader.fragmentSrc =currentShader.fragmentSrc;\n\t                    shader.uniforms =currentShader.uniforms;\n\t                    shader.init();\n\n\t                    currentShader.shaders[gl.id] = shader;\n\t                }\n\n\t                // set shader function???\n\t                this.renderSession.shaderManager.setShader(shader);\n\n\t                if(shader.dirty)shader.syncUniforms();\n\t                \n\t                // both thease only need to be set if they are changing..\n\t                // set the projection\n\t                var projection = this.renderSession.projection;\n\t                gl.uniform2f(shader.projectionVector, projection.x, projection.y);\n\n\t                // TODO - this is temprorary!\n\t                var offsetVector = this.renderSession.offset;\n\t                gl.uniform2f(shader.offsetVector, offsetVector.x, offsetVector.y);\n\n\t                // set the pointers\n\t            }\n\t        }\n\n\t        batchSize++;\n\t    }\n\n\t    this.renderBatch(currentBaseTexture, batchSize, start);\n\n\t    // then reset the batch!\n\t    this.currentBatchSize = 0;\n\t};\n\n\t/**\n\t* @method renderBatch\n\t* @param texture {Texture}\n\t* @param size {Number}\n\t* @param startIndex {Number}\n\t*/\n\tPIXI.WebGLSpriteBatch.prototype.renderBatch = function(texture, size, startIndex)\n\t{\n\t    if(size === 0)return;\n\n\t    var gl = this.gl;\n\n\t    // check if a texture is dirty..\n\t    if(texture._dirty[gl.id])\n\t    {\n\t        this.renderSession.renderer.updateTexture(texture);\n\t    }\n\t    else\n\t    {\n\t        // bind the current texture\n\t        gl.bindTexture(gl.TEXTURE_2D, texture._glTextures[gl.id]);\n\t    }\n\n\t    // now draw those suckas!\n\t    gl.drawElements(gl.TRIANGLES, size * 6, gl.UNSIGNED_SHORT, startIndex * 6 * 2);\n\t    \n\t    // increment the draw count\n\t    this.renderSession.drawCount++;\n\t};\n\n\t/**\n\t* @method stop\n\t*/\n\tPIXI.WebGLSpriteBatch.prototype.stop = function()\n\t{\n\t    this.flush();\n\t    this.dirty = true;\n\t};\n\n\t/**\n\t* @method start\n\t*/\n\tPIXI.WebGLSpriteBatch.prototype.start = function()\n\t{\n\t    this.dirty = true;\n\t};\n\n\t/**\n\t* Destroys the SpriteBatch.\n\t* \n\t* @method destroy\n\t*/\n\tPIXI.WebGLSpriteBatch.prototype.destroy = function()\n\t{\n\t    this.vertices = null;\n\t    this.indices = null;\n\t    \n\t    this.gl.deleteBuffer( this.vertexBuffer );\n\t    this.gl.deleteBuffer( this.indexBuffer );\n\t    \n\t    this.currentBaseTexture = null;\n\t    \n\t    this.gl = null;\n\t};\r\n\t/**\n\t * @author Mat Groves\n\t * \n\t * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n\t * for creating the original pixi version!\n\t *\n\t * Heavily inspired by LibGDX's WebGLSpriteBatch:\n\t * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/WebGLSpriteBatch.java\n\t */\n\n\t/**\n\t* @class WebGLFastSpriteBatch\n\t* @constructor\n\t*/\n\tPIXI.WebGLFastSpriteBatch = function(gl)\n\t{\n\t    /**\n\t     * @property vertSize\n\t     * @type Number\n\t     */\n\t    this.vertSize = 10;\n\n\t    /**\n\t     * @property maxSize\n\t     * @type Number\n\t     */\n\t    this.maxSize = 6000;//Math.pow(2, 16) /  this.vertSize;\n\n\t    /**\n\t     * @property size\n\t     * @type Number\n\t     */\n\t    this.size = this.maxSize;\n\n\t    //the total number of floats in our batch\n\t    var numVerts = this.size * 4 *  this.vertSize;\n\n\t    //the total number of indices in our batch\n\t    var numIndices = this.maxSize * 6;\n\n\t    /**\n\t     * Vertex data\n\t     * @property vertices\n\t     * @type Float32Array\n\t     */\n\t    this.vertices = new PIXI.Float32Array(numVerts);\n\n\t    /**\n\t     * Index data\n\t     * @property indices\n\t     * @type Uint16Array\n\t     */\n\t    this.indices = new PIXI.Uint16Array(numIndices);\n\t    \n\t    /**\n\t     * @property vertexBuffer\n\t     * @type Object\n\t     */\n\t    this.vertexBuffer = null;\n\n\t    /**\n\t     * @property indexBuffer\n\t     * @type Object\n\t     */\n\t    this.indexBuffer = null;\n\n\t    /**\n\t     * @property lastIndexCount\n\t     * @type Number\n\t     */\n\t    this.lastIndexCount = 0;\n\n\t    for (var i=0, j=0; i < numIndices; i += 6, j += 4)\n\t    {\n\t        this.indices[i + 0] = j + 0;\n\t        this.indices[i + 1] = j + 1;\n\t        this.indices[i + 2] = j + 2;\n\t        this.indices[i + 3] = j + 0;\n\t        this.indices[i + 4] = j + 2;\n\t        this.indices[i + 5] = j + 3;\n\t    }\n\n\t    /**\n\t     * @property drawing\n\t     * @type Boolean\n\t     */\n\t    this.drawing = false;\n\n\t    /**\n\t     * @property currentBatchSize\n\t     * @type Number\n\t     */\n\t    this.currentBatchSize = 0;\n\n\t    /**\n\t     * @property currentBaseTexture\n\t     * @type BaseTexture\n\t     */\n\t    this.currentBaseTexture = null;\n\t   \n\t    /**\n\t     * @property currentBlendMode\n\t     * @type Number\n\t     */\n\t    this.currentBlendMode = 0;\n\n\t    /**\n\t     * @property renderSession\n\t     * @type Object\n\t     */\n\t    this.renderSession = null;\n\t    \n\t    /**\n\t     * @property shader\n\t     * @type Object\n\t     */\n\t    this.shader = null;\n\n\t    /**\n\t     * @property matrix\n\t     * @type Matrix\n\t     */\n\t    this.matrix = null;\n\n\t    this.setContext(gl);\n\t};\n\n\tPIXI.WebGLFastSpriteBatch.prototype.constructor = PIXI.WebGLFastSpriteBatch;\n\n\t/**\n\t * Sets the WebGL Context.\n\t *\n\t * @method setContext\n\t * @param gl {WebGLContext} the current WebGL drawing context\n\t */\n\tPIXI.WebGLFastSpriteBatch.prototype.setContext = function(gl)\n\t{\n\t    this.gl = gl;\n\n\t    // create a couple of buffers\n\t    this.vertexBuffer = gl.createBuffer();\n\t    this.indexBuffer = gl.createBuffer();\n\n\t    // 65535 is max index, so 65535 / 6 = 10922.\n\n\t    //upload the index data\n\t    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\t    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);\n\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t    gl.bufferData(gl.ARRAY_BUFFER, this.vertices, gl.DYNAMIC_DRAW);\n\t};\n\n\t/**\n\t * @method begin\n\t * @param spriteBatch {WebGLSpriteBatch}\n\t * @param renderSession {Object}\n\t */\n\tPIXI.WebGLFastSpriteBatch.prototype.begin = function(spriteBatch, renderSession)\n\t{\n\t    this.renderSession = renderSession;\n\t    this.shader = this.renderSession.shaderManager.fastShader;\n\n\t    this.matrix = spriteBatch.worldTransform.toArray(true);\n\n\t    this.start();\n\t};\n\n\t/**\n\t * @method end\n\t */\n\tPIXI.WebGLFastSpriteBatch.prototype.end = function()\n\t{\n\t    this.flush();\n\t};\n\n\t/**\n\t * @method render\n\t * @param spriteBatch {WebGLSpriteBatch}\n\t */\n\tPIXI.WebGLFastSpriteBatch.prototype.render = function(spriteBatch)\n\t{\n\t    var children = spriteBatch.children;\n\t    var sprite = children[0];\n\n\t    // if the uvs have not updated then no point rendering just yet!\n\t    \n\t    // check texture.\n\t    if(!sprite.texture._uvs)return;\n\t   \n\t    this.currentBaseTexture = sprite.texture.baseTexture;\n\t    \n\t    // check blend mode\n\t    if(sprite.blendMode !== this.renderSession.blendModeManager.currentBlendMode)\n\t    {\n\t        this.flush();\n\t        this.renderSession.blendModeManager.setBlendMode(sprite.blendMode);\n\t    }\n\t    \n\t    for(var i=0,j= children.length; i<j; i++)\n\t    {\n\t        this.renderSprite(children[i]);\n\t    }\n\n\t    this.flush();\n\t};\n\n\t/**\n\t * @method renderSprite\n\t * @param sprite {Sprite}\n\t */\n\tPIXI.WebGLFastSpriteBatch.prototype.renderSprite = function(sprite)\n\t{\n\t    //sprite = children[i];\n\t    if(!sprite.visible)return;\n\t    \n\t    // TODO trim??\n\t    if(sprite.texture.baseTexture !== this.currentBaseTexture)\n\t    {\n\t        this.flush();\n\t        this.currentBaseTexture = sprite.texture.baseTexture;\n\t        \n\t        if(!sprite.texture._uvs)return;\n\t    }\n\n\t    var uvs, vertices = this.vertices, width, height, w0, w1, h0, h1, index;\n\n\t    uvs = sprite.texture._uvs;\n\n\t    width = sprite.texture.frame.width;\n\t    height = sprite.texture.frame.height;\n\n\t    if (sprite.texture.trim)\n\t    {\n\t        // if the sprite is trimmed then we need to add the extra space before transforming the sprite coords..\n\t        var trim = sprite.texture.trim;\n\n\t        w1 = trim.x - sprite.anchor.x * trim.width;\n\t        w0 = w1 + sprite.texture.crop.width;\n\n\t        h1 = trim.y - sprite.anchor.y * trim.height;\n\t        h0 = h1 + sprite.texture.crop.height;\n\t    }\n\t    else\n\t    {\n\t        w0 = (sprite.texture.frame.width ) * (1-sprite.anchor.x);\n\t        w1 = (sprite.texture.frame.width ) * -sprite.anchor.x;\n\n\t        h0 = sprite.texture.frame.height * (1-sprite.anchor.y);\n\t        h1 = sprite.texture.frame.height * -sprite.anchor.y;\n\t    }\n\n\t    index = this.currentBatchSize * 4 * this.vertSize;\n\n\t    // xy\n\t    vertices[index++] = w1;\n\t    vertices[index++] = h1;\n\n\t    vertices[index++] = sprite.position.x;\n\t    vertices[index++] = sprite.position.y;\n\n\t    //scale\n\t    vertices[index++] = sprite.scale.x;\n\t    vertices[index++] = sprite.scale.y;\n\n\t    //rotation\n\t    vertices[index++] = sprite.rotation;\n\n\t    // uv\n\t    vertices[index++] = uvs.x0;\n\t    vertices[index++] = uvs.y1;\n\t    // color\n\t    vertices[index++] = sprite.alpha;\n\t \n\n\t    // xy\n\t    vertices[index++] = w0;\n\t    vertices[index++] = h1;\n\n\t    vertices[index++] = sprite.position.x;\n\t    vertices[index++] = sprite.position.y;\n\n\t    //scale\n\t    vertices[index++] = sprite.scale.x;\n\t    vertices[index++] = sprite.scale.y;\n\n\t     //rotation\n\t    vertices[index++] = sprite.rotation;\n\n\t    // uv\n\t    vertices[index++] = uvs.x1;\n\t    vertices[index++] = uvs.y1;\n\t    // color\n\t    vertices[index++] = sprite.alpha;\n\t  \n\n\t    // xy\n\t    vertices[index++] = w0;\n\t    vertices[index++] = h0;\n\n\t    vertices[index++] = sprite.position.x;\n\t    vertices[index++] = sprite.position.y;\n\n\t    //scale\n\t    vertices[index++] = sprite.scale.x;\n\t    vertices[index++] = sprite.scale.y;\n\n\t     //rotation\n\t    vertices[index++] = sprite.rotation;\n\n\t    // uv\n\t    vertices[index++] = uvs.x2;\n\t    vertices[index++] = uvs.y2;\n\t    // color\n\t    vertices[index++] = sprite.alpha;\n\t \n\n\n\n\t    // xy\n\t    vertices[index++] = w1;\n\t    vertices[index++] = h0;\n\n\t    vertices[index++] = sprite.position.x;\n\t    vertices[index++] = sprite.position.y;\n\n\t    //scale\n\t    vertices[index++] = sprite.scale.x;\n\t    vertices[index++] = sprite.scale.y;\n\n\t     //rotation\n\t    vertices[index++] = sprite.rotation;\n\n\t    // uv\n\t    vertices[index++] = uvs.x3;\n\t    vertices[index++] = uvs.y3;\n\t    // color\n\t    vertices[index++] = sprite.alpha;\n\n\t    // increment the batchs\n\t    this.currentBatchSize++;\n\n\t    if(this.currentBatchSize >= this.size)\n\t    {\n\t        this.flush();\n\t    }\n\t};\n\n\t/**\n\t * @method flush\n\t */\n\tPIXI.WebGLFastSpriteBatch.prototype.flush = function()\n\t{\n\t    // If the batch is length 0 then return as there is nothing to draw\n\t    if (this.currentBatchSize===0)return;\n\n\t    var gl = this.gl;\n\t    \n\t    // bind the current texture\n\n\t    if(!this.currentBaseTexture._glTextures[gl.id])this.renderSession.renderer.updateTexture(this.currentBaseTexture, gl);\n\n\t    gl.bindTexture(gl.TEXTURE_2D, this.currentBaseTexture._glTextures[gl.id]);\n\n\t    // upload the verts to the buffer\n\t   \n\t    if(this.currentBatchSize > ( this.size * 0.5 ) )\n\t    {\n\t        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertices);\n\t    }\n\t    else\n\t    {\n\t        var view = this.vertices.subarray(0, this.currentBatchSize * 4 * this.vertSize);\n\n\t        gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n\t    }\n\t    \n\t    // now draw those suckas!\n\t    gl.drawElements(gl.TRIANGLES, this.currentBatchSize * 6, gl.UNSIGNED_SHORT, 0);\n\t   \n\t    // then reset the batch!\n\t    this.currentBatchSize = 0;\n\n\t    // increment the draw count\n\t    this.renderSession.drawCount++;\n\t};\n\n\n\t/**\n\t * @method stop\n\t */\n\tPIXI.WebGLFastSpriteBatch.prototype.stop = function()\n\t{\n\t    this.flush();\n\t};\n\n\t/**\n\t * @method start\n\t */\n\tPIXI.WebGLFastSpriteBatch.prototype.start = function()\n\t{\n\t    var gl = this.gl;\n\n\t    // bind the main texture\n\t    gl.activeTexture(gl.TEXTURE0);\n\n\t    // bind the buffers\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\n\t    // set the projection\n\t    var projection = this.renderSession.projection;\n\t    gl.uniform2f(this.shader.projectionVector, projection.x, projection.y);\n\n\t    // set the matrix\n\t    gl.uniformMatrix3fv(this.shader.uMatrix, false, this.matrix);\n\n\t    // set the pointers\n\t    var stride =  this.vertSize * 4;\n\n\t    gl.vertexAttribPointer(this.shader.aVertexPosition, 2, gl.FLOAT, false, stride, 0);\n\t    gl.vertexAttribPointer(this.shader.aPositionCoord, 2, gl.FLOAT, false, stride, 2 * 4);\n\t    gl.vertexAttribPointer(this.shader.aScale, 2, gl.FLOAT, false, stride, 4 * 4);\n\t    gl.vertexAttribPointer(this.shader.aRotation, 1, gl.FLOAT, false, stride, 6 * 4);\n\t    gl.vertexAttribPointer(this.shader.aTextureCoord, 2, gl.FLOAT, false, stride, 7 * 4);\n\t    gl.vertexAttribPointer(this.shader.colorAttribute, 1, gl.FLOAT, false, stride, 9 * 4);\n\t    \n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t* @class WebGLFilterManager\n\t* @constructor\n\t*/\n\tPIXI.WebGLFilterManager = function()\n\t{\n\t    /**\n\t     * @property filterStack\n\t     * @type Array\n\t     */\n\t    this.filterStack = [];\n\t    \n\t    /**\n\t     * @property offsetX\n\t     * @type Number\n\t     */\n\t    this.offsetX = 0;\n\n\t    /**\n\t     * @property offsetY\n\t     * @type Number\n\t     */\n\t    this.offsetY = 0;\n\t};\n\n\tPIXI.WebGLFilterManager.prototype.constructor = PIXI.WebGLFilterManager;\n\n\t/**\n\t* Initialises the context and the properties.\n\t* \n\t* @method setContext \n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t*/\n\tPIXI.WebGLFilterManager.prototype.setContext = function(gl)\n\t{\n\t    this.gl = gl;\n\t    this.texturePool = [];\n\n\t    this.initShaderBuffers();\n\t};\n\n\t/**\n\t* @method begin\n\t* @param renderSession {RenderSession} \n\t* @param buffer {ArrayBuffer} \n\t*/\n\tPIXI.WebGLFilterManager.prototype.begin = function(renderSession, buffer)\n\t{\n\t    this.renderSession = renderSession;\n\t    this.defaultShader = renderSession.shaderManager.defaultShader;\n\n\t    var projection = this.renderSession.projection;\n\t    this.width = projection.x * 2;\n\t    this.height = -projection.y * 2;\n\t    this.buffer = buffer;\n\t};\n\n\t/**\n\t* Applies the filter and adds it to the current filter stack.\n\t* \n\t* @method pushFilter\n\t* @param filterBlock {Object} the filter that will be pushed to the current filter stack\n\t*/\n\tPIXI.WebGLFilterManager.prototype.pushFilter = function(filterBlock)\n\t{\n\t    var gl = this.gl;\n\n\t    var projection = this.renderSession.projection;\n\t    var offset = this.renderSession.offset;\n\n\t    filterBlock._filterArea = filterBlock.target.filterArea || filterBlock.target.getBounds();\n\n\t    // filter program\n\t    // OPTIMISATION - the first filter is free if its a simple color change?\n\t    this.filterStack.push(filterBlock);\n\n\t    var filter = filterBlock.filterPasses[0];\n\n\t    this.offsetX += filterBlock._filterArea.x;\n\t    this.offsetY += filterBlock._filterArea.y;\n\n\t    var texture = this.texturePool.pop();\n\t    if(!texture)\n\t    {\n\t        texture = new PIXI.FilterTexture(this.gl, this.width, this.height);\n\t    }\n\t    else\n\t    {\n\t        texture.resize(this.width, this.height);\n\t    }\n\n\t    gl.bindTexture(gl.TEXTURE_2D,  texture.texture);\n\n\t    var filterArea = filterBlock._filterArea;// filterBlock.target.getBounds();///filterBlock.target.filterArea;\n\n\t    var padding = filter.padding;\n\t    filterArea.x -= padding;\n\t    filterArea.y -= padding;\n\t    filterArea.width += padding * 2;\n\t    filterArea.height += padding * 2;\n\n\t    // cap filter to screen size..\n\t    if(filterArea.x < 0)filterArea.x = 0;\n\t    if(filterArea.width > this.width)filterArea.width = this.width;\n\t    if(filterArea.y < 0)filterArea.y = 0;\n\t    if(filterArea.height > this.height)filterArea.height = this.height;\n\n\t    //gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,  filterArea.width, filterArea.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t    gl.bindFramebuffer(gl.FRAMEBUFFER, texture.frameBuffer);\n\n\t    // set view port\n\t    gl.viewport(0, 0, filterArea.width, filterArea.height);\n\n\t    projection.x = filterArea.width/2;\n\t    projection.y = -filterArea.height/2;\n\n\t    offset.x = -filterArea.x;\n\t    offset.y = -filterArea.y;\n\n\t    // update projection\n\t    // now restore the regular shader..\n\t    // this.renderSession.shaderManager.setShader(this.defaultShader);\n\t    //gl.uniform2f(this.defaultShader.projectionVector, filterArea.width/2, -filterArea.height/2);\n\t    //gl.uniform2f(this.defaultShader.offsetVector, -filterArea.x, -filterArea.y);\n\n\t    gl.colorMask(true, true, true, true);\n\t    gl.clearColor(0,0,0, 0);\n\t    gl.clear(gl.COLOR_BUFFER_BIT);\n\n\t    filterBlock._glFilterTexture = texture;\n\n\t};\n\n\t/**\n\t* Removes the last filter from the filter stack and doesn't return it.\n\t* \n\t* @method popFilter\n\t*/\n\tPIXI.WebGLFilterManager.prototype.popFilter = function()\n\t{\n\t    var gl = this.gl;\n\t    var filterBlock = this.filterStack.pop();\n\t    var filterArea = filterBlock._filterArea;\n\t    var texture = filterBlock._glFilterTexture;\n\t    var projection = this.renderSession.projection;\n\t    var offset = this.renderSession.offset;\n\n\t    if(filterBlock.filterPasses.length > 1)\n\t    {\n\t        gl.viewport(0, 0, filterArea.width, filterArea.height);\n\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\n\t        this.vertexArray[0] = 0;\n\t        this.vertexArray[1] = filterArea.height;\n\n\t        this.vertexArray[2] = filterArea.width;\n\t        this.vertexArray[3] = filterArea.height;\n\n\t        this.vertexArray[4] = 0;\n\t        this.vertexArray[5] = 0;\n\n\t        this.vertexArray[6] = filterArea.width;\n\t        this.vertexArray[7] = 0;\n\n\t        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertexArray);\n\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);\n\t        // now set the uvs..\n\t        this.uvArray[2] = filterArea.width/this.width;\n\t        this.uvArray[5] = filterArea.height/this.height;\n\t        this.uvArray[6] = filterArea.width/this.width;\n\t        this.uvArray[7] = filterArea.height/this.height;\n\n\t        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.uvArray);\n\n\t        var inputTexture = texture;\n\t        var outputTexture = this.texturePool.pop();\n\t        if(!outputTexture)outputTexture = new PIXI.FilterTexture(this.gl, this.width, this.height);\n\t        outputTexture.resize(this.width, this.height);\n\n\t        // need to clear this FBO as it may have some left over elements from a previous filter.\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, outputTexture.frameBuffer );\n\t        gl.clear(gl.COLOR_BUFFER_BIT);\n\n\t        gl.disable(gl.BLEND);\n\n\t        for (var i = 0; i < filterBlock.filterPasses.length-1; i++)\n\t        {\n\t            var filterPass = filterBlock.filterPasses[i];\n\n\t            gl.bindFramebuffer(gl.FRAMEBUFFER, outputTexture.frameBuffer );\n\n\t            // set texture\n\t            gl.activeTexture(gl.TEXTURE0);\n\t            gl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t            // draw texture..\n\t            //filterPass.applyFilterPass(filterArea.width, filterArea.height);\n\t            this.applyFilterPass(filterPass, filterArea, filterArea.width, filterArea.height);\n\n\t            // swap the textures..\n\t            var temp = inputTexture;\n\t            inputTexture = outputTexture;\n\t            outputTexture = temp;\n\t        }\n\n\t        gl.enable(gl.BLEND);\n\n\t        texture = inputTexture;\n\t        this.texturePool.push(outputTexture);\n\t    }\n\n\t    var filter = filterBlock.filterPasses[filterBlock.filterPasses.length-1];\n\n\t    this.offsetX -= filterArea.x;\n\t    this.offsetY -= filterArea.y;\n\n\t    var sizeX = this.width;\n\t    var sizeY = this.height;\n\n\t    var offsetX = 0;\n\t    var offsetY = 0;\n\n\t    var buffer = this.buffer;\n\n\t    // time to render the filters texture to the previous scene\n\t    if(this.filterStack.length === 0)\n\t    {\n\t        gl.colorMask(true, true, true, true);//this.transparent);\n\t    }\n\t    else\n\t    {\n\t        var currentFilter = this.filterStack[this.filterStack.length-1];\n\t        filterArea = currentFilter._filterArea;\n\n\t        sizeX = filterArea.width;\n\t        sizeY = filterArea.height;\n\n\t        offsetX = filterArea.x;\n\t        offsetY = filterArea.y;\n\n\t        buffer =  currentFilter._glFilterTexture.frameBuffer;\n\t    }\n\n\t    // TODO need to remove these global elements..\n\t    projection.x = sizeX/2;\n\t    projection.y = -sizeY/2;\n\n\t    offset.x = offsetX;\n\t    offset.y = offsetY;\n\n\t    filterArea = filterBlock._filterArea;\n\n\t    var x = filterArea.x-offsetX;\n\t    var y = filterArea.y-offsetY;\n\n\t    // update the buffers..\n\t    // make sure to flip the y!\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\n\t    this.vertexArray[0] = x;\n\t    this.vertexArray[1] = y + filterArea.height;\n\n\t    this.vertexArray[2] = x + filterArea.width;\n\t    this.vertexArray[3] = y + filterArea.height;\n\n\t    this.vertexArray[4] = x;\n\t    this.vertexArray[5] = y;\n\n\t    this.vertexArray[6] = x + filterArea.width;\n\t    this.vertexArray[7] = y;\n\n\t    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertexArray);\n\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);\n\n\t    this.uvArray[2] = filterArea.width/this.width;\n\t    this.uvArray[5] = filterArea.height/this.height;\n\t    this.uvArray[6] = filterArea.width/this.width;\n\t    this.uvArray[7] = filterArea.height/this.height;\n\n\t    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.uvArray);\n\n\t    gl.viewport(0, 0, sizeX * this.renderSession.resolution, sizeY * this.renderSession.resolution);\n\n\t    // bind the buffer\n\t    gl.bindFramebuffer(gl.FRAMEBUFFER, buffer );\n\n\t    // set the blend mode! \n\t    //gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA)\n\n\t    // set texture\n\t    gl.activeTexture(gl.TEXTURE0);\n\t    gl.bindTexture(gl.TEXTURE_2D, texture.texture);\n\n\t    // apply!\n\t    this.applyFilterPass(filter, filterArea, sizeX, sizeY);\n\n\t    // now restore the regular shader.. should happen automatically now..\n\t    // this.renderSession.shaderManager.setShader(this.defaultShader);\n\t    // gl.uniform2f(this.defaultShader.projectionVector, sizeX/2, -sizeY/2);\n\t    // gl.uniform2f(this.defaultShader.offsetVector, -offsetX, -offsetY);\n\n\t    // return the texture to the pool\n\t    this.texturePool.push(texture);\n\t    filterBlock._glFilterTexture = null;\n\t};\n\n\n\t/**\n\t* Applies the filter to the specified area.\n\t* \n\t* @method applyFilterPass\n\t* @param filter {AbstractFilter} the filter that needs to be applied\n\t* @param filterArea {Texture} TODO - might need an update\n\t* @param width {Number} the horizontal range of the filter\n\t* @param height {Number} the vertical range of the filter\n\t*/\n\tPIXI.WebGLFilterManager.prototype.applyFilterPass = function(filter, filterArea, width, height)\n\t{\n\t    // use program\n\t    var gl = this.gl;\n\t    var shader = filter.shaders[gl.id];\n\n\t    if(!shader)\n\t    {\n\t        shader = new PIXI.PixiShader(gl);\n\n\t        shader.fragmentSrc = filter.fragmentSrc;\n\t        shader.uniforms = filter.uniforms;\n\t        shader.init();\n\n\t        filter.shaders[gl.id] = shader;\n\t    }\n\n\t    // set the shader\n\t    this.renderSession.shaderManager.setShader(shader);\n\n\t//    gl.useProgram(shader.program);\n\n\t    gl.uniform2f(shader.projectionVector, width/2, -height/2);\n\t    gl.uniform2f(shader.offsetVector, 0,0);\n\n\t    if(filter.uniforms.dimensions)\n\t    {\n\t        filter.uniforms.dimensions.value[0] = this.width;//width;\n\t        filter.uniforms.dimensions.value[1] = this.height;//height;\n\t        filter.uniforms.dimensions.value[2] = this.vertexArray[0];\n\t        filter.uniforms.dimensions.value[3] = this.vertexArray[5];//filterArea.height;\n\t    }\n\n\t    shader.syncUniforms();\n\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t    gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\n\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);\n\t    gl.vertexAttribPointer(shader.aTextureCoord, 2, gl.FLOAT, false, 0, 0);\n\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n\t    gl.vertexAttribPointer(shader.colorAttribute, 2, gl.FLOAT, false, 0, 0);\n\n\t    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\n\t    // draw the filter...\n\t    gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t    this.renderSession.drawCount++;\n\t};\n\n\t/**\n\t* Initialises the shader buffers.\n\t* \n\t* @method initShaderBuffers\n\t*/\n\tPIXI.WebGLFilterManager.prototype.initShaderBuffers = function()\n\t{\n\t    var gl = this.gl;\n\n\t    // create some buffers\n\t    this.vertexBuffer = gl.createBuffer();\n\t    this.uvBuffer = gl.createBuffer();\n\t    this.colorBuffer = gl.createBuffer();\n\t    this.indexBuffer = gl.createBuffer();\n\n\t    // bind and upload the vertexs..\n\t    // keep a reference to the vertexFloatData..\n\t    this.vertexArray = new PIXI.Float32Array([0.0, 0.0,\n\t                                         1.0, 0.0,\n\t                                         0.0, 1.0,\n\t                                         1.0, 1.0]);\n\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\t    gl.bufferData(gl.ARRAY_BUFFER, this.vertexArray, gl.STATIC_DRAW);\n\n\t    // bind and upload the uv buffer\n\t    this.uvArray = new PIXI.Float32Array([0.0, 0.0,\n\t                                     1.0, 0.0,\n\t                                     0.0, 1.0,\n\t                                     1.0, 1.0]);\n\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);\n\t    gl.bufferData(gl.ARRAY_BUFFER, this.uvArray, gl.STATIC_DRAW);\n\n\t    this.colorArray = new PIXI.Float32Array([1.0, 0xFFFFFF,\n\t                                        1.0, 0xFFFFFF,\n\t                                        1.0, 0xFFFFFF,\n\t                                        1.0, 0xFFFFFF]);\n\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n\t    gl.bufferData(gl.ARRAY_BUFFER, this.colorArray, gl.STATIC_DRAW);\n\n\t    // bind and upload the index\n\t    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\t    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 1, 2, 1, 3, 2]), gl.STATIC_DRAW);\n\n\t};\n\n\t/**\n\t* Destroys the filter and removes it from the filter stack.\n\t* \n\t* @method destroy\n\t*/\n\tPIXI.WebGLFilterManager.prototype.destroy = function()\n\t{\n\t    var gl = this.gl;\n\n\t    this.filterStack = null;\n\t    \n\t    this.offsetX = 0;\n\t    this.offsetY = 0;\n\n\t    // destroy textures\n\t    for (var i = 0; i < this.texturePool.length; i++) {\n\t        this.texturePool[i].destroy();\n\t    }\n\t    \n\t    this.texturePool = null;\n\n\t    //destroy buffers..\n\t    gl.deleteBuffer(this.vertexBuffer);\n\t    gl.deleteBuffer(this.uvBuffer);\n\t    gl.deleteBuffer(this.colorBuffer);\n\t    gl.deleteBuffer(this.indexBuffer);\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t* @class FilterTexture\n\t* @constructor\n\t* @param gl {WebGLContext} the current WebGL drawing context\n\t* @param width {Number} the horizontal range of the filter\n\t* @param height {Number} the vertical range of the filter\n\t* @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n\t*/\n\tPIXI.FilterTexture = function(gl, width, height, scaleMode)\n\t{\n\t    /**\n\t     * @property gl\n\t     * @type WebGLContext\n\t     */\n\t    this.gl = gl;\n\n\t    // next time to create a frame buffer and texture\n\n\t    /**\n\t     * @property frameBuffer\n\t     * @type Any\n\t     */\n\t    this.frameBuffer = gl.createFramebuffer();\n\n\t    /**\n\t     * @property texture\n\t     * @type Any\n\t     */\n\t    this.texture = gl.createTexture();\n\n\t    /**\n\t     * @property scaleMode\n\t     * @type Number\n\t     */\n\t    scaleMode = scaleMode || PIXI.scaleModes.DEFAULT;\n\n\t    gl.bindTexture(gl.TEXTURE_2D,  this.texture);\n\t    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR : gl.NEAREST);\n\t    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR : gl.NEAREST);\n\t    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t    gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer );\n\n\t    gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer );\n\t    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\n\n\t    // required for masking a mask??\n\t    this.renderBuffer = gl.createRenderbuffer();\n\t    gl.bindRenderbuffer(gl.RENDERBUFFER, this.renderBuffer);\n\t    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, this.renderBuffer);\n\t  \n\t    this.resize(width, height);\n\t};\n\n\tPIXI.FilterTexture.prototype.constructor = PIXI.FilterTexture;\n\n\t/**\n\t* Clears the filter texture.\n\t* \n\t* @method clear\n\t*/\n\tPIXI.FilterTexture.prototype.clear = function()\n\t{\n\t    var gl = this.gl;\n\t    \n\t    gl.clearColor(0,0,0, 0);\n\t    gl.clear(gl.COLOR_BUFFER_BIT);\n\t};\n\n\t/**\n\t * Resizes the texture to the specified width and height\n\t *\n\t * @method resize\n\t * @param width {Number} the new width of the texture\n\t * @param height {Number} the new height of the texture\n\t */\n\tPIXI.FilterTexture.prototype.resize = function(width, height)\n\t{\n\t    if(this.width === width && this.height === height) return;\n\n\t    this.width = width;\n\t    this.height = height;\n\n\t    var gl = this.gl;\n\n\t    gl.bindTexture(gl.TEXTURE_2D,  this.texture);\n\t    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,  width , height , 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t    // update the stencil buffer width and height\n\t    gl.bindRenderbuffer(gl.RENDERBUFFER, this.renderBuffer);\n\t    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, width , height );\n\t};\n\n\t/**\n\t* Destroys the filter texture.\n\t* \n\t* @method destroy\n\t*/\n\tPIXI.FilterTexture.prototype.destroy = function()\n\t{\n\t    var gl = this.gl;\n\t    gl.deleteFramebuffer( this.frameBuffer );\n\t    gl.deleteTexture( this.texture );\n\n\t    this.frameBuffer = null;\n\t    this.texture = null;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * Creates a Canvas element of the given size.\n\t *\n\t * @class CanvasBuffer\n\t * @constructor\n\t * @param width {Number} the width for the newly created canvas\n\t * @param height {Number} the height for the newly created canvas\n\t */\n\tPIXI.CanvasBuffer = function(width, height)\n\t{\n\t    /**\n\t     * The width of the Canvas in pixels.\n\t     *\n\t     * @property width\n\t     * @type Number\n\t     */\n\t    this.width = width;\n\n\t    /**\n\t     * The height of the Canvas in pixels.\n\t     *\n\t     * @property height\n\t     * @type Number\n\t     */\n\t    this.height = height;\n\n\t    /**\n\t     * The Canvas object that belongs to this CanvasBuffer.\n\t     *\n\t     * @property canvas\n\t     * @type HTMLCanvasElement\n\t     */\n\t    this.canvas = document.createElement(\"canvas\");\n\n\t    /**\n\t     * A CanvasRenderingContext2D object representing a two-dimensional rendering context.\n\t     *\n\t     * @property context\n\t     * @type CanvasRenderingContext2D\n\t     */\n\t    this.context = this.canvas.getContext(\"2d\");\n\n\t    this.canvas.width = width;\n\t    this.canvas.height = height;\n\t};\n\n\tPIXI.CanvasBuffer.prototype.constructor = PIXI.CanvasBuffer;\n\n\t/**\n\t * Clears the canvas that was created by the CanvasBuffer class.\n\t *\n\t * @method clear\n\t * @private\n\t */\n\tPIXI.CanvasBuffer.prototype.clear = function()\n\t{\n\t    this.context.setTransform(1, 0, 0, 1, 0, 0);\n\t    this.context.clearRect(0,0, this.width, this.height);\n\t};\n\n\t/**\n\t * Resizes the canvas to the specified width and height.\n\t *\n\t * @method resize\n\t * @param width {Number} the new width of the canvas\n\t * @param height {Number} the new height of the canvas\n\t */\n\tPIXI.CanvasBuffer.prototype.resize = function(width, height)\n\t{\n\t    this.width = this.canvas.width = width;\n\t    this.height = this.canvas.height = height;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * A set of functions used to handle masking.\n\t *\n\t * @class CanvasMaskManager\n\t * @constructor\n\t */\n\tPIXI.CanvasMaskManager = function()\n\t{\n\t};\n\n\tPIXI.CanvasMaskManager.prototype.constructor = PIXI.CanvasMaskManager;\n\n\t/**\n\t * This method adds it to the current stack of masks.\n\t *\n\t * @method pushMask\n\t * @param maskData {Object} the maskData that will be pushed\n\t * @param renderSession {Object} The renderSession whose context will be used for this mask manager.\n\t */\n\tPIXI.CanvasMaskManager.prototype.pushMask = function(maskData, renderSession)\n\t{\n\t\tvar context = renderSession.context;\n\n\t    context.save();\n\t    \n\t    var cacheAlpha = maskData.alpha;\n\t    var transform = maskData.worldTransform;\n\n\t    var resolution = renderSession.resolution;\n\n\t    context.setTransform(transform.a * resolution,\n\t                         transform.b * resolution,\n\t                         transform.c * resolution,\n\t                         transform.d * resolution,\n\t                         transform.tx * resolution,\n\t                         transform.ty * resolution);\n\n\t    PIXI.CanvasGraphics.renderGraphicsMask(maskData, context);\n\n\t    context.clip();\n\n\t    maskData.worldAlpha = cacheAlpha;\n\t};\n\n\t/**\n\t * Restores the current drawing context to the state it was before the mask was applied.\n\t *\n\t * @method popMask\n\t * @param renderSession {Object} The renderSession whose context will be used for this mask manager.\n\t */\n\tPIXI.CanvasMaskManager.prototype.popMask = function(renderSession)\n\t{\n\t    renderSession.context.restore();\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * Utility methods for Sprite/Texture tinting.\n\t *\n\t * @class CanvasTinter\n\t * @static\n\t */\n\tPIXI.CanvasTinter = function()\n\t{\n\t};\n\n\t/**\n\t * Basically this method just needs a sprite and a color and tints the sprite with the given color.\n\t * \n\t * @method getTintedTexture \n\t * @static\n\t * @param sprite {Sprite} the sprite to tint\n\t * @param color {Number} the color to use to tint the sprite with\n\t * @return {HTMLCanvasElement} The tinted canvas\n\t */\n\tPIXI.CanvasTinter.getTintedTexture = function(sprite, color)\n\t{\n\t    var texture = sprite.texture;\n\n\t    color = PIXI.CanvasTinter.roundColor(color);\n\n\t    var stringColor = \"#\" + (\"00000\" + ( color | 0).toString(16)).substr(-6);\n\t   \n\t    texture.tintCache = texture.tintCache || {};\n\n\t    if(texture.tintCache[stringColor]) return texture.tintCache[stringColor];\n\n\t     // clone texture..\n\t    var canvas = PIXI.CanvasTinter.canvas || document.createElement(\"canvas\");\n\t    \n\t    //PIXI.CanvasTinter.tintWithPerPixel(texture, stringColor, canvas);\n\t    PIXI.CanvasTinter.tintMethod(texture, color, canvas);\n\n\t    if(PIXI.CanvasTinter.convertTintToImage)\n\t    {\n\t        // is this better?\n\t        var tintImage = new Image();\n\t        tintImage.src = canvas.toDataURL();\n\n\t        texture.tintCache[stringColor] = tintImage;\n\t    }\n\t    else\n\t    {\n\t        texture.tintCache[stringColor] = canvas;\n\t        // if we are not converting the texture to an image then we need to lose the reference to the canvas\n\t        PIXI.CanvasTinter.canvas = null;\n\t    }\n\n\t    return canvas;\n\t};\n\n\t/**\n\t * Tint a texture using the \"multiply\" operation.\n\t * \n\t * @method tintWithMultiply\n\t * @static\n\t * @param texture {Texture} the texture to tint\n\t * @param color {Number} the color to use to tint the sprite with\n\t * @param canvas {HTMLCanvasElement} the current canvas\n\t */\n\tPIXI.CanvasTinter.tintWithMultiply = function(texture, color, canvas)\n\t{\n\t    var context = canvas.getContext( \"2d\" );\n\n\t    var crop = texture.crop;\n\n\t    canvas.width = crop.width;\n\t    canvas.height = crop.height;\n\n\t    context.fillStyle = \"#\" + (\"00000\" + ( color | 0).toString(16)).substr(-6);\n\t    \n\t    context.fillRect(0, 0, crop.width, crop.height);\n\t    \n\t    context.globalCompositeOperation = \"multiply\";\n\n\t    context.drawImage(texture.baseTexture.source,\n\t                           crop.x,\n\t                           crop.y,\n\t                           crop.width,\n\t                           crop.height,\n\t                           0,\n\t                           0,\n\t                           crop.width,\n\t                           crop.height);\n\n\t    context.globalCompositeOperation = \"destination-atop\";\n\n\t    context.drawImage(texture.baseTexture.source,\n\t                           crop.x,\n\t                           crop.y,\n\t                           crop.width,\n\t                           crop.height,\n\t                           0,\n\t                           0,\n\t                           crop.width,\n\t                           crop.height);\n\t};\n\n\t/**\n\t * Tint a texture using the \"overlay\" operation.\n\t * \n\t * @method tintWithOverlay\n\t * @static\n\t * @param texture {Texture} the texture to tint\n\t * @param color {Number} the color to use to tint the sprite with\n\t * @param canvas {HTMLCanvasElement} the current canvas\n\t */\n\tPIXI.CanvasTinter.tintWithOverlay = function(texture, color, canvas)\n\t{\n\t    var context = canvas.getContext( \"2d\" );\n\n\t    var crop = texture.crop;\n\n\t    canvas.width = crop.width;\n\t    canvas.height = crop.height;\n\t    \n\t    context.globalCompositeOperation = \"copy\";\n\t    context.fillStyle = \"#\" + (\"00000\" + ( color | 0).toString(16)).substr(-6);\n\t    context.fillRect(0, 0, crop.width, crop.height);\n\n\t    context.globalCompositeOperation = \"destination-atop\";\n\t    context.drawImage(texture.baseTexture.source,\n\t                           crop.x,\n\t                           crop.y,\n\t                           crop.width,\n\t                           crop.height,\n\t                           0,\n\t                           0,\n\t                           crop.width,\n\t                           crop.height);\n\t    \n\t    //context.globalCompositeOperation = \"copy\";\n\t};\n\n\t/**\n\t * Tint a texture pixel per pixel.\n\t * \n\t * @method tintPerPixel\n\t * @static\n\t * @param texture {Texture} the texture to tint\n\t * @param color {Number} the color to use to tint the sprite with\n\t * @param canvas {HTMLCanvasElement} the current canvas\n\t */\n\tPIXI.CanvasTinter.tintWithPerPixel = function(texture, color, canvas)\n\t{\n\t    var context = canvas.getContext( \"2d\" );\n\n\t    var crop = texture.crop;\n\n\t    canvas.width = crop.width;\n\t    canvas.height = crop.height;\n\t  \n\t    context.globalCompositeOperation = \"copy\";\n\t    context.drawImage(texture.baseTexture.source,\n\t                           crop.x,\n\t                           crop.y,\n\t                           crop.width,\n\t                           crop.height,\n\t                           0,\n\t                           0,\n\t                           crop.width,\n\t                           crop.height);\n\n\t    var rgbValues = PIXI.hex2rgb(color);\n\t    var r = rgbValues[0], g = rgbValues[1], b = rgbValues[2];\n\n\t    var pixelData = context.getImageData(0, 0, crop.width, crop.height);\n\n\t    var pixels = pixelData.data;\n\n\t    for (var i = 0; i < pixels.length; i += 4)\n\t    {\n\t        pixels[i+0] *= r;\n\t        pixels[i+1] *= g;\n\t        pixels[i+2] *= b;\n\t    }\n\n\t    context.putImageData(pixelData, 0, 0);\n\t};\n\n\t/**\n\t * Rounds the specified color according to the PIXI.CanvasTinter.cacheStepsPerColorChannel.\n\t * \n\t * @method roundColor\n\t * @static\n\t * @param color {number} the color to round, should be a hex color\n\t */\n\tPIXI.CanvasTinter.roundColor = function(color)\n\t{\n\t    var step = PIXI.CanvasTinter.cacheStepsPerColorChannel;\n\n\t    var rgbValues = PIXI.hex2rgb(color);\n\n\t    rgbValues[0] = Math.min(255, (rgbValues[0] / step) * step);\n\t    rgbValues[1] = Math.min(255, (rgbValues[1] / step) * step);\n\t    rgbValues[2] = Math.min(255, (rgbValues[2] / step) * step);\n\n\t    return PIXI.rgb2hex(rgbValues);\n\t};\n\n\t/**\n\t * Number of steps which will be used as a cap when rounding colors.\n\t *\n\t * @property cacheStepsPerColorChannel \n\t * @type Number\n\t * @static\n\t */\n\tPIXI.CanvasTinter.cacheStepsPerColorChannel = 8;\n\n\t/**\n\t * Tint cache boolean flag.\n\t *\n\t * @property convertTintToImage\n\t * @type Boolean\n\t * @static\n\t */\n\tPIXI.CanvasTinter.convertTintToImage = false;\n\n\t/**\n\t * Whether or not the Canvas BlendModes are supported, consequently the ability to tint using the multiply method.\n\t *\n\t * @property canUseMultiply\n\t * @type Boolean\n\t * @static\n\t */\n\tPIXI.CanvasTinter.canUseMultiply = PIXI.canUseNewCanvasBlendModes();\n\n\t/**\n\t * The tinting method that will be used.\n\t * \n\t * @method tintMethod\n\t * @static\n\t */\n\tPIXI.CanvasTinter.tintMethod = PIXI.CanvasTinter.canUseMultiply ? PIXI.CanvasTinter.tintWithMultiply :  PIXI.CanvasTinter.tintWithPerPixel;\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The CanvasRenderer draws the Stage and all its content onto a 2d canvas. This renderer should be used for browsers that do not support webGL.\n\t * Don't forget to add the CanvasRenderer.view to your DOM or you will not see anything :)\n\t *\n\t * @class CanvasRenderer\n\t * @constructor\n\t * @param [width=800] {Number} the width of the canvas view\n\t * @param [height=600] {Number} the height of the canvas view\n\t * @param [options] {Object} The optional renderer parameters\n\t * @param [options.view] {HTMLCanvasElement} the canvas to use as a view, optional\n\t * @param [options.transparent=false] {Boolean} If the render view is transparent, default false\n\t * @param [options.autoResize=false] {Boolean} If the render view is automatically resized, default false\n\t * @param [options.resolution=1] {Number} the resolution of the renderer retina would be 2\n\t * @param [options.clearBeforeRender=true] {Boolean} This sets if the CanvasRenderer will clear the canvas or not before the new render pass.\n\t */\n\tPIXI.CanvasRenderer = function(width, height, options)\n\t{\n\t    if(options)\n\t    {\n\t        for (var i in PIXI.defaultRenderOptions)\n\t        {\n\t            if (typeof options[i] === \"undefined\") options[i] = PIXI.defaultRenderOptions[i];\n\t        }\n\t    }\n\t    else\n\t    {\n\t        options = PIXI.defaultRenderOptions;\n\t    }\n\n\t    if(!PIXI.defaultRenderer)\n\t    {\n\t        PIXI.sayHello(\"Canvas\");\n\t        PIXI.defaultRenderer = this;\n\t    }\n\n\t    /**\n\t     * The renderer type.\n\t     *\n\t     * @property type\n\t     * @type Number\n\t     */\n\t    this.type = PIXI.CANVAS_RENDERER;\n\n\t    /**\n\t     * The resolution of the canvas.\n\t     *\n\t     * @property resolution\n\t     * @type Number\n\t     */\n\t    this.resolution = options.resolution;\n\n\t    /**\n\t     * This sets if the CanvasRenderer will clear the canvas or not before the new render pass.\n\t     * If the Stage is NOT transparent Pixi will use a canvas sized fillRect operation every frame to set the canvas background color.\n\t     * If the Stage is transparent Pixi will use clearRect to clear the canvas every frame.\n\t     * Disable this by setting this to false. For example if your game has a canvas filling background image you often don't need this set.\n\t     *\n\t     * @property clearBeforeRender\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    this.clearBeforeRender = options.clearBeforeRender;\n\n\t    /**\n\t     * Whether the render view is transparent\n\t     *\n\t     * @property transparent\n\t     * @type Boolean\n\t     */\n\t    this.transparent = options.transparent;\n\n\t    /**\n\t     * Whether the render view should be resized automatically\n\t     *\n\t     * @property autoResize\n\t     * @type Boolean\n\t     */\n\t    this.autoResize = options.autoResize || false;\n\n\n\t    /**\n\t     * The width of the canvas view\n\t     *\n\t     * @property width\n\t     * @type Number\n\t     * @default 800\n\t     */\n\t    this.width = width || 800;\n\n\t    /**\n\t     * The height of the canvas view\n\t     *\n\t     * @property height\n\t     * @type Number\n\t     * @default 600\n\t     */\n\t    this.height = height || 600;\n\n\t    this.width *= this.resolution;\n\t    this.height *= this.resolution;\n\n\t    /**\n\t     * The canvas element that everything is drawn to.\n\t     *\n\t     * @property view\n\t     * @type HTMLCanvasElement\n\t     */\n\t    this.view = options.view || document.createElement( \"canvas\" );\n\n\t    /**\n\t     * The canvas 2d context that everything is drawn with\n\t     * @property context\n\t     * @type CanvasRenderingContext2D\n\t     */\n\t    this.context = this.view.getContext( \"2d\", { alpha: this.transparent } );\n\n\t    /**\n\t     * Boolean flag controlling canvas refresh.\n\t     *\n\t     * @property refresh\n\t     * @type Boolean\n\t     */\n\t    this.refresh = true;\n\n\t    this.view.width = this.width * this.resolution;\n\t    this.view.height = this.height * this.resolution;\n\n\t    /**\n\t     * Internal var.\n\t     *\n\t     * @property count\n\t     * @type Number\n\t     */\n\t    this.count = 0;\n\n\t    /**\n\t     * Instance of a PIXI.CanvasMaskManager, handles masking when using the canvas renderer\n\t     * @property maskManager\n\t     * @type CanvasMaskManager\n\t     */\n\t    this.maskManager = new PIXI.CanvasMaskManager();\n\n\t    /**\n\t     * The render session is just a bunch of parameter used for rendering\n\t     * @property renderSession\n\t     * @type Object\n\t     */\n\t    this.renderSession = {\n\t        context: this.context,\n\t        maskManager: this.maskManager,\n\t        scaleMode: null,\n\t        smoothProperty: null,\n\t        /**\n\t         * If true Pixi will Math.floor() x/y values when rendering, stopping pixel interpolation.\n\t         * Handy for crisp pixel art and speed on legacy devices.\n\t         *\n\t         */\n\t        roundPixels: false\n\t    };\n\n\t    this.mapBlendModes();\n\t    \n\t    this.resize(width, height);\n\n\t    if(\"imageSmoothingEnabled\" in this.context)\n\t        this.renderSession.smoothProperty = \"imageSmoothingEnabled\";\n\t    else if(\"webkitImageSmoothingEnabled\" in this.context)\n\t        this.renderSession.smoothProperty = \"webkitImageSmoothingEnabled\";\n\t    else if(\"mozImageSmoothingEnabled\" in this.context)\n\t        this.renderSession.smoothProperty = \"mozImageSmoothingEnabled\";\n\t    else if(\"oImageSmoothingEnabled\" in this.context)\n\t        this.renderSession.smoothProperty = \"oImageSmoothingEnabled\";\n\t    else if (\"msImageSmoothingEnabled\" in this.context)\n\t        this.renderSession.smoothProperty = \"msImageSmoothingEnabled\";\n\t};\n\n\t// constructor\n\tPIXI.CanvasRenderer.prototype.constructor = PIXI.CanvasRenderer;\n\n\t/**\n\t * Renders the Stage to this canvas view\n\t *\n\t * @method render\n\t * @param stage {Stage} the Stage element to be rendered\n\t */\n\tPIXI.CanvasRenderer.prototype.render = function(stage)\n\t{\n\t    stage.updateTransform();\n\n\t    this.context.setTransform(1,0,0,1,0,0);\n\n\t    this.context.globalAlpha = 1;\n\n\t    this.renderSession.currentBlendMode = PIXI.blendModes.NORMAL;\n\t    this.context.globalCompositeOperation = PIXI.blendModesCanvas[PIXI.blendModes.NORMAL];\n\n\t    if (navigator.isCocoonJS && this.view.screencanvas) {\n\t        this.context.fillStyle = \"black\";\n\t        this.context.clear();\n\t    }\n\t    \n\t    if (this.clearBeforeRender)\n\t    {\n\t        if (this.transparent)\n\t        {\n\t            this.context.clearRect(0, 0, this.width, this.height);\n\t        }\n\t        else\n\t        {\n\t            this.context.fillStyle = stage.backgroundColorString;\n\t            this.context.fillRect(0, 0, this.width , this.height);\n\t        }\n\t    }\n\t    \n\t    this.renderDisplayObject(stage);\n\n\t    // run interaction!\n\t    if(stage.interactive)\n\t    {\n\t        //need to add some events!\n\t        if(!stage._interactiveEventsAdded)\n\t        {\n\t            stage._interactiveEventsAdded = true;\n\t            stage.interactionManager.setTarget(this);\n\t        }\n\t    }\n\t};\n\n\t/**\n\t * Removes everything from the renderer and optionally removes the Canvas DOM element.\n\t *\n\t * @method destroy\n\t * @param [removeView=true] {boolean} Removes the Canvas element from the DOM.\n\t */\n\tPIXI.CanvasRenderer.prototype.destroy = function(removeView)\n\t{\n\t    if (typeof removeView === \"undefined\") { removeView = true; }\n\n\t    if (removeView && this.view.parent)\n\t    {\n\t        this.view.parent.removeChild(this.view);\n\t    }\n\n\t    this.view = null;\n\t    this.context = null;\n\t    this.maskManager = null;\n\t    this.renderSession = null;\n\n\t};\n\n\t/**\n\t * Resizes the canvas view to the specified width and height\n\t *\n\t * @method resize\n\t * @param width {Number} the new width of the canvas view\n\t * @param height {Number} the new height of the canvas view\n\t */\n\tPIXI.CanvasRenderer.prototype.resize = function(width, height)\n\t{\n\t    this.width = width * this.resolution;\n\t    this.height = height * this.resolution;\n\n\t    this.view.width = this.width;\n\t    this.view.height = this.height;\n\n\t    if (this.autoResize) {\n\t        this.view.style.width = this.width / this.resolution + \"px\";\n\t        this.view.style.height = this.height / this.resolution + \"px\";\n\t    }\n\t};\n\n\t/**\n\t * Renders a display object\n\t *\n\t * @method renderDisplayObject\n\t * @param displayObject {DisplayObject} The displayObject to render\n\t * @param context {CanvasRenderingContext2D} the context 2d method of the canvas\n\t * @private\n\t */\n\tPIXI.CanvasRenderer.prototype.renderDisplayObject = function(displayObject, context)\n\t{\n\t    this.renderSession.context = context || this.context;\n\t    this.renderSession.resolution = this.resolution;\n\t    displayObject._renderCanvas(this.renderSession);\n\t};\n\n\t/**\n\t * Maps Pixi blend modes to canvas blend modes.\n\t *\n\t * @method mapBlendModes\n\t * @private\n\t */\n\tPIXI.CanvasRenderer.prototype.mapBlendModes = function()\n\t{\n\t    if(!PIXI.blendModesCanvas)\n\t    {\n\t        PIXI.blendModesCanvas = [];\n\n\t        if(PIXI.canUseNewCanvasBlendModes())\n\t        {\n\t            PIXI.blendModesCanvas[PIXI.blendModes.NORMAL]   = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.ADD]      = \"lighter\"; //IS THIS OK???\n\t            PIXI.blendModesCanvas[PIXI.blendModes.MULTIPLY] = \"multiply\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.SCREEN]   = \"screen\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.OVERLAY]  = \"overlay\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.DARKEN]   = \"darken\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.LIGHTEN]  = \"lighten\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.COLOR_DODGE] = \"color-dodge\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.COLOR_BURN] = \"color-burn\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.HARD_LIGHT] = \"hard-light\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.SOFT_LIGHT] = \"soft-light\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.DIFFERENCE] = \"difference\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.EXCLUSION] = \"exclusion\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.HUE]       = \"hue\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.SATURATION] = \"saturation\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.COLOR]      = \"color\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.LUMINOSITY] = \"luminosity\";\n\t        }\n\t        else\n\t        {\n\t            // this means that the browser does not support the cool new blend modes in canvas \"cough\" ie \"cough\"\n\t            PIXI.blendModesCanvas[PIXI.blendModes.NORMAL]   = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.ADD]      = \"lighter\"; //IS THIS OK???\n\t            PIXI.blendModesCanvas[PIXI.blendModes.MULTIPLY] = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.SCREEN]   = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.OVERLAY]  = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.DARKEN]   = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.LIGHTEN]  = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.COLOR_DODGE] = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.COLOR_BURN] = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.HARD_LIGHT] = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.SOFT_LIGHT] = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.DIFFERENCE] = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.EXCLUSION] = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.HUE]       = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.SATURATION] = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.COLOR]      = \"source-over\";\n\t            PIXI.blendModesCanvas[PIXI.blendModes.LUMINOSITY] = \"source-over\";\n\t        }\n\t    }\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\n\t/**\n\t * A set of functions used by the canvas renderer to draw the primitive graphics data.\n\t *\n\t * @class CanvasGraphics\n\t * @static\n\t */\n\tPIXI.CanvasGraphics = function()\n\t{\n\t};\n\n\t/*\n\t * Renders a PIXI.Graphics object to a canvas.\n\t *\n\t * @method renderGraphics\n\t * @static\n\t * @param graphics {Graphics} the actual graphics object to render\n\t * @param context {CanvasRenderingContext2D} the 2d drawing method of the canvas\n\t */\n\tPIXI.CanvasGraphics.renderGraphics = function(graphics, context)\n\t{\n\t    var worldAlpha = graphics.worldAlpha;\n\n\t    if(graphics.dirty)\n\t    {\n\t        this.updateGraphicsTint(graphics);\n\t        graphics.dirty = false;\n\t    }\n\t    \n\n\t    for (var i = 0; i < graphics.graphicsData.length; i++)\n\t    {\n\t        var data = graphics.graphicsData[i];\n\t        var shape = data.shape;\n\n\t        var fillColor = data._fillTint;\n\t        var lineColor = data._lineTint;\n\n\t        context.lineWidth = data.lineWidth;\n\n\t        if(data.type === PIXI.Graphics.POLY)\n\t        {\n\t            context.beginPath();\n\n\t            var points = shape.points;\n\n\t            context.moveTo(points[0], points[1]);\n\n\t            for (var j=1; j < points.length/2; j++)\n\t            {\n\t                context.lineTo(points[j * 2], points[j * 2 + 1]);\n\t            }\n\n\t            if(shape.closed)\n\t            {\n\t                context.lineTo(points[0], points[1]);\n\t            }\n\n\t            // if the first and last point are the same close the path - much neater :)\n\t            if(points[0] === points[points.length-2] && points[1] === points[points.length-1])\n\t            {\n\t                context.closePath();\n\t            }\n\n\t            if(data.fill)\n\t            {\n\t                context.globalAlpha = data.fillAlpha * worldAlpha;\n\t                context.fillStyle = '#' + ('00000' + ( fillColor | 0).toString(16)).substr(-6);\n\t                context.fill();\n\t            }\n\t            if(data.lineWidth)\n\t            {\n\t                context.globalAlpha = data.lineAlpha * worldAlpha;\n\t                context.strokeStyle = '#' + ('00000' + ( lineColor | 0).toString(16)).substr(-6);\n\t                context.stroke();\n\t            }\n\t        }\n\t        else if(data.type === PIXI.Graphics.RECT)\n\t        {\n\n\t            if(data.fillColor || data.fillColor === 0)\n\t            {\n\t                context.globalAlpha = data.fillAlpha * worldAlpha;\n\t                context.fillStyle = '#' + ('00000' + ( fillColor | 0).toString(16)).substr(-6);\n\t                context.fillRect(shape.x, shape.y, shape.width, shape.height);\n\n\t            }\n\t            if(data.lineWidth)\n\t            {\n\t                context.globalAlpha = data.lineAlpha * worldAlpha;\n\t                context.strokeStyle = '#' + ('00000' + ( lineColor | 0).toString(16)).substr(-6);\n\t                context.strokeRect(shape.x, shape.y, shape.width, shape.height);\n\t            }\n\t        }\n\t        else if(data.type === PIXI.Graphics.CIRC)\n\t        {\n\t            // TODO - need to be Undefined!\n\t            context.beginPath();\n\t            context.arc(shape.x, shape.y, shape.radius,0,2*Math.PI);\n\t            context.closePath();\n\n\t            if(data.fill)\n\t            {\n\t                context.globalAlpha = data.fillAlpha * worldAlpha;\n\t                context.fillStyle = '#' + ('00000' + ( fillColor | 0).toString(16)).substr(-6);\n\t                context.fill();\n\t            }\n\t            if(data.lineWidth)\n\t            {\n\t                context.globalAlpha = data.lineAlpha * worldAlpha;\n\t                context.strokeStyle = '#' + ('00000' + ( lineColor | 0).toString(16)).substr(-6);\n\t                context.stroke();\n\t            }\n\t        }\n\t        else if(data.type === PIXI.Graphics.ELIP)\n\t        {\n\t            // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n\t            var w = shape.width * 2;\n\t            var h = shape.height * 2;\n\n\t            var x = shape.x - w/2;\n\t            var y = shape.y - h/2;\n\n\t            context.beginPath();\n\n\t            var kappa = 0.5522848,\n\t                ox = (w / 2) * kappa, // control point offset horizontal\n\t                oy = (h / 2) * kappa, // control point offset vertical\n\t                xe = x + w,           // x-end\n\t                ye = y + h,           // y-end\n\t                xm = x + w / 2,       // x-middle\n\t                ym = y + h / 2;       // y-middle\n\n\t            context.moveTo(x, ym);\n\t            context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n\t            context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n\t            context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n\t            context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\n\t            context.closePath();\n\n\t            if(data.fill)\n\t            {\n\t                context.globalAlpha = data.fillAlpha * worldAlpha;\n\t                context.fillStyle = '#' + ('00000' + ( fillColor | 0).toString(16)).substr(-6);\n\t                context.fill();\n\t            }\n\t            if(data.lineWidth)\n\t            {\n\t                context.globalAlpha = data.lineAlpha * worldAlpha;\n\t                context.strokeStyle = '#' + ('00000' + ( lineColor | 0).toString(16)).substr(-6);\n\t                context.stroke();\n\t            }\n\t        }\n\t        else if (data.type === PIXI.Graphics.RREC)\n\t        {\n\t            var rx = shape.x;\n\t            var ry = shape.y;\n\t            var width = shape.width;\n\t            var height = shape.height;\n\t            var radius = shape.radius;\n\n\t            var maxRadius = Math.min(width, height) / 2 | 0;\n\t            radius = radius > maxRadius ? maxRadius : radius;\n\n\t            context.beginPath();\n\t            context.moveTo(rx, ry + radius);\n\t            context.lineTo(rx, ry + height - radius);\n\t            context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n\t            context.lineTo(rx + width - radius, ry + height);\n\t            context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\n\t            context.lineTo(rx + width, ry + radius);\n\t            context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n\t            context.lineTo(rx + radius, ry);\n\t            context.quadraticCurveTo(rx, ry, rx, ry + radius);\n\t            context.closePath();\n\n\t            if(data.fillColor || data.fillColor === 0)\n\t            {\n\t                context.globalAlpha = data.fillAlpha * worldAlpha;\n\t                context.fillStyle = '#' + ('00000' + ( fillColor | 0).toString(16)).substr(-6);\n\t                context.fill();\n\n\t            }\n\t            if(data.lineWidth)\n\t            {\n\t                context.globalAlpha = data.lineAlpha * worldAlpha;\n\t                context.strokeStyle = '#' + ('00000' + ( lineColor | 0).toString(16)).substr(-6);\n\t                context.stroke();\n\t            }\n\t        }\n\t    }\n\t};\n\n\t/*\n\t * Renders a graphics mask\n\t *\n\t * @static\n\t * @private\n\t * @method renderGraphicsMask\n\t * @param graphics {Graphics} the graphics which will be used as a mask\n\t * @param context {CanvasRenderingContext2D} the context 2d method of the canvas\n\t */\n\tPIXI.CanvasGraphics.renderGraphicsMask = function(graphics, context)\n\t{\n\t    var len = graphics.graphicsData.length;\n\n\t    if(len === 0) return;\n\n\t    if(len > 1)\n\t    {\n\t        len = 1;\n\t        window.console.log('Pixi.js warning: masks in canvas can only mask using the first path in the graphics object');\n\t    }\n\n\t    for (var i = 0; i < 1; i++)\n\t    {\n\t        var data = graphics.graphicsData[i];\n\t        var shape = data.shape;\n\n\t        if(data.type === PIXI.Graphics.POLY)\n\t        {\n\t            context.beginPath();\n\t        \n\t            var points = shape.points;\n\t        \n\t            context.moveTo(points[0], points[1]);\n\n\t            for (var j=1; j < points.length/2; j++)\n\t            {\n\t                context.lineTo(points[j * 2], points[j * 2 + 1]);\n\t            }\n\n\t            // if the first and last point are the same close the path - much neater :)\n\t            if(points[0] === points[points.length-2] && points[1] === points[points.length-1])\n\t            {\n\t                context.closePath();\n\t            }\n\n\t        }\n\t        else if(data.type === PIXI.Graphics.RECT)\n\t        {\n\t            context.beginPath();\n\t            context.rect(shape.x, shape.y, shape.width, shape.height);\n\t            context.closePath();\n\t        }\n\t        else if(data.type === PIXI.Graphics.CIRC)\n\t        {\n\t            // TODO - need to be Undefined!\n\t            context.beginPath();\n\t            context.arc(shape.x, shape.y, shape.radius,0,2*Math.PI);\n\t            context.closePath();\n\t        }\n\t        else if(data.type === PIXI.Graphics.ELIP)\n\t        {\n\n\t            // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n\t            var w = shape.width * 2;\n\t            var h = shape.height * 2;\n\n\t            var x = shape.x - w/2;\n\t            var y = shape.y - h/2;\n\n\t            context.beginPath();\n\n\t            var kappa = 0.5522848,\n\t                ox = (w / 2) * kappa, // control point offset horizontal\n\t                oy = (h / 2) * kappa, // control point offset vertical\n\t                xe = x + w,           // x-end\n\t                ye = y + h,           // y-end\n\t                xm = x + w / 2,       // x-middle\n\t                ym = y + h / 2;       // y-middle\n\n\t            context.moveTo(x, ym);\n\t            context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n\t            context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n\t            context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n\t            context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\t            context.closePath();\n\t        }\n\t        else if (data.type === PIXI.Graphics.RREC)\n\t        {\n\t        \n\t            var pts = shape.points;\n\t            var rx = pts[0];\n\t            var ry = pts[1];\n\t            var width = pts[2];\n\t            var height = pts[3];\n\t            var radius = pts[4];\n\n\t            var maxRadius = Math.min(width, height) / 2 | 0;\n\t            radius = radius > maxRadius ? maxRadius : radius;\n\n\t            context.beginPath();\n\t            context.moveTo(rx, ry + radius);\n\t            context.lineTo(rx, ry + height - radius);\n\t            context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n\t            context.lineTo(rx + width - radius, ry + height);\n\t            context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\n\t            context.lineTo(rx + width, ry + radius);\n\t            context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n\t            context.lineTo(rx + radius, ry);\n\t            context.quadraticCurveTo(rx, ry, rx, ry + radius);\n\t            context.closePath();\n\t        }\n\t    }\n\t};\n\n\tPIXI.CanvasGraphics.updateGraphicsTint = function(graphics)\n\t{\n\t    if(graphics.tint === 0xFFFFFF)return;\n\n\t    var tintR = (graphics.tint >> 16 & 0xFF) / 255;\n\t    var tintG = (graphics.tint >> 8 & 0xFF) / 255;\n\t    var tintB = (graphics.tint & 0xFF)/ 255;\n\n\t    for (var i = 0; i < graphics.graphicsData.length; i++)\n\t    {\n\t        var data = graphics.graphicsData[i];\n\n\t        var fillColor = data.fillColor | 0;\n\t        var lineColor = data.lineColor | 0;\n\n\t        /*\n\t        var colorR = (fillColor >> 16 & 0xFF) / 255;\n\t        var colorG = (fillColor >> 8 & 0xFF) / 255;\n\t        var colorB = (fillColor & 0xFF) / 255; \n\n\t        colorR *= tintR;\n\t        colorG *= tintG;\n\t        colorB *= tintB;\n\n\t        fillColor = ((colorR*255 << 16) + (colorG*255 << 8) + colorB*255);\n\n\t        colorR = (lineColor >> 16 & 0xFF) / 255;\n\t        colorG = (lineColor >> 8 & 0xFF) / 255;\n\t        colorB = (lineColor & 0xFF) / 255; \n\n\t        colorR *= tintR;\n\t        colorG *= tintG;\n\t        colorB *= tintB;\n\n\t        lineColor = ((colorR*255 << 16) + (colorG*255 << 8) + colorB*255);   \n\t        */\n\t        \n\t        // super inline cos im an optimization NAZI :)\n\t        data._fillTint = (((fillColor >> 16 & 0xFF) / 255 * tintR*255 << 16) + ((fillColor >> 8 & 0xFF) / 255 * tintG*255 << 8) +  (fillColor & 0xFF) / 255 * tintB*255);\n\t        data._lineTint = (((lineColor >> 16 & 0xFF) / 255 * tintR*255 << 16) + ((lineColor >> 8 & 0xFF) / 255 * tintG*255 << 8) +  (lineColor & 0xFF) / 255 * tintB*255);\n\n\t    }\n\t};\n\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The Graphics class contains methods used to draw primitive shapes such as lines, circles and rectangles to the display, and color and fill them.\n\t * \n\t * @class Graphics\n\t * @extends DisplayObjectContainer\n\t * @constructor\n\t */\n\tPIXI.Graphics = function()\n\t{\n\t    PIXI.DisplayObjectContainer.call( this );\n\n\t    this.renderable = true;\n\n\t    /**\n\t     * The alpha value used when filling the Graphics object.\n\t     *\n\t     * @property fillAlpha\n\t     * @type Number\n\t     */\n\t    this.fillAlpha = 1;\n\n\t    /**\n\t     * The width (thickness) of any lines drawn.\n\t     *\n\t     * @property lineWidth\n\t     * @type Number\n\t     */\n\t    this.lineWidth = 0;\n\n\t    /**\n\t     * The color of any lines drawn.\n\t     *\n\t     * @property lineColor\n\t     * @type String\n\t     * @default 0\n\t     */\n\t    this.lineColor = 0;\n\n\t    /**\n\t     * Graphics data\n\t     *\n\t     * @property graphicsData\n\t     * @type Array\n\t     * @private\n\t     */\n\t    this.graphicsData = [];\n\n\t    /**\n\t     * The tint applied to the graphic shape. This is a hex value. Apply a value of 0xFFFFFF to reset the tint.\n\t     *\n\t     * @property tint\n\t     * @type Number\n\t     * @default 0xFFFFFF\n\t     */\n\t    this.tint = 0xFFFFFF;\n\n\t    /**\n\t     * The blend mode to be applied to the graphic shape. Apply a value of PIXI.blendModes.NORMAL to reset the blend mode.\n\t     *\n\t     * @property blendMode\n\t     * @type Number\n\t     * @default PIXI.blendModes.NORMAL;\n\t     */\n\t    this.blendMode = PIXI.blendModes.NORMAL;\n\t    \n\t    /**\n\t     * Current path\n\t     *\n\t     * @property currentPath\n\t     * @type Object\n\t     * @private\n\t     */\n\t    this.currentPath = null;\n\t    \n\t    /**\n\t     * Array containing some WebGL-related properties used by the WebGL renderer.\n\t     *\n\t     * @property _webGL\n\t     * @type Array\n\t     * @private\n\t     */\n\t    this._webGL = [];\n\n\t    /**\n\t     * Whether this shape is being used as a mask.\n\t     *\n\t     * @property isMask\n\t     * @type Boolean\n\t     */\n\t    this.isMask = false;\n\n\t    /**\n\t     * The bounds' padding used for bounds calculation.\n\t     *\n\t     * @property boundsPadding\n\t     * @type Number\n\t     */\n\t    this.boundsPadding = 0;\n\n\t    this._localBounds = new PIXI.Rectangle(0,0,1,1);\n\n\t    /**\n\t     * Used to detect if the graphics object has changed. If this is set to true then the graphics object will be recalculated.\n\t     * \n\t     * @property dirty\n\t     * @type Boolean\n\t     * @private\n\t     */\n\t    this.dirty = true;\n\n\t    /**\n\t     * Used to detect if the webgl graphics object has changed. If this is set to true then the graphics object will be recalculated.\n\t     * \n\t     * @property webGLDirty\n\t     * @type Boolean\n\t     * @private\n\t     */\n\t    this.webGLDirty = false;\n\n\t    /**\n\t     * Used to detect if the cached sprite object needs to be updated.\n\t     * \n\t     * @property cachedSpriteDirty\n\t     * @type Boolean\n\t     * @private\n\t     */\n\t    this.cachedSpriteDirty = false;\n\n\t};\n\n\t// constructor\n\tPIXI.Graphics.prototype = Object.create( PIXI.DisplayObjectContainer.prototype );\n\tPIXI.Graphics.prototype.constructor = PIXI.Graphics;\n\n\t/**\n\t * When cacheAsBitmap is set to true the graphics object will be rendered as if it was a sprite.\n\t * This is useful if your graphics element does not change often, as it will speed up the rendering of the object in exchange for taking up texture memory.\n\t * It is also useful if you need the graphics object to be anti-aliased, because it will be rendered using canvas.\n\t * This is not recommended if you are constantly redrawing the graphics element.\n\t *\n\t * @property cacheAsBitmap\n\t * @type Boolean\n\t * @default false\n\t * @private\n\t */\n\tObject.defineProperty(PIXI.Graphics.prototype, \"cacheAsBitmap\", {\n\t    get: function() {\n\t        return  this._cacheAsBitmap;\n\t    },\n\t    set: function(value) {\n\t        this._cacheAsBitmap = value;\n\n\t        if(this._cacheAsBitmap)\n\t        {\n\n\t            this._generateCachedSprite();\n\t        }\n\t        else\n\t        {\n\t            this.destroyCachedSprite();\n\t            this.dirty = true;\n\t        }\n\n\t    }\n\t});\n\n\t/**\n\t * Specifies the line style used for subsequent calls to Graphics methods such as the lineTo() method or the drawCircle() method.\n\t *\n\t * @method lineStyle\n\t * @param lineWidth {Number} width of the line to draw, will update the objects stored style\n\t * @param color {Number} color of the line to draw, will update the objects stored style\n\t * @param alpha {Number} alpha of the line to draw, will update the objects stored style\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.lineStyle = function(lineWidth, color, alpha)\n\t{\n\t    this.lineWidth = lineWidth || 0;\n\t    this.lineColor = color || 0;\n\t    this.lineAlpha = (arguments.length < 3) ? 1 : alpha;\n\n\t    if(this.currentPath)\n\t    {\n\t        if(this.currentPath.shape.points.length)\n\t        {\n\t            // halfway through a line? start a new one!\n\t            this.drawShape( new PIXI.Polygon( this.currentPath.shape.points.slice(-2) ));\n\t            return this;\n\t        }\n\n\t        // otherwise its empty so lets just set the line properties\n\t        this.currentPath.lineWidth = this.lineWidth;\n\t        this.currentPath.lineColor = this.lineColor;\n\t        this.currentPath.lineAlpha = this.lineAlpha;\n\t        \n\t    }\n\n\t    return this;\n\t};\n\n\t/**\n\t * Moves the current drawing position to x, y.\n\t *\n\t * @method moveTo\n\t * @param x {Number} the X coordinate to move to\n\t * @param y {Number} the Y coordinate to move to\n\t * @return {Graphics}\n\t  */\n\tPIXI.Graphics.prototype.moveTo = function(x, y)\n\t{\n\t    this.drawShape(new PIXI.Polygon([x,y]));\n\n\t    return this;\n\t};\n\n\t/**\n\t * Draws a line using the current line style from the current drawing position to (x, y);\n\t * The current drawing position is then set to (x, y).\n\t *\n\t * @method lineTo\n\t * @param x {Number} the X coordinate to draw to\n\t * @param y {Number} the Y coordinate to draw to\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.lineTo = function(x, y)\n\t{\n\t    this.currentPath.shape.points.push(x, y);\n\t    this.dirty = true;\n\n\t    return this;\n\t};\n\n\t/**\n\t * Calculate the points for a quadratic bezier curve and then draws it.\n\t * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n\t *\n\t * @method quadraticCurveTo\n\t * @param cpX {Number} Control point x\n\t * @param cpY {Number} Control point y\n\t * @param toX {Number} Destination point x\n\t * @param toY {Number} Destination point y\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.quadraticCurveTo = function(cpX, cpY, toX, toY)\n\t{\n\t    if( this.currentPath )\n\t    {\n\t        if(this.currentPath.shape.points.length === 0)this.currentPath.shape.points = [0,0];\n\t    }\n\t    else\n\t    {\n\t        this.moveTo(0,0);\n\t    }\n\n\t    var xa,\n\t    ya,\n\t    n = 20,\n\t    points = this.currentPath.shape.points;\n\t    if(points.length === 0)this.moveTo(0, 0);\n\t    \n\n\t    var fromX = points[points.length-2];\n\t    var fromY = points[points.length-1];\n\n\t    var j = 0;\n\t    for (var i = 1; i <= n; i++ )\n\t    {\n\t        j = i / n;\n\n\t        xa = fromX + ( (cpX - fromX) * j );\n\t        ya = fromY + ( (cpY - fromY) * j );\n\n\t        points.push( xa + ( ((cpX + ( (toX - cpX) * j )) - xa) * j ),\n\t                     ya + ( ((cpY + ( (toY - cpY) * j )) - ya) * j ) );\n\t    }\n\n\n\t    this.dirty = true;\n\n\t    return this;\n\t};\n\n\t/**\n\t * Calculate the points for a bezier curve and then draws it.\n\t *\n\t * @method bezierCurveTo\n\t * @param cpX {Number} Control point x\n\t * @param cpY {Number} Control point y\n\t * @param cpX2 {Number} Second Control point x\n\t * @param cpY2 {Number} Second Control point y\n\t * @param toX {Number} Destination point x\n\t * @param toY {Number} Destination point y\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.bezierCurveTo = function(cpX, cpY, cpX2, cpY2, toX, toY)\n\t{\n\t    if( this.currentPath )\n\t    {\n\t        if(this.currentPath.shape.points.length === 0)this.currentPath.shape.points = [0,0];\n\t    }\n\t    else\n\t    {\n\t        this.moveTo(0,0);\n\t    }\n\n\t    var n = 20,\n\t    dt,\n\t    dt2,\n\t    dt3,\n\t    t2,\n\t    t3,\n\t    points = this.currentPath.shape.points;\n\n\t    var fromX = points[points.length-2];\n\t    var fromY = points[points.length-1];\n\t    \n\t    var j = 0;\n\n\t    for (var i=1; i<=n; i++)\n\t    {\n\t        j = i / n;\n\n\t        dt = (1 - j);\n\t        dt2 = dt * dt;\n\t        dt3 = dt2 * dt;\n\n\t        t2 = j * j;\n\t        t3 = t2 * j;\n\t        \n\t        points.push( dt3 * fromX + 3 * dt2 * j * cpX + 3 * dt * t2 * cpX2 + t3 * toX,\n\t                     dt3 * fromY + 3 * dt2 * j * cpY + 3 * dt * t2 * cpY2 + t3 * toY);\n\t    }\n\t    \n\t    this.dirty = true;\n\n\t    return this;\n\t};\n\n\t/*\n\t * The arcTo() method creates an arc/curve between two tangents on the canvas.\n\t * \n\t * \"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!\n\t *\n\t * @method arcTo\n\t * @param x1 {Number} The x-coordinate of the beginning of the arc\n\t * @param y1 {Number} The y-coordinate of the beginning of the arc\n\t * @param x2 {Number} The x-coordinate of the end of the arc\n\t * @param y2 {Number} The y-coordinate of the end of the arc\n\t * @param radius {Number} The radius of the arc\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.arcTo = function(x1, y1, x2, y2, radius)\n\t{\n\t    if( this.currentPath )\n\t    {\n\t        if(this.currentPath.shape.points.length === 0)\n\t        {\n\t            this.currentPath.shape.points.push(x1, y1);\n\t        }\n\t    }\n\t    else\n\t    {\n\t        this.moveTo(x1, y1);\n\t    }\n\n\t    var points = this.currentPath.shape.points;\n\t    var fromX = points[points.length-2];\n\t    var fromY = points[points.length-1];\n\t    var a1 = fromY - y1;\n\t    var b1 = fromX - x1;\n\t    var a2 = y2   - y1;\n\t    var b2 = x2   - x1;\n\t    var mm = Math.abs(a1 * b2 - b1 * a2);\n\n\n\t    if (mm < 1.0e-8 || radius === 0)\n\t    {\n\t        if( points[points.length-2] !== x1 || points[points.length-1] !== y1)\n\t        {\n\t            //console.log(\">>\")\n\t            points.push(x1, y1);\n\t        }\n\t    }\n\t    else\n\t    {\n\t        var dd = a1 * a1 + b1 * b1;\n\t        var cc = a2 * a2 + b2 * b2;\n\t        var tt = a1 * a2 + b1 * b2;\n\t        var k1 = radius * Math.sqrt(dd) / mm;\n\t        var k2 = radius * Math.sqrt(cc) / mm;\n\t        var j1 = k1 * tt / dd;\n\t        var j2 = k2 * tt / cc;\n\t        var cx = k1 * b2 + k2 * b1;\n\t        var cy = k1 * a2 + k2 * a1;\n\t        var px = b1 * (k2 + j1);\n\t        var py = a1 * (k2 + j1);\n\t        var qx = b2 * (k1 + j2);\n\t        var qy = a2 * (k1 + j2);\n\t        var startAngle = Math.atan2(py - cy, px - cx);\n\t        var endAngle   = Math.atan2(qy - cy, qx - cx);\n\n\t        this.arc(cx + x1, cy + y1, radius, startAngle, endAngle, b1 * a2 > b2 * a1);\n\t    }\n\n\t    this.dirty = true;\n\n\t    return this;\n\t};\n\n\t/**\n\t * The arc method creates an arc/curve (used to create circles, or parts of circles).\n\t *\n\t * @method arc\n\t * @param cx {Number} The x-coordinate of the center of the circle\n\t * @param cy {Number} The y-coordinate of the center of the circle\n\t * @param radius {Number} The radius of the circle\n\t * @param startAngle {Number} The starting angle, in radians (0 is at the 3 o'clock position of the arc's circle)\n\t * @param endAngle {Number} The ending angle, in radians\n\t * @param anticlockwise {Boolean} Optional. Specifies whether the drawing should be counterclockwise or clockwise. False is default, and indicates clockwise, while true indicates counter-clockwise.\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.arc = function(cx, cy, radius, startAngle, endAngle, anticlockwise)\n\t{\n\t    var startX = cx + Math.cos(startAngle) * radius;\n\t    var startY = cy + Math.sin(startAngle) * radius;\n\t    var points;\n\n\t    if( this.currentPath )\n\t    {\n\t        points = this.currentPath.shape.points;\n\n\t        if(points.length === 0)\n\t        {\n\t            points.push(startX, startY);\n\t        }\n\t        else if( points[points.length-2] !== startX || points[points.length-1] !== startY)\n\t        {\n\t            points.push(startX, startY);\n\t        }\n\t    }\n\t    else\n\t    {\n\t        this.moveTo(startX, startY);\n\t        points = this.currentPath.shape.points;\n\t    }\n\t    \n\t    if (startAngle === endAngle)return this;\n\n\t    if( !anticlockwise && endAngle <= startAngle )\n\t    {\n\t        endAngle += Math.PI * 2;\n\t    }\n\t    else if( anticlockwise && startAngle <= endAngle )\n\t    {\n\t        startAngle += Math.PI * 2;\n\t    }\n\n\t    var sweep = anticlockwise ? (startAngle - endAngle) *-1 : (endAngle - startAngle);\n\t    var segs =  ( Math.abs(sweep)/ (Math.PI * 2) ) * 40;\n\n\t    if( sweep === 0 ) return this;\n\n\t    var theta = sweep/(segs*2);\n\t    var theta2 = theta*2;\n\n\t    var cTheta = Math.cos(theta);\n\t    var sTheta = Math.sin(theta);\n\t    \n\t    var segMinus = segs - 1;\n\n\t    var remainder = ( segMinus % 1 ) / segMinus;\n\n\t    for(var i=0; i<=segMinus; i++)\n\t    {\n\t        var real =  i + remainder * i;\n\n\t    \n\t        var angle = ((theta) + startAngle + (theta2 * real));\n\n\t        var c = Math.cos(angle);\n\t        var s = -Math.sin(angle);\n\n\t        points.push(( (cTheta *  c) + (sTheta * s) ) * radius + cx,\n\t                    ( (cTheta * -s) + (sTheta * c) ) * radius + cy);\n\t    }\n\n\t    this.dirty = true;\n\n\t    return this;\n\t};\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics methods\n\t * (such as lineTo() or drawCircle()) use when drawing.\n\t *\n\t * @method beginFill\n\t * @param color {Number} the color of the fill\n\t * @param alpha {Number} the alpha of the fill\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.beginFill = function(color, alpha)\n\t{\n\t    this.filling = true;\n\t    this.fillColor = color || 0;\n\t    this.fillAlpha = (alpha === undefined) ? 1 : alpha;\n\n\t    if(this.currentPath)\n\t    {\n\t        if(this.currentPath.shape.points.length <= 2)\n\t        {\n\t            this.currentPath.fill = this.filling;\n\t            this.currentPath.fillColor = this.fillColor;\n\t            this.currentPath.fillAlpha = this.fillAlpha;\n\t        }\n\t    }\n\t    return this;\n\t};\n\n\t/**\n\t * Applies a fill to the lines and shapes that were added since the last call to the beginFill() method.\n\t *\n\t * @method endFill\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.endFill = function()\n\t{\n\t    this.filling = false;\n\t    this.fillColor = null;\n\t    this.fillAlpha = 1;\n\n\t    return this;\n\t};\n\n\t/**\n\t * Draws a rectangle.\n\t * \n\t * @method drawRect\n\t *\n\t * @param x {Number} The X coord of the top-left of the rectangle\n\t * @param y {Number} The Y coord of the top-left of the rectangle\n\t * @param width {Number} The width of the rectangle\n\t * @param height {Number} The height of the rectangle\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.drawRect = function( x, y, width, height )\n\t{\n\t    this.drawShape(new PIXI.Rectangle(x,y, width, height));\n\n\t    return this;\n\t};\n\n\t/**\n\t * Draws a rounded rectangle.\n\t * \n\t * @method drawRoundedRect\n\t *\n\t * @param x {Number} The X coord of the top-left of the rectangle\n\t * @param y {Number} The Y coord of the top-left of the rectangle\n\t * @param width {Number} The width of the rectangle\n\t * @param height {Number} The height of the rectangle\n\t * @param radius {Number} Radius of the rectangle corners\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.drawRoundedRect = function( x, y, width, height, radius )\n\t{\n\t    this.drawShape(new PIXI.RoundedRectangle(x, y, width, height, radius));\n\n\t    return this;\n\t};\n\n\t/**\n\t * Draws a circle.\n\t *\n\t * @method drawCircle\n\t * @param x {Number} The X coordinate of the center of the circle\n\t * @param y {Number} The Y coordinate of the center of the circle\n\t * @param radius {Number} The radius of the circle\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.drawCircle = function(x, y, radius)\n\t{\n\t    this.drawShape(new PIXI.Circle(x,y, radius));\n\n\t    return this;\n\t};\n\n\t/**\n\t * Draws an ellipse.\n\t *\n\t * @method drawEllipse\n\t * @param x {Number} The X coordinate of the center of the ellipse\n\t * @param y {Number} The Y coordinate of the center of the ellipse\n\t * @param width {Number} The half width of the ellipse\n\t * @param height {Number} The half height of the ellipse\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.drawEllipse = function(x, y, width, height)\n\t{\n\t    this.drawShape(new PIXI.Ellipse(x, y, width, height));\n\n\t    return this;\n\t};\n\n\t/**\n\t * Draws a polygon using the given path.\n\t *\n\t * @method drawPolygon\n\t * @param path {Array} The path data used to construct the polygon.\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.drawPolygon = function(path)\n\t{\n\t    if(!(path instanceof Array))path = Array.prototype.slice.call(arguments);\n\t    this.drawShape(new PIXI.Polygon(path));\n\t    return this;\n\t};\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.\n\t *\n\t * @method clear\n\t * @return {Graphics}\n\t */\n\tPIXI.Graphics.prototype.clear = function()\n\t{\n\t    this.lineWidth = 0;\n\t    this.filling = false;\n\n\t    this.dirty = true;\n\t    this.clearDirty = true;\n\t    this.graphicsData = [];\n\n\t    return this;\n\t};\n\n\t/**\n\t * Useful function that returns a texture of the graphics object that can then be used to create sprites\n\t * This can be quite useful if your geometry is complicated and needs to be reused multiple times.\n\t *\n\t * @method generateTexture\n\t * @param resolution {Number} The resolution of the texture being generated\n\t * @param scaleMode {Number} Should be one of the PIXI.scaleMode consts\n\t * @return {Texture} a texture of the graphics object\n\t */\n\tPIXI.Graphics.prototype.generateTexture = function(resolution, scaleMode)\n\t{\n\t    resolution = resolution || 1;\n\n\t    var bounds = this.getBounds();\n\t   \n\t    var canvasBuffer = new PIXI.CanvasBuffer(bounds.width * resolution, bounds.height * resolution);\n\t    \n\t    var texture = PIXI.Texture.fromCanvas(canvasBuffer.canvas, scaleMode);\n\t    texture.baseTexture.resolution = resolution;\n\n\t    canvasBuffer.context.scale(resolution, resolution);\n\n\t    canvasBuffer.context.translate(-bounds.x,-bounds.y);\n\t    \n\t    PIXI.CanvasGraphics.renderGraphics(this, canvasBuffer.context);\n\n\t    return texture;\n\t};\n\n\t/**\n\t* Renders the object using the WebGL renderer\n\t*\n\t* @method _renderWebGL\n\t* @param renderSession {RenderSession} \n\t* @private\n\t*/\n\tPIXI.Graphics.prototype._renderWebGL = function(renderSession)\n\t{\n\t    // if the sprite is not visible or the alpha is 0 then no need to render this element\n\t    if(this.visible === false || this.alpha === 0 || this.isMask === true)return;\n\n\t    if(this._cacheAsBitmap)\n\t    {\n\n\t        if(this.dirty || this.cachedSpriteDirty)\n\t        {\n\n\t            this._generateCachedSprite();\n\t   \n\t            // we will also need to update the texture on the gpu too!\n\t            this.updateCachedSpriteTexture();\n\n\t            this.cachedSpriteDirty = false;\n\t            this.dirty = false;\n\t        }\n\n\t        this._cachedSprite.worldAlpha = this.worldAlpha;\n\t        PIXI.Sprite.prototype._renderWebGL.call(this._cachedSprite, renderSession);\n\n\t        return;\n\t    }\n\t    else\n\t    {\n\t        renderSession.spriteBatch.stop();\n\t        renderSession.blendModeManager.setBlendMode(this.blendMode);\n\n\t        if(this._mask)renderSession.maskManager.pushMask(this._mask, renderSession);\n\t        if(this._filters)renderSession.filterManager.pushFilter(this._filterBlock);\n\t      \n\t        // check blend mode\n\t        if(this.blendMode !== renderSession.spriteBatch.currentBlendMode)\n\t        {\n\t            renderSession.spriteBatch.currentBlendMode = this.blendMode;\n\t            var blendModeWebGL = PIXI.blendModesWebGL[renderSession.spriteBatch.currentBlendMode];\n\t            renderSession.spriteBatch.gl.blendFunc(blendModeWebGL[0], blendModeWebGL[1]);\n\t        }\n\t        \n\t        // check if the webgl graphic needs to be updated\n\t        if(this.webGLDirty)\n\t        {\n\t            this.dirty = true;\n\t            this.webGLDirty = false;\n\t        }\n\t        \n\t        PIXI.WebGLGraphics.renderGraphics(this, renderSession);\n\t        \n\t        // only render if it has children!\n\t        if(this.children.length)\n\t        {\n\t            renderSession.spriteBatch.start();\n\n\t             // simple render children!\n\t            for(var i=0, j=this.children.length; i<j; i++)\n\t            {\n\t                this.children[i]._renderWebGL(renderSession);\n\t            }\n\n\t            renderSession.spriteBatch.stop();\n\t        }\n\n\t        if(this._filters)renderSession.filterManager.popFilter();\n\t        if(this._mask)renderSession.maskManager.popMask(this.mask, renderSession);\n\t          \n\t        renderSession.drawCount++;\n\n\t        renderSession.spriteBatch.start();\n\t    }\n\t};\n\n\t/**\n\t* Renders the object using the Canvas renderer\n\t*\n\t* @method _renderCanvas\n\t* @param renderSession {RenderSession} \n\t* @private\n\t*/\n\tPIXI.Graphics.prototype._renderCanvas = function(renderSession)\n\t{\n\t    // if the sprite is not visible or the alpha is 0 then no need to render this element\n\t    if(this.visible === false || this.alpha === 0 || this.isMask === true)return;\n\t    \n\t    if(this._cacheAsBitmap)\n\t    {\n\t        if(this.dirty || this.cachedSpriteDirty)\n\t        {\n\t            this._generateCachedSprite();\n\t   \n\t            // we will also need to update the texture\n\t            this.updateCachedSpriteTexture();\n\n\t            this.cachedSpriteDirty = false;\n\t            this.dirty = false;\n\t        }\n\n\t        this._cachedSprite.alpha = this.alpha;\n\t        PIXI.Sprite.prototype._renderCanvas.call(this._cachedSprite, renderSession);\n\n\t        return;\n\t    }\n\t    else\n\t    {\n\t        var context = renderSession.context;\n\t        var transform = this.worldTransform;\n\t        \n\t        if(this.blendMode !== renderSession.currentBlendMode)\n\t        {\n\t            renderSession.currentBlendMode = this.blendMode;\n\t            context.globalCompositeOperation = PIXI.blendModesCanvas[renderSession.currentBlendMode];\n\t        }\n\n\t        if(this._mask)\n\t        {\n\t            renderSession.maskManager.pushMask(this._mask, renderSession);\n\t        }\n\n\t        var resolution = renderSession.resolution;\n\t        context.setTransform(transform.a * resolution,\n\t                             transform.b * resolution,\n\t                             transform.c * resolution,\n\t                             transform.d * resolution,\n\t                             transform.tx * resolution,\n\t                             transform.ty * resolution);\n\n\t        PIXI.CanvasGraphics.renderGraphics(this, context);\n\n\t         // simple render children!\n\t        for(var i=0, j=this.children.length; i<j; i++)\n\t        {\n\t            this.children[i]._renderCanvas(renderSession);\n\t        }\n\n\t        if(this._mask)\n\t        {\n\t            renderSession.maskManager.popMask(renderSession);\n\t        }\n\t    }\n\t};\n\n\t/**\n\t * Retrieves the bounds of the graphic shape as a rectangle object\n\t *\n\t * @method getBounds\n\t * @return {Rectangle} the rectangular bounding area\n\t */\n\tPIXI.Graphics.prototype.getBounds = function( matrix )\n\t{\n\t    // return an empty object if the item is a mask!\n\t    if(this.isMask)return PIXI.EmptyRectangle;\n\n\t    if(this.dirty)\n\t    {\n\t        this.updateLocalBounds();\n\t        this.webGLDirty = true;\n\t        this.cachedSpriteDirty = true;\n\t        this.dirty = false;\n\t    }\n\n\t    var bounds = this._localBounds;\n\n\t    var w0 = bounds.x;\n\t    var w1 = bounds.width + bounds.x;\n\n\t    var h0 = bounds.y;\n\t    var h1 = bounds.height + bounds.y;\n\n\t    var worldTransform = matrix || this.worldTransform;\n\n\t    var a = worldTransform.a;\n\t    var b = worldTransform.b;\n\t    var c = worldTransform.c;\n\t    var d = worldTransform.d;\n\t    var tx = worldTransform.tx;\n\t    var ty = worldTransform.ty;\n\n\t    var x1 = a * w1 + c * h1 + tx;\n\t    var y1 = d * h1 + b * w1 + ty;\n\n\t    var x2 = a * w0 + c * h1 + tx;\n\t    var y2 = d * h1 + b * w0 + ty;\n\n\t    var x3 = a * w0 + c * h0 + tx;\n\t    var y3 = d * h0 + b * w0 + ty;\n\n\t    var x4 =  a * w1 + c * h0 + tx;\n\t    var y4 =  d * h0 + b * w1 + ty;\n\n\t    var maxX = x1;\n\t    var maxY = y1;\n\n\t    var minX = x1;\n\t    var minY = y1;\n\n\t    minX = x2 < minX ? x2 : minX;\n\t    minX = x3 < minX ? x3 : minX;\n\t    minX = x4 < minX ? x4 : minX;\n\n\t    minY = y2 < minY ? y2 : minY;\n\t    minY = y3 < minY ? y3 : minY;\n\t    minY = y4 < minY ? y4 : minY;\n\n\t    maxX = x2 > maxX ? x2 : maxX;\n\t    maxX = x3 > maxX ? x3 : maxX;\n\t    maxX = x4 > maxX ? x4 : maxX;\n\n\t    maxY = y2 > maxY ? y2 : maxY;\n\t    maxY = y3 > maxY ? y3 : maxY;\n\t    maxY = y4 > maxY ? y4 : maxY;\n\n\t    this._bounds.x = minX;\n\t    this._bounds.width = maxX - minX;\n\n\t    this._bounds.y = minY;\n\t    this._bounds.height = maxY - minY;\n\n\t    return  this._bounds;\n\t};\n\n\t/**\n\t * Update the bounds of the object\n\t *\n\t * @method updateLocalBounds\n\t */\n\tPIXI.Graphics.prototype.updateLocalBounds = function()\n\t{\n\t    var minX = Infinity;\n\t    var maxX = -Infinity;\n\n\t    var minY = Infinity;\n\t    var maxY = -Infinity;\n\n\t    if(this.graphicsData.length)\n\t    {\n\t        var shape, points, x, y, w, h;\n\n\t        for (var i = 0; i < this.graphicsData.length; i++) {\n\t            var data = this.graphicsData[i];\n\t            var type = data.type;\n\t            var lineWidth = data.lineWidth;\n\t            shape = data.shape;\n\t           \n\n\t            if(type === PIXI.Graphics.RECT || type === PIXI.Graphics.RREC)\n\t            {\n\t                x = shape.x - lineWidth/2;\n\t                y = shape.y - lineWidth/2;\n\t                w = shape.width + lineWidth;\n\t                h = shape.height + lineWidth;\n\n\t                minX = x < minX ? x : minX;\n\t                maxX = x + w > maxX ? x + w : maxX;\n\n\t                minY = y < minY ? y : minY;\n\t                maxY = y + h > maxY ? y + h : maxY;\n\t            }\n\t            else if(type === PIXI.Graphics.CIRC)\n\t            {\n\t                x = shape.x;\n\t                y = shape.y;\n\t                w = shape.radius + lineWidth/2;\n\t                h = shape.radius + lineWidth/2;\n\n\t                minX = x - w < minX ? x - w : minX;\n\t                maxX = x + w > maxX ? x + w : maxX;\n\n\t                minY = y - h < minY ? y - h : minY;\n\t                maxY = y + h > maxY ? y + h : maxY;\n\t            }\n\t            else if(type === PIXI.Graphics.ELIP)\n\t            {\n\t                x = shape.x;\n\t                y = shape.y;\n\t                w = shape.width + lineWidth/2;\n\t                h = shape.height + lineWidth/2;\n\n\t                minX = x - w < minX ? x - w : minX;\n\t                maxX = x + w > maxX ? x + w : maxX;\n\n\t                minY = y - h < minY ? y - h : minY;\n\t                maxY = y + h > maxY ? y + h : maxY;\n\t            }\n\t            else\n\t            {\n\t                // POLY\n\t                points = shape.points;\n\t                \n\t                for (var j = 0; j < points.length; j+=2)\n\t                {\n\n\t                    x = points[j];\n\t                    y = points[j+1];\n\t                    minX = x-lineWidth < minX ? x-lineWidth : minX;\n\t                    maxX = x+lineWidth > maxX ? x+lineWidth : maxX;\n\n\t                    minY = y-lineWidth < minY ? y-lineWidth : minY;\n\t                    maxY = y+lineWidth > maxY ? y+lineWidth : maxY;\n\t                }\n\t            }\n\t        }\n\t    }\n\t    else\n\t    {\n\t        minX = 0;\n\t        maxX = 0;\n\t        minY = 0;\n\t        maxY = 0;\n\t    }\n\n\t    var padding = this.boundsPadding;\n\t    \n\t    this._localBounds.x = minX - padding;\n\t    this._localBounds.width = (maxX - minX) + padding * 2;\n\n\t    this._localBounds.y = minY - padding;\n\t    this._localBounds.height = (maxY - minY) + padding * 2;\n\t};\n\n\t/**\n\t * Generates the cached sprite when the sprite has cacheAsBitmap = true\n\t *\n\t * @method _generateCachedSprite\n\t * @private\n\t */\n\tPIXI.Graphics.prototype._generateCachedSprite = function()\n\t{\n\t    var bounds = this.getLocalBounds();\n\n\t    if(!this._cachedSprite)\n\t    {\n\t        var canvasBuffer = new PIXI.CanvasBuffer(bounds.width, bounds.height);\n\t        var texture = PIXI.Texture.fromCanvas(canvasBuffer.canvas);\n\t        \n\t        this._cachedSprite = new PIXI.Sprite(texture);\n\t        this._cachedSprite.buffer = canvasBuffer;\n\n\t        this._cachedSprite.worldTransform = this.worldTransform;\n\t    }\n\t    else\n\t    {\n\t        this._cachedSprite.buffer.resize(bounds.width, bounds.height);\n\t    }\n\n\t    // leverage the anchor to account for the offset of the element\n\t    this._cachedSprite.anchor.x = -( bounds.x / bounds.width );\n\t    this._cachedSprite.anchor.y = -( bounds.y / bounds.height );\n\n\t   // this._cachedSprite.buffer.context.save();\n\t    this._cachedSprite.buffer.context.translate(-bounds.x,-bounds.y);\n\t    \n\t    // make sure we set the alpha of the graphics to 1 for the render.. \n\t    this.worldAlpha = 1;\n\n\t    // now render the graphic..\n\t    PIXI.CanvasGraphics.renderGraphics(this, this._cachedSprite.buffer.context);\n\t    this._cachedSprite.alpha = this.alpha;\n\t};\n\n\t/**\n\t * Updates texture size based on canvas size\n\t *\n\t * @method updateCachedSpriteTexture\n\t * @private\n\t */\n\tPIXI.Graphics.prototype.updateCachedSpriteTexture = function()\n\t{\n\t    var cachedSprite = this._cachedSprite;\n\t    var texture = cachedSprite.texture;\n\t    var canvas = cachedSprite.buffer.canvas;\n\n\t    texture.baseTexture.width = canvas.width;\n\t    texture.baseTexture.height = canvas.height;\n\t    texture.crop.width = texture.frame.width = canvas.width;\n\t    texture.crop.height = texture.frame.height = canvas.height;\n\n\t    cachedSprite._width = canvas.width;\n\t    cachedSprite._height = canvas.height;\n\n\t    // update the dirty base textures\n\t    texture.baseTexture.dirty();\n\t};\n\n\t/**\n\t * Destroys a previous cached sprite.\n\t *\n\t * @method destroyCachedSprite\n\t */\n\tPIXI.Graphics.prototype.destroyCachedSprite = function()\n\t{\n\t    this._cachedSprite.texture.destroy(true);\n\n\t    // let the gc collect the unused sprite\n\t    // TODO could be object pooled!\n\t    this._cachedSprite = null;\n\t};\n\n\t/**\n\t * Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.\n\t *\n\t * @method drawShape\n\t * @param {Circle|Rectangle|Ellipse|Line|Polygon} shape The Shape object to draw.\n\t * @return {GraphicsData} The generated GraphicsData object.\n\t */\n\tPIXI.Graphics.prototype.drawShape = function(shape)\n\t{\n\t    if(this.currentPath)\n\t    {\n\t        // check current path!\n\t        if(this.currentPath.shape.points.length <= 2)this.graphicsData.pop();\n\t    }\n\n\t    this.currentPath = null;\n\n\t    var data = new PIXI.GraphicsData(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.filling, shape);\n\t    \n\t    this.graphicsData.push(data);\n\t    \n\t    if(data.type === PIXI.Graphics.POLY)\n\t    {\n\t        data.shape.closed = this.filling;\n\t        this.currentPath = data;\n\t    }\n\n\t    this.dirty = true;\n\n\t    return data;\n\t};\n\n\t/**\n\t * A GraphicsData object.\n\t * \n\t * @class GraphicsData\n\t * @constructor\n\t */\n\tPIXI.GraphicsData = function(lineWidth, lineColor, lineAlpha, fillColor, fillAlpha, fill, shape)\n\t{\n\t    this.lineWidth = lineWidth;\n\t    this.lineColor = lineColor;\n\t    this.lineAlpha = lineAlpha;\n\t    this._lineTint = lineColor;\n\n\t    this.fillColor = fillColor;\n\t    this.fillAlpha = fillAlpha;\n\t    this._fillTint = fillColor;\n\t    this.fill = fill;\n\n\t    this.shape = shape;\n\t    this.type = shape.type;\n\t};\n\n\t// SOME TYPES:\n\tPIXI.Graphics.POLY = 0;\n\tPIXI.Graphics.RECT = 1;\n\tPIXI.Graphics.CIRC = 2;\n\tPIXI.Graphics.ELIP = 3;\n\tPIXI.Graphics.RREC = 4;\n\n\tPIXI.Polygon.prototype.type = PIXI.Graphics.POLY;\n\tPIXI.Rectangle.prototype.type = PIXI.Graphics.RECT;\n\tPIXI.Circle.prototype.type = PIXI.Graphics.CIRC;\n\tPIXI.Ellipse.prototype.type = PIXI.Graphics.ELIP;\n\tPIXI.RoundedRectangle.prototype.type = PIXI.Graphics.RREC;\n\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/\n\t */\n\n\t /**\n\t *\n\t * @class Strip\n\t * @extends DisplayObjectContainer\n\t * @constructor\n\t * @param texture {Texture} The texture to use\n\t * @param width {Number} the width\n\t * @param height {Number} the height\n\t *\n\t */\n\tPIXI.Strip = function(texture)\n\t{\n\t    PIXI.DisplayObjectContainer.call( this );\n\n\n\t    /**\n\t     * The texture of the strip\n\t     *\n\t     * @property texture\n\t     * @type Texture\n\t     */\n\t    this.texture = texture;\n\n\t    // set up the main bits..\n\t    this.uvs = new PIXI.Float32Array([0, 1,\n\t                                      1, 1,\n\t                                      1, 0,\n\t                                      0, 1]);\n\n\t    this.vertices = new PIXI.Float32Array([0, 0,\n\t                                            100, 0,\n\t                                            100, 100,\n\t                                            0, 100]);\n\n\t    this.colors = new PIXI.Float32Array([1, 1, 1, 1]);\n\n\t    this.indices = new PIXI.Uint16Array([0, 1, 2, 3]);\n\n\t    /**\n\t     * Whether the strip is dirty or not\n\t     *\n\t     * @property dirty\n\t     * @type Boolean\n\t     */\n\t    this.dirty = true;\n\n\t    /**\n\t     * The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.\n\t     *\n\t     * @property blendMode\n\t     * @type Number\n\t     * @default PIXI.blendModes.NORMAL;\n\t     */\n\t    this.blendMode = PIXI.blendModes.NORMAL;\n\n\t    /**\n\t     * Triangles in canvas mode are automatically antialiased, use this value to force triangles to overlap a bit with each other.\n\t     *\n\t     * @property canvasPadding\n\t     * @type Number\n\t     */\n\t    this.canvasPadding = 0;\n\n\t    this.drawMode = PIXI.Strip.DrawModes.TRIANGLE_STRIP;\n\n\t};\n\n\t// constructor\n\tPIXI.Strip.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);\n\tPIXI.Strip.prototype.constructor = PIXI.Strip;\n\n\tPIXI.Strip.prototype._renderWebGL = function(renderSession)\n\t{\n\t    // if the sprite is not visible or the alpha is 0 then no need to render this element\n\t    if(!this.visible || this.alpha <= 0)return;\n\t    // render triangle strip..\n\n\t    renderSession.spriteBatch.stop();\n\n\t    // init! init!\n\t    if(!this._vertexBuffer)this._initWebGL(renderSession);\n\n\t    renderSession.shaderManager.setShader(renderSession.shaderManager.stripShader);\n\n\t    this._renderStrip(renderSession);\n\n\t    ///renderSession.shaderManager.activateDefaultShader();\n\n\t    renderSession.spriteBatch.start();\n\n\t    //TODO check culling\n\t};\n\n\tPIXI.Strip.prototype._initWebGL = function(renderSession)\n\t{\n\t    // build the strip!\n\t    var gl = renderSession.gl;\n\n\t    this._vertexBuffer = gl.createBuffer();\n\t    this._indexBuffer = gl.createBuffer();\n\t    this._uvBuffer = gl.createBuffer();\n\t    this._colorBuffer = gl.createBuffer();\n\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n\t    gl.bufferData(gl.ARRAY_BUFFER, this.vertices, gl.DYNAMIC_DRAW);\n\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);\n\t    gl.bufferData(gl.ARRAY_BUFFER,  this.uvs, gl.STATIC_DRAW);\n\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, this._colorBuffer);\n\t    gl.bufferData(gl.ARRAY_BUFFER, this.colors, gl.STATIC_DRAW);\n\n\t    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\n\t    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);\n\t};\n\n\tPIXI.Strip.prototype._renderStrip = function(renderSession)\n\t{\n\t    var gl = renderSession.gl;\n\t    var projection = renderSession.projection,\n\t        offset = renderSession.offset,\n\t        shader = renderSession.shaderManager.stripShader;\n\n\t    var drawMode = this.drawMode === PIXI.Strip.DrawModes.TRIANGLE_STRIP ? gl.TRIANGLE_STRIP : gl.TRIANGLES;\n\n\t    // gl.uniformMatrix4fv(shaderProgram.mvMatrixUniform, false, mat4Real);\n\n\t    renderSession.blendModeManager.setBlendMode(this.blendMode);\n\n\n\t    // set uniforms\n\t    gl.uniformMatrix3fv(shader.translationMatrix, false, this.worldTransform.toArray(true));\n\t    gl.uniform2f(shader.projectionVector, projection.x, -projection.y);\n\t    gl.uniform2f(shader.offsetVector, -offset.x, -offset.y);\n\t    gl.uniform1f(shader.alpha, this.worldAlpha);\n\n\t    if(!this.dirty)\n\t    {\n\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n\t        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertices);\n\t        gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\n\n\t        // update the uvs\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);\n\t        gl.vertexAttribPointer(shader.aTextureCoord, 2, gl.FLOAT, false, 0, 0);\n\n\t        gl.activeTexture(gl.TEXTURE0);\n\n\t        // check if a texture is dirty..\n\t        if(this.texture.baseTexture._dirty[gl.id])\n\t        {\n\t            renderSession.renderer.updateTexture(this.texture.baseTexture);\n\t        }\n\t        else\n\t        {\n\t            // bind the current texture\n\t            gl.bindTexture(gl.TEXTURE_2D, this.texture.baseTexture._glTextures[gl.id]);\n\t        }\n\n\t        // dont need to upload!\n\t        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\n\n\n\t    }\n\t    else\n\t    {\n\n\t        this.dirty = false;\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n\t        gl.bufferData(gl.ARRAY_BUFFER, this.vertices, gl.STATIC_DRAW);\n\t        gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\n\n\t        // update the uvs\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);\n\t        gl.bufferData(gl.ARRAY_BUFFER, this.uvs, gl.STATIC_DRAW);\n\t        gl.vertexAttribPointer(shader.aTextureCoord, 2, gl.FLOAT, false, 0, 0);\n\n\t        gl.activeTexture(gl.TEXTURE0);\n\n\t        // check if a texture is dirty..\n\t        if(this.texture.baseTexture._dirty[gl.id])\n\t        {\n\t            renderSession.renderer.updateTexture(this.texture.baseTexture);\n\t        }\n\t        else\n\t        {\n\t            gl.bindTexture(gl.TEXTURE_2D, this.texture.baseTexture._glTextures[gl.id]);\n\t        }\n\n\t        // dont need to upload!\n\t        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\n\t        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);\n\n\t    }\n\t    //console.log(gl.TRIANGLE_STRIP)\n\t    //\n\t    //\n\t    gl.drawElements(drawMode, this.indices.length, gl.UNSIGNED_SHORT, 0);\n\n\n\t};\n\n\n\n\tPIXI.Strip.prototype._renderCanvas = function(renderSession)\n\t{\n\t    var context = renderSession.context;\n\n\t    var transform = this.worldTransform;\n\n\t    if (renderSession.roundPixels)\n\t    {\n\t        context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx | 0, transform.ty | 0);\n\t    }\n\t    else\n\t    {\n\t        context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n\t    }\n\n\t    if (this.drawMode === PIXI.Strip.DrawModes.TRIANGLE_STRIP)\n\t    {\n\t        this._renderCanvasTriangleStrip(context);\n\t    }\n\t    else\n\t    {\n\t        this._renderCanvasTriangles(context);\n\t    }\n\t};\n\n\tPIXI.Strip.prototype._renderCanvasTriangleStrip = function(context)\n\t{\n\t    // draw triangles!!\n\t    var vertices = this.vertices;\n\t    var uvs = this.uvs;\n\n\t    var length = vertices.length / 2;\n\t    this.count++;\n\n\t    for (var i = 0; i < length - 2; i++) {\n\t        // draw some triangles!\n\t        var index = i * 2;\n\t        this._renderCanvasDrawTriangle(context, vertices, uvs, index, (index + 2), (index + 4));\n\t    }\n\t};\n\n\tPIXI.Strip.prototype._renderCanvasTriangles = function(context)\n\t{\n\t    // draw triangles!!\n\t    var vertices = this.vertices;\n\t    var uvs = this.uvs;\n\t    var indices = this.indices;\n\n\t    var length = indices.length;\n\t    this.count++;\n\n\t    for (var i = 0; i < length; i += 3) {\n\t        // draw some triangles!\n\t        var index0 = indices[i] * 2, index1 = indices[i + 1] * 2, index2 = indices[i + 2] * 2;\n\t        this._renderCanvasDrawTriangle(context, vertices, uvs, index0, index1, index2);\n\t    }\n\t};\n\n\tPIXI.Strip.prototype._renderCanvasDrawTriangle = function(context, vertices, uvs, index0, index1, index2)\n\t{\n\t    var textureSource = this.texture.baseTexture.source;\n\t    var textureWidth = this.texture.width;\n\t    var textureHeight = this.texture.height;\n\n\t    var x0 = vertices[index0], x1 = vertices[index1], x2 = vertices[index2];\n\t    var y0 = vertices[index0 + 1], y1 = vertices[index1 + 1], y2 = vertices[index2 + 1];\n\n\t    var u0 = uvs[index0] * textureWidth, u1 = uvs[index1] * textureWidth, u2 = uvs[index2] * textureWidth;\n\t    var v0 = uvs[index0 + 1] * textureHeight, v1 = uvs[index1 + 1] * textureHeight, v2 = uvs[index2 + 1] * textureHeight;\n\n\t    if (this.canvasPadding > 0) {\n\t        var paddingX = this.canvasPadding / this.worldTransform.a;\n\t        var paddingY = this.canvasPadding / this.worldTransform.d;\n\t        var centerX = (x0 + x1 + x2) / 3;\n\t        var centerY = (y0 + y1 + y2) / 3;\n\n\t        var normX = x0 - centerX;\n\t        var normY = y0 - centerY;\n\n\t        var dist = Math.sqrt(normX * normX + normY * normY);\n\t        x0 = centerX + (normX / dist) * (dist + paddingX);\n\t        y0 = centerY + (normY / dist) * (dist + paddingY);\n\n\t        //\n\n\t        normX = x1 - centerX;\n\t        normY = y1 - centerY;\n\n\t        dist = Math.sqrt(normX * normX + normY * normY);\n\t        x1 = centerX + (normX / dist) * (dist + paddingX);\n\t        y1 = centerY + (normY / dist) * (dist + paddingY);\n\n\t        normX = x2 - centerX;\n\t        normY = y2 - centerY;\n\n\t        dist = Math.sqrt(normX * normX + normY * normY);\n\t        x2 = centerX + (normX / dist) * (dist + paddingX);\n\t        y2 = centerY + (normY / dist) * (dist + paddingY);\n\t    }\n\n\t    context.save();\n\t    context.beginPath();\n\n\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\n\t    context.closePath();\n\n\t    context.clip();\n\n\t    // Compute matrix transform\n\t    var delta =  (u0 * v1)      + (v0 * u2)      + (u1 * v2)      - (v1 * u2)      - (v0 * u1)      - (u0 * v2);\n\t    var deltaA = (x0 * v1)      + (v0 * x2)      + (x1 * v2)      - (v1 * x2)      - (v0 * x1)      - (x0 * v2);\n\t    var deltaB = (u0 * x1)      + (x0 * u2)      + (u1 * x2)      - (x1 * u2)      - (x0 * u1)      - (u0 * x2);\n\t    var deltaC = (u0 * v1 * x2) + (v0 * x1 * u2) + (x0 * u1 * v2) - (x0 * v1 * u2) - (v0 * u1 * x2) - (u0 * x1 * v2);\n\t    var deltaD = (y0 * v1)      + (v0 * y2)      + (y1 * v2)      - (v1 * y2)      - (v0 * y1)      - (y0 * v2);\n\t    var deltaE = (u0 * y1)      + (y0 * u2)      + (u1 * y2)      - (y1 * u2)      - (y0 * u1)      - (u0 * y2);\n\t    var deltaF = (u0 * v1 * y2) + (v0 * y1 * u2) + (y0 * u1 * v2) - (y0 * v1 * u2) - (v0 * u1 * y2) - (u0 * y1 * v2);\n\n\t    context.transform(deltaA / delta, deltaD / delta,\n\t        deltaB / delta, deltaE / delta,\n\t        deltaC / delta, deltaF / delta);\n\n\t    context.drawImage(textureSource, 0, 0);\n\t    context.restore();\n\t};\n\n\n\n\t/**\n\t * Renders a flat strip\n\t *\n\t * @method renderStripFlat\n\t * @param strip {Strip} The Strip to render\n\t * @private\n\t */\n\tPIXI.Strip.prototype.renderStripFlat = function(strip)\n\t{\n\t    var context = this.context;\n\t    var vertices = strip.vertices;\n\n\t    var length = vertices.length/2;\n\t    this.count++;\n\n\t    context.beginPath();\n\t    for (var i=1; i < length-2; i++)\n\t    {\n\t        // draw some triangles!\n\t        var index = i*2;\n\n\t        var x0 = vertices[index],   x1 = vertices[index+2], x2 = vertices[index+4];\n\t        var y0 = vertices[index+1], y1 = vertices[index+3], y2 = vertices[index+5];\n\n\t        context.moveTo(x0, y0);\n\t        context.lineTo(x1, y1);\n\t        context.lineTo(x2, y2);\n\t    }\n\n\t    context.fillStyle = '#FF0000';\n\t    context.fill();\n\t    context.closePath();\n\t};\n\n\t/*\n\tPIXI.Strip.prototype.setTexture = function(texture)\n\t{\n\t    //TODO SET THE TEXTURES\n\t    //TODO VISIBILITY\n\n\t    // stop current texture\n\t    this.texture = texture;\n\t    this.width   = texture.frame.width;\n\t    this.height  = texture.frame.height;\n\t    this.updateFrame = true;\n\t};\n\t*/\n\n\t/**\n\t * When the texture is updated, this event will fire to update the scale and frame\n\t *\n\t * @method onTextureUpdate\n\t * @param event\n\t * @private\n\t */\n\n\tPIXI.Strip.prototype.onTextureUpdate = function()\n\t{\n\t    this.updateFrame = true;\n\t};\n\n\t/**\n\t * Returns the bounds of the mesh as a rectangle. The bounds calculation takes the worldTransform into account.\n\t *\n\t * @method getBounds\n\t * @param matrix {Matrix} the transformation matrix of the sprite\n\t * @return {Rectangle} the framing rectangle\n\t */\n\tPIXI.Strip.prototype.getBounds = function(matrix)\n\t{\n\t    var worldTransform = matrix || this.worldTransform;\n\n\t    var a = worldTransform.a;\n\t    var b = worldTransform.b;\n\t    var c = worldTransform.c;\n\t    var d = worldTransform.d;\n\t    var tx = worldTransform.tx;\n\t    var ty = worldTransform.ty;\n\n\t    var maxX = -Infinity;\n\t    var maxY = -Infinity;\n\n\t    var minX = Infinity;\n\t    var minY = Infinity;\n\n\t    var vertices = this.vertices;\n\t    for (var i = 0, n = vertices.length; i < n; i += 2)\n\t    {\n\t        var rawX = vertices[i], rawY = vertices[i + 1];\n\t        var x = (a * rawX) + (c * rawY) + tx;\n\t        var y = (d * rawY) + (b * rawX) + ty;\n\n\t        minX = x < minX ? x : minX;\n\t        minY = y < minY ? y : minY;\n\n\t        maxX = x > maxX ? x : maxX;\n\t        maxY = y > maxY ? y : maxY;\n\t    }\n\n\t    if (minX === -Infinity || maxY === Infinity)\n\t    {\n\t        return PIXI.EmptyRectangle;\n\t    }\n\n\t    var bounds = this._bounds;\n\n\t    bounds.x = minX;\n\t    bounds.width = maxX - minX;\n\n\t    bounds.y = minY;\n\t    bounds.height = maxY - minY;\n\n\t    // store a reference so that if this function gets called again in the render cycle we do not have to recalculate\n\t    this._currentBounds = bounds;\n\n\t    return bounds;\n\t};\n\n\t/**\n\t * Different drawing buffer modes supported\n\t *\n\t * @property\n\t * @type {{TRIANGLE_STRIP: number, TRIANGLES: number}}\n\t * @static\n\t */\n\tPIXI.Strip.DrawModes = {\n\t    TRIANGLE_STRIP: 0,\n\t    TRIANGLES: 1\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t * @copyright Mat Groves, Rovanion Luckey\n\t */\n\n\t/**\n\t *\n\t * @class Rope\n\t * @constructor\n\t * @extends Strip\n\t * @param {Texture} texture - The texture to use on the rope.\n\t * @param {Array} points - An array of {PIXI.Point}.\n\t *\n\t */\n\tPIXI.Rope = function(texture, points)\n\t{\n\t    PIXI.Strip.call( this, texture );\n\t    this.points = points;\n\n\t    this.vertices = new PIXI.Float32Array(points.length * 4);\n\t    this.uvs = new PIXI.Float32Array(points.length * 4);\n\t    this.colors = new PIXI.Float32Array(points.length * 2);\n\t    this.indices = new PIXI.Uint16Array(points.length * 2);\n\n\n\t    this.refresh();\n\t};\n\n\n\t// constructor\n\tPIXI.Rope.prototype = Object.create( PIXI.Strip.prototype );\n\tPIXI.Rope.prototype.constructor = PIXI.Rope;\n\n\t/*\n\t * Refreshes\n\t *\n\t * @method refresh\n\t */\n\tPIXI.Rope.prototype.refresh = function()\n\t{\n\t    var points = this.points;\n\t    if(points.length < 1) return;\n\n\t    var uvs = this.uvs;\n\n\t    var lastPoint = points[0];\n\t    var indices = this.indices;\n\t    var colors = this.colors;\n\n\t    this.count-=0.2;\n\n\t    uvs[0] = 0;\n\t    uvs[1] = 0;\n\t    uvs[2] = 0;\n\t    uvs[3] = 1;\n\n\t    colors[0] = 1;\n\t    colors[1] = 1;\n\n\t    indices[0] = 0;\n\t    indices[1] = 1;\n\n\t    var total = points.length,\n\t        point, index, amount;\n\n\t    for (var i = 1; i < total; i++)\n\t    {\n\t        point = points[i];\n\t        index = i * 4;\n\t        // time to do some smart drawing!\n\t        amount = i / (total-1);\n\n\t        if(i%2)\n\t        {\n\t            uvs[index] = amount;\n\t            uvs[index+1] = 0;\n\n\t            uvs[index+2] = amount;\n\t            uvs[index+3] = 1;\n\t        }\n\t        else\n\t        {\n\t            uvs[index] = amount;\n\t            uvs[index+1] = 0;\n\n\t            uvs[index+2] = amount;\n\t            uvs[index+3] = 1;\n\t        }\n\n\t        index = i * 2;\n\t        colors[index] = 1;\n\t        colors[index+1] = 1;\n\n\t        index = i * 2;\n\t        indices[index] = index;\n\t        indices[index + 1] = index + 1;\n\n\t        lastPoint = point;\n\t    }\n\t};\n\n\t/*\n\t * Updates the object transform for rendering\n\t *\n\t * @method updateTransform\n\t * @private\n\t */\n\tPIXI.Rope.prototype.updateTransform = function()\n\t{\n\n\t    var points = this.points;\n\t    if(points.length < 1)return;\n\n\t    var lastPoint = points[0];\n\t    var nextPoint;\n\t    var perp = {x:0, y:0};\n\n\t    this.count-=0.2;\n\n\t    var vertices = this.vertices;\n\t    var total = points.length,\n\t        point, index, ratio, perpLength, num;\n\n\t    for (var i = 0; i < total; i++)\n\t    {\n\t        point = points[i];\n\t        index = i * 4;\n\n\t        if(i < points.length-1)\n\t        {\n\t            nextPoint = points[i+1];\n\t        }\n\t        else\n\t        {\n\t            nextPoint = point;\n\t        }\n\n\t        perp.y = -(nextPoint.x - lastPoint.x);\n\t        perp.x = nextPoint.y - lastPoint.y;\n\n\t        ratio = (1 - (i / (total-1))) * 10;\n\n\t        if(ratio > 1) ratio = 1;\n\n\t        perpLength = Math.sqrt(perp.x * perp.x + perp.y * perp.y);\n\t        num = this.texture.height / 2; //(20 + Math.abs(Math.sin((i + this.count) * 0.3) * 50) )* ratio;\n\t        perp.x /= perpLength;\n\t        perp.y /= perpLength;\n\n\t        perp.x *= num;\n\t        perp.y *= num;\n\n\t        vertices[index] = point.x + perp.x;\n\t        vertices[index+1] = point.y + perp.y;\n\t        vertices[index+2] = point.x - perp.x;\n\t        vertices[index+3] = point.y - perp.y;\n\n\t        lastPoint = point;\n\t    }\n\n\t    PIXI.DisplayObjectContainer.prototype.updateTransform.call( this );\n\t};\n\t/*\n\t * Sets the texture that the Rope will use\n\t *\n\t * @method setTexture\n\t * @param texture {Texture} the texture that will be used\n\t */\n\tPIXI.Rope.prototype.setTexture = function(texture)\n\t{\n\t    // stop current texture\n\t    this.texture = texture;\n\t    //this.updateFrame = true;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/\n\t */\n\n\t/**\n\t * A tiling sprite is a fast way of rendering a tiling image\n\t *\n\t * @class TilingSprite\n\t * @extends Sprite\n\t * @constructor\n\t * @param texture {Texture} the texture of the tiling sprite\n\t * @param width {Number}  the width of the tiling sprite\n\t * @param height {Number} the height of the tiling sprite\n\t */\n\tPIXI.TilingSprite = function(texture, width, height)\n\t{\n\t    PIXI.Sprite.call( this, texture);\n\n\t    /**\n\t     * The with of the tiling sprite\n\t     *\n\t     * @property width\n\t     * @type Number\n\t     */\n\t    this._width = width || 100;\n\n\t    /**\n\t     * The height of the tiling sprite\n\t     *\n\t     * @property height\n\t     * @type Number\n\t     */\n\t    this._height = height || 100;\n\n\t    /**\n\t     * The scaling of the image that is being tiled\n\t     *\n\t     * @property tileScale\n\t     * @type Point\n\t     */\n\t    this.tileScale = new PIXI.Point(1,1);\n\n\t    /**\n\t     * A point that represents the scale of the texture object\n\t     *\n\t     * @property tileScaleOffset\n\t     * @type Point\n\t     */\n\t    this.tileScaleOffset = new PIXI.Point(1,1);\n\n\t    /**\n\t     * The offset position of the image that is being tiled\n\t     *\n\t     * @property tilePosition\n\t     * @type Point\n\t     */\n\t    this.tilePosition = new PIXI.Point(0,0);\n\n\t    /**\n\t     * Whether this sprite is renderable or not\n\t     *\n\t     * @property renderable\n\t     * @type Boolean\n\t     * @default true\n\t     */\n\t    this.renderable = true;\n\n\t    /**\n\t     * The tint applied to the sprite. This is a hex value\n\t     *\n\t     * @property tint\n\t     * @type Number\n\t     * @default 0xFFFFFF\n\t     */\n\t    this.tint = 0xFFFFFF;\n\n\t    /**\n\t     * The blend mode to be applied to the sprite\n\t     *\n\t     * @property blendMode\n\t     * @type Number\n\t     * @default PIXI.blendModes.NORMAL;\n\t     */\n\t    this.blendMode = PIXI.blendModes.NORMAL;\n\n\n\n\t};\n\n\t// constructor\n\tPIXI.TilingSprite.prototype = Object.create(PIXI.Sprite.prototype);\n\tPIXI.TilingSprite.prototype.constructor = PIXI.TilingSprite;\n\n\n\t/**\n\t * The width of the sprite, setting this will actually modify the scale to achieve the value set\n\t *\n\t * @property width\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.TilingSprite.prototype, 'width', {\n\t    get: function() {\n\t        return this._width;\n\t    },\n\t    set: function(value) {\n\n\t        this._width = value;\n\t    }\n\t});\n\n\t/**\n\t * The height of the TilingSprite, setting this will actually modify the scale to achieve the value set\n\t *\n\t * @property height\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.TilingSprite.prototype, 'height', {\n\t    get: function() {\n\t        return  this._height;\n\t    },\n\t    set: function(value) {\n\t        this._height = value;\n\t    }\n\t});\n\n\tPIXI.TilingSprite.prototype.setTexture = function(texture)\n\t{\n\t    if (this.texture === texture) return;\n\n\t    this.texture = texture;\n\n\t    this.refreshTexture = true;\n\n\t    this.cachedTint = 0xFFFFFF;\n\t};\n\n\t/**\n\t* Renders the object using the WebGL renderer\n\t*\n\t* @method _renderWebGL\n\t* @param renderSession {RenderSession}\n\t* @private\n\t*/\n\tPIXI.TilingSprite.prototype._renderWebGL = function(renderSession)\n\t{\n\t    if (this.visible === false || this.alpha === 0) return;\n\t    var i,j;\n\n\t    if (this._mask)\n\t    {\n\t        renderSession.spriteBatch.stop();\n\t        renderSession.maskManager.pushMask(this.mask, renderSession);\n\t        renderSession.spriteBatch.start();\n\t    }\n\n\t    if (this._filters)\n\t    {\n\t        renderSession.spriteBatch.flush();\n\t        renderSession.filterManager.pushFilter(this._filterBlock);\n\t    }\n\n\n\n\t    if (!this.tilingTexture || this.refreshTexture)\n\t    {\n\t        this.generateTilingTexture(true);\n\n\t        if (this.tilingTexture && this.tilingTexture.needsUpdate)\n\t        {\n\t            //TODO - tweaking\n\t            renderSession.renderer.updateTexture(this.tilingTexture.baseTexture);\n\t            this.tilingTexture.needsUpdate = false;\n\t           // this.tilingTexture._uvs = null;\n\t        }\n\t    }\n\t    else\n\t    {\n\t        renderSession.spriteBatch.renderTilingSprite(this);\n\t    }\n\t    // simple render children!\n\t    for (i=0,j=this.children.length; i<j; i++)\n\t    {\n\t        this.children[i]._renderWebGL(renderSession);\n\t    }\n\n\t    renderSession.spriteBatch.stop();\n\n\t    if (this._filters) renderSession.filterManager.popFilter();\n\t    if (this._mask) renderSession.maskManager.popMask(this._mask, renderSession);\n\n\t    renderSession.spriteBatch.start();\n\t};\n\n\t/**\n\t* Renders the object using the Canvas renderer\n\t*\n\t* @method _renderCanvas\n\t* @param renderSession {RenderSession}\n\t* @private\n\t*/\n\tPIXI.TilingSprite.prototype._renderCanvas = function(renderSession)\n\t{\n\t    if (this.visible === false || this.alpha === 0)return;\n\n\t    var context = renderSession.context;\n\n\t    if (this._mask)\n\t    {\n\t        renderSession.maskManager.pushMask(this._mask, renderSession);\n\t    }\n\n\t    context.globalAlpha = this.worldAlpha;\n\n\t    var transform = this.worldTransform;\n\n\t    var i,j;\n\n\t    var resolution = renderSession.resolution;\n\n\t    context.setTransform(transform.a * resolution,\n\t                         transform.b * resolution,\n\t                         transform.c * resolution,\n\t                         transform.d * resolution,\n\t                         transform.tx * resolution,\n\t                         transform.ty * resolution);\n\n\t    if (!this.__tilePattern ||  this.refreshTexture)\n\t    {\n\t        this.generateTilingTexture(false);\n\n\t        if (this.tilingTexture)\n\t        {\n\t            this.__tilePattern = context.createPattern(this.tilingTexture.baseTexture.source, 'repeat');\n\t        }\n\t        else\n\t        {\n\t            return;\n\t        }\n\t    }\n\n\t    // check blend mode\n\t    if (this.blendMode !== renderSession.currentBlendMode)\n\t    {\n\t        renderSession.currentBlendMode = this.blendMode;\n\t        context.globalCompositeOperation = PIXI.blendModesCanvas[renderSession.currentBlendMode];\n\t    }\n\n\t    var tilePosition = this.tilePosition;\n\t    var tileScale = this.tileScale;\n\n\t    tilePosition.x %= this.tilingTexture.baseTexture.width;\n\t    tilePosition.y %= this.tilingTexture.baseTexture.height;\n\n\t    // offset - make sure to account for the anchor point..\n\t    context.scale(tileScale.x,tileScale.y);\n\t    context.translate(tilePosition.x + (this.anchor.x * -this._width), tilePosition.y + (this.anchor.y * -this._height));\n\n\t    context.fillStyle = this.__tilePattern;\n\n\t    context.fillRect(-tilePosition.x,\n\t                    -tilePosition.y,\n\t                    this._width / tileScale.x,\n\t                    this._height / tileScale.y);\n\n\t    context.scale(1 / tileScale.x, 1 / tileScale.y);\n\t    context.translate(-tilePosition.x + (this.anchor.x * this._width), -tilePosition.y + (this.anchor.y * this._height));\n\n\t    if (this._mask)\n\t    {\n\t        renderSession.maskManager.popMask(renderSession);\n\t    }\n\n\t    for (i=0,j=this.children.length; i<j; i++)\n\t    {\n\t        this.children[i]._renderCanvas(renderSession);\n\t    }\n\t};\n\n\n\t/**\n\t* Returns the framing rectangle of the sprite as a PIXI.Rectangle object\n\t*\n\t* @method getBounds\n\t* @return {Rectangle} the framing rectangle\n\t*/\n\tPIXI.TilingSprite.prototype.getBounds = function()\n\t{\n\t    var width = this._width;\n\t    var height = this._height;\n\n\t    var w0 = width * (1-this.anchor.x);\n\t    var w1 = width * -this.anchor.x;\n\n\t    var h0 = height * (1-this.anchor.y);\n\t    var h1 = height * -this.anchor.y;\n\n\t    var worldTransform = this.worldTransform;\n\n\t    var a = worldTransform.a;\n\t    var b = worldTransform.b;\n\t    var c = worldTransform.c;\n\t    var d = worldTransform.d;\n\t    var tx = worldTransform.tx;\n\t    var ty = worldTransform.ty;\n\n\t    var x1 = a * w1 + c * h1 + tx;\n\t    var y1 = d * h1 + b * w1 + ty;\n\n\t    var x2 = a * w0 + c * h1 + tx;\n\t    var y2 = d * h1 + b * w0 + ty;\n\n\t    var x3 = a * w0 + c * h0 + tx;\n\t    var y3 = d * h0 + b * w0 + ty;\n\n\t    var x4 =  a * w1 + c * h0 + tx;\n\t    var y4 =  d * h0 + b * w1 + ty;\n\n\t    var maxX = -Infinity;\n\t    var maxY = -Infinity;\n\n\t    var minX = Infinity;\n\t    var minY = Infinity;\n\n\t    minX = x1 < minX ? x1 : minX;\n\t    minX = x2 < minX ? x2 : minX;\n\t    minX = x3 < minX ? x3 : minX;\n\t    minX = x4 < minX ? x4 : minX;\n\n\t    minY = y1 < minY ? y1 : minY;\n\t    minY = y2 < minY ? y2 : minY;\n\t    minY = y3 < minY ? y3 : minY;\n\t    minY = y4 < minY ? y4 : minY;\n\n\t    maxX = x1 > maxX ? x1 : maxX;\n\t    maxX = x2 > maxX ? x2 : maxX;\n\t    maxX = x3 > maxX ? x3 : maxX;\n\t    maxX = x4 > maxX ? x4 : maxX;\n\n\t    maxY = y1 > maxY ? y1 : maxY;\n\t    maxY = y2 > maxY ? y2 : maxY;\n\t    maxY = y3 > maxY ? y3 : maxY;\n\t    maxY = y4 > maxY ? y4 : maxY;\n\n\t    var bounds = this._bounds;\n\n\t    bounds.x = minX;\n\t    bounds.width = maxX - minX;\n\n\t    bounds.y = minY;\n\t    bounds.height = maxY - minY;\n\n\t    // store a reference so that if this function gets called again in the render cycle we do not have to recalculate\n\t    this._currentBounds = bounds;\n\n\t    return bounds;\n\t};\n\n\n\n\t/**\n\t * When the texture is updated, this event will fire to update the scale and frame\n\t *\n\t * @method onTextureUpdate\n\t * @param event\n\t * @private\n\t */\n\tPIXI.TilingSprite.prototype.onTextureUpdate = function()\n\t{\n\t   // overriding the sprite version of this!\n\t};\n\n\n\t/**\n\t*\n\t* @method generateTilingTexture\n\t*\n\t* @param forcePowerOfTwo {Boolean} Whether we want to force the texture to be a power of two\n\t*/\n\tPIXI.TilingSprite.prototype.generateTilingTexture = function(forcePowerOfTwo)\n\t{\n\t    if (!this.texture.baseTexture.hasLoaded) return;\n\n\t    var texture = this.originalTexture || this.texture;\n\t    var frame = texture.frame;\n\t    var targetWidth, targetHeight;\n\n\t    //  Check that the frame is the same size as the base texture.\n\t    var isFrame = frame.width !== texture.baseTexture.width || frame.height !== texture.baseTexture.height;\n\n\t    var newTextureRequired = false;\n\n\t    if (!forcePowerOfTwo)\n\t    {\n\t        if (isFrame)\n\t        {\n\t            if (texture.trim)\n\t            {\n\t                targetWidth = texture.trim.width;\n\t                targetHeight = texture.trim.height;\n\t            }\n\t            else\n\t            {\n\t                targetWidth = frame.width;\n\t                targetHeight = frame.height;\n\t            }\n\n\t            newTextureRequired = true;\n\t        }\n\t    }\n\t    else\n\t    {\n\t        targetWidth = PIXI.getNextPowerOfTwo(frame.width);\n\t        targetHeight = PIXI.getNextPowerOfTwo(frame.height);\n\n\t        //  If the BaseTexture dimensions don't match the texture frame then we need a new texture anyway because it's part of a texture atlas\n\t        if (frame.width !== targetWidth || frame.height !== targetHeight || texture.baseTexture.width !== targetWidth || texture.baseTexture.height || targetHeight) newTextureRequired = true;\n\t    }\n\n\t    if (newTextureRequired)\n\t    {\n\t        var canvasBuffer;\n\n\t        if (this.tilingTexture && this.tilingTexture.isTiling)\n\t        {\n\t            canvasBuffer = this.tilingTexture.canvasBuffer;\n\t            canvasBuffer.resize(targetWidth, targetHeight);\n\t            this.tilingTexture.baseTexture.width = targetWidth;\n\t            this.tilingTexture.baseTexture.height = targetHeight;\n\t            this.tilingTexture.needsUpdate = true;\n\t        }\n\t        else\n\t        {\n\t            canvasBuffer = new PIXI.CanvasBuffer(targetWidth, targetHeight);\n\n\t            this.tilingTexture = PIXI.Texture.fromCanvas(canvasBuffer.canvas);\n\t            this.tilingTexture.canvasBuffer = canvasBuffer;\n\t            this.tilingTexture.isTiling = true;\n\t        }\n\n\t        canvasBuffer.context.drawImage(texture.baseTexture.source,\n\t                               texture.crop.x,\n\t                               texture.crop.y,\n\t                               texture.crop.width,\n\t                               texture.crop.height,\n\t                               0,\n\t                               0,\n\t                               targetWidth,\n\t                               targetHeight);\n\n\t        this.tileScaleOffset.x = frame.width / targetWidth;\n\t        this.tileScaleOffset.y = frame.height / targetHeight;\n\t    }\n\t    else\n\t    {\n\t        //  TODO - switching?\n\t        if (this.tilingTexture && this.tilingTexture.isTiling)\n\t        {\n\t            // destroy the tiling texture!\n\t            // TODO could store this somewhere?\n\t            this.tilingTexture.destroy(true);\n\t        }\n\n\t        this.tileScaleOffset.x = 1;\n\t        this.tileScaleOffset.y = 1;\n\t        this.tilingTexture = texture;\n\t    }\n\n\t    this.refreshTexture = false;\n\n\t    this.originalTexture = this.texture;\n\t    this.texture = this.tilingTexture;\n\n\t    this.tilingTexture.baseTexture._powerOf2 = true;\n\t};\n\n\tPIXI.TilingSprite.prototype.destroy = function () {\n\t    PIXI.Sprite.prototype.destroy.call(this);\n\n\t    this.tileScale = null;\n\t    this.tileScaleOffset = null;\n\t    this.tilePosition = null;\n\n\t    this.tilingTexture.destroy(true);\n\t    this.tilingTexture = null;\n\t};\n\r\n\t/******************************************************************************\n\t * Spine Runtimes Software License\n\t * Version 2.1\n\t *\n\t * Copyright (c) 2013, Esoteric Software\n\t * All rights reserved.\n\t *\n\t * You are granted a perpetual, non-exclusive, non-sublicensable and\n\t * non-transferable license to install, execute and perform the Spine Runtimes\n\t * Software (the \"Software\") solely for internal use. Without the written\n\t * permission of Esoteric Software (typically granted by licensing Spine), you\n\t * may not (a) modify, translate, adapt or otherwise create derivative works,\n\t * improvements of the Software or develop new applications using the Software\n\t * or (b) remove, delete, alter or obscure any trademarks or any copyright,\n\t * trademark, patent or other intellectual property or proprietary rights\n\t * notices on or in the Software, including any copy thereof. Redistributions\n\t * in binary or source form must include this license and terms.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY ESOTERIC SOFTWARE \"AS IS\" AND ANY EXPRESS OR\n\t * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n\t * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n\t * EVENT SHALL ESOTERIC SOFTARE BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\t * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\t * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\t * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\t * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\t * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t *****************************************************************************/\n\n\tvar spine = {\n\t\tradDeg: 180 / Math.PI,\n\t\tdegRad: Math.PI / 180,\n\t\ttemp: [],\n\t    Float32Array: (typeof(Float32Array) === 'undefined') ? Array : Float32Array,\n\t    Uint16Array: (typeof(Uint16Array) === 'undefined') ? Array : Uint16Array\n\t};\n\n\tspine.BoneData = function (name, parent) {\n\t\tthis.name = name;\n\t\tthis.parent = parent;\n\t};\n\tspine.BoneData.prototype = {\n\t\tlength: 0,\n\t\tx: 0, y: 0,\n\t\trotation: 0,\n\t\tscaleX: 1, scaleY: 1,\n\t\tinheritScale: true,\n\t\tinheritRotation: true,\n\t\tflipX: false, flipY: false\n\t};\n\n\tspine.SlotData = function (name, boneData) {\n\t\tthis.name = name;\n\t\tthis.boneData = boneData;\n\t};\n\tspine.SlotData.prototype = {\n\t\tr: 1, g: 1, b: 1, a: 1,\n\t\tattachmentName: null,\n\t\tadditiveBlending: false\n\t};\n\n\tspine.IkConstraintData = function (name) {\n\t\tthis.name = name;\n\t\tthis.bones = [];\n\t};\n\tspine.IkConstraintData.prototype = {\n\t\ttarget: null,\n\t\tbendDirection: 1,\n\t\tmix: 1\n\t};\n\n\tspine.Bone = function (boneData, skeleton, parent) {\n\t\tthis.data = boneData;\n\t\tthis.skeleton = skeleton;\n\t\tthis.parent = parent;\n\t\tthis.setToSetupPose();\n\t};\n\tspine.Bone.yDown = false;\n\tspine.Bone.prototype = {\n\t\tx: 0, y: 0,\n\t\trotation: 0, rotationIK: 0,\n\t\tscaleX: 1, scaleY: 1,\n\t\tflipX: false, flipY: false,\n\t\tm00: 0, m01: 0, worldX: 0, // a b x\n\t\tm10: 0, m11: 0, worldY: 0, // c d y\n\t\tworldRotation: 0,\n\t\tworldScaleX: 1, worldScaleY: 1,\n\t\tworldFlipX: false, worldFlipY: false,\n\t\tupdateWorldTransform: function () {\n\t\t\tvar parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\tthis.worldX = this.x * parent.m00 + this.y * parent.m01 + parent.worldX;\n\t\t\t\tthis.worldY = this.x * parent.m10 + this.y * parent.m11 + parent.worldY;\n\t\t\t\tif (this.data.inheritScale) {\n\t\t\t\t\tthis.worldScaleX = parent.worldScaleX * this.scaleX;\n\t\t\t\t\tthis.worldScaleY = parent.worldScaleY * this.scaleY;\n\t\t\t\t} else {\n\t\t\t\t\tthis.worldScaleX = this.scaleX;\n\t\t\t\t\tthis.worldScaleY = this.scaleY;\n\t\t\t\t}\n\t\t\t\tthis.worldRotation = this.data.inheritRotation ? (parent.worldRotation + this.rotationIK) : this.rotationIK;\n\t\t\t\tthis.worldFlipX = parent.worldFlipX != this.flipX;\n\t\t\t\tthis.worldFlipY = parent.worldFlipY != this.flipY;\n\t\t\t} else {\n\t\t\t\tvar skeletonFlipX = this.skeleton.flipX, skeletonFlipY = this.skeleton.flipY;\n\t\t\t\tthis.worldX = skeletonFlipX ? -this.x : this.x;\n\t\t\t\tthis.worldY = (skeletonFlipY != spine.Bone.yDown) ? -this.y : this.y;\n\t\t\t\tthis.worldScaleX = this.scaleX;\n\t\t\t\tthis.worldScaleY = this.scaleY;\n\t\t\t\tthis.worldRotation = this.rotationIK;\n\t\t\t\tthis.worldFlipX = skeletonFlipX != this.flipX;\n\t\t\t\tthis.worldFlipY = skeletonFlipY != this.flipY;\n\t\t\t}\n\t\t\tvar radians = this.worldRotation * spine.degRad;\n\t\t\tvar cos = Math.cos(radians);\n\t\t\tvar sin = Math.sin(radians);\n\t\t\tif (this.worldFlipX) {\n\t\t\t\tthis.m00 = -cos * this.worldScaleX;\n\t\t\t\tthis.m01 = sin * this.worldScaleY;\n\t\t\t} else {\n\t\t\t\tthis.m00 = cos * this.worldScaleX;\n\t\t\t\tthis.m01 = -sin * this.worldScaleY;\n\t\t\t}\n\t\t\tif (this.worldFlipY != spine.Bone.yDown) {\n\t\t\t\tthis.m10 = -sin * this.worldScaleX;\n\t\t\t\tthis.m11 = -cos * this.worldScaleY;\n\t\t\t} else {\n\t\t\t\tthis.m10 = sin * this.worldScaleX;\n\t\t\t\tthis.m11 = cos * this.worldScaleY;\n\t\t\t}\n\t\t},\n\t\tsetToSetupPose: function () {\n\t\t\tvar data = this.data;\n\t\t\tthis.x = data.x;\n\t\t\tthis.y = data.y;\n\t\t\tthis.rotation = data.rotation;\n\t\t\tthis.rotationIK = this.rotation;\n\t\t\tthis.scaleX = data.scaleX;\n\t\t\tthis.scaleY = data.scaleY;\n\t\t\tthis.flipX = data.flipX;\n\t\t\tthis.flipY = data.flipY;\n\t\t},\n\t\tworldToLocal: function (world) {\n\t\t\tvar dx = world[0] - this.worldX, dy = world[1] - this.worldY;\n\t\t\tvar m00 = this.m00, m10 = this.m10, m01 = this.m01, m11 = this.m11;\n\t\t\tif (this.worldFlipX != (this.worldFlipY != spine.Bone.yDown)) {\n\t\t\t\tm00 = -m00;\n\t\t\t\tm11 = -m11;\n\t\t\t}\n\t\t\tvar invDet = 1 / (m00 * m11 - m01 * m10);\n\t\t\tworld[0] = dx * m00 * invDet - dy * m01 * invDet;\n\t\t\tworld[1] = dy * m11 * invDet - dx * m10 * invDet;\n\t\t},\n\t\tlocalToWorld: function (local) {\n\t\t\tvar localX = local[0], localY = local[1];\n\t\t\tlocal[0] = localX * this.m00 + localY * this.m01 + this.worldX;\n\t\t\tlocal[1] = localX * this.m10 + localY * this.m11 + this.worldY;\n\t\t}\n\t};\n\n\tspine.Slot = function (slotData, bone) {\n\t\tthis.data = slotData;\n\t\tthis.bone = bone;\n\t\tthis.setToSetupPose();\n\t};\n\tspine.Slot.prototype = {\n\t\tr: 1, g: 1, b: 1, a: 1,\n\t\t_attachmentTime: 0,\n\t\tattachment: null,\n\t\tattachmentVertices: [],\n\t\tsetAttachment: function (attachment) {\n\t\t\tthis.attachment = attachment;\n\t\t\tthis._attachmentTime = this.bone.skeleton.time;\n\t\t\tthis.attachmentVertices.length = 0;\n\t\t},\n\t\tsetAttachmentTime: function (time) {\n\t\t\tthis._attachmentTime = this.bone.skeleton.time - time;\n\t\t},\n\t\tgetAttachmentTime: function () {\n\t\t\treturn this.bone.skeleton.time - this._attachmentTime;\n\t\t},\n\t\tsetToSetupPose: function () {\n\t\t\tvar data = this.data;\n\t\t\tthis.r = data.r;\n\t\t\tthis.g = data.g;\n\t\t\tthis.b = data.b;\n\t\t\tthis.a = data.a;\n\n\t\t\tvar slotDatas = this.bone.skeleton.data.slots;\n\t\t\tfor (var i = 0, n = slotDatas.length; i < n; i++) {\n\t\t\t\tif (slotDatas[i] == data) {\n\t\t\t\t\tthis.setAttachment(!data.attachmentName ? null : this.bone.skeleton.getAttachmentBySlotIndex(i, data.attachmentName));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tspine.IkConstraint = function (data, skeleton) {\n\t\tthis.data = data;\n\t\tthis.mix = data.mix;\n\t\tthis.bendDirection = data.bendDirection;\n\n\t\tthis.bones = [];\n\t\tfor (var i = 0, n = data.bones.length; i < n; i++)\n\t\t\tthis.bones.push(skeleton.findBone(data.bones[i].name));\n\t\tthis.target = skeleton.findBone(data.target.name);\n\t};\n\tspine.IkConstraint.prototype = {\n\t\tapply: function () {\n\t\t\tvar target = this.target;\n\t\t\tvar bones = this.bones;\n\t\t\tswitch (bones.length) {\n\t\t\tcase 1:\n\t\t\t\tspine.IkConstraint.apply1(bones[0], target.worldX, target.worldY, this.mix);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tspine.IkConstraint.apply2(bones[0], bones[1], target.worldX, target.worldY, this.bendDirection, this.mix);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\t/** Adjusts the bone rotation so the tip is as close to the target position as possible. The target is specified in the world\n\t * coordinate system. */\n\tspine.IkConstraint.apply1 = function (bone, targetX, targetY, alpha) {\n\t\tvar parentRotation = (!bone.data.inheritRotation || !bone.parent) ? 0 : bone.parent.worldRotation;\n\t\tvar rotation = bone.rotation;\n\t\tvar rotationIK = Math.atan2(targetY - bone.worldY, targetX - bone.worldX) * spine.radDeg - parentRotation;\n\t\tbone.rotationIK = rotation + (rotationIK - rotation) * alpha;\n\t};\n\t/** Adjusts the parent and child bone rotations so the tip of the child is as close to the target position as possible. The\n\t * target is specified in the world coordinate system.\n\t * @param child Any descendant bone of the parent. */\n\tspine.IkConstraint.apply2 = function (parent, child, targetX, targetY, bendDirection, alpha) {\n\t\tvar childRotation = child.rotation, parentRotation = parent.rotation;\n\t\tif (!alpha) {\n\t\t\tchild.rotationIK = childRotation;\n\t\t\tparent.rotationIK = parentRotation;\n\t\t\treturn;\n\t\t}\n\t\tvar positionX, positionY, tempPosition = spine.temp;\n\t\tvar parentParent = parent.parent;\n\t\tif (parentParent) {\n\t\t\ttempPosition[0] = targetX;\n\t\t\ttempPosition[1] = targetY;\n\t\t\tparentParent.worldToLocal(tempPosition);\n\t\t\ttargetX = (tempPosition[0] - parent.x) * parentParent.worldScaleX;\n\t\t\ttargetY = (tempPosition[1] - parent.y) * parentParent.worldScaleY;\n\t\t} else {\n\t\t\ttargetX -= parent.x;\n\t\t\ttargetY -= parent.y;\n\t\t}\n\t\tif (child.parent == parent) {\n\t\t\tpositionX = child.x;\n\t\t\tpositionY = child.y;\n\t\t} else {\n\t\t\ttempPosition[0] = child.x;\n\t\t\ttempPosition[1] = child.y;\n\t\t\tchild.parent.localToWorld(tempPosition);\n\t\t\tparent.worldToLocal(tempPosition);\n\t\t\tpositionX = tempPosition[0];\n\t\t\tpositionY = tempPosition[1];\n\t\t}\n\t\tvar childX = positionX * parent.worldScaleX, childY = positionY * parent.worldScaleY;\n\t\tvar offset = Math.atan2(childY, childX);\n\t\tvar len1 = Math.sqrt(childX * childX + childY * childY), len2 = child.data.length * child.worldScaleX;\n\t\t// Based on code by Ryan Juckett with permission: Copyright (c) 2008-2009 Ryan Juckett, http://www.ryanjuckett.com/\n\t\tvar cosDenom = 2 * len1 * len2;\n\t\tif (cosDenom < 0.0001) {\n\t\t\tchild.rotationIK = childRotation + (Math.atan2(targetY, targetX) * spine.radDeg - parentRotation - childRotation) * alpha;\n\t\t\treturn;\n\t\t}\n\t\tvar cos = (targetX * targetX + targetY * targetY - len1 * len1 - len2 * len2) / cosDenom;\n\t\tif (cos < -1)\n\t\t\tcos = -1;\n\t\telse if (cos > 1)\n\t\t\tcos = 1;\n\t\tvar childAngle = Math.acos(cos) * bendDirection;\n\t\tvar adjacent = len1 + len2 * cos, opposite = len2 * Math.sin(childAngle);\n\t\tvar parentAngle = Math.atan2(targetY * adjacent - targetX * opposite, targetX * adjacent + targetY * opposite);\n\t\tvar rotation = (parentAngle - offset) * spine.radDeg - parentRotation;\n\t\tif (rotation > 180)\n\t\t\trotation -= 360;\n\t\telse if (rotation < -180) //\n\t\t\trotation += 360;\n\t\tparent.rotationIK = parentRotation + rotation * alpha;\n\t\trotation = (childAngle + offset) * spine.radDeg - childRotation;\n\t\tif (rotation > 180)\n\t\t\trotation -= 360;\n\t\telse if (rotation < -180) //\n\t\t\trotation += 360;\n\t\tchild.rotationIK = childRotation + (rotation + parent.worldRotation - child.parent.worldRotation) * alpha;\n\t};\n\n\tspine.Skin = function (name) {\n\t\tthis.name = name;\n\t\tthis.attachments = {};\n\t};\n\tspine.Skin.prototype = {\n\t\taddAttachment: function (slotIndex, name, attachment) {\n\t\t\tthis.attachments[slotIndex + \":\" + name] = attachment;\n\t\t},\n\t\tgetAttachment: function (slotIndex, name) {\n\t\t\treturn this.attachments[slotIndex + \":\" + name];\n\t\t},\n\t\t_attachAll: function (skeleton, oldSkin) {\n\t\t\tfor (var key in oldSkin.attachments) {\n\t\t\t\tvar colon = key.indexOf(\":\");\n\t\t\t\tvar slotIndex = parseInt(key.substring(0, colon));\n\t\t\t\tvar name = key.substring(colon + 1);\n\t\t\t\tvar slot = skeleton.slots[slotIndex];\n\t\t\t\tif (slot.attachment && slot.attachment.name == name) {\n\t\t\t\t\tvar attachment = this.getAttachment(slotIndex, name);\n\t\t\t\t\tif (attachment) slot.setAttachment(attachment);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tspine.Animation = function (name, timelines, duration) {\n\t\tthis.name = name;\n\t\tthis.timelines = timelines;\n\t\tthis.duration = duration;\n\t};\n\tspine.Animation.prototype = {\n\t\tapply: function (skeleton, lastTime, time, loop, events) {\n\t\t\tif (loop && this.duration != 0) {\n\t\t\t\ttime %= this.duration;\n\t\t\t\tlastTime %= this.duration;\n\t\t\t}\n\t\t\tvar timelines = this.timelines;\n\t\t\tfor (var i = 0, n = timelines.length; i < n; i++)\n\t\t\t\ttimelines[i].apply(skeleton, lastTime, time, events, 1);\n\t\t},\n\t\tmix: function (skeleton, lastTime, time, loop, events, alpha) {\n\t\t\tif (loop && this.duration != 0) {\n\t\t\t\ttime %= this.duration;\n\t\t\t\tlastTime %= this.duration;\n\t\t\t}\n\t\t\tvar timelines = this.timelines;\n\t\t\tfor (var i = 0, n = timelines.length; i < n; i++)\n\t\t\t\ttimelines[i].apply(skeleton, lastTime, time, events, alpha);\n\t\t}\n\t};\n\tspine.Animation.binarySearch = function (values, target, step) {\n\t\tvar low = 0;\n\t\tvar high = Math.floor(values.length / step) - 2;\n\t\tif (!high) return step;\n\t\tvar current = high >>> 1;\n\t\twhile (true) {\n\t\t\tif (values[(current + 1) * step] <= target)\n\t\t\t\tlow = current + 1;\n\t\t\telse\n\t\t\t\thigh = current;\n\t\t\tif (low == high) return (low + 1) * step;\n\t\t\tcurrent = (low + high) >>> 1;\n\t\t}\n\t};\n\tspine.Animation.binarySearch1 = function (values, target) {\n\t\tvar low = 0;\n\t\tvar high = values.length - 2;\n\t\tif (!high) return 1;\n\t\tvar current = high >>> 1;\n\t\twhile (true) {\n\t\t\tif (values[current + 1] <= target)\n\t\t\t\tlow = current + 1;\n\t\t\telse\n\t\t\t\thigh = current;\n\t\t\tif (low == high) return low + 1;\n\t\t\tcurrent = (low + high) >>> 1;\n\t\t}\n\t};\n\tspine.Animation.linearSearch = function (values, target, step) {\n\t\tfor (var i = 0, last = values.length - step; i <= last; i += step)\n\t\t\tif (values[i] > target) return i;\n\t\treturn -1;\n\t};\n\n\tspine.Curves = function (frameCount) {\n\t\tthis.curves = []; // type, x, y, ...\n\t\t//this.curves.length = (frameCount - 1) * 19/*BEZIER_SIZE*/;\n\t};\n\tspine.Curves.prototype = {\n\t\tsetLinear: function (frameIndex) {\n\t\t\tthis.curves[frameIndex * 19/*BEZIER_SIZE*/] = 0/*LINEAR*/;\n\t\t},\n\t\tsetStepped: function (frameIndex) {\n\t\t\tthis.curves[frameIndex * 19/*BEZIER_SIZE*/] = 1/*STEPPED*/;\n\t\t},\n\t\t/** Sets the control handle positions for an interpolation bezier curve used to transition from this keyframe to the next.\n\t\t * cx1 and cx2 are from 0 to 1, representing the percent of time between the two keyframes. cy1 and cy2 are the percent of\n\t\t * the difference between the keyframe's values. */\n\t\tsetCurve: function (frameIndex, cx1, cy1, cx2, cy2) {\n\t\t\tvar subdiv1 = 1 / 10/*BEZIER_SEGMENTS*/, subdiv2 = subdiv1 * subdiv1, subdiv3 = subdiv2 * subdiv1;\n\t\t\tvar pre1 = 3 * subdiv1, pre2 = 3 * subdiv2, pre4 = 6 * subdiv2, pre5 = 6 * subdiv3;\n\t\t\tvar tmp1x = -cx1 * 2 + cx2, tmp1y = -cy1 * 2 + cy2, tmp2x = (cx1 - cx2) * 3 + 1, tmp2y = (cy1 - cy2) * 3 + 1;\n\t\t\tvar dfx = cx1 * pre1 + tmp1x * pre2 + tmp2x * subdiv3, dfy = cy1 * pre1 + tmp1y * pre2 + tmp2y * subdiv3;\n\t\t\tvar ddfx = tmp1x * pre4 + tmp2x * pre5, ddfy = tmp1y * pre4 + tmp2y * pre5;\n\t\t\tvar dddfx = tmp2x * pre5, dddfy = tmp2y * pre5;\n\n\t\t\tvar i = frameIndex * 19/*BEZIER_SIZE*/;\n\t\t\tvar curves = this.curves;\n\t\t\tcurves[i++] = 2/*BEZIER*/;\n\n\t\t\tvar x = dfx, y = dfy;\n\t\t\tfor (var n = i + 19/*BEZIER_SIZE*/ - 1; i < n; i += 2) {\n\t\t\t\tcurves[i] = x;\n\t\t\t\tcurves[i + 1] = y;\n\t\t\t\tdfx += ddfx;\n\t\t\t\tdfy += ddfy;\n\t\t\t\tddfx += dddfx;\n\t\t\t\tddfy += dddfy;\n\t\t\t\tx += dfx;\n\t\t\t\ty += dfy;\n\t\t\t}\n\t\t},\n\t\tgetCurvePercent: function (frameIndex, percent) {\n\t\t\tpercent = percent < 0 ? 0 : (percent > 1 ? 1 : percent);\n\t\t\tvar curves = this.curves;\n\t\t\tvar i = frameIndex * 19/*BEZIER_SIZE*/;\n\t\t\tvar type = curves[i];\n\t\t\tif (type === 0/*LINEAR*/) return percent;\n\t\t\tif (type == 1/*STEPPED*/) return 0;\n\t\t\ti++;\n\t\t\tvar x = 0;\n\t\t\tfor (var start = i, n = i + 19/*BEZIER_SIZE*/ - 1; i < n; i += 2) {\n\t\t\t\tx = curves[i];\n\t\t\t\tif (x >= percent) {\n\t\t\t\t\tvar prevX, prevY;\n\t\t\t\t\tif (i == start) {\n\t\t\t\t\t\tprevX = 0;\n\t\t\t\t\t\tprevY = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprevX = curves[i - 2];\n\t\t\t\t\t\tprevY = curves[i - 1];\n\t\t\t\t\t}\n\t\t\t\t\treturn prevY + (curves[i + 1] - prevY) * (percent - prevX) / (x - prevX);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar y = curves[i - 1];\n\t\t\treturn y + (1 - y) * (percent - x) / (1 - x); // Last point is 1,1.\n\t\t}\n\t};\n\n\tspine.RotateTimeline = function (frameCount) {\n\t\tthis.curves = new spine.Curves(frameCount);\n\t\tthis.frames = []; // time, angle, ...\n\t\tthis.frames.length = frameCount * 2;\n\t};\n\tspine.RotateTimeline.prototype = {\n\t\tboneIndex: 0,\n\t\tgetFrameCount: function () {\n\t\t\treturn this.frames.length / 2;\n\t\t},\n\t\tsetFrame: function (frameIndex, time, angle) {\n\t\t\tframeIndex *= 2;\n\t\t\tthis.frames[frameIndex] = time;\n\t\t\tthis.frames[frameIndex + 1] = angle;\n\t\t},\n\t\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\t\tvar frames = this.frames;\n\t\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\t\tvar bone = skeleton.bones[this.boneIndex];\n\n\t\t\tif (time >= frames[frames.length - 2]) { // Time is after last frame.\n\t\t\t\tvar amount = bone.data.rotation + frames[frames.length - 1] - bone.rotation;\n\t\t\t\twhile (amount > 180)\n\t\t\t\t\tamount -= 360;\n\t\t\t\twhile (amount < -180)\n\t\t\t\t\tamount += 360;\n\t\t\t\tbone.rotation += amount * alpha;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Interpolate between the previous frame and the current frame.\n\t\t\tvar frameIndex = spine.Animation.binarySearch(frames, time, 2);\n\t\t\tvar prevFrameValue = frames[frameIndex - 1];\n\t\t\tvar frameTime = frames[frameIndex];\n\t\t\tvar percent = 1 - (time - frameTime) / (frames[frameIndex - 2/*PREV_FRAME_TIME*/] - frameTime);\n\t\t\tpercent = this.curves.getCurvePercent(frameIndex / 2 - 1, percent);\n\n\t\t\tvar amount = frames[frameIndex + 1/*FRAME_VALUE*/] - prevFrameValue;\n\t\t\twhile (amount > 180)\n\t\t\t\tamount -= 360;\n\t\t\twhile (amount < -180)\n\t\t\t\tamount += 360;\n\t\t\tamount = bone.data.rotation + (prevFrameValue + amount * percent) - bone.rotation;\n\t\t\twhile (amount > 180)\n\t\t\t\tamount -= 360;\n\t\t\twhile (amount < -180)\n\t\t\t\tamount += 360;\n\t\t\tbone.rotation += amount * alpha;\n\t\t}\n\t};\n\n\tspine.TranslateTimeline = function (frameCount) {\n\t\tthis.curves = new spine.Curves(frameCount);\n\t\tthis.frames = []; // time, x, y, ...\n\t\tthis.frames.length = frameCount * 3;\n\t};\n\tspine.TranslateTimeline.prototype = {\n\t\tboneIndex: 0,\n\t\tgetFrameCount: function () {\n\t\t\treturn this.frames.length / 3;\n\t\t},\n\t\tsetFrame: function (frameIndex, time, x, y) {\n\t\t\tframeIndex *= 3;\n\t\t\tthis.frames[frameIndex] = time;\n\t\t\tthis.frames[frameIndex + 1] = x;\n\t\t\tthis.frames[frameIndex + 2] = y;\n\t\t},\n\t\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\t\tvar frames = this.frames;\n\t\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\t\tvar bone = skeleton.bones[this.boneIndex];\n\n\t\t\tif (time >= frames[frames.length - 3]) { // Time is after last frame.\n\t\t\t\tbone.x += (bone.data.x + frames[frames.length - 2] - bone.x) * alpha;\n\t\t\t\tbone.y += (bone.data.y + frames[frames.length - 1] - bone.y) * alpha;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Interpolate between the previous frame and the current frame.\n\t\t\tvar frameIndex = spine.Animation.binarySearch(frames, time, 3);\n\t\t\tvar prevFrameX = frames[frameIndex - 2];\n\t\t\tvar prevFrameY = frames[frameIndex - 1];\n\t\t\tvar frameTime = frames[frameIndex];\n\t\t\tvar percent = 1 - (time - frameTime) / (frames[frameIndex + -3/*PREV_FRAME_TIME*/] - frameTime);\n\t\t\tpercent = this.curves.getCurvePercent(frameIndex / 3 - 1, percent);\n\n\t\t\tbone.x += (bone.data.x + prevFrameX + (frames[frameIndex + 1/*FRAME_X*/] - prevFrameX) * percent - bone.x) * alpha;\n\t\t\tbone.y += (bone.data.y + prevFrameY + (frames[frameIndex + 2/*FRAME_Y*/] - prevFrameY) * percent - bone.y) * alpha;\n\t\t}\n\t};\n\n\tspine.ScaleTimeline = function (frameCount) {\n\t\tthis.curves = new spine.Curves(frameCount);\n\t\tthis.frames = []; // time, x, y, ...\n\t\tthis.frames.length = frameCount * 3;\n\t};\n\tspine.ScaleTimeline.prototype = {\n\t\tboneIndex: 0,\n\t\tgetFrameCount: function () {\n\t\t\treturn this.frames.length / 3;\n\t\t},\n\t\tsetFrame: function (frameIndex, time, x, y) {\n\t\t\tframeIndex *= 3;\n\t\t\tthis.frames[frameIndex] = time;\n\t\t\tthis.frames[frameIndex + 1] = x;\n\t\t\tthis.frames[frameIndex + 2] = y;\n\t\t},\n\t\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\t\tvar frames = this.frames;\n\t\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\t\tvar bone = skeleton.bones[this.boneIndex];\n\n\t\t\tif (time >= frames[frames.length - 3]) { // Time is after last frame.\n\t\t\t\tbone.scaleX += (bone.data.scaleX * frames[frames.length - 2] - bone.scaleX) * alpha;\n\t\t\t\tbone.scaleY += (bone.data.scaleY * frames[frames.length - 1] - bone.scaleY) * alpha;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Interpolate between the previous frame and the current frame.\n\t\t\tvar frameIndex = spine.Animation.binarySearch(frames, time, 3);\n\t\t\tvar prevFrameX = frames[frameIndex - 2];\n\t\t\tvar prevFrameY = frames[frameIndex - 1];\n\t\t\tvar frameTime = frames[frameIndex];\n\t\t\tvar percent = 1 - (time - frameTime) / (frames[frameIndex + -3/*PREV_FRAME_TIME*/] - frameTime);\n\t\t\tpercent = this.curves.getCurvePercent(frameIndex / 3 - 1, percent);\n\n\t\t\tbone.scaleX += (bone.data.scaleX * (prevFrameX + (frames[frameIndex + 1/*FRAME_X*/] - prevFrameX) * percent) - bone.scaleX) * alpha;\n\t\t\tbone.scaleY += (bone.data.scaleY * (prevFrameY + (frames[frameIndex + 2/*FRAME_Y*/] - prevFrameY) * percent) - bone.scaleY) * alpha;\n\t\t}\n\t};\n\n\tspine.ColorTimeline = function (frameCount) {\n\t\tthis.curves = new spine.Curves(frameCount);\n\t\tthis.frames = []; // time, r, g, b, a, ...\n\t\tthis.frames.length = frameCount * 5;\n\t};\n\tspine.ColorTimeline.prototype = {\n\t\tslotIndex: 0,\n\t\tgetFrameCount: function () {\n\t\t\treturn this.frames.length / 5;\n\t\t},\n\t\tsetFrame: function (frameIndex, time, r, g, b, a) {\n\t\t\tframeIndex *= 5;\n\t\t\tthis.frames[frameIndex] = time;\n\t\t\tthis.frames[frameIndex + 1] = r;\n\t\t\tthis.frames[frameIndex + 2] = g;\n\t\t\tthis.frames[frameIndex + 3] = b;\n\t\t\tthis.frames[frameIndex + 4] = a;\n\t\t},\n\t\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\t\tvar frames = this.frames;\n\t\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\t\tvar r, g, b, a;\n\t\t\tif (time >= frames[frames.length - 5]) {\n\t\t\t\t// Time is after last frame.\n\t\t\t\tvar i = frames.length - 1;\n\t\t\t\tr = frames[i - 3];\n\t\t\t\tg = frames[i - 2];\n\t\t\t\tb = frames[i - 1];\n\t\t\t\ta = frames[i];\n\t\t\t} else {\n\t\t\t\t// Interpolate between the previous frame and the current frame.\n\t\t\t\tvar frameIndex = spine.Animation.binarySearch(frames, time, 5);\n\t\t\t\tvar prevFrameR = frames[frameIndex - 4];\n\t\t\t\tvar prevFrameG = frames[frameIndex - 3];\n\t\t\t\tvar prevFrameB = frames[frameIndex - 2];\n\t\t\t\tvar prevFrameA = frames[frameIndex - 1];\n\t\t\t\tvar frameTime = frames[frameIndex];\n\t\t\t\tvar percent = 1 - (time - frameTime) / (frames[frameIndex - 5/*PREV_FRAME_TIME*/] - frameTime);\n\t\t\t\tpercent = this.curves.getCurvePercent(frameIndex / 5 - 1, percent);\n\n\t\t\t\tr = prevFrameR + (frames[frameIndex + 1/*FRAME_R*/] - prevFrameR) * percent;\n\t\t\t\tg = prevFrameG + (frames[frameIndex + 2/*FRAME_G*/] - prevFrameG) * percent;\n\t\t\t\tb = prevFrameB + (frames[frameIndex + 3/*FRAME_B*/] - prevFrameB) * percent;\n\t\t\t\ta = prevFrameA + (frames[frameIndex + 4/*FRAME_A*/] - prevFrameA) * percent;\n\t\t\t}\n\t\t\tvar slot = skeleton.slots[this.slotIndex];\n\t\t\tif (alpha < 1) {\n\t\t\t\tslot.r += (r - slot.r) * alpha;\n\t\t\t\tslot.g += (g - slot.g) * alpha;\n\t\t\t\tslot.b += (b - slot.b) * alpha;\n\t\t\t\tslot.a += (a - slot.a) * alpha;\n\t\t\t} else {\n\t\t\t\tslot.r = r;\n\t\t\t\tslot.g = g;\n\t\t\t\tslot.b = b;\n\t\t\t\tslot.a = a;\n\t\t\t}\n\t\t}\n\t};\n\n\tspine.AttachmentTimeline = function (frameCount) {\n\t\tthis.curves = new spine.Curves(frameCount);\n\t\tthis.frames = []; // time, ...\n\t\tthis.frames.length = frameCount;\n\t\tthis.attachmentNames = [];\n\t\tthis.attachmentNames.length = frameCount;\n\t};\n\tspine.AttachmentTimeline.prototype = {\n\t\tslotIndex: 0,\n\t\tgetFrameCount: function () {\n\t\t\treturn this.frames.length;\n\t\t},\n\t\tsetFrame: function (frameIndex, time, attachmentName) {\n\t\t\tthis.frames[frameIndex] = time;\n\t\t\tthis.attachmentNames[frameIndex] = attachmentName;\n\t\t},\n\t\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\t\tvar frames = this.frames;\n\t\t\tif (time < frames[0]) {\n\t\t\t\tif (lastTime > time) this.apply(skeleton, lastTime, Number.MAX_VALUE, null, 0);\n\t\t\t\treturn;\n\t\t\t} else if (lastTime > time) //\n\t\t\t\tlastTime = -1;\n\n\t\t\tvar frameIndex = time >= frames[frames.length - 1] ? frames.length - 1 : spine.Animation.binarySearch1(frames, time) - 1;\n\t\t\tif (frames[frameIndex] < lastTime) return;\n\n\t\t\tvar attachmentName = this.attachmentNames[frameIndex];\n\t\t\tskeleton.slots[this.slotIndex].setAttachment(\n\t\t\t\t!attachmentName ? null : skeleton.getAttachmentBySlotIndex(this.slotIndex, attachmentName));\n\t\t}\n\t};\n\n\tspine.EventTimeline = function (frameCount) {\n\t\tthis.frames = []; // time, ...\n\t\tthis.frames.length = frameCount;\n\t\tthis.events = [];\n\t\tthis.events.length = frameCount;\n\t};\n\tspine.EventTimeline.prototype = {\n\t\tgetFrameCount: function () {\n\t\t\treturn this.frames.length;\n\t\t},\n\t\tsetFrame: function (frameIndex, time, event) {\n\t\t\tthis.frames[frameIndex] = time;\n\t\t\tthis.events[frameIndex] = event;\n\t\t},\n\t\t/** Fires events for frames > lastTime and <= time. */\n\t\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\t\tif (!firedEvents) return;\n\n\t\t\tvar frames = this.frames;\n\t\t\tvar frameCount = frames.length;\n\n\t\t\tif (lastTime > time) { // Fire events after last time for looped animations.\n\t\t\t\tthis.apply(skeleton, lastTime, Number.MAX_VALUE, firedEvents, alpha);\n\t\t\t\tlastTime = -1;\n\t\t\t} else if (lastTime >= frames[frameCount - 1]) // Last time is after last frame.\n\t\t\t\treturn;\n\t\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\t\tvar frameIndex;\n\t\t\tif (lastTime < frames[0])\n\t\t\t\tframeIndex = 0;\n\t\t\telse {\n\t\t\t\tframeIndex = spine.Animation.binarySearch1(frames, lastTime);\n\t\t\t\tvar frame = frames[frameIndex];\n\t\t\t\twhile (frameIndex > 0) { // Fire multiple events with the same frame.\n\t\t\t\t\tif (frames[frameIndex - 1] != frame) break;\n\t\t\t\t\tframeIndex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar events = this.events;\n\t\t\tfor (; frameIndex < frameCount && time >= frames[frameIndex]; frameIndex++)\n\t\t\t\tfiredEvents.push(events[frameIndex]);\n\t\t}\n\t};\n\n\tspine.DrawOrderTimeline = function (frameCount) {\n\t\tthis.frames = []; // time, ...\n\t\tthis.frames.length = frameCount;\n\t\tthis.drawOrders = [];\n\t\tthis.drawOrders.length = frameCount;\n\t};\n\tspine.DrawOrderTimeline.prototype = {\n\t\tgetFrameCount: function () {\n\t\t\treturn this.frames.length;\n\t\t},\n\t\tsetFrame: function (frameIndex, time, drawOrder) {\n\t\t\tthis.frames[frameIndex] = time;\n\t\t\tthis.drawOrders[frameIndex] = drawOrder;\n\t\t},\n\t\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\t\tvar frames = this.frames;\n\t\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\t\tvar frameIndex;\n\t\t\tif (time >= frames[frames.length - 1]) // Time is after last frame.\n\t\t\t\tframeIndex = frames.length - 1;\n\t\t\telse\n\t\t\t\tframeIndex = spine.Animation.binarySearch1(frames, time) - 1;\n\n\t\t\tvar drawOrder = skeleton.drawOrder;\n\t\t\tvar slots = skeleton.slots;\n\t\t\tvar drawOrderToSetupIndex = this.drawOrders[frameIndex];\n\t\t\tif (!drawOrderToSetupIndex) {\n\t\t\t\tfor (var i = 0, n = slots.length; i < n; i++)\n\t\t\t\t\tdrawOrder[i] = slots[i];\n\t\t\t} else {\n\t\t\t\tfor (var i = 0, n = drawOrderToSetupIndex.length; i < n; i++)\n\t\t\t\t\tdrawOrder[i] = skeleton.slots[drawOrderToSetupIndex[i]];\n\t\t\t}\n\n\t\t}\n\t};\n\n\tspine.FfdTimeline = function (frameCount) {\n\t\tthis.curves = new spine.Curves(frameCount);\n\t\tthis.frames = [];\n\t\tthis.frames.length = frameCount;\n\t\tthis.frameVertices = [];\n\t\tthis.frameVertices.length = frameCount;\n\t};\n\tspine.FfdTimeline.prototype = {\n\t\tslotIndex: 0,\n\t\tattachment: 0,\n\t\tgetFrameCount: function () {\n\t\t\treturn this.frames.length;\n\t\t},\n\t\tsetFrame: function (frameIndex, time, vertices) {\n\t\t\tthis.frames[frameIndex] = time;\n\t\t\tthis.frameVertices[frameIndex] = vertices;\n\t\t},\n\t\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\t\tvar slot = skeleton.slots[this.slotIndex];\n\t\t\tif (slot.attachment != this.attachment) return;\n\n\t\t\tvar frames = this.frames;\n\t\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\t\tvar frameVertices = this.frameVertices;\n\t\t\tvar vertexCount = frameVertices[0].length;\n\n\t\t\tvar vertices = slot.attachmentVertices;\n\t\t\tif (vertices.length != vertexCount) alpha = 1;\n\t\t\tvertices.length = vertexCount;\n\n\t\t\tif (time >= frames[frames.length - 1]) { // Time is after last frame.\n\t\t\t\tvar lastVertices = frameVertices[frames.length - 1];\n\t\t\t\tif (alpha < 1) {\n\t\t\t\t\tfor (var i = 0; i < vertexCount; i++)\n\t\t\t\t\t\tvertices[i] += (lastVertices[i] - vertices[i]) * alpha;\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = 0; i < vertexCount; i++)\n\t\t\t\t\t\tvertices[i] = lastVertices[i];\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Interpolate between the previous frame and the current frame.\n\t\t\tvar frameIndex = spine.Animation.binarySearch1(frames, time);\n\t\t\tvar frameTime = frames[frameIndex];\n\t\t\tvar percent = 1 - (time - frameTime) / (frames[frameIndex - 1] - frameTime);\n\t\t\tpercent = this.curves.getCurvePercent(frameIndex - 1, percent < 0 ? 0 : (percent > 1 ? 1 : percent));\n\n\t\t\tvar prevVertices = frameVertices[frameIndex - 1];\n\t\t\tvar nextVertices = frameVertices[frameIndex];\n\n\t\t\tif (alpha < 1) {\n\t\t\t\tfor (var i = 0; i < vertexCount; i++) {\n\t\t\t\t\tvar prev = prevVertices[i];\n\t\t\t\t\tvertices[i] += (prev + (nextVertices[i] - prev) * percent - vertices[i]) * alpha;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < vertexCount; i++) {\n\t\t\t\t\tvar prev = prevVertices[i];\n\t\t\t\t\tvertices[i] = prev + (nextVertices[i] - prev) * percent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tspine.IkConstraintTimeline = function (frameCount) {\n\t\tthis.curves = new spine.Curves(frameCount);\n\t\tthis.frames = []; // time, mix, bendDirection, ...\n\t\tthis.frames.length = frameCount * 3;\n\t};\n\tspine.IkConstraintTimeline.prototype = {\n\t\tikConstraintIndex: 0,\n\t\tgetFrameCount: function () {\n\t\t\treturn this.frames.length / 3;\n\t\t},\n\t\tsetFrame: function (frameIndex, time, mix, bendDirection) {\n\t\t\tframeIndex *= 3;\n\t\t\tthis.frames[frameIndex] = time;\n\t\t\tthis.frames[frameIndex + 1] = mix;\n\t\t\tthis.frames[frameIndex + 2] = bendDirection;\n\t\t},\n\t\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\t\tvar frames = this.frames;\n\t\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\t\tvar ikConstraint = skeleton.ikConstraints[this.ikConstraintIndex];\n\n\t\t\tif (time >= frames[frames.length - 3]) { // Time is after last frame.\n\t\t\t\tikConstraint.mix += (frames[frames.length - 2] - ikConstraint.mix) * alpha;\n\t\t\t\tikConstraint.bendDirection = frames[frames.length - 1];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Interpolate between the previous frame and the current frame.\n\t\t\tvar frameIndex = spine.Animation.binarySearch(frames, time, 3);\n\t\t\tvar prevFrameMix = frames[frameIndex + -2/*PREV_FRAME_MIX*/];\n\t\t\tvar frameTime = frames[frameIndex];\n\t\t\tvar percent = 1 - (time - frameTime) / (frames[frameIndex + -3/*PREV_FRAME_TIME*/] - frameTime);\n\t\t\tpercent = this.curves.getCurvePercent(frameIndex / 3 - 1, percent);\n\n\t\t\tvar mix = prevFrameMix + (frames[frameIndex + 1/*FRAME_MIX*/] - prevFrameMix) * percent;\n\t\t\tikConstraint.mix += (mix - ikConstraint.mix) * alpha;\n\t\t\tikConstraint.bendDirection = frames[frameIndex + -1/*PREV_FRAME_BEND_DIRECTION*/];\n\t\t}\n\t};\n\n\tspine.FlipXTimeline = function (frameCount) {\n\t\tthis.curves = new spine.Curves(frameCount);\n\t\tthis.frames = []; // time, flip, ...\n\t\tthis.frames.length = frameCount * 2;\n\t};\n\tspine.FlipXTimeline.prototype = {\n\t\tboneIndex: 0,\n\t\tgetFrameCount: function () {\n\t\t\treturn this.frames.length / 2;\n\t\t},\n\t\tsetFrame: function (frameIndex, time, flip) {\n\t\t\tframeIndex *= 2;\n\t\t\tthis.frames[frameIndex] = time;\n\t\t\tthis.frames[frameIndex + 1] = flip ? 1 : 0;\n\t\t},\n\t\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\t\tvar frames = this.frames;\n\t\t\tif (time < frames[0]) {\n\t\t\t\tif (lastTime > time) this.apply(skeleton, lastTime, Number.MAX_VALUE, null, 0);\n\t\t\t\treturn;\n\t\t\t} else if (lastTime > time) //\n\t\t\t\tlastTime = -1;\n\t\t\tvar frameIndex = (time >= frames[frames.length - 2] ? frames.length : spine.Animation.binarySearch(frames, time, 2)) - 2;\n\t\t\tif (frames[frameIndex] < lastTime) return;\n\t\t\tskeleton.bones[boneIndex].flipX = frames[frameIndex + 1] != 0;\n\t\t}\n\t};\n\n\tspine.FlipYTimeline = function (frameCount) {\n\t\tthis.curves = new spine.Curves(frameCount);\n\t\tthis.frames = []; // time, flip, ...\n\t\tthis.frames.length = frameCount * 2;\n\t};\n\tspine.FlipYTimeline.prototype = {\n\t\tboneIndex: 0,\n\t\tgetFrameCount: function () {\n\t\t\treturn this.frames.length / 2;\n\t\t},\n\t\tsetFrame: function (frameIndex, time, flip) {\n\t\t\tframeIndex *= 2;\n\t\t\tthis.frames[frameIndex] = time;\n\t\t\tthis.frames[frameIndex + 1] = flip ? 1 : 0;\n\t\t},\n\t\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\t\tvar frames = this.frames;\n\t\t\tif (time < frames[0]) {\n\t\t\t\tif (lastTime > time) this.apply(skeleton, lastTime, Number.MAX_VALUE, null, 0);\n\t\t\t\treturn;\n\t\t\t} else if (lastTime > time) //\n\t\t\t\tlastTime = -1;\n\t\t\tvar frameIndex = (time >= frames[frames.length - 2] ? frames.length : spine.Animation.binarySearch(frames, time, 2)) - 2;\n\t\t\tif (frames[frameIndex] < lastTime) return;\n\t\t\tskeleton.bones[boneIndex].flipY = frames[frameIndex + 1] != 0;\n\t\t}\n\t};\n\n\tspine.SkeletonData = function () {\n\t\tthis.bones = [];\n\t\tthis.slots = [];\n\t\tthis.skins = [];\n\t\tthis.events = [];\n\t\tthis.animations = [];\n\t\tthis.ikConstraints = [];\n\t};\n\tspine.SkeletonData.prototype = {\n\t\tname: null,\n\t\tdefaultSkin: null,\n\t\twidth: 0, height: 0,\n\t\tversion: null, hash: null,\n\t\t/** @return May be null. */\n\t\tfindBone: function (boneName) {\n\t\t\tvar bones = this.bones;\n\t\t\tfor (var i = 0, n = bones.length; i < n; i++)\n\t\t\t\tif (bones[i].name == boneName) return bones[i];\n\t\t\treturn null;\n\t\t},\n\t\t/** @return -1 if the bone was not found. */\n\t\tfindBoneIndex: function (boneName) {\n\t\t\tvar bones = this.bones;\n\t\t\tfor (var i = 0, n = bones.length; i < n; i++)\n\t\t\t\tif (bones[i].name == boneName) return i;\n\t\t\treturn -1;\n\t\t},\n\t\t/** @return May be null. */\n\t\tfindSlot: function (slotName) {\n\t\t\tvar slots = this.slots;\n\t\t\tfor (var i = 0, n = slots.length; i < n; i++) {\n\t\t\t\tif (slots[i].name == slotName) return slot[i];\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\t/** @return -1 if the bone was not found. */\n\t\tfindSlotIndex: function (slotName) {\n\t\t\tvar slots = this.slots;\n\t\t\tfor (var i = 0, n = slots.length; i < n; i++)\n\t\t\t\tif (slots[i].name == slotName) return i;\n\t\t\treturn -1;\n\t\t},\n\t\t/** @return May be null. */\n\t\tfindSkin: function (skinName) {\n\t\t\tvar skins = this.skins;\n\t\t\tfor (var i = 0, n = skins.length; i < n; i++)\n\t\t\t\tif (skins[i].name == skinName) return skins[i];\n\t\t\treturn null;\n\t\t},\n\t\t/** @return May be null. */\n\t\tfindEvent: function (eventName) {\n\t\t\tvar events = this.events;\n\t\t\tfor (var i = 0, n = events.length; i < n; i++)\n\t\t\t\tif (events[i].name == eventName) return events[i];\n\t\t\treturn null;\n\t\t},\n\t\t/** @return May be null. */\n\t\tfindAnimation: function (animationName) {\n\t\t\tvar animations = this.animations;\n\t\t\tfor (var i = 0, n = animations.length; i < n; i++)\n\t\t\t\tif (animations[i].name == animationName) return animations[i];\n\t\t\treturn null;\n\t\t},\n\t\t/** @return May be null. */\n\t\tfindIkConstraint: function (ikConstraintName) {\n\t\t\tvar ikConstraints = this.ikConstraints;\n\t\t\tfor (var i = 0, n = ikConstraints.length; i < n; i++)\n\t\t\t\tif (ikConstraints[i].name == ikConstraintName) return ikConstraints[i];\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tspine.Skeleton = function (skeletonData) {\n\t\tthis.data = skeletonData;\n\n\t\tthis.bones = [];\n\t\tfor (var i = 0, n = skeletonData.bones.length; i < n; i++) {\n\t\t\tvar boneData = skeletonData.bones[i];\n\t\t\tvar parent = !boneData.parent ? null : this.bones[skeletonData.bones.indexOf(boneData.parent)];\n\t\t\tthis.bones.push(new spine.Bone(boneData, this, parent));\n\t\t}\n\n\t\tthis.slots = [];\n\t\tthis.drawOrder = [];\n\t\tfor (var i = 0, n = skeletonData.slots.length; i < n; i++) {\n\t\t\tvar slotData = skeletonData.slots[i];\n\t\t\tvar bone = this.bones[skeletonData.bones.indexOf(slotData.boneData)];\n\t\t\tvar slot = new spine.Slot(slotData, bone);\n\t\t\tthis.slots.push(slot);\n\t\t\tthis.drawOrder.push(slot);\n\t\t}\n\n\t\tthis.ikConstraints = [];\n\t\tfor (var i = 0, n = skeletonData.ikConstraints.length; i < n; i++)\n\t\t\tthis.ikConstraints.push(new spine.IkConstraint(skeletonData.ikConstraints[i], this));\n\n\t\tthis.boneCache = [];\n\t\tthis.updateCache();\n\t};\n\tspine.Skeleton.prototype = {\n\t\tx: 0, y: 0,\n\t\tskin: null,\n\t\tr: 1, g: 1, b: 1, a: 1,\n\t\ttime: 0,\n\t\tflipX: false, flipY: false,\n\t\t/** Caches information about bones and IK constraints. Must be called if bones or IK constraints are added or removed. */\n\t\tupdateCache: function () {\n\t\t\tvar ikConstraints = this.ikConstraints;\n\t\t\tvar ikConstraintsCount = ikConstraints.length;\n\n\t\t\tvar arrayCount = ikConstraintsCount + 1;\n\t\t\tvar boneCache = this.boneCache;\n\t\t\tif (boneCache.length > arrayCount) boneCache.length = arrayCount;\n\t\t\tfor (var i = 0, n = boneCache.length; i < n; i++)\n\t\t\t\tboneCache[i].length = 0;\n\t\t\twhile (boneCache.length < arrayCount)\n\t\t\t\tboneCache[boneCache.length] = [];\n\n\t\t\tvar nonIkBones = boneCache[0];\n\t\t\tvar bones = this.bones;\n\n\t\t\touter:\n\t\t\tfor (var i = 0, n = bones.length; i < n; i++) {\n\t\t\t\tvar bone = bones[i];\n\t\t\t\tvar current = bone;\n\t\t\t\tdo {\n\t\t\t\t\tfor (var ii = 0; ii < ikConstraintsCount; ii++) {\n\t\t\t\t\t\tvar ikConstraint = ikConstraints[ii];\n\t\t\t\t\t\tvar parent = ikConstraint.bones[0];\n\t\t\t\t\t\tvar child= ikConstraint.bones[ikConstraint.bones.length - 1];\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tif (current == child) {\n\t\t\t\t\t\t\t\tboneCache[ii].push(bone);\n\t\t\t\t\t\t\t\tboneCache[ii + 1].push(bone);\n\t\t\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (child == parent) break;\n\t\t\t\t\t\t\tchild = child.parent;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcurrent = current.parent;\n\t\t\t\t} while (current);\n\t\t\t\tnonIkBones[nonIkBones.length] = bone;\n\t\t\t}\n\t\t},\n\t\t/** Updates the world transform for each bone. */\n\t\tupdateWorldTransform: function () {\n\t\t\tvar bones = this.bones;\n\t\t\tfor (var i = 0, n = bones.length; i < n; i++) {\n\t\t\t\tvar bone = bones[i];\n\t\t\t\tbone.rotationIK = bone.rotation;\n\t\t\t}\n\t\t\tvar i = 0, last = this.boneCache.length - 1;\n\t\t\twhile (true) {\n\t\t\t\tvar cacheBones = this.boneCache[i];\n\t\t\t\tfor (var ii = 0, nn = cacheBones.length; ii < nn; ii++)\n\t\t\t\t\tcacheBones[ii].updateWorldTransform();\n\t\t\t\tif (i == last) break;\n\t\t\t\tthis.ikConstraints[i].apply();\n\t\t\t\ti++;\n\t\t\t}\n\t\t},\n\t\t/** Sets the bones and slots to their setup pose values. */\n\t\tsetToSetupPose: function () {\n\t\t\tthis.setBonesToSetupPose();\n\t\t\tthis.setSlotsToSetupPose();\n\t\t},\n\t\tsetBonesToSetupPose: function () {\n\t\t\tvar bones = this.bones;\n\t\t\tfor (var i = 0, n = bones.length; i < n; i++)\n\t\t\t\tbones[i].setToSetupPose();\n\n\t\t\tvar ikConstraints = this.ikConstraints;\n\t\t\tfor (var i = 0, n = ikConstraints.length; i < n; i++) {\n\t\t\t\tvar ikConstraint = ikConstraints[i];\n\t\t\t\tikConstraint.bendDirection = ikConstraint.data.bendDirection;\n\t\t\t\tikConstraint.mix = ikConstraint.data.mix;\n\t\t\t}\n\t\t},\n\t\tsetSlotsToSetupPose: function () {\n\t\t\tvar slots = this.slots;\n\t\t\tvar drawOrder = this.drawOrder;\n\t\t\tfor (var i = 0, n = slots.length; i < n; i++) {\n\t\t\t\tdrawOrder[i] = slots[i];\n\t\t\t\tslots[i].setToSetupPose(i);\n\t\t\t}\n\t\t},\n\t\t/** @return May return null. */\n\t\tgetRootBone: function () {\n\t\t\treturn this.bones.length ? this.bones[0] : null;\n\t\t},\n\t\t/** @return May be null. */\n\t\tfindBone: function (boneName) {\n\t\t\tvar bones = this.bones;\n\t\t\tfor (var i = 0, n = bones.length; i < n; i++)\n\t\t\t\tif (bones[i].data.name == boneName) return bones[i];\n\t\t\treturn null;\n\t\t},\n\t\t/** @return -1 if the bone was not found. */\n\t\tfindBoneIndex: function (boneName) {\n\t\t\tvar bones = this.bones;\n\t\t\tfor (var i = 0, n = bones.length; i < n; i++)\n\t\t\t\tif (bones[i].data.name == boneName) return i;\n\t\t\treturn -1;\n\t\t},\n\t\t/** @return May be null. */\n\t\tfindSlot: function (slotName) {\n\t\t\tvar slots = this.slots;\n\t\t\tfor (var i = 0, n = slots.length; i < n; i++)\n\t\t\t\tif (slots[i].data.name == slotName) return slots[i];\n\t\t\treturn null;\n\t\t},\n\t\t/** @return -1 if the bone was not found. */\n\t\tfindSlotIndex: function (slotName) {\n\t\t\tvar slots = this.slots;\n\t\t\tfor (var i = 0, n = slots.length; i < n; i++)\n\t\t\t\tif (slots[i].data.name == slotName) return i;\n\t\t\treturn -1;\n\t\t},\n\t\tsetSkinByName: function (skinName) {\n\t\t\tvar skin = this.data.findSkin(skinName);\n\t\t\tif (!skin) throw \"Skin not found: \" + skinName;\n\t\t\tthis.setSkin(skin);\n\t\t},\n\t\t/** Sets the skin used to look up attachments before looking in the {@link SkeletonData#getDefaultSkin() default skin}.\n\t\t * Attachments from the new skin are attached if the corresponding attachment from the old skin was attached. If there was\n\t\t * no old skin, each slot's setup mode attachment is attached from the new skin.\n\t\t * @param newSkin May be null. */\n\t\tsetSkin: function (newSkin) {\n\t\t\tif (newSkin) {\n\t\t\t\tif (this.skin)\n\t\t\t\t\tnewSkin._attachAll(this, this.skin);\n\t\t\t\telse {\n\t\t\t\t\tvar slots = this.slots;\n\t\t\t\t\tfor (var i = 0, n = slots.length; i < n; i++) {\n\t\t\t\t\t\tvar slot = slots[i];\n\t\t\t\t\t\tvar name = slot.data.attachmentName;\n\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\tvar attachment = newSkin.getAttachment(i, name);\n\t\t\t\t\t\t\tif (attachment) slot.setAttachment(attachment);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.skin = newSkin;\n\t\t},\n\t\t/** @return May be null. */\n\t\tgetAttachmentBySlotName: function (slotName, attachmentName) {\n\t\t\treturn this.getAttachmentBySlotIndex(this.data.findSlotIndex(slotName), attachmentName);\n\t\t},\n\t\t/** @return May be null. */\n\t\tgetAttachmentBySlotIndex: function (slotIndex, attachmentName) {\n\t\t\tif (this.skin) {\n\t\t\t\tvar attachment = this.skin.getAttachment(slotIndex, attachmentName);\n\t\t\t\tif (attachment) return attachment;\n\t\t\t}\n\t\t\tif (this.data.defaultSkin) return this.data.defaultSkin.getAttachment(slotIndex, attachmentName);\n\t\t\treturn null;\n\t\t},\n\t\t/** @param attachmentName May be null. */\n\t\tsetAttachment: function (slotName, attachmentName) {\n\t\t\tvar slots = this.slots;\n\t\t\tfor (var i = 0, n = slots.length; i < n; i++) {\n\t\t\t\tvar slot = slots[i];\n\t\t\t\tif (slot.data.name == slotName) {\n\t\t\t\t\tvar attachment = null;\n\t\t\t\t\tif (attachmentName) {\n\t\t\t\t\t\tattachment = this.getAttachmentBySlotIndex(i, attachmentName);\n\t\t\t\t\t\tif (!attachment) throw \"Attachment not found: \" + attachmentName + \", for slot: \" + slotName;\n\t\t\t\t\t}\n\t\t\t\t\tslot.setAttachment(attachment);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow \"Slot not found: \" + slotName;\n\t\t},\n\t\t/** @return May be null. */\n\t\tfindIkConstraint: function (ikConstraintName) {\n\t\t\tvar ikConstraints = this.ikConstraints;\n\t\t\tfor (var i = 0, n = ikConstraints.length; i < n; i++)\n\t\t\t\tif (ikConstraints[i].data.name == ikConstraintName) return ikConstraints[i];\n\t\t\treturn null;\n\t\t},\n\t\tupdate: function (delta) {\n\t\t\tthis.time += delta;\n\t\t}\n\t};\n\n\tspine.EventData = function (name) {\n\t\tthis.name = name;\n\t};\n\tspine.EventData.prototype = {\n\t\tintValue: 0,\n\t\tfloatValue: 0,\n\t\tstringValue: null\n\t};\n\n\tspine.Event = function (data) {\n\t\tthis.data = data;\n\t};\n\tspine.Event.prototype = {\n\t\tintValue: 0,\n\t\tfloatValue: 0,\n\t\tstringValue: null\n\t};\n\n\tspine.AttachmentType = {\n\t\tregion: 0,\n\t\tboundingbox: 1,\n\t\tmesh: 2,\n\t\tskinnedmesh: 3\n\t};\n\n\tspine.RegionAttachment = function (name) {\n\t\tthis.name = name;\n\t\tthis.offset = [];\n\t\tthis.offset.length = 8;\n\t\tthis.uvs = [];\n\t\tthis.uvs.length = 8;\n\t};\n\tspine.RegionAttachment.prototype = {\n\t\ttype: spine.AttachmentType.region,\n\t\tx: 0, y: 0,\n\t\trotation: 0,\n\t\tscaleX: 1, scaleY: 1,\n\t\twidth: 0, height: 0,\n\t\tr: 1, g: 1, b: 1, a: 1,\n\t\tpath: null,\n\t\trendererObject: null,\n\t\tregionOffsetX: 0, regionOffsetY: 0,\n\t\tregionWidth: 0, regionHeight: 0,\n\t\tregionOriginalWidth: 0, regionOriginalHeight: 0,\n\t\tsetUVs: function (u, v, u2, v2, rotate) {\n\t\t\tvar uvs = this.uvs;\n\t\t\tif (rotate) {\n\t\t\t\tuvs[2/*X2*/] = u;\n\t\t\t\tuvs[3/*Y2*/] = v2;\n\t\t\t\tuvs[4/*X3*/] = u;\n\t\t\t\tuvs[5/*Y3*/] = v;\n\t\t\t\tuvs[6/*X4*/] = u2;\n\t\t\t\tuvs[7/*Y4*/] = v;\n\t\t\t\tuvs[0/*X1*/] = u2;\n\t\t\t\tuvs[1/*Y1*/] = v2;\n\t\t\t} else {\n\t\t\t\tuvs[0/*X1*/] = u;\n\t\t\t\tuvs[1/*Y1*/] = v2;\n\t\t\t\tuvs[2/*X2*/] = u;\n\t\t\t\tuvs[3/*Y2*/] = v;\n\t\t\t\tuvs[4/*X3*/] = u2;\n\t\t\t\tuvs[5/*Y3*/] = v;\n\t\t\t\tuvs[6/*X4*/] = u2;\n\t\t\t\tuvs[7/*Y4*/] = v2;\n\t\t\t}\n\t\t},\n\t\tupdateOffset: function () {\n\t\t\tvar regionScaleX = this.width / this.regionOriginalWidth * this.scaleX;\n\t\t\tvar regionScaleY = this.height / this.regionOriginalHeight * this.scaleY;\n\t\t\tvar localX = -this.width / 2 * this.scaleX + this.regionOffsetX * regionScaleX;\n\t\t\tvar localY = -this.height / 2 * this.scaleY + this.regionOffsetY * regionScaleY;\n\t\t\tvar localX2 = localX + this.regionWidth * regionScaleX;\n\t\t\tvar localY2 = localY + this.regionHeight * regionScaleY;\n\t\t\tvar radians = this.rotation * spine.degRad;\n\t\t\tvar cos = Math.cos(radians);\n\t\t\tvar sin = Math.sin(radians);\n\t\t\tvar localXCos = localX * cos + this.x;\n\t\t\tvar localXSin = localX * sin;\n\t\t\tvar localYCos = localY * cos + this.y;\n\t\t\tvar localYSin = localY * sin;\n\t\t\tvar localX2Cos = localX2 * cos + this.x;\n\t\t\tvar localX2Sin = localX2 * sin;\n\t\t\tvar localY2Cos = localY2 * cos + this.y;\n\t\t\tvar localY2Sin = localY2 * sin;\n\t\t\tvar offset = this.offset;\n\t\t\toffset[0/*X1*/] = localXCos - localYSin;\n\t\t\toffset[1/*Y1*/] = localYCos + localXSin;\n\t\t\toffset[2/*X2*/] = localXCos - localY2Sin;\n\t\t\toffset[3/*Y2*/] = localY2Cos + localXSin;\n\t\t\toffset[4/*X3*/] = localX2Cos - localY2Sin;\n\t\t\toffset[5/*Y3*/] = localY2Cos + localX2Sin;\n\t\t\toffset[6/*X4*/] = localX2Cos - localYSin;\n\t\t\toffset[7/*Y4*/] = localYCos + localX2Sin;\n\t\t},\n\t\tcomputeVertices: function (x, y, bone, vertices) {\n\t\t\tx += bone.worldX;\n\t\t\ty += bone.worldY;\n\t\t\tvar m00 = bone.m00, m01 = bone.m01, m10 = bone.m10, m11 = bone.m11;\n\t\t\tvar offset = this.offset;\n\t\t\tvertices[0/*X1*/] = offset[0/*X1*/] * m00 + offset[1/*Y1*/] * m01 + x;\n\t\t\tvertices[1/*Y1*/] = offset[0/*X1*/] * m10 + offset[1/*Y1*/] * m11 + y;\n\t\t\tvertices[2/*X2*/] = offset[2/*X2*/] * m00 + offset[3/*Y2*/] * m01 + x;\n\t\t\tvertices[3/*Y2*/] = offset[2/*X2*/] * m10 + offset[3/*Y2*/] * m11 + y;\n\t\t\tvertices[4/*X3*/] = offset[4/*X3*/] * m00 + offset[5/*X3*/] * m01 + x;\n\t\t\tvertices[5/*X3*/] = offset[4/*X3*/] * m10 + offset[5/*X3*/] * m11 + y;\n\t\t\tvertices[6/*X4*/] = offset[6/*X4*/] * m00 + offset[7/*Y4*/] * m01 + x;\n\t\t\tvertices[7/*Y4*/] = offset[6/*X4*/] * m10 + offset[7/*Y4*/] * m11 + y;\n\t\t}\n\t};\n\n\tspine.MeshAttachment = function (name) {\n\t\tthis.name = name;\n\t};\n\tspine.MeshAttachment.prototype = {\n\t\ttype: spine.AttachmentType.mesh,\n\t\tvertices: null,\n\t\tuvs: null,\n\t\tregionUVs: null,\n\t\ttriangles: null,\n\t\thullLength: 0,\n\t\tr: 1, g: 1, b: 1, a: 1,\n\t\tpath: null,\n\t\trendererObject: null,\n\t\tregionU: 0, regionV: 0, regionU2: 0, regionV2: 0, regionRotate: false,\n\t\tregionOffsetX: 0, regionOffsetY: 0,\n\t\tregionWidth: 0, regionHeight: 0,\n\t\tregionOriginalWidth: 0, regionOriginalHeight: 0,\n\t\tedges: null,\n\t\twidth: 0, height: 0,\n\t\tupdateUVs: function () {\n\t\t\tvar width = this.regionU2 - this.regionU, height = this.regionV2 - this.regionV;\n\t\t\tvar n = this.regionUVs.length;\n\t\t\tif (!this.uvs || this.uvs.length != n) {\n\t            this.uvs = new spine.Float32Array(n);\n\t\t\t}\n\t\t\tif (this.regionRotate) {\n\t\t\t\tfor (var i = 0; i < n; i += 2) {\n\t                this.uvs[i] = this.regionU + this.regionUVs[i + 1] * width;\n\t                this.uvs[i + 1] = this.regionV + height - this.regionUVs[i] * height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < n; i += 2) {\n\t                this.uvs[i] = this.regionU + this.regionUVs[i] * width;\n\t                this.uvs[i + 1] = this.regionV + this.regionUVs[i + 1] * height;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcomputeWorldVertices: function (x, y, slot, worldVertices) {\n\t\t\tvar bone = slot.bone;\n\t\t\tx += bone.worldX;\n\t\t\ty += bone.worldY;\n\t\t\tvar m00 = bone.m00, m01 = bone.m01, m10 = bone.m10, m11 = bone.m11;\n\t\t\tvar vertices = this.vertices;\n\t\t\tvar verticesCount = vertices.length;\n\t\t\tif (slot.attachmentVertices.length == verticesCount) vertices = slot.attachmentVertices;\n\t\t\tfor (var i = 0; i < verticesCount; i += 2) {\n\t\t\t\tvar vx = vertices[i];\n\t\t\t\tvar vy = vertices[i + 1];\n\t\t\t\tworldVertices[i] = vx * m00 + vy * m01 + x;\n\t\t\t\tworldVertices[i + 1] = vx * m10 + vy * m11 + y;\n\t\t\t}\n\t\t}\n\t};\n\n\tspine.SkinnedMeshAttachment = function (name) {\n\t\tthis.name = name;\n\t};\n\tspine.SkinnedMeshAttachment.prototype = {\n\t\ttype: spine.AttachmentType.skinnedmesh,\n\t\tbones: null,\n\t\tweights: null,\n\t\tuvs: null,\n\t\tregionUVs: null,\n\t\ttriangles: null,\n\t\thullLength: 0,\n\t\tr: 1, g: 1, b: 1, a: 1,\n\t\tpath: null,\n\t\trendererObject: null,\n\t\tregionU: 0, regionV: 0, regionU2: 0, regionV2: 0, regionRotate: false,\n\t\tregionOffsetX: 0, regionOffsetY: 0,\n\t\tregionWidth: 0, regionHeight: 0,\n\t\tregionOriginalWidth: 0, regionOriginalHeight: 0,\n\t\tedges: null,\n\t\twidth: 0, height: 0,\n\t\tupdateUVs: function (u, v, u2, v2, rotate) {\n\t\t\tvar width = this.regionU2 - this.regionU, height = this.regionV2 - this.regionV;\n\t\t\tvar n = this.regionUVs.length;\n\t\t\tif (!this.uvs || this.uvs.length != n) {\n\t            this.uvs = new spine.Float32Array(n);\n\t\t\t}\n\t\t\tif (this.regionRotate) {\n\t\t\t\tfor (var i = 0; i < n; i += 2) {\n\t                this.uvs[i] = this.regionU + this.regionUVs[i + 1] * width;\n\t                this.uvs[i + 1] = this.regionV + height - this.regionUVs[i] * height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < n; i += 2) {\n\t                this.uvs[i] = this.regionU + this.regionUVs[i] * width;\n\t                this.uvs[i + 1] = this.regionV + this.regionUVs[i + 1] * height;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcomputeWorldVertices: function (x, y, slot, worldVertices) {\n\t\t\tvar skeletonBones = slot.bone.skeleton.bones;\n\t\t\tvar weights = this.weights;\n\t\t\tvar bones = this.bones;\n\n\t\t\tvar w = 0, v = 0, b = 0, f = 0, n = bones.length, nn;\n\t\t\tvar wx, wy, bone, vx, vy, weight;\n\t\t\tif (!slot.attachmentVertices.length) {\n\t\t\t\tfor (; v < n; w += 2) {\n\t\t\t\t\twx = 0;\n\t\t\t\t\twy = 0;\n\t\t\t\t\tnn = bones[v++] + v;\n\t\t\t\t\tfor (; v < nn; v++, b += 3) {\n\t\t\t\t\t\tbone = skeletonBones[bones[v]];\n\t\t\t\t\t\tvx = weights[b];\n\t\t\t\t\t\tvy = weights[b + 1];\n\t\t\t\t\t\tweight = weights[b + 2];\n\t\t\t\t\t\twx += (vx * bone.m00 + vy * bone.m01 + bone.worldX) * weight;\n\t\t\t\t\t\twy += (vx * bone.m10 + vy * bone.m11 + bone.worldY) * weight;\n\t\t\t\t\t}\n\t\t\t\t\tworldVertices[w] = wx + x;\n\t\t\t\t\tworldVertices[w + 1] = wy + y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar ffd = slot.attachmentVertices;\n\t\t\t\tfor (; v < n; w += 2) {\n\t\t\t\t\twx = 0;\n\t\t\t\t\twy = 0;\n\t\t\t\t\tnn = bones[v++] + v;\n\t\t\t\t\tfor (; v < nn; v++, b += 3, f += 2) {\n\t\t\t\t\t\tbone = skeletonBones[bones[v]];\n\t\t\t\t\t\tvx = weights[b] + ffd[f];\n\t\t\t\t\t\tvy = weights[b + 1] + ffd[f + 1];\n\t\t\t\t\t\tweight = weights[b + 2];\n\t\t\t\t\t\twx += (vx * bone.m00 + vy * bone.m01 + bone.worldX) * weight;\n\t\t\t\t\t\twy += (vx * bone.m10 + vy * bone.m11 + bone.worldY) * weight;\n\t\t\t\t\t}\n\t\t\t\t\tworldVertices[w] = wx + x;\n\t\t\t\t\tworldVertices[w + 1] = wy + y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tspine.BoundingBoxAttachment = function (name) {\n\t\tthis.name = name;\n\t\tthis.vertices = [];\n\t};\n\tspine.BoundingBoxAttachment.prototype = {\n\t\ttype: spine.AttachmentType.boundingbox,\n\t\tcomputeWorldVertices: function (x, y, bone, worldVertices) {\n\t\t\tx += bone.worldX;\n\t\t\ty += bone.worldY;\n\t\t\tvar m00 = bone.m00, m01 = bone.m01, m10 = bone.m10, m11 = bone.m11;\n\t\t\tvar vertices = this.vertices;\n\t\t\tfor (var i = 0, n = vertices.length; i < n; i += 2) {\n\t\t\t\tvar px = vertices[i];\n\t\t\t\tvar py = vertices[i + 1];\n\t\t\t\tworldVertices[i] = px * m00 + py * m01 + x;\n\t\t\t\tworldVertices[i + 1] = px * m10 + py * m11 + y;\n\t\t\t}\n\t\t}\n\t};\n\n\tspine.AnimationStateData = function (skeletonData) {\n\t\tthis.skeletonData = skeletonData;\n\t\tthis.animationToMixTime = {};\n\t};\n\tspine.AnimationStateData.prototype = {\n\t\tdefaultMix: 0,\n\t\tsetMixByName: function (fromName, toName, duration) {\n\t\t\tvar from = this.skeletonData.findAnimation(fromName);\n\t\t\tif (!from) throw \"Animation not found: \" + fromName;\n\t\t\tvar to = this.skeletonData.findAnimation(toName);\n\t\t\tif (!to) throw \"Animation not found: \" + toName;\n\t\t\tthis.setMix(from, to, duration);\n\t\t},\n\t\tsetMix: function (from, to, duration) {\n\t\t\tthis.animationToMixTime[from.name + \":\" + to.name] = duration;\n\t\t},\n\t\tgetMix: function (from, to) {\n\t\t\tvar key = from.name + \":\" + to.name;\n\t\t\treturn this.animationToMixTime.hasOwnProperty(key) ? this.animationToMixTime[key] : this.defaultMix;\n\t\t}\n\t};\n\n\tspine.TrackEntry = function () {};\n\tspine.TrackEntry.prototype = {\n\t\tnext: null, previous: null,\n\t\tanimation: null,\n\t\tloop: false,\n\t\tdelay: 0, time: 0, lastTime: -1, endTime: 0,\n\t\ttimeScale: 1,\n\t\tmixTime: 0, mixDuration: 0, mix: 1,\n\t\tonStart: null, onEnd: null, onComplete: null, onEvent: null\n\t};\n\n\tspine.AnimationState = function (stateData) {\n\t\tthis.data = stateData;\n\t\tthis.tracks = [];\n\t\tthis.events = [];\n\t};\n\tspine.AnimationState.prototype = {\n\t\tonStart: null,\n\t\tonEnd: null,\n\t\tonComplete: null,\n\t\tonEvent: null,\n\t\ttimeScale: 1,\n\t\tupdate: function (delta) {\n\t\t\tdelta *= this.timeScale;\n\t\t\tfor (var i = 0; i < this.tracks.length; i++) {\n\t\t\t\tvar current = this.tracks[i];\n\t\t\t\tif (!current) continue;\n\n\t\t\t\tcurrent.time += delta * current.timeScale;\n\t\t\t\tif (current.previous) {\n\t\t\t\t\tvar previousDelta = delta * current.previous.timeScale;\n\t\t\t\t\tcurrent.previous.time += previousDelta;\n\t\t\t\t\tcurrent.mixTime += previousDelta;\n\t\t\t\t}\n\n\t\t\t\tvar next = current.next;\n\t\t\t\tif (next) {\n\t\t\t\t\tnext.time = current.lastTime - next.delay;\n\t\t\t\t\tif (next.time >= 0) this.setCurrent(i, next);\n\t\t\t\t} else {\n\t\t\t\t\t// End non-looping animation when it reaches its end time and there is no next entry.\n\t\t\t\t\tif (!current.loop && current.lastTime >= current.endTime) this.clearTrack(i);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tapply: function (skeleton) {\n\t\t\tfor (var i = 0; i < this.tracks.length; i++) {\n\t\t\t\tvar current = this.tracks[i];\n\t\t\t\tif (!current) continue;\n\n\t\t\t\tthis.events.length = 0;\n\n\t\t\t\tvar time = current.time;\n\t\t\t\tvar lastTime = current.lastTime;\n\t\t\t\tvar endTime = current.endTime;\n\t\t\t\tvar loop = current.loop;\n\t\t\t\tif (!loop && time > endTime) time = endTime;\n\n\t\t\t\tvar previous = current.previous;\n\t\t\t\tif (!previous) {\n\t\t\t\t\tif (current.mix == 1)\n\t\t\t\t\t\tcurrent.animation.apply(skeleton, current.lastTime, time, loop, this.events);\n\t\t\t\t\telse\n\t\t\t\t\t\tcurrent.animation.mix(skeleton, current.lastTime, time, loop, this.events, current.mix);\n\t\t\t\t} else {\n\t\t\t\t\tvar previousTime = previous.time;\n\t\t\t\t\tif (!previous.loop && previousTime > previous.endTime) previousTime = previous.endTime;\n\t\t\t\t\tprevious.animation.apply(skeleton, previousTime, previousTime, previous.loop, null);\n\n\t\t\t\t\tvar alpha = current.mixTime / current.mixDuration * current.mix;\n\t\t\t\t\tif (alpha >= 1) {\n\t\t\t\t\t\talpha = 1;\n\t\t\t\t\t\tcurrent.previous = null;\n\t\t\t\t\t}\n\t\t\t\t\tcurrent.animation.mix(skeleton, current.lastTime, time, loop, this.events, alpha);\n\t\t\t\t}\n\n\t\t\t\tfor (var ii = 0, nn = this.events.length; ii < nn; ii++) {\n\t\t\t\t\tvar event = this.events[ii];\n\t\t\t\t\tif (current.onEvent) current.onEvent(i, event);\n\t\t\t\t\tif (this.onEvent) this.onEvent(i, event);\n\t\t\t\t}\n\n\t\t\t\t// Check if completed the animation or a loop iteration.\n\t\t\t\tif (loop ? (lastTime % endTime > time % endTime) : (lastTime < endTime && time >= endTime)) {\n\t\t\t\t\tvar count = Math.floor(time / endTime);\n\t\t\t\t\tif (current.onComplete) current.onComplete(i, count);\n\t\t\t\t\tif (this.onComplete) this.onComplete(i, count);\n\t\t\t\t}\n\n\t\t\t\tcurrent.lastTime = current.time;\n\t\t\t}\n\t\t},\n\t\tclearTracks: function () {\n\t\t\tfor (var i = 0, n = this.tracks.length; i < n; i++)\n\t\t\t\tthis.clearTrack(i);\n\t\t\tthis.tracks.length = 0;\n\t\t},\n\t\tclearTrack: function (trackIndex) {\n\t\t\tif (trackIndex >= this.tracks.length) return;\n\t\t\tvar current = this.tracks[trackIndex];\n\t\t\tif (!current) return;\n\n\t\t\tif (current.onEnd) current.onEnd(trackIndex);\n\t\t\tif (this.onEnd) this.onEnd(trackIndex);\n\n\t\t\tthis.tracks[trackIndex] = null;\n\t\t},\n\t\t_expandToIndex: function (index) {\n\t\t\tif (index < this.tracks.length) return this.tracks[index];\n\t\t\twhile (index >= this.tracks.length)\n\t\t\t\tthis.tracks.push(null);\n\t\t\treturn null;\n\t\t},\n\t\tsetCurrent: function (index, entry) {\n\t\t\tvar current = this._expandToIndex(index);\n\t\t\tif (current) {\n\t\t\t\tvar previous = current.previous;\n\t\t\t\tcurrent.previous = null;\n\n\t\t\t\tif (current.onEnd) current.onEnd(index);\n\t\t\t\tif (this.onEnd) this.onEnd(index);\n\n\t\t\t\tentry.mixDuration = this.data.getMix(current.animation, entry.animation);\n\t\t\t\tif (entry.mixDuration > 0) {\n\t\t\t\t\tentry.mixTime = 0;\n\t\t\t\t\t// If a mix is in progress, mix from the closest animation.\n\t\t\t\t\tif (previous && current.mixTime / current.mixDuration < 0.5)\n\t\t\t\t\t\tentry.previous = previous;\n\t\t\t\t\telse\n\t\t\t\t\t\tentry.previous = current;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.tracks[index] = entry;\n\n\t\t\tif (entry.onStart) entry.onStart(index);\n\t\t\tif (this.onStart) this.onStart(index);\n\t\t},\n\t\tsetAnimationByName: function (trackIndex, animationName, loop) {\n\t\t\tvar animation = this.data.skeletonData.findAnimation(animationName);\n\t\t\tif (!animation) throw \"Animation not found: \" + animationName;\n\t\t\treturn this.setAnimation(trackIndex, animation, loop);\n\t\t},\n\t\t/** Set the current animation. Any queued animations are cleared. */\n\t\tsetAnimation: function (trackIndex, animation, loop) {\n\t\t\tvar entry = new spine.TrackEntry();\n\t\t\tentry.animation = animation;\n\t\t\tentry.loop = loop;\n\t\t\tentry.endTime = animation.duration;\n\t\t\tthis.setCurrent(trackIndex, entry);\n\t\t\treturn entry;\n\t\t},\n\t\taddAnimationByName: function (trackIndex, animationName, loop, delay) {\n\t\t\tvar animation = this.data.skeletonData.findAnimation(animationName);\n\t\t\tif (!animation) throw \"Animation not found: \" + animationName;\n\t\t\treturn this.addAnimation(trackIndex, animation, loop, delay);\n\t\t},\n\t\t/** Adds an animation to be played delay seconds after the current or last queued animation.\n\t\t * @param delay May be <= 0 to use duration of previous animation minus any mix duration plus the negative delay. */\n\t\taddAnimation: function (trackIndex, animation, loop, delay) {\n\t\t\tvar entry = new spine.TrackEntry();\n\t\t\tentry.animation = animation;\n\t\t\tentry.loop = loop;\n\t\t\tentry.endTime = animation.duration;\n\n\t\t\tvar last = this._expandToIndex(trackIndex);\n\t\t\tif (last) {\n\t\t\t\twhile (last.next)\n\t\t\t\t\tlast = last.next;\n\t\t\t\tlast.next = entry;\n\t\t\t} else\n\t\t\t\tthis.tracks[trackIndex] = entry;\n\n\t\t\tif (delay <= 0) {\n\t\t\t\tif (last)\n\t\t\t\t\tdelay += last.endTime - this.data.getMix(last.animation, animation);\n\t\t\t\telse\n\t\t\t\t\tdelay = 0;\n\t\t\t}\n\t\t\tentry.delay = delay;\n\n\t\t\treturn entry;\n\t\t},\n\t\t/** May be null. */\n\t\tgetCurrent: function (trackIndex) {\n\t\t\tif (trackIndex >= this.tracks.length) return null;\n\t\t\treturn this.tracks[trackIndex];\n\t\t}\n\t};\n\n\tspine.SkeletonJson = function (attachmentLoader) {\n\t\tthis.attachmentLoader = attachmentLoader;\n\t};\n\tspine.SkeletonJson.prototype = {\n\t\tscale: 1,\n\t\treadSkeletonData: function (root, name) {\n\t\t\tvar skeletonData = new spine.SkeletonData();\n\t\t\tskeletonData.name = name;\n\n\t\t\t// Skeleton.\n\t\t\tvar skeletonMap = root[\"skeleton\"];\n\t\t\tif (skeletonMap) {\n\t\t\t\tskeletonData.hash = skeletonMap[\"hash\"];\n\t\t\t\tskeletonData.version = skeletonMap[\"spine\"];\n\t\t\t\tskeletonData.width = skeletonMap[\"width\"] || 0;\n\t\t\t\tskeletonData.height = skeletonMap[\"height\"] || 0;\n\t\t\t}\n\n\t\t\t// Bones.\n\t\t\tvar bones = root[\"bones\"];\n\t\t\tfor (var i = 0, n = bones.length; i < n; i++) {\n\t\t\t\tvar boneMap = bones[i];\n\t\t\t\tvar parent = null;\n\t\t\t\tif (boneMap[\"parent\"]) {\n\t\t\t\t\tparent = skeletonData.findBone(boneMap[\"parent\"]);\n\t\t\t\t\tif (!parent) throw \"Parent bone not found: \" + boneMap[\"parent\"];\n\t\t\t\t}\n\t\t\t\tvar boneData = new spine.BoneData(boneMap[\"name\"], parent);\n\t\t\t\tboneData.length = (boneMap[\"length\"] || 0) * this.scale;\n\t\t\t\tboneData.x = (boneMap[\"x\"] || 0) * this.scale;\n\t\t\t\tboneData.y = (boneMap[\"y\"] || 0) * this.scale;\n\t\t\t\tboneData.rotation = (boneMap[\"rotation\"] || 0);\n\t\t\t\tboneData.scaleX = boneMap.hasOwnProperty(\"scaleX\") ? boneMap[\"scaleX\"] : 1;\n\t\t\t\tboneData.scaleY = boneMap.hasOwnProperty(\"scaleY\") ? boneMap[\"scaleY\"] : 1;\n\t\t\t\tboneData.inheritScale = boneMap.hasOwnProperty(\"inheritScale\") ? boneMap[\"inheritScale\"] : true;\n\t\t\t\tboneData.inheritRotation = boneMap.hasOwnProperty(\"inheritRotation\") ? boneMap[\"inheritRotation\"] : true;\n\t\t\t\tskeletonData.bones.push(boneData);\n\t\t\t}\n\n\t\t\t// IK constraints.\n\t\t\tvar ik = root[\"ik\"];\n\t\t\tif (ik) {\n\t\t\t\tfor (var i = 0, n = ik.length; i < n; i++) {\n\t\t\t\t\tvar ikMap = ik[i];\n\t\t\t\t\tvar ikConstraintData = new spine.IkConstraintData(ikMap[\"name\"]);\n\n\t\t\t\t\tvar bones = ikMap[\"bones\"];\n\t\t\t\t\tfor (var ii = 0, nn = bones.length; ii < nn; ii++) {\n\t\t\t\t\t\tvar bone = skeletonData.findBone(bones[ii]);\n\t\t\t\t\t\tif (!bone) throw \"IK bone not found: \" + bones[ii];\n\t\t\t\t\t\tikConstraintData.bones.push(bone);\n\t\t\t\t\t}\n\n\t\t\t\t\tikConstraintData.target = skeletonData.findBone(ikMap[\"target\"]);\n\t\t\t\t\tif (!ikConstraintData.target) throw \"Target bone not found: \" + ikMap[\"target\"];\n\n\t\t\t\t\tikConstraintData.bendDirection = (!ikMap.hasOwnProperty(\"bendPositive\") || ikMap[\"bendPositive\"]) ? 1 : -1;\n\t\t\t\t\tikConstraintData.mix = ikMap.hasOwnProperty(\"mix\") ? ikMap[\"mix\"] : 1;\n\n\t\t\t\t\tskeletonData.ikConstraints.push(ikConstraintData);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Slots.\n\t\t\tvar slots = root[\"slots\"];\n\t\t\tfor (var i = 0, n = slots.length; i < n; i++) {\n\t\t\t\tvar slotMap = slots[i];\n\t\t\t\tvar boneData = skeletonData.findBone(slotMap[\"bone\"]);\n\t\t\t\tif (!boneData) throw \"Slot bone not found: \" + slotMap[\"bone\"];\n\t\t\t\tvar slotData = new spine.SlotData(slotMap[\"name\"], boneData);\n\n\t\t\t\tvar color = slotMap[\"color\"];\n\t\t\t\tif (color) {\n\t\t\t\t\tslotData.r = this.toColor(color, 0);\n\t\t\t\t\tslotData.g = this.toColor(color, 1);\n\t\t\t\t\tslotData.b = this.toColor(color, 2);\n\t\t\t\t\tslotData.a = this.toColor(color, 3);\n\t\t\t\t}\n\n\t\t\t\tslotData.attachmentName = slotMap[\"attachment\"];\n\t\t\t\tslotData.additiveBlending = slotMap[\"additive\"] && slotMap[\"additive\"] == \"true\";\n\n\t\t\t\tskeletonData.slots.push(slotData);\n\t\t\t}\n\n\t\t\t// Skins.\n\t\t\tvar skins = root[\"skins\"];\n\t\t\tfor (var skinName in skins) {\n\t\t\t\tif (!skins.hasOwnProperty(skinName)) continue;\n\t\t\t\tvar skinMap = skins[skinName];\n\t\t\t\tvar skin = new spine.Skin(skinName);\n\t\t\t\tfor (var slotName in skinMap) {\n\t\t\t\t\tif (!skinMap.hasOwnProperty(slotName)) continue;\n\t\t\t\t\tvar slotIndex = skeletonData.findSlotIndex(slotName);\n\t\t\t\t\tvar slotEntry = skinMap[slotName];\n\t\t\t\t\tfor (var attachmentName in slotEntry) {\n\t\t\t\t\t\tif (!slotEntry.hasOwnProperty(attachmentName)) continue;\n\t\t\t\t\t\tvar attachment = this.readAttachment(skin, attachmentName, slotEntry[attachmentName]);\n\t\t\t\t\t\tif (attachment) skin.addAttachment(slotIndex, attachmentName, attachment);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tskeletonData.skins.push(skin);\n\t\t\t\tif (skin.name == \"default\") skeletonData.defaultSkin = skin;\n\t\t\t}\n\n\t\t\t// Events.\n\t\t\tvar events = root[\"events\"];\n\t\t\tfor (var eventName in events) {\n\t\t\t\tif (!events.hasOwnProperty(eventName)) continue;\n\t\t\t\tvar eventMap = events[eventName];\n\t\t\t\tvar eventData = new spine.EventData(eventName);\n\t\t\t\teventData.intValue = eventMap[\"int\"] || 0;\n\t\t\t\teventData.floatValue = eventMap[\"float\"] || 0;\n\t\t\t\teventData.stringValue = eventMap[\"string\"] || null;\n\t\t\t\tskeletonData.events.push(eventData);\n\t\t\t}\n\n\t\t\t// Animations.\n\t\t\tvar animations = root[\"animations\"];\n\t\t\tfor (var animationName in animations) {\n\t\t\t\tif (!animations.hasOwnProperty(animationName)) continue;\n\t\t\t\tthis.readAnimation(animationName, animations[animationName], skeletonData);\n\t\t\t}\n\n\t\t\treturn skeletonData;\n\t\t},\n\t\treadAttachment: function (skin, name, map) {\n\t\t\tname = map[\"name\"] || name;\n\n\t\t\tvar type = spine.AttachmentType[map[\"type\"] || \"region\"];\n\t\t\tvar path = map[\"path\"] || name;\n\n\t\t\tvar scale = this.scale;\n\t\t\tif (type == spine.AttachmentType.region) {\n\t\t\t\tvar region = this.attachmentLoader.newRegionAttachment(skin, name, path);\n\t\t\t\tif (!region) return null;\n\t\t\t\tregion.path = path;\n\t\t\t\tregion.x = (map[\"x\"] || 0) * scale;\n\t\t\t\tregion.y = (map[\"y\"] || 0) * scale;\n\t\t\t\tregion.scaleX = map.hasOwnProperty(\"scaleX\") ? map[\"scaleX\"] : 1;\n\t\t\t\tregion.scaleY = map.hasOwnProperty(\"scaleY\") ? map[\"scaleY\"] : 1;\n\t\t\t\tregion.rotation = map[\"rotation\"] || 0;\n\t\t\t\tregion.width = (map[\"width\"] || 0) * scale;\n\t\t\t\tregion.height = (map[\"height\"] || 0) * scale;\n\n\t\t\t\tvar color = map[\"color\"];\n\t\t\t\tif (color) {\n\t\t\t\t\tregion.r = this.toColor(color, 0);\n\t\t\t\t\tregion.g = this.toColor(color, 1);\n\t\t\t\t\tregion.b = this.toColor(color, 2);\n\t\t\t\t\tregion.a = this.toColor(color, 3);\n\t\t\t\t}\n\n\t\t\t\tregion.updateOffset();\n\t\t\t\treturn region;\n\t\t\t} else if (type == spine.AttachmentType.mesh) {\n\t\t\t\tvar mesh = this.attachmentLoader.newMeshAttachment(skin, name, path);\n\t\t\t\tif (!mesh) return null;\n\t\t\t\tmesh.path = path;\n\t\t\t\tmesh.vertices = this.getFloatArray(map, \"vertices\", scale);\n\t\t\t\tmesh.triangles = this.getIntArray(map, \"triangles\");\n\t\t\t\tmesh.regionUVs = this.getFloatArray(map, \"uvs\", 1);\n\t\t\t\tmesh.updateUVs();\n\n\t\t\t\tcolor = map[\"color\"];\n\t\t\t\tif (color) {\n\t\t\t\t\tmesh.r = this.toColor(color, 0);\n\t\t\t\t\tmesh.g = this.toColor(color, 1);\n\t\t\t\t\tmesh.b = this.toColor(color, 2);\n\t\t\t\t\tmesh.a = this.toColor(color, 3);\n\t\t\t\t}\n\n\t\t\t\tmesh.hullLength = (map[\"hull\"] || 0) * 2;\n\t\t\t\tif (map[\"edges\"]) mesh.edges = this.getIntArray(map, \"edges\");\n\t\t\t\tmesh.width = (map[\"width\"] || 0) * scale;\n\t\t\t\tmesh.height = (map[\"height\"] || 0) * scale;\n\t\t\t\treturn mesh;\n\t\t\t} else if (type == spine.AttachmentType.skinnedmesh) {\n\t\t\t\tvar mesh = this.attachmentLoader.newSkinnedMeshAttachment(skin, name, path);\n\t\t\t\tif (!mesh) return null;\n\t\t\t\tmesh.path = path;\n\n\t\t\t\tvar uvs = this.getFloatArray(map, \"uvs\", 1);\n\t\t\t\tvar vertices = this.getFloatArray(map, \"vertices\", 1);\n\t\t\t\tvar weights = [];\n\t\t\t\tvar bones = [];\n\t\t\t\tfor (var i = 0, n = vertices.length; i < n; ) {\n\t\t\t\t\tvar boneCount = vertices[i++] | 0;\n\t\t\t\t\tbones[bones.length] = boneCount;\n\t\t\t\t\tfor (var nn = i + boneCount * 4; i < nn; ) {\n\t\t\t\t\t\tbones[bones.length] = vertices[i];\n\t\t\t\t\t\tweights[weights.length] = vertices[i + 1] * scale;\n\t\t\t\t\t\tweights[weights.length] = vertices[i + 2] * scale;\n\t\t\t\t\t\tweights[weights.length] = vertices[i + 3];\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmesh.bones = bones;\n\t\t\t\tmesh.weights = weights;\n\t\t\t\tmesh.triangles = this.getIntArray(map, \"triangles\");\n\t\t\t\tmesh.regionUVs = uvs;\n\t\t\t\tmesh.updateUVs();\n\n\t\t\t\tcolor = map[\"color\"];\n\t\t\t\tif (color) {\n\t\t\t\t\tmesh.r = this.toColor(color, 0);\n\t\t\t\t\tmesh.g = this.toColor(color, 1);\n\t\t\t\t\tmesh.b = this.toColor(color, 2);\n\t\t\t\t\tmesh.a = this.toColor(color, 3);\n\t\t\t\t}\n\n\t\t\t\tmesh.hullLength = (map[\"hull\"] || 0) * 2;\n\t\t\t\tif (map[\"edges\"]) mesh.edges = this.getIntArray(map, \"edges\");\n\t\t\t\tmesh.width = (map[\"width\"] || 0) * scale;\n\t\t\t\tmesh.height = (map[\"height\"] || 0) * scale;\n\t\t\t\treturn mesh;\n\t\t\t} else if (type == spine.AttachmentType.boundingbox) {\n\t\t\t\tvar attachment = this.attachmentLoader.newBoundingBoxAttachment(skin, name);\n\t\t\t\tvar vertices = map[\"vertices\"];\n\t\t\t\tfor (var i = 0, n = vertices.length; i < n; i++)\n\t\t\t\t\tattachment.vertices.push(vertices[i] * scale);\n\t\t\t\treturn attachment;\n\t\t\t}\n\t\t\tthrow \"Unknown attachment type: \" + type;\n\t\t},\n\t\treadAnimation: function (name, map, skeletonData) {\n\t\t\tvar timelines = [];\n\t\t\tvar duration = 0;\n\n\t\t\tvar slots = map[\"slots\"];\n\t\t\tfor (var slotName in slots) {\n\t\t\t\tif (!slots.hasOwnProperty(slotName)) continue;\n\t\t\t\tvar slotMap = slots[slotName];\n\t\t\t\tvar slotIndex = skeletonData.findSlotIndex(slotName);\n\n\t\t\t\tfor (var timelineName in slotMap) {\n\t\t\t\t\tif (!slotMap.hasOwnProperty(timelineName)) continue;\n\t\t\t\t\tvar values = slotMap[timelineName];\n\t\t\t\t\tif (timelineName == \"color\") {\n\t\t\t\t\t\tvar timeline = new spine.ColorTimeline(values.length);\n\t\t\t\t\t\ttimeline.slotIndex = slotIndex;\n\n\t\t\t\t\t\tvar frameIndex = 0;\n\t\t\t\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\t\tvar valueMap = values[i];\n\t\t\t\t\t\t\tvar color = valueMap[\"color\"];\n\t\t\t\t\t\t\tvar r = this.toColor(color, 0);\n\t\t\t\t\t\t\tvar g = this.toColor(color, 1);\n\t\t\t\t\t\t\tvar b = this.toColor(color, 2);\n\t\t\t\t\t\t\tvar a = this.toColor(color, 3);\n\t\t\t\t\t\t\ttimeline.setFrame(frameIndex, valueMap[\"time\"], r, g, b, a);\n\t\t\t\t\t\t\tthis.readCurve(timeline, frameIndex, valueMap);\n\t\t\t\t\t\t\tframeIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttimelines.push(timeline);\n\t\t\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 5 - 5]);\n\n\t\t\t\t\t} else if (timelineName == \"attachment\") {\n\t\t\t\t\t\tvar timeline = new spine.AttachmentTimeline(values.length);\n\t\t\t\t\t\ttimeline.slotIndex = slotIndex;\n\n\t\t\t\t\t\tvar frameIndex = 0;\n\t\t\t\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\t\tvar valueMap = values[i];\n\t\t\t\t\t\t\ttimeline.setFrame(frameIndex++, valueMap[\"time\"], valueMap[\"name\"]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttimelines.push(timeline);\n\t\t\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() - 1]);\n\n\t\t\t\t\t} else\n\t\t\t\t\t\tthrow \"Invalid timeline type for a slot: \" + timelineName + \" (\" + slotName + \")\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar bones = map[\"bones\"];\n\t\t\tfor (var boneName in bones) {\n\t\t\t\tif (!bones.hasOwnProperty(boneName)) continue;\n\t\t\t\tvar boneIndex = skeletonData.findBoneIndex(boneName);\n\t\t\t\tif (boneIndex == -1) throw \"Bone not found: \" + boneName;\n\t\t\t\tvar boneMap = bones[boneName];\n\n\t\t\t\tfor (var timelineName in boneMap) {\n\t\t\t\t\tif (!boneMap.hasOwnProperty(timelineName)) continue;\n\t\t\t\t\tvar values = boneMap[timelineName];\n\t\t\t\t\tif (timelineName == \"rotate\") {\n\t\t\t\t\t\tvar timeline = new spine.RotateTimeline(values.length);\n\t\t\t\t\t\ttimeline.boneIndex = boneIndex;\n\n\t\t\t\t\t\tvar frameIndex = 0;\n\t\t\t\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\t\tvar valueMap = values[i];\n\t\t\t\t\t\t\ttimeline.setFrame(frameIndex, valueMap[\"time\"], valueMap[\"angle\"]);\n\t\t\t\t\t\t\tthis.readCurve(timeline, frameIndex, valueMap);\n\t\t\t\t\t\t\tframeIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttimelines.push(timeline);\n\t\t\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 2 - 2]);\n\n\t\t\t\t\t} else if (timelineName == \"translate\" || timelineName == \"scale\") {\n\t\t\t\t\t\tvar timeline;\n\t\t\t\t\t\tvar timelineScale = 1;\n\t\t\t\t\t\tif (timelineName == \"scale\")\n\t\t\t\t\t\t\ttimeline = new spine.ScaleTimeline(values.length);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttimeline = new spine.TranslateTimeline(values.length);\n\t\t\t\t\t\t\ttimelineScale = this.scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttimeline.boneIndex = boneIndex;\n\n\t\t\t\t\t\tvar frameIndex = 0;\n\t\t\t\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\t\tvar valueMap = values[i];\n\t\t\t\t\t\t\tvar x = (valueMap[\"x\"] || 0) * timelineScale;\n\t\t\t\t\t\t\tvar y = (valueMap[\"y\"] || 0) * timelineScale;\n\t\t\t\t\t\t\ttimeline.setFrame(frameIndex, valueMap[\"time\"], x, y);\n\t\t\t\t\t\t\tthis.readCurve(timeline, frameIndex, valueMap);\n\t\t\t\t\t\t\tframeIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttimelines.push(timeline);\n\t\t\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 3 - 3]);\n\n\t\t\t\t\t} else if (timelineName == \"flipX\" || timelineName == \"flipY\") {\n\t\t\t\t\t\tvar x = timelineName == \"flipX\";\n\t\t\t\t\t\tvar timeline = x ? new spine.FlipXTimeline(values.length) : new spine.FlipYTimeline(values.length);\n\t\t\t\t\t\ttimeline.boneIndex = boneIndex;\n\n\t\t\t\t\t\tvar field = x ? \"x\" : \"y\";\n\t\t\t\t\t\tvar frameIndex = 0;\n\t\t\t\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\t\tvar valueMap = values[i];\n\t\t\t\t\t\t\ttimeline.setFrame(frameIndex, valueMap[\"time\"], valueMap[field] || false);\n\t\t\t\t\t\t\tframeIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttimelines.push(timeline);\n\t\t\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 2 - 2]);\n\t\t\t\t\t} else\n\t\t\t\t\t\tthrow \"Invalid timeline type for a bone: \" + timelineName + \" (\" + boneName + \")\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ikMap = map[\"ik\"];\n\t\t\tfor (var ikConstraintName in ikMap) {\n\t\t\t\tif (!ikMap.hasOwnProperty(ikConstraintName)) continue;\n\t\t\t\tvar ikConstraint = skeletonData.findIkConstraint(ikConstraintName);\n\t\t\t\tvar values = ikMap[ikConstraintName];\n\t\t\t\tvar timeline = new spine.IkConstraintTimeline(values.length);\n\t\t\t\ttimeline.ikConstraintIndex = skeletonData.ikConstraints.indexOf(ikConstraint);\n\t\t\t\tvar frameIndex = 0;\n\t\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\tvar valueMap = values[i];\n\t\t\t\t\tvar mix = valueMap.hasOwnProperty(\"mix\") ? valueMap[\"mix\"] : 1;\n\t\t\t\t\tvar bendDirection = (!valueMap.hasOwnProperty(\"bendPositive\") || valueMap[\"bendPositive\"]) ? 1 : -1;\n\t\t\t\t\ttimeline.setFrame(frameIndex, valueMap[\"time\"], mix, bendDirection);\n\t\t\t\t\tthis.readCurve(timeline, frameIndex, valueMap);\n\t\t\t\t\tframeIndex++;\n\t\t\t\t}\n\t\t\t\ttimelines.push(timeline);\n\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.frameCount * 3 - 3]);\n\t\t\t}\n\n\t\t\tvar ffd = map[\"ffd\"];\n\t\t\tfor (var skinName in ffd) {\n\t\t\t\tvar skin = skeletonData.findSkin(skinName);\n\t\t\t\tvar slotMap = ffd[skinName];\n\t\t\t\tfor (slotName in slotMap) {\n\t\t\t\t\tvar slotIndex = skeletonData.findSlotIndex(slotName);\n\t\t\t\t\tvar meshMap = slotMap[slotName];\n\t\t\t\t\tfor (var meshName in meshMap) {\n\t\t\t\t\t\tvar values = meshMap[meshName];\n\t\t\t\t\t\tvar timeline = new spine.FfdTimeline(values.length);\n\t\t\t\t\t\tvar attachment = skin.getAttachment(slotIndex, meshName);\n\t\t\t\t\t\tif (!attachment) throw \"FFD attachment not found: \" + meshName;\n\t\t\t\t\t\ttimeline.slotIndex = slotIndex;\n\t\t\t\t\t\ttimeline.attachment = attachment;\n\n\t\t\t\t\t\tvar isMesh = attachment.type == spine.AttachmentType.mesh;\n\t\t\t\t\t\tvar vertexCount;\n\t\t\t\t\t\tif (isMesh)\n\t\t\t\t\t\t\tvertexCount = attachment.vertices.length;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tvertexCount = attachment.weights.length / 3 * 2;\n\n\t\t\t\t\t\tvar frameIndex = 0;\n\t\t\t\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\t\tvar valueMap = values[i];\n\t\t\t\t\t\t\tvar vertices;\n\t\t\t\t\t\t\tif (!valueMap[\"vertices\"]) {\n\t\t\t\t\t\t\t\tif (isMesh)\n\t\t\t\t\t\t\t\t\tvertices = attachment.vertices;\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tvertices = [];\n\t\t\t\t\t\t\t\t\tvertices.length = vertexCount;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar verticesValue = valueMap[\"vertices\"];\n\t\t\t\t\t\t\t\tvar vertices = [];\n\t\t\t\t\t\t\t\tvertices.length = vertexCount;\n\t\t\t\t\t\t\t\tvar start = valueMap[\"offset\"] || 0;\n\t\t\t\t\t\t\t\tvar nn = verticesValue.length;\n\t\t\t\t\t\t\t\tif (this.scale == 1) {\n\t\t\t\t\t\t\t\t\tfor (var ii = 0; ii < nn; ii++)\n\t\t\t\t\t\t\t\t\t\tvertices[ii + start] = verticesValue[ii];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfor (var ii = 0; ii < nn; ii++)\n\t\t\t\t\t\t\t\t\t\tvertices[ii + start] = verticesValue[ii] * this.scale;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (isMesh) {\n\t\t\t\t\t\t\t\t\tvar meshVertices = attachment.vertices;\n\t\t\t\t\t\t\t\t\tfor (var ii = 0, nn = vertices.length; ii < nn; ii++)\n\t\t\t\t\t\t\t\t\t\tvertices[ii] += meshVertices[ii];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttimeline.setFrame(frameIndex, valueMap[\"time\"], vertices);\n\t\t\t\t\t\t\tthis.readCurve(timeline, frameIndex, valueMap);\n\t\t\t\t\t\t\tframeIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttimelines[timelines.length] = timeline;\n\t\t\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.frameCount - 1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar drawOrderValues = map[\"drawOrder\"];\n\t\t\tif (!drawOrderValues) drawOrderValues = map[\"draworder\"];\n\t\t\tif (drawOrderValues) {\n\t\t\t\tvar timeline = new spine.DrawOrderTimeline(drawOrderValues.length);\n\t\t\t\tvar slotCount = skeletonData.slots.length;\n\t\t\t\tvar frameIndex = 0;\n\t\t\t\tfor (var i = 0, n = drawOrderValues.length; i < n; i++) {\n\t\t\t\t\tvar drawOrderMap = drawOrderValues[i];\n\t\t\t\t\tvar drawOrder = null;\n\t\t\t\t\tif (drawOrderMap[\"offsets\"]) {\n\t\t\t\t\t\tdrawOrder = [];\n\t\t\t\t\t\tdrawOrder.length = slotCount;\n\t\t\t\t\t\tfor (var ii = slotCount - 1; ii >= 0; ii--)\n\t\t\t\t\t\t\tdrawOrder[ii] = -1;\n\t\t\t\t\t\tvar offsets = drawOrderMap[\"offsets\"];\n\t\t\t\t\t\tvar unchanged = [];\n\t\t\t\t\t\tunchanged.length = slotCount - offsets.length;\n\t\t\t\t\t\tvar originalIndex = 0, unchangedIndex = 0;\n\t\t\t\t\t\tfor (var ii = 0, nn = offsets.length; ii < nn; ii++) {\n\t\t\t\t\t\t\tvar offsetMap = offsets[ii];\n\t\t\t\t\t\t\tvar slotIndex = skeletonData.findSlotIndex(offsetMap[\"slot\"]);\n\t\t\t\t\t\t\tif (slotIndex == -1) throw \"Slot not found: \" + offsetMap[\"slot\"];\n\t\t\t\t\t\t\t// Collect unchanged items.\n\t\t\t\t\t\t\twhile (originalIndex != slotIndex)\n\t\t\t\t\t\t\t\tunchanged[unchangedIndex++] = originalIndex++;\n\t\t\t\t\t\t\t// Set changed items.\n\t\t\t\t\t\t\tdrawOrder[originalIndex + offsetMap[\"offset\"]] = originalIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Collect remaining unchanged items.\n\t\t\t\t\t\twhile (originalIndex < slotCount)\n\t\t\t\t\t\t\tunchanged[unchangedIndex++] = originalIndex++;\n\t\t\t\t\t\t// Fill in unchanged items.\n\t\t\t\t\t\tfor (var ii = slotCount - 1; ii >= 0; ii--)\n\t\t\t\t\t\t\tif (drawOrder[ii] == -1) drawOrder[ii] = unchanged[--unchangedIndex];\n\t\t\t\t\t}\n\t\t\t\t\ttimeline.setFrame(frameIndex++, drawOrderMap[\"time\"], drawOrder);\n\t\t\t\t}\n\t\t\t\ttimelines.push(timeline);\n\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() - 1]);\n\t\t\t}\n\n\t\t\tvar events = map[\"events\"];\n\t\t\tif (events) {\n\t\t\t\tvar timeline = new spine.EventTimeline(events.length);\n\t\t\t\tvar frameIndex = 0;\n\t\t\t\tfor (var i = 0, n = events.length; i < n; i++) {\n\t\t\t\t\tvar eventMap = events[i];\n\t\t\t\t\tvar eventData = skeletonData.findEvent(eventMap[\"name\"]);\n\t\t\t\t\tif (!eventData) throw \"Event not found: \" + eventMap[\"name\"];\n\t\t\t\t\tvar event = new spine.Event(eventData);\n\t\t\t\t\tevent.intValue = eventMap.hasOwnProperty(\"int\") ? eventMap[\"int\"] : eventData.intValue;\n\t\t\t\t\tevent.floatValue = eventMap.hasOwnProperty(\"float\") ? eventMap[\"float\"] : eventData.floatValue;\n\t\t\t\t\tevent.stringValue = eventMap.hasOwnProperty(\"string\") ? eventMap[\"string\"] : eventData.stringValue;\n\t\t\t\t\ttimeline.setFrame(frameIndex++, eventMap[\"time\"], event);\n\t\t\t\t}\n\t\t\t\ttimelines.push(timeline);\n\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() - 1]);\n\t\t\t}\n\n\t\t\tskeletonData.animations.push(new spine.Animation(name, timelines, duration));\n\t\t},\n\t\treadCurve: function (timeline, frameIndex, valueMap) {\n\t\t\tvar curve = valueMap[\"curve\"];\n\t\t\tif (!curve)\n\t\t\t\ttimeline.curves.setLinear(frameIndex);\n\t\t\telse if (curve == \"stepped\")\n\t\t\t\ttimeline.curves.setStepped(frameIndex);\n\t\t\telse if (curve instanceof Array)\n\t\t\t\ttimeline.curves.setCurve(frameIndex, curve[0], curve[1], curve[2], curve[3]);\n\t\t},\n\t\ttoColor: function (hexString, colorIndex) {\n\t\t\tif (hexString.length != 8) throw \"Color hexidecimal length must be 8, recieved: \" + hexString;\n\t\t\treturn parseInt(hexString.substring(colorIndex * 2, (colorIndex * 2) + 2), 16) / 255;\n\t\t},\n\t\tgetFloatArray: function (map, name, scale) {\n\t\t\tvar list = map[name];\n\t\t\tvar values = new spine.Float32Array(list.length);\n\t\t\tvar i = 0, n = list.length;\n\t\t\tif (scale == 1) {\n\t\t\t\tfor (; i < n; i++)\n\t\t\t\t\tvalues[i] = list[i];\n\t\t\t} else {\n\t\t\t\tfor (; i < n; i++)\n\t\t\t\t\tvalues[i] = list[i] * scale;\n\t\t\t}\n\t\t\treturn values;\n\t\t},\n\t\tgetIntArray: function (map, name) {\n\t\t\tvar list = map[name];\n\t\t\tvar values = new spine.Uint16Array(list.length);\n\t\t\tfor (var i = 0, n = list.length; i < n; i++)\n\t\t\t\tvalues[i] = list[i] | 0;\n\t\t\treturn values;\n\t\t}\n\t};\n\n\tspine.Atlas = function (atlasText, textureLoader) {\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.pages = [];\n\t\tthis.regions = [];\n\n\t\tvar reader = new spine.AtlasReader(atlasText);\n\t\tvar tuple = [];\n\t\ttuple.length = 4;\n\t\tvar page = null;\n\t\twhile (true) {\n\t\t\tvar line = reader.readLine();\n\t\t\tif (line === null) break;\n\t\t\tline = reader.trim(line);\n\t\t\tif (!line.length)\n\t\t\t\tpage = null;\n\t\t\telse if (!page) {\n\t\t\t\tpage = new spine.AtlasPage();\n\t\t\t\tpage.name = line;\n\n\t\t\t\tif (reader.readTuple(tuple) == 2) { // size is only optional for an atlas packed with an old TexturePacker.\n\t\t\t\t\tpage.width = parseInt(tuple[0]);\n\t\t\t\t\tpage.height = parseInt(tuple[1]);\n\t\t\t\t\treader.readTuple(tuple);\n\t\t\t\t}\n\t\t\t\tpage.format = spine.Atlas.Format[tuple[0]];\n\n\t\t\t\treader.readTuple(tuple);\n\t\t\t\tpage.minFilter = spine.Atlas.TextureFilter[tuple[0]];\n\t\t\t\tpage.magFilter = spine.Atlas.TextureFilter[tuple[1]];\n\n\t\t\t\tvar direction = reader.readValue();\n\t\t\t\tpage.uWrap = spine.Atlas.TextureWrap.clampToEdge;\n\t\t\t\tpage.vWrap = spine.Atlas.TextureWrap.clampToEdge;\n\t\t\t\tif (direction == \"x\")\n\t\t\t\t\tpage.uWrap = spine.Atlas.TextureWrap.repeat;\n\t\t\t\telse if (direction == \"y\")\n\t\t\t\t\tpage.vWrap = spine.Atlas.TextureWrap.repeat;\n\t\t\t\telse if (direction == \"xy\")\n\t\t\t\t\tpage.uWrap = page.vWrap = spine.Atlas.TextureWrap.repeat;\n\n\t\t\t\ttextureLoader.load(page, line, this);\n\n\t\t\t\tthis.pages.push(page);\n\n\t\t\t} else {\n\t\t\t\tvar region = new spine.AtlasRegion();\n\t\t\t\tregion.name = line;\n\t\t\t\tregion.page = page;\n\n\t\t\t\tregion.rotate = reader.readValue() == \"true\";\n\n\t\t\t\treader.readTuple(tuple);\n\t\t\t\tvar x = parseInt(tuple[0]);\n\t\t\t\tvar y = parseInt(tuple[1]);\n\n\t\t\t\treader.readTuple(tuple);\n\t\t\t\tvar width = parseInt(tuple[0]);\n\t\t\t\tvar height = parseInt(tuple[1]);\n\n\t\t\t\tregion.u = x / page.width;\n\t\t\t\tregion.v = y / page.height;\n\t\t\t\tif (region.rotate) {\n\t\t\t\t\tregion.u2 = (x + height) / page.width;\n\t\t\t\t\tregion.v2 = (y + width) / page.height;\n\t\t\t\t} else {\n\t\t\t\t\tregion.u2 = (x + width) / page.width;\n\t\t\t\t\tregion.v2 = (y + height) / page.height;\n\t\t\t\t}\n\t\t\t\tregion.x = x;\n\t\t\t\tregion.y = y;\n\t\t\t\tregion.width = Math.abs(width);\n\t\t\t\tregion.height = Math.abs(height);\n\n\t\t\t\tif (reader.readTuple(tuple) == 4) { // split is optional\n\t\t\t\t\tregion.splits = [parseInt(tuple[0]), parseInt(tuple[1]), parseInt(tuple[2]), parseInt(tuple[3])];\n\n\t\t\t\t\tif (reader.readTuple(tuple) == 4) { // pad is optional, but only present with splits\n\t\t\t\t\t\tregion.pads = [parseInt(tuple[0]), parseInt(tuple[1]), parseInt(tuple[2]), parseInt(tuple[3])];\n\n\t\t\t\t\t\treader.readTuple(tuple);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tregion.originalWidth = parseInt(tuple[0]);\n\t\t\t\tregion.originalHeight = parseInt(tuple[1]);\n\n\t\t\t\treader.readTuple(tuple);\n\t\t\t\tregion.offsetX = parseInt(tuple[0]);\n\t\t\t\tregion.offsetY = parseInt(tuple[1]);\n\n\t\t\t\tregion.index = parseInt(reader.readValue());\n\n\t\t\t\tthis.regions.push(region);\n\t\t\t}\n\t\t}\n\t};\n\tspine.Atlas.prototype = {\n\t\tfindRegion: function (name) {\n\t\t\tvar regions = this.regions;\n\t\t\tfor (var i = 0, n = regions.length; i < n; i++)\n\t\t\t\tif (regions[i].name == name) return regions[i];\n\t\t\treturn null;\n\t\t},\n\t\tdispose: function () {\n\t\t\tvar pages = this.pages;\n\t\t\tfor (var i = 0, n = pages.length; i < n; i++)\n\t\t\t\tthis.textureLoader.unload(pages[i].rendererObject);\n\t\t},\n\t\tupdateUVs: function (page) {\n\t\t\tvar regions = this.regions;\n\t\t\tfor (var i = 0, n = regions.length; i < n; i++) {\n\t\t\t\tvar region = regions[i];\n\t\t\t\tif (region.page != page) continue;\n\t\t\t\tregion.u = region.x / page.width;\n\t\t\t\tregion.v = region.y / page.height;\n\t\t\t\tif (region.rotate) {\n\t\t\t\t\tregion.u2 = (region.x + region.height) / page.width;\n\t\t\t\t\tregion.v2 = (region.y + region.width) / page.height;\n\t\t\t\t} else {\n\t\t\t\t\tregion.u2 = (region.x + region.width) / page.width;\n\t\t\t\t\tregion.v2 = (region.y + region.height) / page.height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tspine.Atlas.Format = {\n\t\talpha: 0,\n\t\tintensity: 1,\n\t\tluminanceAlpha: 2,\n\t\trgb565: 3,\n\t\trgba4444: 4,\n\t\trgb888: 5,\n\t\trgba8888: 6\n\t};\n\n\tspine.Atlas.TextureFilter = {\n\t\tnearest: 0,\n\t\tlinear: 1,\n\t\tmipMap: 2,\n\t\tmipMapNearestNearest: 3,\n\t\tmipMapLinearNearest: 4,\n\t\tmipMapNearestLinear: 5,\n\t\tmipMapLinearLinear: 6\n\t};\n\n\tspine.Atlas.TextureWrap = {\n\t\tmirroredRepeat: 0,\n\t\tclampToEdge: 1,\n\t\trepeat: 2\n\t};\n\n\tspine.AtlasPage = function () {};\n\tspine.AtlasPage.prototype = {\n\t\tname: null,\n\t\tformat: null,\n\t\tminFilter: null,\n\t\tmagFilter: null,\n\t\tuWrap: null,\n\t\tvWrap: null,\n\t\trendererObject: null,\n\t\twidth: 0,\n\t\theight: 0\n\t};\n\n\tspine.AtlasRegion = function () {};\n\tspine.AtlasRegion.prototype = {\n\t\tpage: null,\n\t\tname: null,\n\t\tx: 0, y: 0,\n\t\twidth: 0, height: 0,\n\t\tu: 0, v: 0, u2: 0, v2: 0,\n\t\toffsetX: 0, offsetY: 0,\n\t\toriginalWidth: 0, originalHeight: 0,\n\t\tindex: 0,\n\t\trotate: false,\n\t\tsplits: null,\n\t\tpads: null\n\t};\n\n\tspine.AtlasReader = function (text) {\n\t\tthis.lines = text.split(/\\r\\n|\\r|\\n/);\n\t};\n\tspine.AtlasReader.prototype = {\n\t\tindex: 0,\n\t\ttrim: function (value) {\n\t\t\treturn value.replace(/^\\s+|\\s+$/g, \"\");\n\t\t},\n\t\treadLine: function () {\n\t\t\tif (this.index >= this.lines.length) return null;\n\t\t\treturn this.lines[this.index++];\n\t\t},\n\t\treadValue: function () {\n\t\t\tvar line = this.readLine();\n\t\t\tvar colon = line.indexOf(\":\");\n\t\t\tif (colon == -1) throw \"Invalid line: \" + line;\n\t\t\treturn this.trim(line.substring(colon + 1));\n\t\t},\n\t\t/** Returns the number of tuple values read (1, 2 or 4). */\n\t\treadTuple: function (tuple) {\n\t\t\tvar line = this.readLine();\n\t\t\tvar colon = line.indexOf(\":\");\n\t\t\tif (colon == -1) throw \"Invalid line: \" + line;\n\t\t\tvar i = 0, lastMatch = colon + 1;\n\t\t\tfor (; i < 3; i++) {\n\t\t\t\tvar comma = line.indexOf(\",\", lastMatch);\n\t\t\t\tif (comma == -1) break;\n\t\t\t\ttuple[i] = this.trim(line.substr(lastMatch, comma - lastMatch));\n\t\t\t\tlastMatch = comma + 1;\n\t\t\t}\n\t\t\ttuple[i] = this.trim(line.substring(lastMatch));\n\t\t\treturn i + 1;\n\t\t}\n\t};\n\n\tspine.AtlasAttachmentLoader = function (atlas) {\n\t\tthis.atlas = atlas;\n\t};\n\tspine.AtlasAttachmentLoader.prototype = {\n\t\tnewRegionAttachment: function (skin, name, path) {\n\t\t\tvar region = this.atlas.findRegion(path);\n\t\t\tif (!region) throw \"Region not found in atlas: \" + path + \" (region attachment: \" + name + \")\";\n\t\t\tvar attachment = new spine.RegionAttachment(name);\n\t\t\tattachment.rendererObject = region;\n\t\t\tattachment.setUVs(region.u, region.v, region.u2, region.v2, region.rotate);\n\t\t\tattachment.regionOffsetX = region.offsetX;\n\t\t\tattachment.regionOffsetY = region.offsetY;\n\t\t\tattachment.regionWidth = region.width;\n\t\t\tattachment.regionHeight = region.height;\n\t\t\tattachment.regionOriginalWidth = region.originalWidth;\n\t\t\tattachment.regionOriginalHeight = region.originalHeight;\n\t\t\treturn attachment;\n\t\t},\n\t\tnewMeshAttachment: function (skin, name, path) {\n\t\t\tvar region = this.atlas.findRegion(path);\n\t\t\tif (!region) throw \"Region not found in atlas: \" + path + \" (mesh attachment: \" + name + \")\";\n\t\t\tvar attachment = new spine.MeshAttachment(name);\n\t\t\tattachment.rendererObject = region;\n\t\t\tattachment.regionU = region.u;\n\t\t\tattachment.regionV = region.v;\n\t\t\tattachment.regionU2 = region.u2;\n\t\t\tattachment.regionV2 = region.v2;\n\t\t\tattachment.regionRotate = region.rotate;\n\t\t\tattachment.regionOffsetX = region.offsetX;\n\t\t\tattachment.regionOffsetY = region.offsetY;\n\t\t\tattachment.regionWidth = region.width;\n\t\t\tattachment.regionHeight = region.height;\n\t\t\tattachment.regionOriginalWidth = region.originalWidth;\n\t\t\tattachment.regionOriginalHeight = region.originalHeight;\n\t\t\treturn attachment;\n\t\t},\n\t\tnewSkinnedMeshAttachment: function (skin, name, path) {\n\t\t\tvar region = this.atlas.findRegion(path);\n\t\t\tif (!region) throw \"Region not found in atlas: \" + path + \" (skinned mesh attachment: \" + name + \")\";\n\t\t\tvar attachment = new spine.SkinnedMeshAttachment(name);\n\t\t\tattachment.rendererObject = region;\n\t\t\tattachment.regionU = region.u;\n\t\t\tattachment.regionV = region.v;\n\t\t\tattachment.regionU2 = region.u2;\n\t\t\tattachment.regionV2 = region.v2;\n\t\t\tattachment.regionRotate = region.rotate;\n\t\t\tattachment.regionOffsetX = region.offsetX;\n\t\t\tattachment.regionOffsetY = region.offsetY;\n\t\t\tattachment.regionWidth = region.width;\n\t\t\tattachment.regionHeight = region.height;\n\t\t\tattachment.regionOriginalWidth = region.originalWidth;\n\t\t\tattachment.regionOriginalHeight = region.originalHeight;\n\t\t\treturn attachment;\n\t\t},\n\t\tnewBoundingBoxAttachment: function (skin, name) {\n\t\t\treturn new spine.BoundingBoxAttachment(name);\n\t\t}\n\t};\n\n\tspine.SkeletonBounds = function () {\n\t\tthis.polygonPool = [];\n\t\tthis.polygons = [];\n\t\tthis.boundingBoxes = [];\n\t};\n\tspine.SkeletonBounds.prototype = {\n\t\tminX: 0, minY: 0, maxX: 0, maxY: 0,\n\t\tupdate: function (skeleton, updateAabb) {\n\t\t\tvar slots = skeleton.slots;\n\t\t\tvar slotCount = slots.length;\n\t\t\tvar x = skeleton.x, y = skeleton.y;\n\t\t\tvar boundingBoxes = this.boundingBoxes;\n\t\t\tvar polygonPool = this.polygonPool;\n\t\t\tvar polygons = this.polygons;\n\n\t\t\tboundingBoxes.length = 0;\n\t\t\tfor (var i = 0, n = polygons.length; i < n; i++)\n\t\t\t\tpolygonPool.push(polygons[i]);\n\t\t\tpolygons.length = 0;\n\n\t\t\tfor (var i = 0; i < slotCount; i++) {\n\t\t\t\tvar slot = slots[i];\n\t\t\t\tvar boundingBox = slot.attachment;\n\t\t\t\tif (boundingBox.type != spine.AttachmentType.boundingbox) continue;\n\t\t\t\tboundingBoxes.push(boundingBox);\n\n\t\t\t\tvar poolCount = polygonPool.length, polygon;\n\t\t\t\tif (poolCount > 0) {\n\t\t\t\t\tpolygon = polygonPool[poolCount - 1];\n\t\t\t\t\tpolygonPool.splice(poolCount - 1, 1);\n\t\t\t\t} else\n\t\t\t\t\tpolygon = [];\n\t\t\t\tpolygons.push(polygon);\n\n\t\t\t\tpolygon.length = boundingBox.vertices.length;\n\t\t\t\tboundingBox.computeWorldVertices(x, y, slot.bone, polygon);\n\t\t\t}\n\n\t\t\tif (updateAabb) this.aabbCompute();\n\t\t},\n\t\taabbCompute: function () {\n\t\t\tvar polygons = this.polygons;\n\t\t\tvar minX = Number.MAX_VALUE, minY = Number.MAX_VALUE, maxX = Number.MIN_VALUE, maxY = Number.MIN_VALUE;\n\t\t\tfor (var i = 0, n = polygons.length; i < n; i++) {\n\t\t\t\tvar vertices = polygons[i];\n\t\t\t\tfor (var ii = 0, nn = vertices.length; ii < nn; ii += 2) {\n\t\t\t\t\tvar x = vertices[ii];\n\t\t\t\t\tvar y = vertices[ii + 1];\n\t\t\t\t\tminX = Math.min(minX, x);\n\t\t\t\t\tminY = Math.min(minY, y);\n\t\t\t\t\tmaxX = Math.max(maxX, x);\n\t\t\t\t\tmaxY = Math.max(maxY, y);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.minX = minX;\n\t\t\tthis.minY = minY;\n\t\t\tthis.maxX = maxX;\n\t\t\tthis.maxY = maxY;\n\t\t},\n\t\t/** Returns true if the axis aligned bounding box contains the point. */\n\t\taabbContainsPoint: function (x, y) {\n\t\t\treturn x >= this.minX && x <= this.maxX && y >= this.minY && y <= this.maxY;\n\t\t},\n\t\t/** Returns true if the axis aligned bounding box intersects the line segment. */\n\t\taabbIntersectsSegment: function (x1, y1, x2, y2) {\n\t\t\tvar minX = this.minX, minY = this.minY, maxX = this.maxX, maxY = this.maxY;\n\t\t\tif ((x1 <= minX && x2 <= minX) || (y1 <= minY && y2 <= minY) || (x1 >= maxX && x2 >= maxX) || (y1 >= maxY && y2 >= maxY))\n\t\t\t\treturn false;\n\t\t\tvar m = (y2 - y1) / (x2 - x1);\n\t\t\tvar y = m * (minX - x1) + y1;\n\t\t\tif (y > minY && y < maxY) return true;\n\t\t\ty = m * (maxX - x1) + y1;\n\t\t\tif (y > minY && y < maxY) return true;\n\t\t\tvar x = (minY - y1) / m + x1;\n\t\t\tif (x > minX && x < maxX) return true;\n\t\t\tx = (maxY - y1) / m + x1;\n\t\t\tif (x > minX && x < maxX) return true;\n\t\t\treturn false;\n\t\t},\n\t\t/** Returns true if the axis aligned bounding box intersects the axis aligned bounding box of the specified bounds. */\n\t\taabbIntersectsSkeleton: function (bounds) {\n\t\t\treturn this.minX < bounds.maxX && this.maxX > bounds.minX && this.minY < bounds.maxY && this.maxY > bounds.minY;\n\t\t},\n\t\t/** Returns the first bounding box attachment that contains the point, or null. When doing many checks, it is usually more\n\t\t * efficient to only call this method if {@link #aabbContainsPoint(float, float)} returns true. */\n\t\tcontainsPoint: function (x, y) {\n\t\t\tvar polygons = this.polygons;\n\t\t\tfor (var i = 0, n = polygons.length; i < n; i++)\n\t\t\t\tif (this.polygonContainsPoint(polygons[i], x, y)) return this.boundingBoxes[i];\n\t\t\treturn null;\n\t\t},\n\t\t/** Returns the first bounding box attachment that contains the line segment, or null. When doing many checks, it is usually\n\t\t * more efficient to only call this method if {@link #aabbIntersectsSegment(float, float, float, float)} returns true. */\n\t\tintersectsSegment: function (x1, y1, x2, y2) {\n\t\t\tvar polygons = this.polygons;\n\t\t\tfor (var i = 0, n = polygons.length; i < n; i++)\n\t\t\t\tif (polygons[i].intersectsSegment(x1, y1, x2, y2)) return this.boundingBoxes[i];\n\t\t\treturn null;\n\t\t},\n\t\t/** Returns true if the polygon contains the point. */\n\t\tpolygonContainsPoint: function (polygon, x, y) {\n\t\t\tvar nn = polygon.length;\n\t\t\tvar prevIndex = nn - 2;\n\t\t\tvar inside = false;\n\t\t\tfor (var ii = 0; ii < nn; ii += 2) {\n\t\t\t\tvar vertexY = polygon[ii + 1];\n\t\t\t\tvar prevY = polygon[prevIndex + 1];\n\t\t\t\tif ((vertexY < y && prevY >= y) || (prevY < y && vertexY >= y)) {\n\t\t\t\t\tvar vertexX = polygon[ii];\n\t\t\t\t\tif (vertexX + (y - vertexY) / (prevY - vertexY) * (polygon[prevIndex] - vertexX) < x) inside = !inside;\n\t\t\t\t}\n\t\t\t\tprevIndex = ii;\n\t\t\t}\n\t\t\treturn inside;\n\t\t},\n\t\t/** Returns true if the polygon contains the line segment. */\n\t\tpolygonIntersectsSegment: function (polygon, x1, y1, x2, y2) {\n\t\t\tvar nn = polygon.length;\n\t\t\tvar width12 = x1 - x2, height12 = y1 - y2;\n\t\t\tvar det1 = x1 * y2 - y1 * x2;\n\t\t\tvar x3 = polygon[nn - 2], y3 = polygon[nn - 1];\n\t\t\tfor (var ii = 0; ii < nn; ii += 2) {\n\t\t\t\tvar x4 = polygon[ii], y4 = polygon[ii + 1];\n\t\t\t\tvar det2 = x3 * y4 - y3 * x4;\n\t\t\t\tvar width34 = x3 - x4, height34 = y3 - y4;\n\t\t\t\tvar det3 = width12 * height34 - height12 * width34;\n\t\t\t\tvar x = (det1 * width34 - width12 * det2) / det3;\n\t\t\t\tif (((x >= x3 && x <= x4) || (x >= x4 && x <= x3)) && ((x >= x1 && x <= x2) || (x >= x2 && x <= x1))) {\n\t\t\t\t\tvar y = (det1 * height34 - height12 * det2) / det3;\n\t\t\t\t\tif (((y >= y3 && y <= y4) || (y >= y4 && y <= y3)) && ((y >= y1 && y <= y2) || (y >= y2 && y <= y1))) return true;\n\t\t\t\t}\n\t\t\t\tx3 = x4;\n\t\t\t\ty3 = y4;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetPolygon: function (attachment) {\n\t\t\tvar index = this.boundingBoxes.indexOf(attachment);\n\t\t\treturn index == -1 ? null : this.polygons[index];\n\t\t},\n\t\tgetWidth: function () {\n\t\t\treturn this.maxX - this.minX;\n\t\t},\n\t\tgetHeight: function () {\n\t\t\treturn this.maxY - this.minY;\n\t\t}\n\t};\n\r\n\t/* Esoteric Software SPINE wrapper for pixi.js */\n\n\tspine.Bone.yDown = true;\n\tPIXI.AnimCache = {};\n\n\t/**\n\t * Supporting class to load images from spine atlases as per spine spec.\n\t *\n\t * @class SpineTextureLoader\n\t * @uses EventTarget\n\t * @constructor\n\t * @param basePath {String} Tha base path where to look for the images to be loaded\n\t * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n\t */\n\tPIXI.SpineTextureLoader = function(basePath, crossorigin)\n\t{\n\t    PIXI.EventTarget.call(this);\n\n\t    this.basePath = basePath;\n\t    this.crossorigin = crossorigin;\n\t    this.loadingCount = 0;\n\t};\n\n\t/* constructor */\n\tPIXI.SpineTextureLoader.prototype = PIXI.SpineTextureLoader;\n\n\t/**\n\t * Starts loading a base texture as per spine specification\n\t *\n\t * @method load\n\t * @param page {spine.AtlasPage} Atlas page to which texture belongs\n\t * @param file {String} The file to load, this is just the file path relative to the base path configured in the constructor\n\t */\n\tPIXI.SpineTextureLoader.prototype.load = function(page, file)\n\t{\n\t    page.rendererObject = PIXI.BaseTexture.fromImage(this.basePath + '/' + file, this.crossorigin);\n\t    if (!page.rendererObject.hasLoaded)\n\t    {\n\t        var scope = this;\n\t        ++scope.loadingCount;\n\t        page.rendererObject.addEventListener('loaded', function(){\n\t            --scope.loadingCount;\n\t            scope.dispatchEvent({\n\t                type: 'loadedBaseTexture',\n\t                content: scope\n\t            });\n\t        });\n\t    }\n\t};\n\n\t/**\n\t * Unloads a previously loaded texture as per spine specification\n\t *\n\t * @method unload\n\t * @param texture {BaseTexture} Texture object to destroy\n\t */\n\tPIXI.SpineTextureLoader.prototype.unload = function(texture)\n\t{\n\t    texture.destroy(true);\n\t};\n\n\t/**\n\t * A class that enables the you to import and run your spine animations in pixi.\n\t * Spine animation data needs to be loaded using the PIXI.AssetLoader or PIXI.SpineLoader before it can be used by this class\n\t * See example 12 (http://www.goodboydigital.com/pixijs/examples/12/) to see a working example and check out the source\n\t *\n\t * @class Spine\n\t * @extends DisplayObjectContainer\n\t * @constructor\n\t * @param url {String} The url of the spine anim file to be used\n\t */\n\tPIXI.Spine = function (url) {\n\t    PIXI.DisplayObjectContainer.call(this);\n\n\t    this.spineData = PIXI.AnimCache[url];\n\n\t    if (!this.spineData) {\n\t        throw new Error('Spine data must be preloaded using PIXI.SpineLoader or PIXI.AssetLoader: ' + url);\n\t    }\n\n\t    this.skeleton = new spine.Skeleton(this.spineData);\n\t    this.skeleton.updateWorldTransform();\n\n\t    this.stateData = new spine.AnimationStateData(this.spineData);\n\t    this.state = new spine.AnimationState(this.stateData);\n\n\t    this.slotContainers = [];\n\n\t    for (var i = 0, n = this.skeleton.drawOrder.length; i < n; i++) {\n\t        var slot = this.skeleton.drawOrder[i];\n\t        var attachment = slot.attachment;\n\t        var slotContainer = new PIXI.DisplayObjectContainer();\n\t        this.slotContainers.push(slotContainer);\n\t        this.addChild(slotContainer);\n\n\t        if (attachment instanceof spine.RegionAttachment)\n\t        {\n\t            var spriteName = attachment.rendererObject.name;\n\t            var sprite = this.createSprite(slot, attachment);\n\t            slot.currentSprite = sprite;\n\t            slot.currentSpriteName = spriteName;\n\t            slotContainer.addChild(sprite);\n\t        }\n\t        else if (attachment instanceof spine.MeshAttachment)\n\t        {\n\t            var mesh = this.createMesh(slot, attachment);\n\t            slot.currentMesh = mesh;\n\t            slot.currentMeshName = attachment.name;\n\t            slotContainer.addChild(mesh);\n\t        }\n\t        else\n\t        {\n\t            continue;\n\t        }\n\n\t    }\n\n\t    this.autoUpdate = true;\n\t};\n\n\tPIXI.Spine.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);\n\tPIXI.Spine.prototype.constructor = PIXI.Spine;\n\n\t/**\n\t * If this flag is set to true, the spine animation will be autoupdated every time\n\t * the object id drawn. The down side of this approach is that the delta time is\n\t * automatically calculated and you could miss out on cool effects like slow motion,\n\t * pause, skip ahead and the sorts. Most of these effects can be achieved even with\n\t * autoupdate enabled but are harder to achieve.\n\t *\n\t * @property autoUpdate\n\t * @type { Boolean }\n\t * @default true\n\t */\n\tObject.defineProperty(PIXI.Spine.prototype, 'autoUpdate', {\n\t    get: function()\n\t    {\n\t        return (this.updateTransform === PIXI.Spine.prototype.autoUpdateTransform);\n\t    },\n\n\t    set: function(value)\n\t    {\n\t        this.updateTransform = value ? PIXI.Spine.prototype.autoUpdateTransform : PIXI.DisplayObjectContainer.prototype.updateTransform;\n\t    }\n\t});\n\n\t/**\n\t * Update the spine skeleton and its animations by delta time (dt)\n\t *\n\t * @method update\n\t * @param dt {Number} Delta time. Time by which the animation should be updated\n\t */\n\tPIXI.Spine.prototype.update = function(dt)\n\t{\n\t    this.state.update(dt);\n\t    this.state.apply(this.skeleton);\n\t    this.skeleton.updateWorldTransform();\n\n\t    var drawOrder = this.skeleton.drawOrder;\n\t    for (var i = 0, n = drawOrder.length; i < n; i++) {\n\t        var slot = drawOrder[i];\n\t        var attachment = slot.attachment;\n\t        var slotContainer = this.slotContainers[i];\n\n\t        if (!attachment)\n\t        {\n\t            slotContainer.visible = false;\n\t            continue;\n\t        }\n\n\t        var type = attachment.type;\n\t        if (type === spine.AttachmentType.region)\n\t        {\n\t            if (attachment.rendererObject)\n\t            {\n\t                if (!slot.currentSpriteName || slot.currentSpriteName !== attachment.name)\n\t                {\n\t                    var spriteName = attachment.rendererObject.name;\n\t                    if (slot.currentSprite !== undefined)\n\t                    {\n\t                        slot.currentSprite.visible = false;\n\t                    }\n\t                    slot.sprites = slot.sprites || {};\n\t                    if (slot.sprites[spriteName] !== undefined)\n\t                    {\n\t                        slot.sprites[spriteName].visible = true;\n\t                    }\n\t                    else\n\t                    {\n\t                        var sprite = this.createSprite(slot, attachment);\n\t                        slotContainer.addChild(sprite);\n\t                    }\n\t                    slot.currentSprite = slot.sprites[spriteName];\n\t                    slot.currentSpriteName = spriteName;\n\t                }\n\t            }\n\n\t            var bone = slot.bone;\n\n\t            slotContainer.position.x = bone.worldX + attachment.x * bone.m00 + attachment.y * bone.m01;\n\t            slotContainer.position.y = bone.worldY + attachment.x * bone.m10 + attachment.y * bone.m11;\n\t            slotContainer.scale.x = bone.worldScaleX;\n\t            slotContainer.scale.y = bone.worldScaleY;\n\n\t            slotContainer.rotation = -(slot.bone.worldRotation * spine.degRad);\n\n\t            slot.currentSprite.tint = PIXI.rgb2hex([slot.r,slot.g,slot.b]);\n\t        }\n\t        else if (type === spine.AttachmentType.skinnedmesh)\n\t        {\n\t            if (!slot.currentMeshName || slot.currentMeshName !== attachment.name)\n\t            {\n\t                var meshName = attachment.name;\n\t                if (slot.currentMesh !== undefined)\n\t                {\n\t                    slot.currentMesh.visible = false;\n\t                }\n\n\t                slot.meshes = slot.meshes || {};\n\n\t                if (slot.meshes[meshName] !== undefined)\n\t                {\n\t                    slot.meshes[meshName].visible = true;\n\t                }\n\t                else\n\t                {\n\t                    var mesh = this.createMesh(slot, attachment);\n\t                    slotContainer.addChild(mesh);\n\t                }\n\n\t                slot.currentMesh = slot.meshes[meshName];\n\t                slot.currentMeshName = meshName;\n\t            }\n\n\t            attachment.computeWorldVertices(slot.bone.skeleton.x, slot.bone.skeleton.y, slot, slot.currentMesh.vertices);\n\n\t        }\n\t        else\n\t        {\n\t            slotContainer.visible = false;\n\t            continue;\n\t        }\n\t        slotContainer.visible = true;\n\n\t        slotContainer.alpha = slot.a;\n\t    }\n\t};\n\n\t/**\n\t * When autoupdate is set to yes this function is used as pixi's updateTransform function\n\t *\n\t * @method autoUpdateTransform\n\t * @private\n\t */\n\tPIXI.Spine.prototype.autoUpdateTransform = function () {\n\t    this.lastTime = this.lastTime || Date.now();\n\t    var timeDelta = (Date.now() - this.lastTime) * 0.001;\n\t    this.lastTime = Date.now();\n\n\t    this.update(timeDelta);\n\n\t    PIXI.DisplayObjectContainer.prototype.updateTransform.call(this);\n\t};\n\n\t/**\n\t * Create a new sprite to be used with spine.RegionAttachment\n\t *\n\t * @method createSprite\n\t * @param slot {spine.Slot} The slot to which the attachment is parented\n\t * @param attachment {spine.RegionAttachment} The attachment that the sprite will represent\n\t * @private\n\t */\n\tPIXI.Spine.prototype.createSprite = function (slot, attachment) {\n\t    var descriptor = attachment.rendererObject;\n\t    var baseTexture = descriptor.page.rendererObject;\n\t    var spriteRect = new PIXI.Rectangle(descriptor.x,\n\t                                        descriptor.y,\n\t                                        descriptor.rotate ? descriptor.height : descriptor.width,\n\t                                        descriptor.rotate ? descriptor.width : descriptor.height);\n\t    var spriteTexture = new PIXI.Texture(baseTexture, spriteRect);\n\t    var sprite = new PIXI.Sprite(spriteTexture);\n\n\t    var baseRotation = descriptor.rotate ? Math.PI * 0.5 : 0.0;\n\t    sprite.scale.set(descriptor.width / descriptor.originalWidth, descriptor.height / descriptor.originalHeight);\n\t    sprite.rotation = baseRotation - (attachment.rotation * spine.degRad);\n\t    sprite.anchor.x = sprite.anchor.y = 0.5;\n\n\t    slot.sprites = slot.sprites || {};\n\t    slot.sprites[descriptor.name] = sprite;\n\t    return sprite;\n\t};\n\n\tPIXI.Spine.prototype.createMesh = function (slot, attachment) {\n\t    var descriptor = attachment.rendererObject;\n\t    var baseTexture = descriptor.page.rendererObject;\n\t    var texture = new PIXI.Texture(baseTexture);\n\n\t    var strip = new PIXI.Strip(texture);\n\t    strip.drawMode = PIXI.Strip.DrawModes.TRIANGLES;\n\t    strip.canvasPadding = 1.5;\n\n\t    strip.vertices = new PIXI.Float32Array(attachment.uvs.length);\n\t    strip.uvs = attachment.uvs;\n\t    strip.indices = attachment.triangles;\n\n\t    slot.meshes = slot.meshes || {};\n\t    slot.meshes[attachment.name] = strip;\n\n\t    return strip;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\tPIXI.BaseTextureCache = {};\n\n\tPIXI.BaseTextureCacheIdGenerator = 0;\n\n\t/**\n\t * A texture stores the information that represents an image. All textures have a base texture.\n\t *\n\t * @class BaseTexture\n\t * @uses EventTarget\n\t * @constructor\n\t * @param source {String} the source object (image or canvas)\n\t * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n\t */\n\tPIXI.BaseTexture = function(source, scaleMode)\n\t{\n\t    /**\n\t     * The Resolution of the texture. \n\t     *\n\t     * @property resolution\n\t     * @type Number\n\t     */\n\t    this.resolution = 1;\n\t    \n\t    /**\n\t     * [read-only] The width of the base texture set when the image has loaded\n\t     *\n\t     * @property width\n\t     * @type Number\n\t     * @readOnly\n\t     */\n\t    this.width = 100;\n\n\t    /**\n\t     * [read-only] The height of the base texture set when the image has loaded\n\t     *\n\t     * @property height\n\t     * @type Number\n\t     * @readOnly\n\t     */\n\t    this.height = 100;\n\n\t    /**\n\t     * The scale mode to apply when scaling this texture\n\t     * \n\t     * @property scaleMode\n\t     * @type {Number}\n\t     * @default PIXI.scaleModes.LINEAR\n\t     */\n\t    this.scaleMode = scaleMode || PIXI.scaleModes.DEFAULT;\n\n\t    /**\n\t     * [read-only] Set to true once the base texture has loaded\n\t     *\n\t     * @property hasLoaded\n\t     * @type Boolean\n\t     * @readOnly\n\t     */\n\t    this.hasLoaded = false;\n\n\t    /**\n\t     * The image source that is used to create the texture.\n\t     *\n\t     * @property source\n\t     * @type Image\n\t     */\n\t    this.source = source;\n\n\t    this._UID = PIXI._UID++;\n\n\t    /**\n\t     * Controls if RGB channels should be pre-multiplied by Alpha  (WebGL only)\n\t     *\n\t     * @property premultipliedAlpha\n\t     * @type Boolean\n\t     * @default true\n\t     */\n\t    this.premultipliedAlpha = true;\n\n\t    // used for webGL\n\n\t    /**\n\t     * @property _glTextures\n\t     * @type Array\n\t     * @private\n\t     */\n\t    this._glTextures = [];\n\n\t    /**\n\t     *\n\t     * Set this to true if a mipmap of this texture needs to be generated. This value needs to be set before the texture is used\n\t     * Also the texture must be a power of two size to work\n\t     * \n\t     * @property mipmap\n\t     * @type {Boolean}\n\t     */\n\t    this.mipmap = false;\n\n\t    // used for webGL texture updating...\n\t    // TODO - this needs to be addressed\n\n\t    /**\n\t     * @property _dirty\n\t     * @type Array\n\t     * @private\n\t     */\n\t    this._dirty = [true, true, true, true];\n\n\t    if(!source)return;\n\n\t    if((this.source.complete || this.source.getContext) && this.source.width && this.source.height)\n\t    {\n\t        this.hasLoaded = true;\n\t        this.width = this.source.naturalWidth || this.source.width;\n\t        this.height = this.source.naturalHeight || this.source.height;\n\t        this.dirty();\n\t    }\n\t    else\n\t    {\n\t        var scope = this;\n\n\t        this.source.onload = function() {\n\n\t            scope.hasLoaded = true;\n\t            scope.width = scope.source.naturalWidth || scope.source.width;\n\t            scope.height = scope.source.naturalHeight || scope.source.height;\n\n\t            scope.dirty();\n\n\t            // add it to somewhere...\n\t            scope.dispatchEvent( { type: 'loaded', content: scope } );\n\t        };\n\n\t        this.source.onerror = function() {\n\t            scope.dispatchEvent( { type: 'error', content: scope } );\n\t        };\n\t    }\n\n\t    /**\n\t     * @property imageUrl\n\t     * @type String\n\t     */\n\t    this.imageUrl = null;\n\n\t    /**\n\t     * @property _powerOf2\n\t     * @type Boolean\n\t     * @private\n\t     */\n\t    this._powerOf2 = false;\n\n\t};\n\n\tPIXI.BaseTexture.prototype.constructor = PIXI.BaseTexture;\n\n\tPIXI.EventTarget.mixin(PIXI.BaseTexture.prototype);\n\n\t/**\n\t * Destroys this base texture\n\t *\n\t * @method destroy\n\t */\n\tPIXI.BaseTexture.prototype.destroy = function()\n\t{\n\t    if(this.imageUrl)\n\t    {\n\t        delete PIXI.BaseTextureCache[this.imageUrl];\n\t        delete PIXI.TextureCache[this.imageUrl];\n\t        this.imageUrl = null;\n\t        if (!navigator.isCocoonJS) this.source.src = '';\n\t    }\n\t    else if (this.source && this.source._pixiId)\n\t    {\n\t        delete PIXI.BaseTextureCache[this.source._pixiId];\n\t    }\n\t    this.source = null;\n\n\t    this.unloadFromGPU();\n\t};\n\n\t/**\n\t * Changes the source image of the texture\n\t *\n\t * @method updateSourceImage\n\t * @param newSrc {String} the path of the image\n\t */\n\tPIXI.BaseTexture.prototype.updateSourceImage = function(newSrc)\n\t{\n\t    this.hasLoaded = false;\n\t    this.source.src = null;\n\t    this.source.src = newSrc;\n\t};\n\n\t/**\n\t * Sets all glTextures to be dirty.\n\t *\n\t * @method dirty\n\t */\n\tPIXI.BaseTexture.prototype.dirty = function()\n\t{\n\t    for (var i = 0; i < this._glTextures.length; i++)\n\t    {\n\t        this._dirty[i] = true;\n\t    }\n\t};\n\n\t/**\n\t * Removes the base texture from the GPU, useful for managing resources on the GPU.\n\t * Atexture is still 100% usable and will simply be reuploaded if there is a sprite on screen that is using it.\n\t *\n\t * @method unloadFromGPU\n\t */\n\tPIXI.BaseTexture.prototype.unloadFromGPU = function()\n\t{\n\t    this.dirty();\n\n\t    // delete the webGL textures if any.\n\t    for (var i = this._glTextures.length - 1; i >= 0; i--)\n\t    {\n\t        var glTexture = this._glTextures[i];\n\t        var gl = PIXI.glContexts[i];\n\n\t        if(gl && glTexture)\n\t        {\n\t            gl.deleteTexture(glTexture);\n\t        }\n\t        \n\t    }\n\n\t    this._glTextures.length = 0;\n\n\t    this.dirty();\n\t};\n\n\t/**\n\t * Helper function that creates a base texture from the given image url.\n\t * If the image is not in the base texture cache it will be created and loaded.\n\t *\n\t * @static\n\t * @method fromImage\n\t * @param imageUrl {String} The image url of the texture\n\t * @param crossorigin {Boolean}\n\t * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n\t * @return BaseTexture\n\t */\n\tPIXI.BaseTexture.fromImage = function(imageUrl, crossorigin, scaleMode)\n\t{\n\t    var baseTexture = PIXI.BaseTextureCache[imageUrl];\n\n\t    if(crossorigin === undefined && imageUrl.indexOf('data:') === -1) crossorigin = true;\n\n\t    if(!baseTexture)\n\t    {\n\t        // new Image() breaks tex loading in some versions of Chrome.\n\t        // See https://code.google.com/p/chromium/issues/detail?id=238071\n\t        var image = new Image();//document.createElement('img');\n\t        if (crossorigin)\n\t        {\n\t            image.crossOrigin = '';\n\t        }\n\n\t        image.src = imageUrl;\n\t        baseTexture = new PIXI.BaseTexture(image, scaleMode);\n\t        baseTexture.imageUrl = imageUrl;\n\t        PIXI.BaseTextureCache[imageUrl] = baseTexture;\n\n\t        // if there is an @2x at the end of the url we are going to assume its a highres image\n\t        if( imageUrl.indexOf(PIXI.RETINA_PREFIX + '.') !== -1)\n\t        {\n\t            baseTexture.resolution = 2;\n\t        }\n\t    }\n\n\t    return baseTexture;\n\t};\n\n\t/**\n\t * Helper function that creates a base texture from the given canvas element.\n\t *\n\t * @static\n\t * @method fromCanvas\n\t * @param canvas {Canvas} The canvas element source of the texture\n\t * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n\t * @return BaseTexture\n\t */\n\tPIXI.BaseTexture.fromCanvas = function(canvas, scaleMode)\n\t{\n\t    if(!canvas._pixiId)\n\t    {\n\t        canvas._pixiId = 'canvas_' + PIXI.TextureCacheIdGenerator++;\n\t    }\n\n\t    var baseTexture = PIXI.BaseTextureCache[canvas._pixiId];\n\n\t    if(!baseTexture)\n\t    {\n\t        baseTexture = new PIXI.BaseTexture(canvas, scaleMode);\n\t        PIXI.BaseTextureCache[canvas._pixiId] = baseTexture;\n\t    }\n\n\t    return baseTexture;\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\tPIXI.TextureCache = {};\n\tPIXI.FrameCache = {};\n\n\tPIXI.TextureCacheIdGenerator = 0;\n\n\t/**\n\t * A texture stores the information that represents an image or part of an image. It cannot be added\n\t * to the display list directly. Instead use it as the texture for a PIXI.Sprite. If no frame is provided then the whole image is used.\n\t *\n\t * @class Texture\n\t * @uses EventTarget\n\t * @constructor\n\t * @param baseTexture {BaseTexture} The base texture source to create the texture from\n\t * @param [frame] {Rectangle} The rectangle frame of the texture to show\n\t * @param [crop] {Rectangle} The area of original texture \n\t * @param [trim] {Rectangle} Trimmed texture rectangle\n\t */\n\tPIXI.Texture = function(baseTexture, frame, crop, trim)\n\t{\n\t    /**\n\t     * Does this Texture have any frame data assigned to it?\n\t     *\n\t     * @property noFrame\n\t     * @type Boolean\n\t     */\n\t    this.noFrame = false;\n\n\t    if (!frame)\n\t    {\n\t        this.noFrame = true;\n\t        frame = new PIXI.Rectangle(0,0,1,1);\n\t    }\n\n\t    if (baseTexture instanceof PIXI.Texture)\n\t    {\n\t        baseTexture = baseTexture.baseTexture;\n\t    }\n\n\t    /**\n\t     * The base texture that this texture uses.\n\t     *\n\t     * @property baseTexture\n\t     * @type BaseTexture\n\t     */\n\t    this.baseTexture = baseTexture;\n\n\t    /**\n\t     * The frame specifies the region of the base texture that this texture uses\n\t     *\n\t     * @property frame\n\t     * @type Rectangle\n\t     */\n\t    this.frame = frame;\n\n\t    /**\n\t     * The texture trim data.\n\t     *\n\t     * @property trim\n\t     * @type Rectangle\n\t     */\n\t    this.trim = trim;\n\n\t    /**\n\t     * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n\t     *\n\t     * @property valid\n\t     * @type Boolean\n\t     */\n\t    this.valid = false;\n\n\t    /**\n\t     * This will let a renderer know that a texture has been updated (used mainly for webGL uv updates)\n\t     *\n\t     * @property requiresUpdate\n\t     * @type Boolean\n\t     */\n\t    this.requiresUpdate = false;\n\n\t    /**\n\t     * The WebGL UV data cache.\n\t     *\n\t     * @property _uvs\n\t     * @type Object\n\t     * @private\n\t     */\n\t    this._uvs = null;\n\n\t    /**\n\t     * The width of the Texture in pixels.\n\t     *\n\t     * @property width\n\t     * @type Number\n\t     */\n\t    this.width = 0;\n\n\t    /**\n\t     * The height of the Texture in pixels.\n\t     *\n\t     * @property height\n\t     * @type Number\n\t     */\n\t    this.height = 0;\n\n\t    /**\n\t     * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n\t     * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n\t     *\n\t     * @property crop\n\t     * @type Rectangle\n\t     */\n\t    this.crop = crop || new PIXI.Rectangle(0, 0, 1, 1);\n\n\t    if (baseTexture.hasLoaded)\n\t    {\n\t        if (this.noFrame) frame = new PIXI.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n\t        this.setFrame(frame);\n\t    }\n\t    else\n\t    {\n\t        baseTexture.addEventListener('loaded', this.onBaseTextureLoaded.bind(this));\n\t    }\n\t};\n\n\tPIXI.Texture.prototype.constructor = PIXI.Texture;\n\tPIXI.EventTarget.mixin(PIXI.Texture.prototype);\n\n\t/**\n\t * Called when the base texture is loaded\n\t *\n\t * @method onBaseTextureLoaded\n\t * @private\n\t */\n\tPIXI.Texture.prototype.onBaseTextureLoaded = function()\n\t{\n\t    var baseTexture = this.baseTexture;\n\t    baseTexture.removeEventListener('loaded', this.onLoaded);\n\n\t    if (this.noFrame) this.frame = new PIXI.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n\n\t    this.setFrame(this.frame);\n\n\t    this.dispatchEvent( { type: 'update', content: this } );\n\t};\n\n\t/**\n\t * Destroys this texture\n\t *\n\t * @method destroy\n\t * @param destroyBase {Boolean} Whether to destroy the base texture as well\n\t */\n\tPIXI.Texture.prototype.destroy = function(destroyBase)\n\t{\n\t    if (destroyBase) this.baseTexture.destroy();\n\n\t    this.valid = false;\n\t};\n\n\t/**\n\t * Specifies the region of the baseTexture that this texture will use.\n\t *\n\t * @method setFrame\n\t * @param frame {Rectangle} The frame of the texture to set it to\n\t */\n\tPIXI.Texture.prototype.setFrame = function(frame)\n\t{\n\t    this.noFrame = false;\n\n\t    this.frame = frame;\n\t    this.width = frame.width;\n\t    this.height = frame.height;\n\n\t    this.crop.x = frame.x;\n\t    this.crop.y = frame.y;\n\t    this.crop.width = frame.width;\n\t    this.crop.height = frame.height;\n\n\t    if (!this.trim && (frame.x + frame.width > this.baseTexture.width || frame.y + frame.height > this.baseTexture.height))\n\t    {\n\t        throw new Error('Texture Error: frame does not fit inside the base Texture dimensions ' + this);\n\t    }\n\n\t    this.valid = frame && frame.width && frame.height && this.baseTexture.source && this.baseTexture.hasLoaded;\n\n\t    if (this.trim)\n\t    {\n\t        this.width = this.trim.width;\n\t        this.height = this.trim.height;\n\t        this.frame.width = this.trim.width;\n\t        this.frame.height = this.trim.height;\n\t    }\n\t    \n\t    if (this.valid) this._updateUvs();\n\n\t};\n\n\t/**\n\t * Updates the internal WebGL UV cache.\n\t *\n\t * @method _updateUvs\n\t * @private\n\t */\n\tPIXI.Texture.prototype._updateUvs = function()\n\t{\n\t    if(!this._uvs)this._uvs = new PIXI.TextureUvs();\n\n\t    var frame = this.crop;\n\t    var tw = this.baseTexture.width;\n\t    var th = this.baseTexture.height;\n\t    \n\t    this._uvs.x0 = frame.x / tw;\n\t    this._uvs.y0 = frame.y / th;\n\n\t    this._uvs.x1 = (frame.x + frame.width) / tw;\n\t    this._uvs.y1 = frame.y / th;\n\n\t    this._uvs.x2 = (frame.x + frame.width) / tw;\n\t    this._uvs.y2 = (frame.y + frame.height) / th;\n\n\t    this._uvs.x3 = frame.x / tw;\n\t    this._uvs.y3 = (frame.y + frame.height) / th;\n\t};\n\n\t/**\n\t * Helper function that creates a Texture object from the given image url.\n\t * If the image is not in the texture cache it will be  created and loaded.\n\t *\n\t * @static\n\t * @method fromImage\n\t * @param imageUrl {String} The image url of the texture\n\t * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n\t * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n\t * @return Texture\n\t */\n\tPIXI.Texture.fromImage = function(imageUrl, crossorigin, scaleMode)\n\t{\n\t    var texture = PIXI.TextureCache[imageUrl];\n\n\t    if(!texture)\n\t    {\n\t        texture = new PIXI.Texture(PIXI.BaseTexture.fromImage(imageUrl, crossorigin, scaleMode));\n\t        PIXI.TextureCache[imageUrl] = texture;\n\t    }\n\n\t    return texture;\n\t};\n\n\t/**\n\t * Helper function that returns a Texture objected based on the given frame id.\n\t * If the frame id is not in the texture cache an error will be thrown.\n\t *\n\t * @static\n\t * @method fromFrame\n\t * @param frameId {String} The frame id of the texture\n\t * @return Texture\n\t */\n\tPIXI.Texture.fromFrame = function(frameId)\n\t{\n\t    var texture = PIXI.TextureCache[frameId];\n\t    if(!texture) throw new Error('The frameId \"' + frameId + '\" does not exist in the texture cache ');\n\t    return texture;\n\t};\n\n\t/**\n\t * Helper function that creates a new a Texture based on the given canvas element.\n\t *\n\t * @static\n\t * @method fromCanvas\n\t * @param canvas {Canvas} The canvas element source of the texture\n\t * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n\t * @return Texture\n\t */\n\tPIXI.Texture.fromCanvas = function(canvas, scaleMode)\n\t{\n\t    var baseTexture = PIXI.BaseTexture.fromCanvas(canvas, scaleMode);\n\n\t    return new PIXI.Texture( baseTexture );\n\n\t};\n\n\t/**\n\t * Adds a texture to the global PIXI.TextureCache. This cache is shared across the whole PIXI object.\n\t *\n\t * @static\n\t * @method addTextureToCache\n\t * @param texture {Texture} The Texture to add to the cache.\n\t * @param id {String} The id that the texture will be stored against.\n\t */\n\tPIXI.Texture.addTextureToCache = function(texture, id)\n\t{\n\t    PIXI.TextureCache[id] = texture;\n\t};\n\n\t/**\n\t * Remove a texture from the global PIXI.TextureCache.\n\t *\n\t * @static\n\t * @method removeTextureFromCache\n\t * @param id {String} The id of the texture to be removed\n\t * @return {Texture} The texture that was removed\n\t */\n\tPIXI.Texture.removeTextureFromCache = function(id)\n\t{\n\t    var texture = PIXI.TextureCache[id];\n\t    delete PIXI.TextureCache[id];\n\t    delete PIXI.BaseTextureCache[id];\n\t    return texture;\n\t};\n\n\tPIXI.TextureUvs = function()\n\t{\n\t    this.x0 = 0;\n\t    this.y0 = 0;\n\n\t    this.x1 = 0;\n\t    this.y1 = 0;\n\n\t    this.x2 = 0;\n\t    this.y2 = 0;\n\n\t    this.x3 = 0;\n\t    this.y3 = 0;\n\t};\n\n\tPIXI.Texture.emptyTexture = new PIXI.Texture(new PIXI.BaseTexture());\n\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * A RenderTexture is a special texture that allows any Pixi display object to be rendered to it.\n\t *\n\t * __Hint__: All DisplayObjects (i.e. Sprites) that render to a RenderTexture should be preloaded otherwise black rectangles will be drawn instead.\n\t *\n\t * A RenderTexture takes a snapshot of any Display Object given to its render method. The position and rotation of the given Display Objects is ignored. For example:\n\t *\n\t *    var renderTexture = new PIXI.RenderTexture(800, 600);\n\t *    var sprite = PIXI.Sprite.fromImage(\"spinObj_01.png\");\n\t *    sprite.position.x = 800/2;\n\t *    sprite.position.y = 600/2;\n\t *    sprite.anchor.x = 0.5;\n\t *    sprite.anchor.y = 0.5;\n\t *    renderTexture.render(sprite);\n\t *\n\t * The Sprite in this case will be rendered to a position of 0,0. To render this sprite at its actual position a DisplayObjectContainer should be used:\n\t *\n\t *    var doc = new PIXI.DisplayObjectContainer();\n\t *    doc.addChild(sprite);\n\t *    renderTexture.render(doc);  // Renders to center of renderTexture\n\t *\n\t * @class RenderTexture\n\t * @extends Texture\n\t * @constructor\n\t * @param width {Number} The width of the render texture\n\t * @param height {Number} The height of the render texture\n\t * @param renderer {CanvasRenderer|WebGLRenderer} The renderer used for this RenderTexture\n\t * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n\t * @param resolution {Number} The resolution of the texture being generated\n\t */\n\tPIXI.RenderTexture = function(width, height, renderer, scaleMode, resolution)\n\t{\n\t    /**\n\t     * The with of the render texture\n\t     *\n\t     * @property width\n\t     * @type Number\n\t     */\n\t    this.width = width || 100;\n\n\t    /**\n\t     * The height of the render texture\n\t     *\n\t     * @property height\n\t     * @type Number\n\t     */\n\t    this.height = height || 100;\n\n\t    /**\n\t     * The Resolution of the texture.\n\t     *\n\t     * @property resolution\n\t     * @type Number\n\t     */\n\t    this.resolution = resolution || 1;\n\n\t    /**\n\t     * The framing rectangle of the render texture\n\t     *\n\t     * @property frame\n\t     * @type Rectangle\n\t     */\n\t    this.frame = new PIXI.Rectangle(0, 0, this.width * this.resolution, this.height * this.resolution);\n\n\t    /**\n\t     * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n\t     * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n\t     *\n\t     * @property crop\n\t     * @type Rectangle\n\t     */\n\t    this.crop = new PIXI.Rectangle(0, 0, this.width * this.resolution, this.height * this.resolution);\n\n\t    /**\n\t     * The base texture object that this texture uses\n\t     *\n\t     * @property baseTexture\n\t     * @type BaseTexture\n\t     */\n\t    this.baseTexture = new PIXI.BaseTexture();\n\t    this.baseTexture.width = this.width * this.resolution;\n\t    this.baseTexture.height = this.height * this.resolution;\n\t    this.baseTexture._glTextures = [];\n\t    this.baseTexture.resolution = this.resolution;\n\n\t    this.baseTexture.scaleMode = scaleMode || PIXI.scaleModes.DEFAULT;\n\n\t    this.baseTexture.hasLoaded = true;\n\n\t    PIXI.Texture.call(this,\n\t        this.baseTexture,\n\t        new PIXI.Rectangle(0, 0, this.width * this.resolution, this.height * this.resolution)\n\t    );\n\n\t    /**\n\t     * The renderer this RenderTexture uses. A RenderTexture can only belong to one renderer at the moment if its webGL.\n\t     *\n\t     * @property renderer\n\t     * @type CanvasRenderer|WebGLRenderer\n\t     */\n\t    this.renderer = renderer || PIXI.defaultRenderer;\n\n\t    if(this.renderer.type === PIXI.WEBGL_RENDERER)\n\t    {\n\t        var gl = this.renderer.gl;\n\t        this.baseTexture._dirty[gl.id] = false;\n\n\t        this.textureBuffer = new PIXI.FilterTexture(gl, this.width, this.height, this.baseTexture.scaleMode);\n\t        this.baseTexture._glTextures[gl.id] =  this.textureBuffer.texture;\n\n\t        this.render = this.renderWebGL;\n\t        this.projection = new PIXI.Point(this.width*0.5, -this.height*0.5);\n\t    }\n\t    else\n\t    {\n\t        this.render = this.renderCanvas;\n\t        this.textureBuffer = new PIXI.CanvasBuffer(this.width* this.resolution, this.height* this.resolution);\n\t        this.baseTexture.source = this.textureBuffer.canvas;\n\t    }\n\n\t    /**\n\t     * @property valid\n\t     * @type Boolean\n\t     */\n\t    this.valid = true;\n\n\t    this._updateUvs();\n\t};\n\n\tPIXI.RenderTexture.prototype = Object.create(PIXI.Texture.prototype);\n\tPIXI.RenderTexture.prototype.constructor = PIXI.RenderTexture;\n\n\t/**\n\t * Resizes the RenderTexture.\n\t *\n\t * @method resize\n\t * @param width {Number} The width to resize to.\n\t * @param height {Number} The height to resize to.\n\t * @param updateBase {Boolean} Should the baseTexture.width and height values be resized as well?\n\t */\n\tPIXI.RenderTexture.prototype.resize = function(width, height, updateBase)\n\t{\n\t    if (width === this.width && height === this.height)return;\n\n\t    this.valid = (width > 0 && height > 0);\n\n\t    this.width = width;\n\t    this.height = height;\n\n\t    this.frame.width = this.crop.width = width * this.resolution;\n\t    this.frame.height = this.crop.height = height * this.resolution;\n\n\t    if (updateBase)\n\t    {\n\t        this.baseTexture.width = this.width * this.resolution;\n\t        this.baseTexture.height = this.height * this.resolution;\n\t    }\n\n\t    if (this.renderer.type === PIXI.WEBGL_RENDERER)\n\t    {\n\t        this.projection.x = this.width / 2;\n\t        this.projection.y = -this.height / 2;\n\t    }\n\n\t    if(!this.valid)return;\n\n\t    this.textureBuffer.resize(this.width, this.height);\n\t};\n\n\t/**\n\t * Clears the RenderTexture.\n\t *\n\t * @method clear\n\t */\n\tPIXI.RenderTexture.prototype.clear = function()\n\t{\n\t    if(!this.valid)return;\n\n\t    if (this.renderer.type === PIXI.WEBGL_RENDERER)\n\t    {\n\t        this.renderer.gl.bindFramebuffer(this.renderer.gl.FRAMEBUFFER, this.textureBuffer.frameBuffer);\n\t    }\n\n\t    this.textureBuffer.clear();\n\t};\n\n\t/**\n\t * This function will draw the display object to the texture.\n\t *\n\t * @method renderWebGL\n\t * @param displayObject {DisplayObject} The display object to render this texture on\n\t * @param [matrix] {Matrix} Optional matrix to apply to the display object before rendering.\n\t * @param [clear] {Boolean} If true the texture will be cleared before the displayObject is drawn\n\t * @private\n\t */\n\tPIXI.RenderTexture.prototype.renderWebGL = function(displayObject, matrix, clear)\n\t{\n\t    if(!this.valid)return;\n\t    //TOOD replace position with matrix..\n\t   \n\t    //Lets create a nice matrix to apply to our display object. Frame buffers come in upside down so we need to flip the matrix \n\t    var wt = displayObject.worldTransform;\n\t    wt.identity();\n\t    wt.translate(0, this.projection.y * 2);\n\t    if(matrix)wt.append(matrix);\n\t    wt.scale(1,-1);\n\n\t    // setWorld Alpha to ensure that the object is renderer at full opacity\n\t    displayObject.worldAlpha = 1;\n\n\t    // Time to update all the children of the displayObject with the new matrix..    \n\t    var children = displayObject.children;\n\n\t    for(var i=0,j=children.length; i<j; i++)\n\t    {\n\t        children[i].updateTransform();\n\t    }\n\t    \n\t    // time for the webGL fun stuff!\n\t    var gl = this.renderer.gl;\n\n\t    gl.viewport(0, 0, this.width * this.resolution, this.height * this.resolution);\n\n\t    gl.bindFramebuffer(gl.FRAMEBUFFER, this.textureBuffer.frameBuffer );\n\n\t    if(clear)this.textureBuffer.clear();\n\n\t    this.renderer.spriteBatch.dirty = true;\n\n\t    this.renderer.renderDisplayObject(displayObject, this.projection, this.textureBuffer.frameBuffer);\n\n\t    this.renderer.spriteBatch.dirty = true;\n\t};\n\n\n\t/**\n\t * This function will draw the display object to the texture.\n\t *\n\t * @method renderCanvas\n\t * @param displayObject {DisplayObject} The display object to render this texture on\n\t * @param [matrix] {Matrix} Optional matrix to apply to the display object before rendering.\n\t * @param [clear] {Boolean} If true the texture will be cleared before the displayObject is drawn\n\t * @private\n\t */\n\tPIXI.RenderTexture.prototype.renderCanvas = function(displayObject, matrix, clear)\n\t{\n\t    if(!this.valid)return;\n\n\t    var wt = displayObject.worldTransform;\n\t    wt.identity();\n\t    if(matrix)wt.append(matrix);\n\t    \n\t    // setWorld Alpha to ensure that the object is renderer at full opacity\n\t    displayObject.worldAlpha = 1;\n\n\t    // Time to update all the children of the displayObject with the new matrix..    \n\t    var children = displayObject.children;\n\n\t    for(var i = 0, j = children.length; i < j; i++)\n\t    {\n\t        children[i].updateTransform();\n\t    }\n\n\t    if(clear)this.textureBuffer.clear();\n\n\t    var context = this.textureBuffer.context;\n\n\t    var realResolution = this.renderer.resolution;\n\n\t    this.renderer.resolution = this.resolution;\n\n\t    this.renderer.renderDisplayObject(displayObject, context);\n\n\t    this.renderer.resolution = realResolution;\n\t};\n\n\t/**\n\t * Will return a HTML Image of the texture\n\t *\n\t * @method getImage\n\t * @return {Image}\n\t */\n\tPIXI.RenderTexture.prototype.getImage = function()\n\t{\n\t    var image = new Image();\n\t    image.src = this.getBase64();\n\t    return image;\n\t};\n\n\t/**\n\t * Will return a a base64 encoded string of this texture. It works by calling RenderTexture.getCanvas and then running toDataURL on that.\n\t *\n\t * @method getBase64\n\t * @return {String} A base64 encoded string of the texture.\n\t */\n\tPIXI.RenderTexture.prototype.getBase64 = function()\n\t{\n\t    return this.getCanvas().toDataURL();\n\t};\n\n\t/**\n\t * Creates a Canvas element, renders this RenderTexture to it and then returns it.\n\t *\n\t * @method getCanvas\n\t * @return {HTMLCanvasElement} A Canvas element with the texture rendered on.\n\t */\n\tPIXI.RenderTexture.prototype.getCanvas = function()\n\t{\n\t    if (this.renderer.type === PIXI.WEBGL_RENDERER)\n\t    {\n\t        var gl =  this.renderer.gl;\n\t        var width = this.textureBuffer.width;\n\t        var height = this.textureBuffer.height;\n\n\t        var webGLPixels = new Uint8Array(4 * width * height);\n\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, this.textureBuffer.frameBuffer);\n\t        gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, webGLPixels);\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t        var tempCanvas = new PIXI.CanvasBuffer(width, height);\n\t        var canvasData = tempCanvas.context.getImageData(0, 0, width, height);\n\t        canvasData.data.set(webGLPixels);\n\n\t        tempCanvas.context.putImageData(canvasData, 0, 0);\n\n\t        return tempCanvas.canvas;\n\t    }\n\t    else\n\t    {\n\t        return this.textureBuffer.canvas;\n\t    }\n\t};\n\n\tPIXI.RenderTexture.tempMatrix = new PIXI.Matrix();\n\r\n\t/**\n\t * A texture of a [playing] Video.\n\t *\n\t * See the [\"deus\" demo](http://www.goodboydigital.com/pixijs/examples/deus/).\n\t *\n\t * @class VideoTexture\n\t * @extends BaseTexture\n\t * @constructor\n\t * @param source {HTMLVideoElement}\n\t * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n\t */\n\tPIXI.VideoTexture = function( source, scaleMode )\n\t{\n\t    if( !source ){\n\t        throw new Error( 'No video source element specified.' );\n\t    }\n\n\t    // hook in here to check if video is already available.\n\t    // PIXI.BaseTexture looks for a source.complete boolean, plus width & height.\n\n\t    if( (source.readyState === source.HAVE_ENOUGH_DATA || source.readyState === source.HAVE_FUTURE_DATA ) && source.width && source.height )\n\t    {\n\t        source.complete = true;\n\t    }\n\n\t    PIXI.BaseTexture.call( this, source, scaleMode );\n\n\t    this.autoUpdate = false;\n\t    this.updateBound = this._onUpdate.bind(this);\n\n\t    if( !source.complete )\n\t    {\n\t        this._onCanPlay = this.onCanPlay.bind(this);\n\n\t        source.addEventListener( 'canplay', this._onCanPlay );\n\t        source.addEventListener( 'canplaythrough', this._onCanPlay );\n\n\t        // started playing..\n\t        source.addEventListener( 'play', this.onPlayStart.bind(this) );\n\t        source.addEventListener( 'pause', this.onPlayStop.bind(this) );\n\t    }\n\n\t};\n\n\tPIXI.VideoTexture.prototype   = Object.create( PIXI.BaseTexture.prototype );\n\n\tPIXI.VideoTexture.constructor = PIXI.VideoTexture;\n\n\tPIXI.VideoTexture.prototype._onUpdate = function()\n\t{\n\t    if(this.autoUpdate)\n\t    {\n\t        window.requestAnimationFrame(this.updateBound);\n\t        this.dirty();\n\t    }\n\t};\n\n\tPIXI.VideoTexture.prototype.onPlayStart = function()\n\t{\n\t    if(!this.autoUpdate)\n\t    {\n\t        window.requestAnimationFrame(this.updateBound);\n\t        this.autoUpdate = true;\n\t    }\n\t};\n\n\tPIXI.VideoTexture.prototype.onPlayStop = function()\n\t{\n\t    this.autoUpdate = false;\n\t};\n\n\tPIXI.VideoTexture.prototype.onCanPlay = function()\n\t{\n\t    if( event.type === 'canplaythrough' )\n\t    {\n\t        this.hasLoaded  = true;\n\n\n\t        if( this.source )\n\t        {\n\t            this.source.removeEventListener( 'canplay', this._onCanPlay );\n\t            this.source.removeEventListener( 'canplaythrough', this._onCanPlay );\n\n\t            this.width      = this.source.videoWidth;\n\t            this.height     = this.source.videoHeight;\n\n\t            // prevent multiple loaded dispatches..\n\t            if( !this.__loaded ){\n\t                this.__loaded = true;\n\t                this.dispatchEvent( { type: 'loaded', content: this } );\n\t            }\n\t        }\n\t    }\n\t};\n\n\tPIXI.VideoTexture.prototype.destroy = function()\n\t{\n\t    if( this.source && this.source._pixiId )\n\t    {\n\t        PIXI.BaseTextureCache[ this.source._pixiId ] = null;\n\t        delete PIXI.BaseTextureCache[ this.source._pixiId ];\n\n\t        this.source._pixiId = null;\n\t        delete this.source._pixiId;\n\t    }\n\n\t    PIXI.BaseTexture.prototype.destroy.call( this );\n\t};\n\n\t/**\n\t * Mimic Pixi BaseTexture.from.... method.\n\t *\n\t * @static\n\t * @method baseTextureFromVideo\n\t * @param video {HTMLVideoElement}\n\t * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n\t * @return {VideoTexture}\n\t */\n\tPIXI.VideoTexture.baseTextureFromVideo = function( video, scaleMode )\n\t{\n\t    if( !video._pixiId )\n\t    {\n\t        video._pixiId = 'video_' + PIXI.TextureCacheIdGenerator++;\n\t    }\n\n\t    var baseTexture = PIXI.BaseTextureCache[ video._pixiId ];\n\n\t    if( !baseTexture )\n\t    {\n\t        baseTexture = new PIXI.VideoTexture( video, scaleMode );\n\t        PIXI.BaseTextureCache[ video._pixiId ] = baseTexture;\n\t    }\n\n\t    return baseTexture;\n\t};\n\n\t/**\n\t * Mimic Pixi BaseTexture.from.... method.\n\t *\n\t * @static\n\t * @method textureFromVideo \n\t * @param video {HTMLVideoElement}\n\t * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n\t * @return {Texture} A Texture, but not a VideoTexture.\n\t */\n\tPIXI.VideoTexture.textureFromVideo = function( video, scaleMode )\n\t{\n\t    var baseTexture = PIXI.VideoTexture.baseTextureFromVideo( video, scaleMode );\n\t    return new PIXI.Texture( baseTexture );\n\t};\n\n\t/**\n\t * Mimic Pixi BaseTexture.from.... method.\n\t *\n\t * @static\n\t * @method fromUrl \n\t * @param videoSrc {String} The URL for the video.\n\t * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n\t * @return {VideoTexture}\n\t */\n\tPIXI.VideoTexture.fromUrl = function( videoSrc, scaleMode )\n\t{\n\t    var video = document.createElement('video');\n\t    video.src = videoSrc;\n\t    video.autoPlay = true;\n\t    video.play();\n\t    return PIXI.VideoTexture.textureFromVideo( video, scaleMode);\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * A Class that loads a bunch of images / sprite sheet / bitmap font files. Once the\n\t * assets have been loaded they are added to the PIXI Texture cache and can be accessed\n\t * easily through PIXI.Texture.fromImage() and PIXI.Sprite.fromImage()\n\t * When all items have been loaded this class will dispatch a 'onLoaded' event\n\t * As each individual item is loaded this class will dispatch a 'onProgress' event\n\t *\n\t * @class AssetLoader\n\t * @constructor\n\t * @uses EventTarget\n\t * @param assetURLs {Array(String)} An array of image/sprite sheet urls that you would like loaded\n\t *      supported. Supported image formats include 'jpeg', 'jpg', 'png', 'gif'. Supported\n\t *      sprite sheet data formats only include 'JSON' at this time. Supported bitmap font\n\t *      data formats include 'xml' and 'fnt'.\n\t * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n\t */\n\tPIXI.AssetLoader = function(assetURLs, crossorigin)\n\t{\n\t    /**\n\t     * The array of asset URLs that are going to be loaded\n\t     *\n\t     * @property assetURLs\n\t     * @type Array(String)\n\t     */\n\t    this.assetURLs = assetURLs;\n\n\t    /**\n\t     * Whether the requests should be treated as cross origin\n\t     *\n\t     * @property crossorigin\n\t     * @type Boolean\n\t     */\n\t    this.crossorigin = crossorigin;\n\n\t    /**\n\t     * Maps file extension to loader types\n\t     *\n\t     * @property loadersByType\n\t     * @type Object\n\t     */\n\t    this.loadersByType = {\n\t        'jpg':  PIXI.ImageLoader,\n\t        'jpeg': PIXI.ImageLoader,\n\t        'png':  PIXI.ImageLoader,\n\t        'gif':  PIXI.ImageLoader,\n\t        'webp': PIXI.ImageLoader,\n\t        'json': PIXI.JsonLoader,\n\t        'atlas': PIXI.AtlasLoader,\n\t        'anim': PIXI.SpineLoader,\n\t        'xml':  PIXI.BitmapFontLoader,\n\t        'fnt':  PIXI.BitmapFontLoader\n\t    };\n\t};\n\n\tPIXI.EventTarget.mixin(PIXI.AssetLoader.prototype);\n\n\t/**\n\t * Fired when an item has loaded\n\t * @event onProgress\n\t */\n\n\t/**\n\t * Fired when all the assets have loaded\n\t * @event onComplete\n\t */\n\n\t// constructor\n\tPIXI.AssetLoader.prototype.constructor = PIXI.AssetLoader;\n\n\t/**\n\t * Given a filename, returns its extension.\n\t *\n\t * @method _getDataType\n\t * @param str {String} the name of the asset\n\t */\n\tPIXI.AssetLoader.prototype._getDataType = function(str)\n\t{\n\t    var test = 'data:';\n\t    //starts with 'data:'\n\t    var start = str.slice(0, test.length).toLowerCase();\n\t    if (start === test) {\n\t        var data = str.slice(test.length);\n\n\t        var sepIdx = data.indexOf(',');\n\t        if (sepIdx === -1) //malformed data URI scheme\n\t            return null;\n\n\t        //e.g. 'image/gif;base64' => 'image/gif'\n\t        var info = data.slice(0, sepIdx).split(';')[0];\n\n\t        //We might need to handle some special cases here...\n\t        //standardize text/plain to 'txt' file extension\n\t        if (!info || info.toLowerCase() === 'text/plain')\n\t            return 'txt';\n\n\t        //User specified mime type, try splitting it by '/'\n\t        return info.split('/').pop().toLowerCase();\n\t    }\n\n\t    return null;\n\t};\n\n\t/**\n\t * Starts loading the assets sequentially\n\t *\n\t * @method load\n\t */\n\tPIXI.AssetLoader.prototype.load = function()\n\t{\n\t    var scope = this;\n\n\t    function onLoad(evt) {\n\t        scope.onAssetLoaded(evt.data.content);\n\t    }\n\n\t    this.loadCount = this.assetURLs.length;\n\n\t    for (var i=0; i < this.assetURLs.length; i++)\n\t    {\n\t        var fileName = this.assetURLs[i];\n\t        //first see if we have a data URI scheme..\n\t        var fileType = this._getDataType(fileName);\n\n\t        //if not, assume it's a file URI\n\t        if (!fileType)\n\t            fileType = fileName.split('?').shift().split('.').pop().toLowerCase();\n\n\t        var Constructor = this.loadersByType[fileType];\n\t        if(!Constructor)\n\t            throw new Error(fileType + ' is an unsupported file type');\n\n\t        var loader = new Constructor(fileName, this.crossorigin);\n\n\t        loader.on('loaded', onLoad);\n\t        loader.load();\n\t    }\n\t};\n\n\t/**\n\t * Invoked after each file is loaded\n\t *\n\t * @method onAssetLoaded\n\t * @private\n\t */\n\tPIXI.AssetLoader.prototype.onAssetLoaded = function(loader)\n\t{\n\t    this.loadCount--;\n\n\t    this.emit('onProgress', {\n\t        content: this,\n\t        loader: loader,\n\t        loaded: this.assetURLs.length - this.loadCount,\n\t        total: this.assetURLs.length\n\t    });\n\n\t    if (this.onProgress) this.onProgress(loader);\n\n\t    if (!this.loadCount)\n\t    {\n\t        this.emit('onComplete', { content: this });\n\t        if(this.onComplete) this.onComplete();\n\t    }\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The json file loader is used to load in JSON data and parse it\n\t * When loaded this class will dispatch a 'loaded' event\n\t * If loading fails this class will dispatch an 'error' event\n\t *\n\t * @class JsonLoader\n\t * @uses EventTarget\n\t * @constructor\n\t * @param url {String} The url of the JSON file\n\t * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n\t */\n\tPIXI.JsonLoader = function (url, crossorigin) {\n\t    /**\n\t     * The url of the bitmap font data\n\t     *\n\t     * @property url\n\t     * @type String\n\t     */\n\t    this.url = url;\n\n\t    /**\n\t     * Whether the requests should be treated as cross origin\n\t     *\n\t     * @property crossorigin\n\t     * @type Boolean\n\t     */\n\t    this.crossorigin = crossorigin;\n\n\t    /**\n\t     * [read-only] The base url of the bitmap font data\n\t     *\n\t     * @property baseUrl\n\t     * @type String\n\t     * @readOnly\n\t     */\n\t    this.baseUrl = url.replace(/[^\\/]*$/, '');\n\n\t    /**\n\t     * [read-only] Whether the data has loaded yet\n\t     *\n\t     * @property loaded\n\t     * @type Boolean\n\t     * @readOnly\n\t     */\n\t    this.loaded = false;\n\n\t};\n\n\t// constructor\n\tPIXI.JsonLoader.prototype.constructor = PIXI.JsonLoader;\n\tPIXI.EventTarget.mixin(PIXI.JsonLoader.prototype);\n\n\t/**\n\t * Loads the JSON data\n\t *\n\t * @method load\n\t */\n\tPIXI.JsonLoader.prototype.load = function () {\n\n\t    if(window.XDomainRequest && this.crossorigin)\n\t    {\n\t        this.ajaxRequest = new window.XDomainRequest();\n\n\t        // XDomainRequest has a few quirks. Occasionally it will abort requests\n\t        // A way to avoid this is to make sure ALL callbacks are set even if not used\n\t        // More info here: http://stackoverflow.com/questions/15786966/xdomainrequest-aborts-post-on-ie-9\n\t        this.ajaxRequest.timeout = 3000;\n\n\t        this.ajaxRequest.onerror = this.onError.bind(this);\n\n\t        this.ajaxRequest.ontimeout = this.onError.bind(this);\n\n\t        this.ajaxRequest.onprogress = function() {};\n\n\t        this.ajaxRequest.onload = this.onJSONLoaded.bind(this);\n\t    }\n\t    else\n\t    {\n\t        if (window.XMLHttpRequest)\n\t        {\n\t            this.ajaxRequest = new window.XMLHttpRequest();\n\t        }\n\t        else\n\t        {\n\t            this.ajaxRequest = new window.ActiveXObject('Microsoft.XMLHTTP');\n\t        }\n\n\t        this.ajaxRequest.onreadystatechange = this.onReadyStateChanged.bind(this);\n\t    }\n\n\t    this.ajaxRequest.open('GET',this.url,true);\n\n\t    this.ajaxRequest.send();\n\t};\n\n\t/**\n\t * Bridge function to be able to use the more reliable onreadystatechange in XMLHttpRequest.\n\t *\n\t * @method onReadyStateChanged\n\t * @private\n\t */\n\tPIXI.JsonLoader.prototype.onReadyStateChanged = function () {\n\t    if (this.ajaxRequest.readyState === 4 && (this.ajaxRequest.status === 200 || window.location.href.indexOf('http') === -1)) {\n\t        this.onJSONLoaded();\n\t    }\n\t};\n\n\t/**\n\t * Invoke when JSON file is loaded\n\t *\n\t * @method onJSONLoaded\n\t * @private\n\t */\n\tPIXI.JsonLoader.prototype.onJSONLoaded = function () {\n\n\t    if(!this.ajaxRequest.responseText )\n\t    {\n\t        this.onError();\n\t        return;\n\t    }\n\n\t    this.json = JSON.parse(this.ajaxRequest.responseText);\n\n\t    if(this.json.frames && this.json.meta && this.json.meta.image)\n\t    {\n\t        // sprite sheet\n\t        var textureUrl = this.baseUrl + this.json.meta.image;\n\t        var image = new PIXI.ImageLoader(textureUrl, this.crossorigin);\n\t        var frameData = this.json.frames;\n\n\t        this.texture = image.texture.baseTexture;\n\t        image.addEventListener('loaded', this.onLoaded.bind(this));\n\n\t        for (var i in frameData)\n\t        {\n\t            var rect = frameData[i].frame;\n\n\t            if (rect)\n\t            {\n\t                var textureSize = new PIXI.Rectangle(rect.x, rect.y, rect.w, rect.h);\n\t                var crop = textureSize.clone();\n\t                var trim = null;\n\n\t                //  Check to see if the sprite is trimmed\n\t                if (frameData[i].trimmed)\n\t                {\n\t                    var actualSize = frameData[i].sourceSize;\n\t                    var realSize = frameData[i].spriteSourceSize;\n\t                    trim = new PIXI.Rectangle(realSize.x, realSize.y, actualSize.w, actualSize.h);\n\t                }\n\t                PIXI.TextureCache[i] = new PIXI.Texture(this.texture, textureSize, crop, trim);\n\t            }\n\t        }\n\n\t        image.load();\n\n\t    }\n\t    else if(this.json.bones)\n\t    {\n\t\t\t/* check if the json was loaded before */\n\t\t\tif (PIXI.AnimCache[this.url])\n\t\t\t{\n\t\t\t\tthis.onLoaded();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* use a bit of hackery to load the atlas file, here we assume that the .json, .atlas and .png files\n\t\t\t\t * that correspond to the spine file are in the same base URL and that the .json and .atlas files\n\t\t\t\t * have the same name\n\t\t\t\t*/\n\t\t\t\tvar atlasPath = this.url.substr(0, this.url.lastIndexOf('.')) + '.atlas';\n\t\t\t\tvar atlasLoader = new PIXI.JsonLoader(atlasPath, this.crossorigin);\n\t\t\t\t// save a copy of the current object for future reference //\n\t\t\t\tvar originalLoader = this;\n\t\t\t\t// before loading the file, replace the \"onJSONLoaded\" function for our own //\n\t\t\t\tatlasLoader.onJSONLoaded = function()\n\t\t\t\t{\n\t\t\t\t\t// at this point \"this\" points at the atlasLoader (JsonLoader) instance //\n\t\t\t\t\tif(!this.ajaxRequest.responseText)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.onError(); // FIXME: hmm, this is funny because we are not responding to errors yet\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// create a new instance of a spine texture loader for this spine object //\n\t\t\t\t\tvar textureLoader = new PIXI.SpineTextureLoader(this.url.substring(0, this.url.lastIndexOf('/')));\n\t\t\t\t\t// create a spine atlas using the loaded text and a spine texture loader instance //\n\t\t\t\t\tvar spineAtlas = new spine.Atlas(this.ajaxRequest.responseText, textureLoader);\n\t\t\t\t\t// now we use an atlas attachment loader //\n\t\t\t\t\tvar attachmentLoader = new spine.AtlasAttachmentLoader(spineAtlas);\n\t\t\t\t\t// spine animation\n\t\t\t\t\tvar spineJsonParser = new spine.SkeletonJson(attachmentLoader);\n\t\t\t\t\tvar skeletonData = spineJsonParser.readSkeletonData(originalLoader.json);\n\t\t\t\t\tPIXI.AnimCache[originalLoader.url] = skeletonData;\n\t\t\t\t\toriginalLoader.spine = skeletonData;\n\t\t\t\t\toriginalLoader.spineAtlas = spineAtlas;\n\t\t\t\t\toriginalLoader.spineAtlasLoader = atlasLoader;\n\t\t\t\t\t// wait for textures to finish loading if needed\n\t\t\t\t\tif (textureLoader.loadingCount > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\ttextureLoader.addEventListener('loadedBaseTexture', function(evt){\n\t\t\t\t\t\t\tif (evt.content.content.loadingCount <= 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\toriginalLoader.onLoaded();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\toriginalLoader.onLoaded();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t// start the loading //\n\t\t\t\tatlasLoader.load();\n\t\t\t}\n\t    }\n\t    else\n\t    {\n\t        this.onLoaded();\n\t    }\n\t};\n\n\t/**\n\t * Invoke when json file loaded\n\t *\n\t * @method onLoaded\n\t * @private\n\t */\n\tPIXI.JsonLoader.prototype.onLoaded = function () {\n\t    this.loaded = true;\n\t    this.dispatchEvent({\n\t        type: 'loaded',\n\t        content: this\n\t    });\n\t};\n\n\t/**\n\t * Invoke when error occured\n\t *\n\t * @method onError\n\t * @private\n\t */\n\tPIXI.JsonLoader.prototype.onError = function () {\n\n\t    this.dispatchEvent({\n\t        type: 'error',\n\t        content: this\n\t    });\n\t};\n\r\n\t/**\n\t * @author Martin Kelm http://mkelm.github.com\n\t */\n\n\t/**\n\t * The atlas file loader is used to load in Texture Atlas data and parse it. When loaded this class will dispatch a 'loaded' event. If loading fails this class will dispatch an 'error' event.\n\t *\n\t * To generate the data you can use http://www.codeandweb.com/texturepacker and publish in the 'JSON' format.\n\t * \n\t * It is highly recommended to use texture atlases (also know as 'sprite sheets') as it allowed sprites to be batched and drawn together for highly increased rendering speed.\n\t * Once the data has been loaded the frames are stored in the PIXI texture cache and can be accessed though PIXI.Texture.fromFrameId() and PIXI.Sprite.fromFrameId()\n\t * \n\t * @class AtlasLoader\n\t * @uses EventTarget\n\t * @constructor\n\t * @param url {String} The url of the JSON file\n\t * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n\t */\n\tPIXI.AtlasLoader = function (url, crossorigin) {\n\t    this.url = url;\n\t    this.baseUrl = url.replace(/[^\\/]*$/, '');\n\t    this.crossorigin = crossorigin;\n\t    this.loaded = false;\n\n\t};\n\n\t// constructor\n\tPIXI.AtlasLoader.constructor = PIXI.AtlasLoader;\n\n\tPIXI.EventTarget.mixin(PIXI.AtlasLoader.prototype);\n\n\t /**\n\t * Starts loading the JSON file\n\t *\n\t * @method load\n\t */\n\tPIXI.AtlasLoader.prototype.load = function () {\n\t    this.ajaxRequest = new PIXI.AjaxRequest();\n\t    this.ajaxRequest.onreadystatechange = this.onAtlasLoaded.bind(this);\n\n\t    this.ajaxRequest.open('GET', this.url, true);\n\t    if (this.ajaxRequest.overrideMimeType) this.ajaxRequest.overrideMimeType('application/json');\n\t    this.ajaxRequest.send(null);\n\t};\n\n\t/**\n\t * Invoked when the Atlas has fully loaded. Parses the JSON and builds the texture frames.\n\t * \n\t * @method onAtlasLoaded\n\t * @private\n\t */\n\tPIXI.AtlasLoader.prototype.onAtlasLoaded = function () {\n\t    if (this.ajaxRequest.readyState === 4) {\n\t        if (this.ajaxRequest.status === 200 || window.location.href.indexOf('http') === -1) {\n\t            this.atlas = {\n\t                meta : {\n\t                    image : []\n\t                },\n\t                frames : []\n\t            };\n\t            var result = this.ajaxRequest.responseText.split(/\\r?\\n/);\n\t            var lineCount = -3;\n\n\t            var currentImageId = 0;\n\t            var currentFrame = null;\n\t            var nameInNextLine = false;\n\n\t            var i = 0,\n\t                j = 0,\n\t                selfOnLoaded = this.onLoaded.bind(this);\n\n\t            // parser without rotation support yet!\n\t            for (i = 0; i < result.length; i++) {\n\t                result[i] = result[i].replace(/^\\s+|\\s+$/g, '');\n\t                if (result[i] === '') {\n\t                    nameInNextLine = i+1;\n\t                }\n\t                if (result[i].length > 0) {\n\t                    if (nameInNextLine === i) {\n\t                        this.atlas.meta.image.push(result[i]);\n\t                        currentImageId = this.atlas.meta.image.length - 1;\n\t                        this.atlas.frames.push({});\n\t                        lineCount = -3;\n\t                    } else if (lineCount > 0) {\n\t                        if (lineCount % 7 === 1) { // frame name\n\t                            if (currentFrame != null) { //jshint ignore:line\n\t                                this.atlas.frames[currentImageId][currentFrame.name] = currentFrame;\n\t                            }\n\t                            currentFrame = { name: result[i], frame : {} };\n\t                        } else {\n\t                            var text = result[i].split(' ');\n\t                            if (lineCount % 7 === 3) { // position\n\t                                currentFrame.frame.x = Number(text[1].replace(',', ''));\n\t                                currentFrame.frame.y = Number(text[2]);\n\t                            } else if (lineCount % 7 === 4) { // size\n\t                                currentFrame.frame.w = Number(text[1].replace(',', ''));\n\t                                currentFrame.frame.h = Number(text[2]);\n\t                            } else if (lineCount % 7 === 5) { // real size\n\t                                var realSize = {\n\t                                    x : 0,\n\t                                    y : 0,\n\t                                    w : Number(text[1].replace(',', '')),\n\t                                    h : Number(text[2])\n\t                                };\n\n\t                                if (realSize.w > currentFrame.frame.w || realSize.h > currentFrame.frame.h) {\n\t                                    currentFrame.trimmed = true;\n\t                                    currentFrame.realSize = realSize;\n\t                                } else {\n\t                                    currentFrame.trimmed = false;\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                    lineCount++;\n\t                }\n\t            }\n\n\t            if (currentFrame != null) { //jshint ignore:line\n\t                this.atlas.frames[currentImageId][currentFrame.name] = currentFrame;\n\t            }\n\n\t            if (this.atlas.meta.image.length > 0) {\n\t                this.images = [];\n\t                for (j = 0; j < this.atlas.meta.image.length; j++) {\n\t                    // sprite sheet\n\t                    var textureUrl = this.baseUrl + this.atlas.meta.image[j];\n\t                    var frameData = this.atlas.frames[j];\n\t                    this.images.push(new PIXI.ImageLoader(textureUrl, this.crossorigin));\n\n\t                    for (i in frameData) {\n\t                        var rect = frameData[i].frame;\n\t                        if (rect) {\n\t                            PIXI.TextureCache[i] = new PIXI.Texture(this.images[j].texture.baseTexture, {\n\t                                x: rect.x,\n\t                                y: rect.y,\n\t                                width: rect.w,\n\t                                height: rect.h\n\t                            });\n\t                            if (frameData[i].trimmed) {\n\t                                PIXI.TextureCache[i].realSize = frameData[i].realSize;\n\t                                // trim in pixi not supported yet, todo update trim properties if it is done ...\n\t                                PIXI.TextureCache[i].trim.x = 0;\n\t                                PIXI.TextureCache[i].trim.y = 0;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\n\t                this.currentImageId = 0;\n\t                for (j = 0; j < this.images.length; j++) {\n\t                    this.images[j].on('loaded', selfOnLoaded);\n\t                }\n\t                this.images[this.currentImageId].load();\n\n\t            } else {\n\t                this.onLoaded();\n\t            }\n\n\t        } else {\n\t            this.onError();\n\t        }\n\t    }\n\t};\n\n\t/**\n\t * Invoked when json file has loaded.\n\t * \n\t * @method onLoaded\n\t * @private\n\t */\n\tPIXI.AtlasLoader.prototype.onLoaded = function () {\n\t    if (this.images.length - 1 > this.currentImageId) {\n\t        this.currentImageId++;\n\t        this.images[this.currentImageId].load();\n\t    } else {\n\t        this.loaded = true;\n\t        this.emit('loaded', { content: this });\n\t    }\n\t};\n\n\t/**\n\t * Invoked when an error occurs.\n\t * \n\t * @method onError\n\t * @private\n\t */\n\tPIXI.AtlasLoader.prototype.onError = function () {\n\t    this.emit('error', { content: this });\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The sprite sheet loader is used to load in JSON sprite sheet data\n\t * To generate the data you can use http://www.codeandweb.com/texturepacker and publish in the 'JSON' format\n\t * There is a free version so thats nice, although the paid version is great value for money.\n\t * It is highly recommended to use Sprite sheets (also know as a 'texture atlas') as it means sprites can be batched and drawn together for highly increased rendering speed.\n\t * Once the data has been loaded the frames are stored in the PIXI texture cache and can be accessed though PIXI.Texture.fromFrameId() and PIXI.Sprite.fromFrameId()\n\t * This loader will load the image file that the Spritesheet points to as well as the data.\n\t * When loaded this class will dispatch a 'loaded' event\n\t *\n\t * @class SpriteSheetLoader\n\t * @uses EventTarget\n\t * @constructor\n\t * @param url {String} The url of the sprite sheet JSON file\n\t * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n\t */\n\tPIXI.SpriteSheetLoader = function (url, crossorigin) {\n\n\t    /**\n\t     * The url of the atlas data\n\t     *\n\t     * @property url\n\t     * @type String\n\t     */\n\t    this.url = url;\n\n\t    /**\n\t     * Whether the requests should be treated as cross origin\n\t     *\n\t     * @property crossorigin\n\t     * @type Boolean\n\t     */\n\t    this.crossorigin = crossorigin;\n\n\t    /**\n\t     * [read-only] The base url of the bitmap font data\n\t     *\n\t     * @property baseUrl\n\t     * @type String\n\t     * @readOnly\n\t     */\n\t    this.baseUrl = url.replace(/[^\\/]*$/, '');\n\n\t    /**\n\t     * The texture being loaded\n\t     *\n\t     * @property texture\n\t     * @type Texture\n\t     */\n\t    this.texture = null;\n\n\t    /**\n\t     * The frames of the sprite sheet\n\t     *\n\t     * @property frames\n\t     * @type Object\n\t     */\n\t    this.frames = {};\n\t};\n\n\t// constructor\n\tPIXI.SpriteSheetLoader.prototype.constructor = PIXI.SpriteSheetLoader;\n\n\tPIXI.EventTarget.mixin(PIXI.SpriteSheetLoader.prototype);\n\n\t/**\n\t * This will begin loading the JSON file\n\t *\n\t * @method load\n\t */\n\tPIXI.SpriteSheetLoader.prototype.load = function () {\n\t    var scope = this;\n\t    var jsonLoader = new PIXI.JsonLoader(this.url, this.crossorigin);\n\t    jsonLoader.on('loaded', function (event) {\n\t        scope.json = event.data.content.json;\n\t        scope.onLoaded();\n\t    });\n\t    jsonLoader.load();\n\t};\n\n\t/**\n\t * Invoke when all files are loaded (json and texture)\n\t *\n\t * @method onLoaded\n\t * @private\n\t */\n\tPIXI.SpriteSheetLoader.prototype.onLoaded = function () {\n\t    this.emit('loaded', {\n\t        content: this\n\t    });\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The image loader class is responsible for loading images file formats ('jpeg', 'jpg', 'png' and 'gif')\n\t * Once the image has been loaded it is stored in the PIXI texture cache and can be accessed though PIXI.Texture.fromFrame() and PIXI.Sprite.fromFrame()\n\t * When loaded this class will dispatch a 'loaded' event\n\t *\n\t * @class ImageLoader\n\t * @uses EventTarget\n\t * @constructor\n\t * @param url {String} The url of the image\n\t * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n\t */\n\tPIXI.ImageLoader = function(url, crossorigin)\n\t{\n\t    /**\n\t     * The texture being loaded\n\t     *\n\t     * @property texture\n\t     * @type Texture\n\t     */\n\t    this.texture = PIXI.Texture.fromImage(url, crossorigin);\n\n\t    /**\n\t     * if the image is loaded with loadFramedSpriteSheet\n\t     * frames will contain the sprite sheet frames\n\t     *\n\t     * @property frames\n\t     * @type Array\n\t     * @readOnly\n\t     */\n\t    this.frames = [];\n\t};\n\n\t// constructor\n\tPIXI.ImageLoader.prototype.constructor = PIXI.ImageLoader;\n\n\tPIXI.EventTarget.mixin(PIXI.ImageLoader.prototype);\n\n\t/**\n\t * Loads image or takes it from cache\n\t *\n\t * @method load\n\t */\n\tPIXI.ImageLoader.prototype.load = function()\n\t{\n\t    if(!this.texture.baseTexture.hasLoaded)\n\t    {\n\t        this.texture.baseTexture.on('loaded', this.onLoaded.bind(this));\n\t    }\n\t    else\n\t    {\n\t        this.onLoaded();\n\t    }\n\t};\n\n\t/**\n\t * Invoked when image file is loaded or it is already cached and ready to use\n\t *\n\t * @method onLoaded\n\t * @private\n\t */\n\tPIXI.ImageLoader.prototype.onLoaded = function()\n\t{\n\t    this.emit('loaded', { content: this });\n\t};\n\n\t/**\n\t * Loads image and split it to uniform sized frames\n\t *\n\t * @method loadFramedSpriteSheet\n\t * @param frameWidth {Number} width of each frame\n\t * @param frameHeight {Number} height of each frame\n\t * @param textureName {String} if given, the frames will be cached in <textureName>-<ord> format\n\t */\n\tPIXI.ImageLoader.prototype.loadFramedSpriteSheet = function(frameWidth, frameHeight, textureName)\n\t{\n\t    this.frames = [];\n\t    var cols = Math.floor(this.texture.width / frameWidth);\n\t    var rows = Math.floor(this.texture.height / frameHeight);\n\n\t    var i=0;\n\t    for (var y=0; y<rows; y++)\n\t    {\n\t        for (var x=0; x<cols; x++,i++)\n\t        {\n\t            var texture = new PIXI.Texture(this.texture.baseTexture, {\n\t                x: x*frameWidth,\n\t                y: y*frameHeight,\n\t                width: frameWidth,\n\t                height: frameHeight\n\t            });\n\n\t            this.frames.push(texture);\n\t            if (textureName) PIXI.TextureCache[textureName + '-' + i] = texture;\n\t        }\n\t    }\n\n\t\tthis.load();\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The xml loader is used to load in XML bitmap font data ('xml' or 'fnt')\n\t * To generate the data you can use http://www.angelcode.com/products/bmfont/\n\t * This loader will also load the image file as the data.\n\t * When loaded this class will dispatch a 'loaded' event\n\t *\n\t * @class BitmapFontLoader\n\t * @uses EventTarget\n\t * @constructor\n\t * @param url {String} The url of the sprite sheet JSON file\n\t * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n\t */\n\tPIXI.BitmapFontLoader = function(url, crossorigin)\n\t{\n\t    /**\n\t     * The url of the bitmap font data\n\t     *\n\t     * @property url\n\t     * @type String\n\t     */\n\t    this.url = url;\n\n\t    /**\n\t     * Whether the requests should be treated as cross origin\n\t     *\n\t     * @property crossorigin\n\t     * @type Boolean\n\t     */\n\t    this.crossorigin = crossorigin;\n\n\t    /**\n\t     * [read-only] The base url of the bitmap font data\n\t     *\n\t     * @property baseUrl\n\t     * @type String\n\t     * @readOnly\n\t     */\n\t    this.baseUrl = url.replace(/[^\\/]*$/, '');\n\n\t    /**\n\t     * [read-only] The texture of the bitmap font\n\t     *\n\t     * @property texture\n\t     * @type Texture\n\t     */\n\t    this.texture = null;\n\t};\n\n\t// constructor\n\tPIXI.BitmapFontLoader.prototype.constructor = PIXI.BitmapFontLoader;\n\tPIXI.EventTarget.mixin(PIXI.BitmapFontLoader.prototype);\n\n\t/**\n\t * Loads the XML font data\n\t *\n\t * @method load\n\t */\n\tPIXI.BitmapFontLoader.prototype.load = function()\n\t{\n\t    this.ajaxRequest = new PIXI.AjaxRequest();\n\t    this.ajaxRequest.onreadystatechange = this.onXMLLoaded.bind(this);\n\n\t    this.ajaxRequest.open('GET', this.url, true);\n\t    if (this.ajaxRequest.overrideMimeType) this.ajaxRequest.overrideMimeType('application/xml');\n\t    this.ajaxRequest.send(null);\n\t};\n\n\t/**\n\t * Invoked when the XML file is loaded, parses the data.\n\t *\n\t * @method onXMLLoaded\n\t * @private\n\t */\n\tPIXI.BitmapFontLoader.prototype.onXMLLoaded = function()\n\t{\n\t    if (this.ajaxRequest.readyState === 4)\n\t    {\n\t        if (this.ajaxRequest.status === 200 || window.location.protocol.indexOf('http') === -1)\n\t        {\n\t            var responseXML = this.ajaxRequest.responseXML;\n\t            if(!responseXML || /MSIE 9/i.test(navigator.userAgent) || navigator.isCocoonJS) {\n\t                if(typeof(window.DOMParser) === 'function') {\n\t                    var domparser = new DOMParser();\n\t                    responseXML = domparser.parseFromString(this.ajaxRequest.responseText, 'text/xml');\n\t                } else {\n\t                    var div = document.createElement('div');\n\t                    div.innerHTML = this.ajaxRequest.responseText;\n\t                    responseXML = div;\n\t                }\n\t            }\n\n\t            var textureUrl = this.baseUrl + responseXML.getElementsByTagName('page')[0].getAttribute('file');\n\t            var image = new PIXI.ImageLoader(textureUrl, this.crossorigin);\n\t            this.texture = image.texture.baseTexture;\n\n\t            var data = {};\n\t            var info = responseXML.getElementsByTagName('info')[0];\n\t            var common = responseXML.getElementsByTagName('common')[0];\n\t            data.font = info.getAttribute('face');\n\t            data.size = parseInt(info.getAttribute('size'), 10);\n\t            data.lineHeight = parseInt(common.getAttribute('lineHeight'), 10);\n\t            data.chars = {};\n\n\t            //parse letters\n\t            var letters = responseXML.getElementsByTagName('char');\n\n\t            for (var i = 0; i < letters.length; i++)\n\t            {\n\t                var charCode = parseInt(letters[i].getAttribute('id'), 10);\n\n\t                var textureRect = new PIXI.Rectangle(\n\t                    parseInt(letters[i].getAttribute('x'), 10),\n\t                    parseInt(letters[i].getAttribute('y'), 10),\n\t                    parseInt(letters[i].getAttribute('width'), 10),\n\t                    parseInt(letters[i].getAttribute('height'), 10)\n\t                );\n\n\t                data.chars[charCode] = {\n\t                    xOffset: parseInt(letters[i].getAttribute('xoffset'), 10),\n\t                    yOffset: parseInt(letters[i].getAttribute('yoffset'), 10),\n\t                    xAdvance: parseInt(letters[i].getAttribute('xadvance'), 10),\n\t                    kerning: {},\n\t                    texture: PIXI.TextureCache[charCode] = new PIXI.Texture(this.texture, textureRect)\n\n\t                };\n\t            }\n\n\t            //parse kernings\n\t            var kernings = responseXML.getElementsByTagName('kerning');\n\t            for (i = 0; i < kernings.length; i++)\n\t            {\n\t                var first = parseInt(kernings[i].getAttribute('first'), 10);\n\t                var second = parseInt(kernings[i].getAttribute('second'), 10);\n\t                var amount = parseInt(kernings[i].getAttribute('amount'), 10);\n\n\t                data.chars[second].kerning[first] = amount;\n\n\t            }\n\n\t            PIXI.BitmapText.fonts[data.font] = data;\n\n\t            image.addEventListener('loaded', this.onLoaded.bind(this));\n\t            image.load();\n\t        }\n\t    }\n\t};\n\n\t/**\n\t * Invoked when all files are loaded (xml/fnt and texture)\n\t *\n\t * @method onLoaded\n\t * @private\n\t */\n\tPIXI.BitmapFontLoader.prototype.onLoaded = function()\n\t{\n\t    this.emit('loaded', { content: this });\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t * based on pixi impact spine implementation made by Eemeli Kelokorpi (@ekelokorpi) https://github.com/ekelokorpi\n\t *\n\t * Awesome JS run time provided by EsotericSoftware\n\t * https://github.com/EsotericSoftware/spine-runtimes\n\t *\n\t */\n\n\t/**\n\t * The Spine loader is used to load in JSON spine data\n\t * To generate the data you need to use http://esotericsoftware.com/ and export in the \"JSON\" format\n\t * Due to a clash of names  You will need to change the extension of the spine file from *.json to *.anim for it to load\n\t * See example 12 (http://www.goodboydigital.com/pixijs/examples/12/) to see a working example and check out the source\n\t * You will need to generate a sprite sheet to accompany the spine data\n\t * When loaded this class will dispatch a \"loaded\" event\n\t *\n\t * @class SpineLoader\n\t * @uses EventTarget\n\t * @constructor\n\t * @param url {String} The url of the JSON file\n\t * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n\t */\n\tPIXI.SpineLoader = function(url, crossorigin)\n\t{\n\t    /**\n\t     * The url of the bitmap font data\n\t     *\n\t     * @property url\n\t     * @type String\n\t     */\n\t    this.url = url;\n\n\t    /**\n\t     * Whether the requests should be treated as cross origin\n\t     *\n\t     * @property crossorigin\n\t     * @type Boolean\n\t     */\n\t    this.crossorigin = crossorigin;\n\n\t    /**\n\t     * [read-only] Whether the data has loaded yet\n\t     *\n\t     * @property loaded\n\t     * @type Boolean\n\t     * @readOnly\n\t     */\n\t    this.loaded = false;\n\t};\n\n\tPIXI.SpineLoader.prototype.constructor = PIXI.SpineLoader;\n\n\tPIXI.EventTarget.mixin(PIXI.SpineLoader.prototype);\n\n\t/**\n\t * Loads the JSON data\n\t *\n\t * @method load\n\t */\n\tPIXI.SpineLoader.prototype.load = function () {\n\n\t    var scope = this;\n\t    var jsonLoader = new PIXI.JsonLoader(this.url, this.crossorigin);\n\t    jsonLoader.on('loaded', function (event) {\n\t        scope.json = event.data.content.json;\n\t        scope.onLoaded();\n\t    });\n\t    jsonLoader.load();\n\t};\n\n\t/**\n\t * Invoked when JSON file is loaded.\n\t *\n\t * @method onLoaded\n\t * @private\n\t */\n\tPIXI.SpineLoader.prototype.onLoaded = function () {\n\t    this.loaded = true;\n\t    this.emit('loaded', { content: this });\n\t};\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * This is the base class for creating a PIXI filter. Currently only webGL supports filters.\n\t * If you want to make a custom filter this should be your base class.\n\t * @class AbstractFilter\n\t * @constructor\n\t * @param fragmentSrc {Array} The fragment source in an array of strings.\n\t * @param uniforms {Object} An object containing the uniforms for this filter.\n\t */\n\tPIXI.AbstractFilter = function(fragmentSrc, uniforms)\n\t{\n\t    /**\n\t    * An array of passes - some filters contain a few steps this array simply stores the steps in a liniear fashion.\n\t    * For example the blur filter has two passes blurX and blurY.\n\t    * @property passes\n\t    * @type Array(Filter)\n\t    * @private\n\t    */\n\t    this.passes = [this];\n\n\t    /**\n\t    * @property shaders\n\t    * @type Array(Shader)\n\t    * @private\n\t    */\n\t    this.shaders = [];\n\t    \n\t    /**\n\t    * @property dirty\n\t    * @type Boolean\n\t    */\n\t    this.dirty = true;\n\n\t    /**\n\t    * @property padding\n\t    * @type Number\n\t    */\n\t    this.padding = 0;\n\n\t    /**\n\t    * @property uniforms\n\t    * @type object\n\t    * @private\n\t    */\n\t    this.uniforms = uniforms || {};\n\n\t    /**\n\t    * @property fragmentSrc\n\t    * @type Array\n\t    * @private\n\t    */\n\t    this.fragmentSrc = fragmentSrc || [];\n\t};\n\n\tPIXI.AbstractFilter.prototype.constructor = PIXI.AbstractFilter;\n\n\t/**\n\t * Syncs the uniforms between the class object and the shaders.\n\t *\n\t * @method syncUniforms\n\t */\n\tPIXI.AbstractFilter.prototype.syncUniforms = function()\n\t{\n\t    for(var i=0,j=this.shaders.length; i<j; i++)\n\t    {\n\t        this.shaders[i].dirty = true;\n\t    }\n\t};\n\n\t/*\n\tPIXI.AbstractFilter.prototype.apply = function(frameBuffer)\n\t{\n\t    // TODO :)\n\t};\n\t*/\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The AlphaMaskFilter class uses the pixel values from the specified texture (called the displacement map) to perform a displacement of an object.\n\t * You can use this filter to apply all manor of crazy warping effects\n\t * Currently the r property of the texture is used to offset the x and the g property of the texture is used to offset the y.\n\t * \n\t * @class AlphaMaskFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t * @param texture {Texture} The texture used for the displacement map * must be power of 2 texture at the moment\n\t */\n\tPIXI.AlphaMaskFilter = function(texture)\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\t    texture.baseTexture._powerOf2 = true;\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        mask: {type: 'sampler2D', value:texture},\n\t        mapDimensions:   {type: '2f', value:{x:1, y:5112}},\n\t        dimensions:   {type: '4fv', value:[0,0,0,0]}\n\t    };\n\n\t    if(texture.baseTexture.hasLoaded)\n\t    {\n\t        this.uniforms.mask.value.x = texture.width;\n\t        this.uniforms.mask.value.y = texture.height;\n\t    }\n\t    else\n\t    {\n\t        this.boundLoadedFunction = this.onTextureLoaded.bind(this);\n\n\t        texture.baseTexture.on('loaded', this.boundLoadedFunction);\n\t    }\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform sampler2D mask;',\n\t        'uniform sampler2D uSampler;',\n\t        'uniform vec2 offset;',\n\t        'uniform vec4 dimensions;',\n\t        'uniform vec2 mapDimensions;',\n\n\t        'void main(void) {',\n\t        '   vec2 mapCords = vTextureCoord.xy;',\n\t        '   mapCords += (dimensions.zw + offset)/ dimensions.xy ;',\n\t        '   mapCords.y *= -1.0;',\n\t        '   mapCords.y += 1.0;',\n\t        '   mapCords *= dimensions.xy / mapDimensions;',\n\n\t        '   vec4 original =  texture2D(uSampler, vTextureCoord);',\n\t        '   float maskAlpha =  texture2D(mask, mapCords).r;',\n\t        '   original *= maskAlpha;',\n\t        //'   original.rgb *= maskAlpha;',\n\t        '   gl_FragColor =  original;',\n\t        //'   gl_FragColor = gl_FragColor;',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.AlphaMaskFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.AlphaMaskFilter.prototype.constructor = PIXI.AlphaMaskFilter;\n\n\t/**\n\t * Sets the map dimensions uniforms when the texture becomes available.\n\t *\n\t * @method onTextureLoaded\n\t */\n\tPIXI.AlphaMaskFilter.prototype.onTextureLoaded = function()\n\t{\n\t    this.uniforms.mapDimensions.value.x = this.uniforms.mask.value.width;\n\t    this.uniforms.mapDimensions.value.y = this.uniforms.mask.value.height;\n\n\t    this.uniforms.mask.value.baseTexture.off('loaded', this.boundLoadedFunction);\n\t};\n\n\t/**\n\t * The texture used for the displacement map. Must be power of 2 sized texture.\n\t *\n\t * @property map\n\t * @type Texture\n\t */\n\tObject.defineProperty(PIXI.AlphaMaskFilter.prototype, 'map', {\n\t    get: function() {\n\t        return this.uniforms.mask.value;\n\t    },\n\t    set: function(value) {\n\t        this.uniforms.mask.value = value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The ColorMatrixFilter class lets you apply a 4x4 matrix transformation on the RGBA\n\t * color and alpha values of every pixel on your displayObject to produce a result\n\t * with a new set of RGBA color and alpha values. It's pretty powerful!\n\t * \n\t * @class ColorMatrixFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t */\n\tPIXI.ColorMatrixFilter = function()\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        matrix: {type: 'mat4', value: [1,0,0,0,\n\t                                       0,1,0,0,\n\t                                       0,0,1,0,\n\t                                       0,0,0,1]}\n\t    };\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform float invert;',\n\t        'uniform mat4 matrix;',\n\t        'uniform sampler2D uSampler;',\n\n\t        'void main(void) {',\n\t        '   gl_FragColor = texture2D(uSampler, vTextureCoord) * matrix;',\n\t      //  '   gl_FragColor = gl_FragColor;',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.ColorMatrixFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.ColorMatrixFilter.prototype.constructor = PIXI.ColorMatrixFilter;\n\n\t/**\n\t * Sets the matrix of the color matrix filter\n\t *\n\t * @property matrix\n\t * @type Array(Number)\n\t * @default [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]\n\t */\n\tObject.defineProperty(PIXI.ColorMatrixFilter.prototype, 'matrix', {\n\t    get: function() {\n\t        return this.uniforms.matrix.value;\n\t    },\n\t    set: function(value) {\n\t        this.uniforms.matrix.value = value;\n\t    }\n\t});\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * This greyscales the palette of your Display Objects.\n\t * \n\t * @class GrayFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t */\n\tPIXI.GrayFilter = function()\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        gray: {type: '1f', value: 1}\n\t    };\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform sampler2D uSampler;',\n\t        'uniform float gray;',\n\n\t        'void main(void) {',\n\t        '   gl_FragColor = texture2D(uSampler, vTextureCoord);',\n\t        '   gl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(0.2126*gl_FragColor.r + 0.7152*gl_FragColor.g + 0.0722*gl_FragColor.b), gray);',\n\t     //   '   gl_FragColor = gl_FragColor;',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.GrayFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.GrayFilter.prototype.constructor = PIXI.GrayFilter;\n\n\t/**\n\t * The strength of the gray. 1 will make the object black and white, 0 will make the object its normal color.\n\t * @property gray\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.GrayFilter.prototype, 'gray', {\n\t    get: function() {\n\t        return this.uniforms.gray.value;\n\t    },\n\t    set: function(value) {\n\t        this.uniforms.gray.value = value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The DisplacementFilter class uses the pixel values from the specified texture (called the displacement map) to perform a displacement of an object.\n\t * You can use this filter to apply all manor of crazy warping effects\n\t * Currently the r property of the texture is used offset the x and the g property of the texture is used to offset the y.\n\t * \n\t * @class DisplacementFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t * @param texture {Texture} The texture used for the displacement map * must be power of 2 texture at the moment\n\t */\n\tPIXI.DisplacementFilter = function(texture)\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\t    texture.baseTexture._powerOf2 = true;\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        displacementMap: {type: 'sampler2D', value:texture},\n\t        scale:           {type: '2f', value:{x:30, y:30}},\n\t        offset:          {type: '2f', value:{x:0, y:0}},\n\t        mapDimensions:   {type: '2f', value:{x:1, y:5112}},\n\t        dimensions:   {type: '4fv', value:[0,0,0,0]}\n\t    };\n\n\t    if(texture.baseTexture.hasLoaded)\n\t    {\n\t        this.uniforms.mapDimensions.value.x = texture.width;\n\t        this.uniforms.mapDimensions.value.y = texture.height;\n\t    }\n\t    else\n\t    {\n\t        this.boundLoadedFunction = this.onTextureLoaded.bind(this);\n\n\t        texture.baseTexture.on('loaded', this.boundLoadedFunction);\n\t    }\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform sampler2D displacementMap;',\n\t        'uniform sampler2D uSampler;',\n\t        'uniform vec2 scale;',\n\t        'uniform vec2 offset;',\n\t        'uniform vec4 dimensions;',\n\t        'uniform vec2 mapDimensions;',// = vec2(256.0, 256.0);',\n\t        // 'const vec2 textureDimensions = vec2(750.0, 750.0);',\n\n\t        'void main(void) {',\n\t        '   vec2 mapCords = vTextureCoord.xy;',\n\t        //'   mapCords -= ;',\n\t        '   mapCords += (dimensions.zw + offset)/ dimensions.xy ;',\n\t        '   mapCords.y *= -1.0;',\n\t        '   mapCords.y += 1.0;',\n\t        '   vec2 matSample = texture2D(displacementMap, mapCords).xy;',\n\t        '   matSample -= 0.5;',\n\t        '   matSample *= scale;',\n\t        '   matSample /= mapDimensions;',\n\t        '   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x + matSample.x, vTextureCoord.y + matSample.y));',\n\t        '   gl_FragColor.rgb = mix( gl_FragColor.rgb, gl_FragColor.rgb, 1.0);',\n\t        '   vec2 cord = vTextureCoord;',\n\n\t        //'   gl_FragColor =  texture2D(displacementMap, cord);',\n\t     //   '   gl_FragColor = gl_FragColor;',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.DisplacementFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.DisplacementFilter.prototype.constructor = PIXI.DisplacementFilter;\n\n\t/**\n\t * Sets the map dimensions uniforms when the texture becomes available.\n\t *\n\t * @method onTextureLoaded\n\t */\n\tPIXI.DisplacementFilter.prototype.onTextureLoaded = function()\n\t{\n\t    this.uniforms.mapDimensions.value.x = this.uniforms.displacementMap.value.width;\n\t    this.uniforms.mapDimensions.value.y = this.uniforms.displacementMap.value.height;\n\n\t    this.uniforms.displacementMap.value.baseTexture.off('loaded', this.boundLoadedFunction);\n\t};\n\n\t/**\n\t * The texture used for the displacement map. Must be power of 2 texture.\n\t *\n\t * @property map\n\t * @type Texture\n\t */\n\tObject.defineProperty(PIXI.DisplacementFilter.prototype, 'map', {\n\t    get: function() {\n\t        return this.uniforms.displacementMap.value;\n\t    },\n\t    set: function(value) {\n\t        this.uniforms.displacementMap.value = value;\n\t    }\n\t});\n\n\t/**\n\t * The multiplier used to scale the displacement result from the map calculation.\n\t *\n\t * @property scale\n\t * @type Point\n\t */\n\tObject.defineProperty(PIXI.DisplacementFilter.prototype, 'scale', {\n\t    get: function() {\n\t        return this.uniforms.scale.value;\n\t    },\n\t    set: function(value) {\n\t        this.uniforms.scale.value = value;\n\t    }\n\t});\n\n\t/**\n\t * The offset used to move the displacement map.\n\t *\n\t * @property offset\n\t * @type Point\n\t */\n\tObject.defineProperty(PIXI.DisplacementFilter.prototype, 'offset', {\n\t    get: function() {\n\t        return this.uniforms.offset.value;\n\t    },\n\t    set: function(value) {\n\t        this.uniforms.offset.value = value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * This filter applies a pixelate effect making display objects appear 'blocky'.\n\t * \n\t * @class PixelateFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t */\n\tPIXI.PixelateFilter = function()\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        invert: {type: '1f', value: 0},\n\t        dimensions: {type: '4fv', value:new PIXI.Float32Array([10000, 100, 10, 10])},\n\t        pixelSize: {type: '2f', value:{x:10, y:10}}\n\t    };\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform vec2 testDim;',\n\t        'uniform vec4 dimensions;',\n\t        'uniform vec2 pixelSize;',\n\t        'uniform sampler2D uSampler;',\n\n\t        'void main(void) {',\n\t        '   vec2 coord = vTextureCoord;',\n\n\t        '   vec2 size = dimensions.xy/pixelSize;',\n\n\t        '   vec2 color = floor( ( vTextureCoord * size ) ) / size + pixelSize/dimensions.xy * 0.5;',\n\t        '   gl_FragColor = texture2D(uSampler, color);',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.PixelateFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.PixelateFilter.prototype.constructor = PIXI.PixelateFilter;\n\n\t/**\n\t * This a point that describes the size of the blocks. x is the width of the block and y is the height.\n\t * \n\t * @property size\n\t * @type Point\n\t */\n\tObject.defineProperty(PIXI.PixelateFilter.prototype, 'size', {\n\t    get: function() {\n\t        return this.uniforms.pixelSize.value;\n\t    },\n\t    set: function(value) {\n\t        this.dirty = true;\n\t        this.uniforms.pixelSize.value = value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The BlurXFilter applies a horizontal Gaussian blur to an object.\n\t *\n\t * @class BlurXFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t */\n\tPIXI.BlurXFilter = function()\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        blur: {type: '1f', value: 1/512}\n\t    };\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform float blur;',\n\t        'uniform sampler2D uSampler;',\n\n\t        'void main(void) {',\n\t        '   vec4 sum = vec4(0.0);',\n\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x - 4.0*blur, vTextureCoord.y)) * 0.05;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x - 3.0*blur, vTextureCoord.y)) * 0.09;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x - 2.0*blur, vTextureCoord.y)) * 0.12;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x - blur, vTextureCoord.y)) * 0.15;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * 0.16;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x + blur, vTextureCoord.y)) * 0.15;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x + 2.0*blur, vTextureCoord.y)) * 0.12;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x + 3.0*blur, vTextureCoord.y)) * 0.09;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x + 4.0*blur, vTextureCoord.y)) * 0.05;',\n\n\t        '   gl_FragColor = sum;',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.BlurXFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.BlurXFilter.prototype.constructor = PIXI.BlurXFilter;\n\n\t/**\n\t * Sets the strength of both the blur.\n\t *\n\t * @property blur\n\t * @type Number\n\t * @default 2\n\t */\n\tObject.defineProperty(PIXI.BlurXFilter.prototype, 'blur', {\n\t    get: function() {\n\t        return this.uniforms.blur.value / (1/7000);\n\t    },\n\t    set: function(value) {\n\n\t        this.dirty = true;\n\t        this.uniforms.blur.value = (1/7000) * value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The BlurYFilter applies a vertical Gaussian blur to an object.\n\t *\n\t * @class BlurYFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t */\n\tPIXI.BlurYFilter = function()\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        blur: {type: '1f', value: 1/512}\n\t    };\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform float blur;',\n\t        'uniform sampler2D uSampler;',\n\n\t        'void main(void) {',\n\t        '   vec4 sum = vec4(0.0);',\n\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 4.0*blur)) * 0.05;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 3.0*blur)) * 0.09;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 2.0*blur)) * 0.12;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - blur)) * 0.15;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * 0.16;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + blur)) * 0.15;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 2.0*blur)) * 0.12;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 3.0*blur)) * 0.09;',\n\t        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 4.0*blur)) * 0.05;',\n\n\t        '   gl_FragColor = sum;',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.BlurYFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.BlurYFilter.prototype.constructor = PIXI.BlurYFilter;\n\n\t/**\n\t * Sets the strength of both the blur.\n\t *\n\t * @property blur\n\t * @type Number\n\t * @default 2\n\t */\n\tObject.defineProperty(PIXI.BlurYFilter.prototype, 'blur', {\n\t    get: function() {\n\t        return this.uniforms.blur.value / (1/7000);\n\t    },\n\t    set: function(value) {\n\t        //this.padding = value;\n\t        this.uniforms.blur.value = (1/7000) * value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * The BlurFilter applies a Gaussian blur to an object.\n\t * The strength of the blur can be set for x- and y-axis separately (always relative to the stage).\n\t *\n\t * @class BlurFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t */\n\tPIXI.BlurFilter = function()\n\t{\n\t    this.blurXFilter = new PIXI.BlurXFilter();\n\t    this.blurYFilter = new PIXI.BlurYFilter();\n\n\t    this.passes =[this.blurXFilter, this.blurYFilter];\n\t};\n\n\tPIXI.BlurFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.BlurFilter.prototype.constructor = PIXI.BlurFilter;\n\n\t/**\n\t * Sets the strength of both the blurX and blurY properties simultaneously\n\t *\n\t * @property blur\n\t * @type Number\n\t * @default 2\n\t */\n\tObject.defineProperty(PIXI.BlurFilter.prototype, 'blur', {\n\t    get: function() {\n\t        return this.blurXFilter.blur;\n\t    },\n\t    set: function(value) {\n\t        this.blurXFilter.blur = this.blurYFilter.blur = value;\n\t    }\n\t});\n\n\t/**\n\t * Sets the strength of the blurX property\n\t *\n\t * @property blurX\n\t * @type Number\n\t * @default 2\n\t */\n\tObject.defineProperty(PIXI.BlurFilter.prototype, 'blurX', {\n\t    get: function() {\n\t        return this.blurXFilter.blur;\n\t    },\n\t    set: function(value) {\n\t        this.blurXFilter.blur = value;\n\t    }\n\t});\n\n\t/**\n\t * Sets the strength of the blurY property\n\t *\n\t * @property blurY\n\t * @type Number\n\t * @default 2\n\t */\n\tObject.defineProperty(PIXI.BlurFilter.prototype, 'blurY', {\n\t    get: function() {\n\t        return this.blurYFilter.blur;\n\t    },\n\t    set: function(value) {\n\t        this.blurYFilter.blur = value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * This inverts your Display Objects colors.\n\t * \n\t * @class InvertFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t */\n\tPIXI.InvertFilter = function()\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        invert: {type: '1f', value: 1}\n\t    };\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform float invert;',\n\t        'uniform sampler2D uSampler;',\n\n\t        'void main(void) {',\n\t        '   gl_FragColor = texture2D(uSampler, vTextureCoord);',\n\t        '   gl_FragColor.rgb = mix( (vec3(1)-gl_FragColor.rgb) * gl_FragColor.a, gl_FragColor.rgb, 1.0 - invert);',\n\t        //'   gl_FragColor.rgb = gl_FragColor.rgb  * gl_FragColor.a;',\n\t      //  '   gl_FragColor = gl_FragColor * vColor;',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.InvertFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.InvertFilter.prototype.constructor = PIXI.InvertFilter;\n\n\t/**\n\t * The strength of the invert. 1 will fully invert the colors, 0 will make the object its normal color\n\t * @property invert\n\t * @type Number\n\t*/\n\tObject.defineProperty(PIXI.InvertFilter.prototype, 'invert', {\n\t    get: function() {\n\t        return this.uniforms.invert.value;\n\t    },\n\t    set: function(value) {\n\t        this.uniforms.invert.value = value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * This applies a sepia effect to your Display Objects.\n\t * \n\t * @class SepiaFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t */\n\tPIXI.SepiaFilter = function()\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        sepia: {type: '1f', value: 1}\n\t    };\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform float sepia;',\n\t        'uniform sampler2D uSampler;',\n\n\t        'const mat3 sepiaMatrix = mat3(0.3588, 0.7044, 0.1368, 0.2990, 0.5870, 0.1140, 0.2392, 0.4696, 0.0912);',\n\n\t        'void main(void) {',\n\t        '   gl_FragColor = texture2D(uSampler, vTextureCoord);',\n\t        '   gl_FragColor.rgb = mix( gl_FragColor.rgb, gl_FragColor.rgb * sepiaMatrix, sepia);',\n\t       // '   gl_FragColor = gl_FragColor * vColor;',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.SepiaFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.SepiaFilter.prototype.constructor = PIXI.SepiaFilter;\n\n\t/**\n\t * The strength of the sepia. 1 will apply the full sepia effect, 0 will make the object its normal color.\n\t * @property sepia\n\t * @type Number\n\t*/\n\tObject.defineProperty(PIXI.SepiaFilter.prototype, 'sepia', {\n\t    get: function() {\n\t        return this.uniforms.sepia.value;\n\t    },\n\t    set: function(value) {\n\t        this.uniforms.sepia.value = value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * This filter applies a twist effect making display objects appear twisted in the given direction.\n\t * \n\t * @class TwistFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t */\n\tPIXI.TwistFilter = function()\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        radius: {type: '1f', value:0.5},\n\t        angle: {type: '1f', value:5},\n\t        offset: {type: '2f', value:{x:0.5, y:0.5}}\n\t    };\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform vec4 dimensions;',\n\t        'uniform sampler2D uSampler;',\n\n\t        'uniform float radius;',\n\t        'uniform float angle;',\n\t        'uniform vec2 offset;',\n\n\t        'void main(void) {',\n\t        '   vec2 coord = vTextureCoord - offset;',\n\t        '   float distance = length(coord);',\n\n\t        '   if (distance < radius) {',\n\t        '       float ratio = (radius - distance) / radius;',\n\t        '       float angleMod = ratio * ratio * angle;',\n\t        '       float s = sin(angleMod);',\n\t        '       float c = cos(angleMod);',\n\t        '       coord = vec2(coord.x * c - coord.y * s, coord.x * s + coord.y * c);',\n\t        '   }',\n\n\t        '   gl_FragColor = texture2D(uSampler, coord+offset);',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.TwistFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.TwistFilter.prototype.constructor = PIXI.TwistFilter;\n\n\t/**\n\t * This point describes the the offset of the twist.\n\t * \n\t * @property offset\n\t * @type Point\n\t */\n\tObject.defineProperty(PIXI.TwistFilter.prototype, 'offset', {\n\t    get: function() {\n\t        return this.uniforms.offset.value;\n\t    },\n\t    set: function(value) {\n\t        this.dirty = true;\n\t        this.uniforms.offset.value = value;\n\t    }\n\t});\n\n\t/**\n\t * This radius of the twist.\n\t * \n\t * @property radius\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.TwistFilter.prototype, 'radius', {\n\t    get: function() {\n\t        return this.uniforms.radius.value;\n\t    },\n\t    set: function(value) {\n\t        this.dirty = true;\n\t        this.uniforms.radius.value = value;\n\t    }\n\t});\n\n\t/**\n\t * This angle of the twist.\n\t * \n\t * @property angle\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.TwistFilter.prototype, 'angle', {\n\t    get: function() {\n\t        return this.uniforms.angle.value;\n\t    },\n\t    set: function(value) {\n\t        this.dirty = true;\n\t        this.uniforms.angle.value = value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * This lowers the color depth of your image by the given amount, producing an image with a smaller palette.\n\t * \n\t * @class ColorStepFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t */\n\tPIXI.ColorStepFilter = function()\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        step: {type: '1f', value: 5}\n\t    };\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform sampler2D uSampler;',\n\t        'uniform float step;',\n\n\t        'void main(void) {',\n\t        '   vec4 color = texture2D(uSampler, vTextureCoord);',\n\t        '   color = floor(color * step) / step;',\n\t        '   gl_FragColor = color;',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.ColorStepFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.ColorStepFilter.prototype.constructor = PIXI.ColorStepFilter;\n\n\t/**\n\t * The number of steps to reduce the palette by.\n\t *\n\t * @property step\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.ColorStepFilter.prototype, 'step', {\n\t    get: function() {\n\t        return this.uniforms.step.value;\n\t    },\n\t    set: function(value) {\n\t        this.uniforms.step.value = value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t * original filter: https://github.com/evanw/glfx.js/blob/master/src/filters/fun/dotscreen.js\n\t */\n\n\t/**\n\t * This filter applies a dotscreen effect making display objects appear to be made out of black and white halftone dots like an old printer.\n\t * \n\t * @class DotScreenFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t */\n\tPIXI.DotScreenFilter = function()\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        scale: {type: '1f', value:1},\n\t        angle: {type: '1f', value:5},\n\t        dimensions:   {type: '4fv', value:[0,0,0,0]}\n\t    };\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform vec4 dimensions;',\n\t        'uniform sampler2D uSampler;',\n\n\t        'uniform float angle;',\n\t        'uniform float scale;',\n\n\t        'float pattern() {',\n\t        '   float s = sin(angle), c = cos(angle);',\n\t        '   vec2 tex = vTextureCoord * dimensions.xy;',\n\t        '   vec2 point = vec2(',\n\t        '       c * tex.x - s * tex.y,',\n\t        '       s * tex.x + c * tex.y',\n\t        '   ) * scale;',\n\t        '   return (sin(point.x) * sin(point.y)) * 4.0;',\n\t        '}',\n\n\t        'void main() {',\n\t        '   vec4 color = texture2D(uSampler, vTextureCoord);',\n\t        '   float average = (color.r + color.g + color.b) / 3.0;',\n\t        '   gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.DotScreenFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.DotScreenFilter.prototype.constructor = PIXI.DotScreenFilter;\n\n\t/**\n\t * The scale of the effect.\n\t * @property scale\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.DotScreenFilter.prototype, 'scale', {\n\t    get: function() {\n\t        return this.uniforms.scale.value;\n\t    },\n\t    set: function(value) {\n\t        this.dirty = true;\n\t        this.uniforms.scale.value = value;\n\t    }\n\t});\n\n\t/**\n\t * The radius of the effect.\n\t * @property angle\n\t * @type Number\n\t */\n\tObject.defineProperty(PIXI.DotScreenFilter.prototype, 'angle', {\n\t    get: function() {\n\t        return this.uniforms.angle.value;\n\t    },\n\t    set: function(value) {\n\t        this.dirty = true;\n\t        this.uniforms.angle.value = value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * A Cross Hatch effect filter.\n\t * \n\t * @class CrossHatchFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t */\n\tPIXI.CrossHatchFilter = function()\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        blur: {type: '1f', value: 1 / 512}\n\t    };\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform float blur;',\n\t        'uniform sampler2D uSampler;',\n\n\t        'void main(void) {',\n\t        '    float lum = length(texture2D(uSampler, vTextureCoord.xy).rgb);',\n\n\t        '    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);',\n\n\t        '    if (lum < 1.00) {',\n\t        '        if (mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0) {',\n\t        '            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);',\n\t        '        }',\n\t        '    }',\n\n\t        '    if (lum < 0.75) {',\n\t        '        if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0) {',\n\t        '            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);',\n\t        '        }',\n\t        '    }',\n\n\t        '    if (lum < 0.50) {',\n\t        '        if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0) {',\n\t        '            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);',\n\t        '        }',\n\t        '    }',\n\n\t        '    if (lum < 0.3) {',\n\t        '        if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0) {',\n\t        '            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);',\n\t        '        }',\n\t        '    }',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.CrossHatchFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.CrossHatchFilter.prototype.constructor = PIXI.CrossHatchFilter;\n\n\t/**\n\t * Sets the strength of both the blur.\n\t *\n\t * @property blur\n\t * @type Number\n\t * @default 2\n\t */\n\tObject.defineProperty(PIXI.CrossHatchFilter.prototype, 'blur', {\n\t    get: function() {\n\t        return this.uniforms.blur.value / (1/7000);\n\t    },\n\t    set: function(value) {\n\t        //this.padding = value;\n\t        this.uniforms.blur.value = (1/7000) * value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t/**\n\t * An RGB Split Filter.\n\t * \n\t * @class RGBSplitFilter\n\t * @extends AbstractFilter\n\t * @constructor\n\t */\n\tPIXI.RGBSplitFilter = function()\n\t{\n\t    PIXI.AbstractFilter.call( this );\n\n\t    this.passes = [this];\n\n\t    // set the uniforms\n\t    this.uniforms = {\n\t        red: {type: '2f', value: {x:20, y:20}},\n\t        green: {type: '2f', value: {x:-20, y:20}},\n\t        blue: {type: '2f', value: {x:20, y:-20}},\n\t        dimensions:   {type: '4fv', value:[0,0,0,0]}\n\t    };\n\n\t    this.fragmentSrc = [\n\t        'precision mediump float;',\n\t        'varying vec2 vTextureCoord;',\n\t        'varying vec4 vColor;',\n\t        'uniform vec2 red;',\n\t        'uniform vec2 green;',\n\t        'uniform vec2 blue;',\n\t        'uniform vec4 dimensions;',\n\t        'uniform sampler2D uSampler;',\n\n\t        'void main(void) {',\n\t        '   gl_FragColor.r = texture2D(uSampler, vTextureCoord + red/dimensions.xy).r;',\n\t        '   gl_FragColor.g = texture2D(uSampler, vTextureCoord + green/dimensions.xy).g;',\n\t        '   gl_FragColor.b = texture2D(uSampler, vTextureCoord + blue/dimensions.xy).b;',\n\t        '   gl_FragColor.a = texture2D(uSampler, vTextureCoord).a;',\n\t        '}'\n\t    ];\n\t};\n\n\tPIXI.RGBSplitFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\n\tPIXI.RGBSplitFilter.prototype.constructor = PIXI.RGBSplitFilter;\n\n\t/**\n\t * Red channel offset.\n\t * \n\t * @property red\n\t * @type Point\n\t */\n\tObject.defineProperty(PIXI.RGBSplitFilter.prototype, 'red', {\n\t    get: function() {\n\t        return this.uniforms.red.value;\n\t    },\n\t    set: function(value) {\n\t        this.uniforms.red.value = value;\n\t    }\n\t});\n\n\t/**\n\t * Green channel offset.\n\t * \n\t * @property green\n\t * @type Point\n\t */\n\tObject.defineProperty(PIXI.RGBSplitFilter.prototype, 'green', {\n\t    get: function() {\n\t        return this.uniforms.green.value;\n\t    },\n\t    set: function(value) {\n\t        this.uniforms.green.value = value;\n\t    }\n\t});\n\n\t/**\n\t * Blue offset.\n\t * \n\t * @property blue\n\t * @type Point\n\t */\n\tObject.defineProperty(PIXI.RGBSplitFilter.prototype, 'blue', {\n\t    get: function() {\n\t        return this.uniforms.blue.value;\n\t    },\n\t    set: function(value) {\n\t        this.uniforms.blue.value = value;\n\t    }\n\t});\n\r\n\t/**\n\t * @author Mat Groves http://matgroves.com/ @Doormat23\n\t */\n\n\t    if (true) {\n\t        if (typeof module !== 'undefined' && module.exports) {\n\t            exports = module.exports = PIXI;\n\t        }\n\t        exports.PIXI = PIXI;\n\t    } else if (typeof define !== 'undefined' && define.amd) {\n\t        define(PIXI);\n\t    } else {\n\t        root.PIXI = PIXI;\n\t    }\n\t}).call(this);\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * slice() reference.\n\t */\n\n\tvar slice = Array.prototype.slice;\n\n\t/**\n\t * Expose `co`.\n\t */\n\n\tmodule.exports = co['default'] = co.co = co;\n\n\t/**\n\t * Wrap the given generator `fn` into a\n\t * function that returns a promise.\n\t * This is a separate function so that\n\t * every `co()` call doesn't create a new,\n\t * unnecessary closure.\n\t *\n\t * @param {GeneratorFunction} fn\n\t * @return {Function}\n\t * @api public\n\t */\n\n\tco.wrap = function (fn) {\n\t  createPromise.__generatorFunction__ = fn;\n\t  return createPromise;\n\t  function createPromise() {\n\t    return co.call(this, fn.apply(this, arguments));\n\t  }\n\t};\n\n\t/**\n\t * Execute the generator function or a generator\n\t * and return a promise.\n\t *\n\t * @param {Function} fn\n\t * @return {Promise}\n\t * @api public\n\t */\n\n\tfunction co(gen) {\n\t  var ctx = this;\n\t  if (typeof gen === 'function') gen = gen.call(this);\n\t  // we wrap everything in a promise to avoid promise chaining,\n\t  // which leads to memory leak errors.\n\t  // see https://github.com/tj/co/issues/180\n\t  return new Promise(function(resolve, reject) {\n\t    onFulfilled();\n\n\t    /**\n\t     * @param {Mixed} res\n\t     * @return {Promise}\n\t     * @api private\n\t     */\n\n\t    function onFulfilled(res) {\n\t      var ret;\n\t      try {\n\t        ret = gen.next(res);\n\t      } catch (e) {\n\t        return reject(e);\n\t      }\n\t      next(ret);\n\t    }\n\n\t    /**\n\t     * @param {Error} err\n\t     * @return {Promise}\n\t     * @api private\n\t     */\n\n\t    function onRejected(err) {\n\t      var ret;\n\t      try {\n\t        ret = gen.throw(err);\n\t      } catch (e) {\n\t        return reject(e);\n\t      }\n\t      next(ret);\n\t    }\n\n\t    /**\n\t     * Get the next value in the generator,\n\t     * return a promise.\n\t     *\n\t     * @param {Object} ret\n\t     * @return {Promise}\n\t     * @api private\n\t     */\n\n\t    function next(ret) {\n\t      if (ret.done) return resolve(ret.value);\n\t      var value = toPromise.call(ctx, ret.value);\n\t      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\n\t      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\n\t        + 'but the following object was passed: \"' + String(ret.value) + '\"'));\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Convert a `yield`ed value into a promise.\n\t *\n\t * @param {Mixed} obj\n\t * @return {Promise}\n\t * @api private\n\t */\n\n\tfunction toPromise(obj) {\n\t  if (!obj) return obj;\n\t  if (isPromise(obj)) return obj;\n\t  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\n\t  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\n\t  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\n\t  if (isObject(obj)) return objectToPromise.call(this, obj);\n\t  return obj;\n\t}\n\n\t/**\n\t * Convert a thunk to a promise.\n\t *\n\t * @param {Function}\n\t * @return {Promise}\n\t * @api private\n\t */\n\n\tfunction thunkToPromise(fn) {\n\t  var ctx = this;\n\t  return new Promise(function (resolve, reject) {\n\t    fn.call(ctx, function (err, res) {\n\t      if (err) return reject(err);\n\t      if (arguments.length > 2) res = slice.call(arguments, 1);\n\t      resolve(res);\n\t    });\n\t  });\n\t}\n\n\t/**\n\t * Convert an array of \"yieldables\" to a promise.\n\t * Uses `Promise.all()` internally.\n\t *\n\t * @param {Array} obj\n\t * @return {Promise}\n\t * @api private\n\t */\n\n\tfunction arrayToPromise(obj) {\n\t  return Promise.all(obj.map(toPromise, this));\n\t}\n\n\t/**\n\t * Convert an object of \"yieldables\" to a promise.\n\t * Uses `Promise.all()` internally.\n\t *\n\t * @param {Object} obj\n\t * @return {Promise}\n\t * @api private\n\t */\n\n\tfunction objectToPromise(obj){\n\t  var results = new obj.constructor();\n\t  var keys = Object.keys(obj);\n\t  var promises = [];\n\t  for (var i = 0; i < keys.length; i++) {\n\t    var key = keys[i];\n\t    var promise = toPromise.call(this, obj[key]);\n\t    if (promise && isPromise(promise)) defer(promise, key);\n\t    else results[key] = obj[key];\n\t  }\n\t  return Promise.all(promises).then(function () {\n\t    return results;\n\t  });\n\n\t  function defer(promise, key) {\n\t    // predefine the key in the result\n\t    results[key] = undefined;\n\t    promises.push(promise.then(function (res) {\n\t      results[key] = res;\n\t    }));\n\t  }\n\t}\n\n\t/**\n\t * Check if `obj` is a promise.\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\n\tfunction isPromise(obj) {\n\t  return 'function' == typeof obj.then;\n\t}\n\n\t/**\n\t * Check if `obj` is a generator.\n\t *\n\t * @param {Mixed} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\n\tfunction isGenerator(obj) {\n\t  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\n\t}\n\n\t/**\n\t * Check if `obj` is a generator function.\n\t *\n\t * @param {Mixed} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\tfunction isGeneratorFunction(obj) {\n\t  var constructor = obj.constructor;\n\t  if (!constructor) return false;\n\t  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\n\t  return isGenerator(constructor.prototype);\n\t}\n\n\t/**\n\t * Check for plain object.\n\t *\n\t * @param {Mixed} val\n\t * @return {Boolean}\n\t * @api private\n\t */\n\n\tfunction isObject(val) {\n\t  return Object == val.constructor;\n\t}\n\n\n/***/ },\n\n/***/ 32:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\t/**\n\t * A SkinNode is an internal representation of a Skin.\n\t *\n\t * Node.compile     :: (compiler, $xml) -> Node\n\t *\n\t * To implement:\n\t *\n\t * Node#compile     :: (compiler, $xml) -> undefined (side-effect)\n\t * Node#instantiate :: (instantiator)   -> PIXI.DisplayObject\n\t */\n\n\tvar SkinNode = exports.SkinNode = (function () {\n\t  function SkinNode() {\n\t    _classCallCheck(this, SkinNode);\n\t  }\n\n\t  _createClass(SkinNode, null, {\n\t    compile: {\n\t      value: function compile(compiler, $el) {\n\t        var node = new this();\n\t        node.compile(compiler, $el);\n\t        return node;\n\t      }\n\t    }\n\t  });\n\n\t  return SkinNode;\n\t})();\n\n\texports[\"default\"] = SkinNode;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 33:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _toConsumableArray = function (arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\tvar Callbacks = _interopRequire(__webpack_require__(283));\n\n\tvar Instance = exports.Instance = (function () {\n\t  function Instance(options) {\n\t    _classCallCheck(this, Instance);\n\n\t    this._context = options.context;\n\t    this._object = options.object;\n\t    this._children = options.children;\n\t    this._bindings = [];\n\t    this._concerns = [];\n\t    this.onData = new Callbacks(options.onData);\n\t    this.onDestroy = new Callbacks(options.onDestroy);\n\t    if (options.bindings) {\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = options.bindings[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var _ref;\n\n\t          var binding = _step.value;\n\n\t          (_ref = this).bind.apply(_ref, _toConsumableArray(binding));\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t            _iterator[\"return\"]();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    if (options.concerns) {\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\n\t      try {\n\t        for (var _iterator2 = options.concerns[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          var concern = _step2.value;\n\n\t          this._concerns.push(concern.instantiate(this._context, this));\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"]) {\n\t            _iterator2[\"return\"]();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    if (options.children) {\n\t      var _iteratorNormalCompletion3 = true;\n\t      var _didIteratorError3 = false;\n\t      var _iteratorError3 = undefined;\n\n\t      try {\n\t        for (var _iterator3 = options.children[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t          var children = _step3.value;\n\n\t          this._concerns.push(children.instantiate(this._context, this._object));\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError3 = true;\n\t        _iteratorError3 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"]) {\n\t            _iterator3[\"return\"]();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError3) {\n\t            throw _iteratorError3;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    if (options.onCreate) {\n\t      new Callbacks(options.onCreate).call();\n\t    }\n\t    if (options.parent) {\n\t      this.attachTo(options.parent);\n\t    }\n\t  }\n\n\t  _createClass(Instance, {\n\t    bind: {\n\t      value: function bind() {\n\t        for (var _len = arguments.length, pipeline = Array(_len), _key = 0; _key < _len; _key++) {\n\t          pipeline[_key] = arguments[_key];\n\t        }\n\n\t        var sideEffect = onChange(pipeline.pop());\n\t        if (pipeline.length === 1 && pipeline[0].constant) {\n\t          // optimize: don't add binding when expression is constant --\n\t          // just do it once\n\t          sideEffect(pipeline[0]());\n\t        } else {\n\t          this._bindings.push(function (value) {\n\t            for (var i = 0; i < pipeline.length; i++) {\n\t              value = pipeline[i](value);\n\t            }\n\t            sideEffect(value);\n\t          });\n\t        }\n\t      }\n\t    },\n\t    attachTo: {\n\t      value: function attachTo(parent) {\n\t        this._parent = parent;\n\t        this._parent.addChild(this._object);\n\t      }\n\t    },\n\t    detach: {\n\t      value: function detach() {\n\t        if (this._parent) {\n\t          this._parent.removeChild(this._object);\n\t          this._parent = null;\n\t        }\n\t      }\n\t    },\n\t    push: {\n\t      value: function push(value) {\n\t        var i;\n\t        for (i = 0; i < this._bindings.length; i++) {\n\t          this._bindings[i](value);\n\t        }\n\t        for (i = 0; i < this._concerns.length; i++) {\n\t          this._concerns[i].push(value);\n\t        }\n\t        this.onData.call(value);\n\t      }\n\t    },\n\t    destroy: {\n\t      value: function destroy() {\n\t        this.detach();\n\t        for (var i = 0; i < this._concerns.length; i++) {\n\t          this._concerns[i].destroy();\n\t        }\n\t        this.onDestroy.call();\n\t        this._concerns = null;\n\t        this._bindings = null;\n\t        this._parent = null;\n\t        this._object = null;\n\t      }\n\t    },\n\t    object: {\n\t      get: function () {\n\t        return this._object;\n\t      }\n\t    },\n\t    parent: {\n\t      get: function () {\n\t        return this._parent;\n\t      }\n\t    }\n\t  });\n\n\t  return Instance;\n\t})();\n\n\tfunction onChange(f) {\n\t  var value = undefined;\n\t  return function receiveNewValue(v) {\n\t    if (value !== v) {\n\t      value = v;\n\t      f(v);\n\t    }\n\t  };\n\t}\n\n\texports[\"default\"] = Instance;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 41:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = DataStructure\n\n\tfunction DataStructure() {\n\n\t  var schemas = [].slice.call(arguments)\n\n\t  function Constructor(object) {\n\t    Constructor.validate(object)\n\t    return object\n\t  }\n\n\t  Constructor.validate = function(object) {\n\t    for (var i = 0; i < schemas.length; i ++) {\n\t      validate(schemas[i], object)\n\t    }\n\t  }\n\n\t  return Constructor\n\n\t}\n\n\tDataStructure.maybe = function maybe(schema) {\n\t  function MaybeValidator(object) {\n\t    MaybeValidator.validate(object)\n\t    return object\n\t  }\n\t  MaybeValidator.validate = function(value) {\n\t    if (value === null || value === undefined) return\n\t    validate(schema, value)\n\t  }\n\t  return MaybeValidator\n\t}\n\n\tfunction validate(schema, value) {\n\t  if (schema === Number) schema = 'number'\n\t  if (schema === String) schema = 'string'\n\t  if (typeof schema === 'string') {\n\t    if (typeof value !== schema) throw new Error('should be a ' + schema)\n\t  } else if (typeof schema === 'function') {\n\t    if (typeof schema.validate === 'function') {\n\t      schema.validate(value)\n\t    } else if (!(value instanceof schema)) {\n\t      throw new Error('should be an instance of ' + schema)\n\t    }\n\t  } else if (typeof schema === 'object') {\n\t    if (!value) throw new Error('should be an object')\n\t    validateObject(schema, value)\n\t  } else {\n\t    throw new Error('invalid schema')\n\t  }\n\t}\n\n\tfunction validateObject(schema, object) {\n\t  for (var prop in schema) {\n\t    if (!(prop in object)) {\n\t      throw new Error('missing property: \"' + prop + '\"')\n\t    }\n\t    try {\n\t      validate(schema[prop], object[prop])\n\t    } catch (e) {\n\t      throw new Error('error in property \"' + prop + '\": ' + e.message)\n\t    }\n\t  }\n\t}\n\n\n\n/***/ },\n\n/***/ 51:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n\n/***/ 55:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\texports.Expression = Expression;\n\n\tvar debug = _interopRequire(__webpack_require__(124));\n\n\tvar log = debug(\"scintillator:expression\");\n\n\tvar parser = _interopRequire(__webpack_require__(336));\n\n\tfunction createFunction(code) {\n\t  var fn = eval(\"(function(get) { return \" + code + \" })\");\n\t  fn.displayName = \"(\" + code + \")\";\n\t  fn.constant = !!/^[\\-0-9\\.]+$/.test(code);\n\t  return fn;\n\t}\n\n\tfunction Expression(text) {\n\t  log(\"parsing %s\", text);\n\t  var code = parser.parse(text);\n\t  log(\"parsed %s => %s\", text, code);\n\t  var f = createFunction(code);\n\t  var evaluate = undefined;\n\t  if (f.constant) {\n\t    evaluate = f;\n\t  } else {\n\t    evaluate = function (data) {\n\t      return f(function (key) {\n\t        return data[key];\n\t      });\n\t    };\n\t  }\n\t  evaluate.constant = f.constant;\n\t  return evaluate;\n\t}\n\n\texports[\"default\"] = Expression;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 78:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\n\tvar base64 = __webpack_require__(127)\n\tvar ieee754 = __webpack_require__(128)\n\tvar isArray = __webpack_require__(129)\n\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\tBuffer.poolSize = 8192 // not used by this implementation\n\n\tvar kMaxLength = 0x3fffffff\n\tvar rootParent = {}\n\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Note:\n\t *\n\t * - Implementation must support adding new properties to `Uint8Array` instances.\n\t *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n\t *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *    incorrect length in some situations.\n\t *\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n\t * get the Object implementation, which is slower but will work correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = (function () {\n\t  try {\n\t    var buf = new ArrayBuffer(0)\n\t    var arr = new Uint8Array(buf)\n\t    arr.foo = function () { return 42 }\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t})()\n\n\t/**\n\t * Class: Buffer\n\t * =============\n\t *\n\t * The Buffer constructor returns instances of `Uint8Array` that are augmented\n\t * with function properties for all the node `Buffer` API functions. We use\n\t * `Uint8Array` so that square bracket notation works as expected -- it returns\n\t * a single octet.\n\t *\n\t * By augmenting the instances, we can avoid modifying the `Uint8Array`\n\t * prototype.\n\t */\n\tfunction Buffer (subject, encoding, noZero) {\n\t  if (!(this instanceof Buffer))\n\t    return new Buffer(subject, encoding, noZero)\n\n\t  var type = typeof subject\n\n\t  // Find the length\n\t  var length\n\t  if (type === 'number') {\n\t    length = +subject\n\t  } else if (type === 'string') {\n\t    length = Buffer.byteLength(subject, encoding)\n\t  } else if (type === 'object' && subject !== null) { // assume object is array-like\n\t    if (subject.type === 'Buffer' && isArray(subject.data))\n\t      subject = subject.data\n\t    length = +subject.length\n\t  } else {\n\t    throw new TypeError('must start with number, buffer, array or string')\n\t  }\n\n\t  if (length > kMaxLength)\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t      'size: 0x' + kMaxLength.toString(16) + ' bytes')\n\n\t  if (length < 0)\n\t    length = 0\n\t  else\n\t    length >>>= 0 // Coerce to uint32.\n\n\t  var self = this\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Preferred: Return an augmented `Uint8Array` instance for best performance\n\t    /*eslint-disable consistent-this */\n\t    self = Buffer._augment(new Uint8Array(length))\n\t    /*eslint-enable consistent-this */\n\t  } else {\n\t    // Fallback: Return THIS instance of Buffer (created by `new`)\n\t    self.length = length\n\t    self._isBuffer = true\n\t  }\n\n\t  var i\n\t  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n\t    // Speed optimization -- use set if we're copying from a typed array\n\t    self._set(subject)\n\t  } else if (isArrayish(subject)) {\n\t    // Treat array-ish objects as a byte array\n\t    if (Buffer.isBuffer(subject)) {\n\t      for (i = 0; i < length; i++)\n\t        self[i] = subject.readUInt8(i)\n\t    } else {\n\t      for (i = 0; i < length; i++)\n\t        self[i] = ((subject[i] % 256) + 256) % 256\n\t    }\n\t  } else if (type === 'string') {\n\t    self.write(subject, 0, encoding)\n\t  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT && !noZero) {\n\t    for (i = 0; i < length; i++) {\n\t      self[i] = 0\n\t    }\n\t  }\n\n\t  if (length > 0 && length <= Buffer.poolSize)\n\t    self.parent = rootParent\n\n\t  return self\n\t}\n\n\tfunction SlowBuffer (subject, encoding, noZero) {\n\t  if (!(this instanceof SlowBuffer))\n\t    return new SlowBuffer(subject, encoding, noZero)\n\n\t  var buf = new Buffer(subject, encoding, noZero)\n\t  delete buf.parent\n\t  return buf\n\t}\n\n\tBuffer.isBuffer = function (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\n\tBuffer.compare = function (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b))\n\t    throw new TypeError('Arguments must be Buffers')\n\n\t  if (a === b) return 0\n\n\t  var x = a.length\n\t  var y = b.length\n\t  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n\t  if (i !== len) {\n\t    x = a[i]\n\t    y = b[i]\n\t  }\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\n\tBuffer.isEncoding = function (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'raw':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\n\tBuffer.concat = function (list, totalLength) {\n\t  if (!isArray(list)) throw new TypeError('Usage: Buffer.concat(list[, length])')\n\n\t  if (list.length === 0) {\n\t    return new Buffer(0)\n\t  } else if (list.length === 1) {\n\t    return list[0]\n\t  }\n\n\t  var i\n\t  if (totalLength === undefined) {\n\t    totalLength = 0\n\t    for (i = 0; i < list.length; i++) {\n\t      totalLength += list[i].length\n\t    }\n\t  }\n\n\t  var buf = new Buffer(totalLength)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; i++) {\n\t    var item = list[i]\n\t    item.copy(buf, pos)\n\t    pos += item.length\n\t  }\n\t  return buf\n\t}\n\n\tBuffer.byteLength = function (str, encoding) {\n\t  var ret\n\t  str = str + ''\n\t  switch (encoding || 'utf8') {\n\t    case 'ascii':\n\t    case 'binary':\n\t    case 'raw':\n\t      ret = str.length\n\t      break\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      ret = str.length * 2\n\t      break\n\t    case 'hex':\n\t      ret = str.length >>> 1\n\t      break\n\t    case 'utf8':\n\t    case 'utf-8':\n\t      ret = utf8ToBytes(str).length\n\t      break\n\t    case 'base64':\n\t      ret = base64ToBytes(str).length\n\t      break\n\t    default:\n\t      ret = str.length\n\t  }\n\t  return ret\n\t}\n\n\t// pre-set for values that may exist in the future\n\tBuffer.prototype.length = undefined\n\tBuffer.prototype.parent = undefined\n\n\t// toString(encoding, start=0, end=buffer.length)\n\tBuffer.prototype.toString = function (encoding, start, end) {\n\t  var loweredCase = false\n\n\t  start = start >>> 0\n\t  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n\t  if (!encoding) encoding = 'utf8'\n\t  if (start < 0) start = 0\n\t  if (end > this.length) end = this.length\n\t  if (end <= start) return ''\n\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\n\t      case 'binary':\n\t        return binarySlice(this, start, end)\n\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\n\t      default:\n\t        if (loweredCase)\n\t          throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\n\tBuffer.prototype.equals = function (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\n\tBuffer.prototype.inspect = function () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max)\n\t      str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\n\tBuffer.prototype.compare = function (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return 0\n\t  return Buffer.compare(this, b)\n\t}\n\n\t// `get` will be removed in Node 0.13+\n\tBuffer.prototype.get = function (offset) {\n\t  console.log('.get() is deprecated. Access using array indexes instead.')\n\t  return this.readUInt8(offset)\n\t}\n\n\t// `set` will be removed in Node 0.13+\n\tBuffer.prototype.set = function (v, offset) {\n\t  console.log('.set() is deprecated. Access using array indexes instead.')\n\t  return this.writeUInt8(v, offset)\n\t}\n\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; i++) {\n\t    var byte = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(byte)) throw new Error('Invalid hex string')\n\t    buf[offset + i] = byte\n\t  }\n\t  return i\n\t}\n\n\tfunction utf8Write (buf, string, offset, length) {\n\t  var charsWritten = blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t  return charsWritten\n\t}\n\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n\t  return charsWritten\n\t}\n\n\tfunction binaryWrite (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\n\tfunction base64Write (buf, string, offset, length) {\n\t  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n\t  return charsWritten\n\t}\n\n\tfunction utf16leWrite (buf, string, offset, length) {\n\t  var charsWritten = blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t  return charsWritten\n\t}\n\n\tBuffer.prototype.write = function (string, offset, length, encoding) {\n\t  // Support both (string, offset, length, encoding)\n\t  // and the legacy (string, encoding, offset, length)\n\t  if (isFinite(offset)) {\n\t    if (!isFinite(length)) {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  } else {  // legacy\n\t    var swap = encoding\n\t    encoding = offset\n\t    offset = length\n\t    length = swap\n\t  }\n\n\t  offset = Number(offset) || 0\n\n\t  if (length < 0 || offset < 0 || offset > this.length)\n\t    throw new RangeError('attempt to write outside buffer bounds')\n\n\t  var remaining = this.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t  encoding = String(encoding || 'utf8').toLowerCase()\n\n\t  var ret\n\t  switch (encoding) {\n\t    case 'hex':\n\t      ret = hexWrite(this, string, offset, length)\n\t      break\n\t    case 'utf8':\n\t    case 'utf-8':\n\t      ret = utf8Write(this, string, offset, length)\n\t      break\n\t    case 'ascii':\n\t      ret = asciiWrite(this, string, offset, length)\n\t      break\n\t    case 'binary':\n\t      ret = binaryWrite(this, string, offset, length)\n\t      break\n\t    case 'base64':\n\t      ret = base64Write(this, string, offset, length)\n\t      break\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      ret = utf16leWrite(this, string, offset, length)\n\t      break\n\t    default:\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t  }\n\t  return ret\n\t}\n\n\tBuffer.prototype.toJSON = function () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\n\tfunction utf8Slice (buf, start, end) {\n\t  var res = ''\n\t  var tmp = ''\n\t  end = Math.min(buf.length, end)\n\n\t  for (var i = start; i < end; i++) {\n\t    if (buf[i] <= 0x7F) {\n\t      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n\t      tmp = ''\n\t    } else {\n\t      tmp += '%' + buf[i].toString(16)\n\t    }\n\t  }\n\n\t  return res + decodeUtf8Char(tmp)\n\t}\n\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\n\t  for (var i = start; i < end; i++) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\n\tfunction binarySlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\n\t  for (var i = start; i < end; i++) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\n\t  var out = ''\n\t  for (var i = start; i < end; i++) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\n\tBuffer.prototype.slice = function (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0)\n\t      start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0)\n\t      end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\n\t  if (end < start)\n\t    end = start\n\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = Buffer._augment(this.subarray(start, end))\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined, true)\n\t    for (var i = 0; i < sliceLen; i++) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\n\t  if (newBuf.length)\n\t    newBuf.parent = this.parent || this\n\n\t  return newBuf\n\t}\n\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0)\n\t    throw new RangeError('offset is not uint')\n\t  if (offset + ext > length)\n\t    throw new RangeError('Trying to access beyond buffer length')\n\t}\n\n\tBuffer.prototype.readUIntLE = function (offset, byteLength, noAssert) {\n\t  offset = offset >>> 0\n\t  byteLength = byteLength >>> 0\n\t  if (!noAssert)\n\t    checkOffset(offset, byteLength, this.length)\n\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100))\n\t    val += this[offset + i] * mul\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readUIntBE = function (offset, byteLength, noAssert) {\n\t  offset = offset >>> 0\n\t  byteLength = byteLength >>> 0\n\t  if (!noAssert)\n\t    checkOffset(offset, byteLength, this.length)\n\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100))\n\t    val += this[offset + --byteLength] * mul\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readUInt8 = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\n\tBuffer.prototype.readUInt16LE = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\n\tBuffer.prototype.readUInt16BE = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\n\tBuffer.prototype.readUInt32LE = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 4, this.length)\n\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\n\tBuffer.prototype.readUInt32BE = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 4, this.length)\n\n\t  return (this[offset] * 0x1000000) +\n\t      ((this[offset + 1] << 16) |\n\t      (this[offset + 2] << 8) |\n\t      this[offset + 3])\n\t}\n\n\tBuffer.prototype.readIntLE = function (offset, byteLength, noAssert) {\n\t  offset = offset >>> 0\n\t  byteLength = byteLength >>> 0\n\t  if (!noAssert)\n\t    checkOffset(offset, byteLength, this.length)\n\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100))\n\t    val += this[offset + i] * mul\n\t  mul *= 0x80\n\n\t  if (val >= mul)\n\t    val -= Math.pow(2, 8 * byteLength)\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readIntBE = function (offset, byteLength, noAssert) {\n\t  offset = offset >>> 0\n\t  byteLength = byteLength >>> 0\n\t  if (!noAssert)\n\t    checkOffset(offset, byteLength, this.length)\n\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100))\n\t    val += this[offset + --i] * mul\n\t  mul *= 0x80\n\n\t  if (val >= mul)\n\t    val -= Math.pow(2, 8 * byteLength)\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readInt8 = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80))\n\t    return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\n\tBuffer.prototype.readInt16LE = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\n\tBuffer.prototype.readInt16BE = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\n\tBuffer.prototype.readInt32LE = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 4, this.length)\n\n\t  return (this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16) |\n\t      (this[offset + 3] << 24)\n\t}\n\n\tBuffer.prototype.readInt32BE = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 4, this.length)\n\n\t  return (this[offset] << 24) |\n\t      (this[offset + 1] << 16) |\n\t      (this[offset + 2] << 8) |\n\t      (this[offset + 3])\n\t}\n\n\tBuffer.prototype.readFloatLE = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\n\tBuffer.prototype.readFloatBE = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\n\tBuffer.prototype.readDoubleLE = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\n\tBuffer.prototype.readDoubleBE = function (offset, noAssert) {\n\t  if (!noAssert)\n\t    checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('value is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('index out of range')\n\t}\n\n\tBuffer.prototype.writeUIntLE = function (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  byteLength = byteLength >>> 0\n\t  if (!noAssert)\n\t    checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100))\n\t    this[offset + i] = (value / mul) >>> 0 & 0xFF\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeUIntBE = function (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  byteLength = byteLength >>> 0\n\t  if (!noAssert)\n\t    checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100))\n\t    this[offset + i] = (value / mul) >>> 0 & 0xFF\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  if (!noAssert)\n\t    checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = value\n\t  return offset + 1\n\t}\n\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\n\tBuffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  if (!noAssert)\n\t    checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value\n\t    this[offset + 1] = (value >>> 8)\n\t  } else objectWriteUInt16(this, value, offset, true)\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  if (!noAssert)\n\t    checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = value\n\t  } else objectWriteUInt16(this, value, offset, false)\n\t  return offset + 2\n\t}\n\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\n\tBuffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  if (!noAssert)\n\t    checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = value\n\t  } else objectWriteUInt32(this, value, offset, true)\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  if (!noAssert)\n\t    checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = value\n\t  } else objectWriteUInt32(this, value, offset, false)\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeIntLE = function (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  if (!noAssert) {\n\t    checkInt(this,\n\t             value,\n\t             offset,\n\t             byteLength,\n\t             Math.pow(2, 8 * byteLength - 1) - 1,\n\t             -Math.pow(2, 8 * byteLength - 1))\n\t  }\n\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = value < 0 ? 1 : 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100))\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeIntBE = function (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  if (!noAssert) {\n\t    checkInt(this,\n\t             value,\n\t             offset,\n\t             byteLength,\n\t             Math.pow(2, 8 * byteLength - 1) - 1,\n\t             -Math.pow(2, 8 * byteLength - 1))\n\t  }\n\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = value < 0 ? 1 : 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100))\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeInt8 = function (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  if (!noAssert)\n\t    checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = value\n\t  return offset + 1\n\t}\n\n\tBuffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  if (!noAssert)\n\t    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value\n\t    this[offset + 1] = (value >>> 8)\n\t  } else objectWriteUInt16(this, value, offset, true)\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  if (!noAssert)\n\t    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = value\n\t  } else objectWriteUInt16(this, value, offset, false)\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  if (!noAssert)\n\t    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else objectWriteUInt32(this, value, offset, true)\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset >>> 0\n\t  if (!noAssert)\n\t    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = value\n\t  } else objectWriteUInt32(this, value, offset, false)\n\t  return offset + 4\n\t}\n\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (value > max || value < min) throw new RangeError('value is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('index out of range')\n\t  if (offset < 0) throw new RangeError('index out of range')\n\t}\n\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert)\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\n\tBuffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert)\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\n\tBuffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\n\tBuffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function (target, target_start, start, end) {\n\t  var self = this // source\n\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (target_start >= target.length) target_start = target.length\n\t  if (!target_start) target_start = 0\n\t  if (end > 0 && end < start) end = start\n\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || self.length === 0) return 0\n\n\t  // Fatal error conditions\n\t  if (target_start < 0)\n\t    throw new RangeError('targetStart out of bounds')\n\t  if (start < 0 || start >= self.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n\t  // Are we oob?\n\t  if (end > this.length)\n\t    end = this.length\n\t  if (target.length - target_start < end - start)\n\t    end = target.length - target_start + start\n\n\t  var len = end - start\n\n\t  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < len; i++) {\n\t      target[i + target_start] = this[i + start]\n\t    }\n\t  } else {\n\t    target._set(this.subarray(start, start + len), target_start)\n\t  }\n\n\t  return len\n\t}\n\n\t// fill(value, start=0, end=buffer.length)\n\tBuffer.prototype.fill = function (value, start, end) {\n\t  if (!value) value = 0\n\t  if (!start) start = 0\n\t  if (!end) end = this.length\n\n\t  if (end < start) throw new RangeError('end < start')\n\n\t  // Fill 0 bytes; we're done\n\t  if (end === start) return\n\t  if (this.length === 0) return\n\n\t  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n\t  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n\t  var i\n\t  if (typeof value === 'number') {\n\t    for (i = start; i < end; i++) {\n\t      this[i] = value\n\t    }\n\t  } else {\n\t    var bytes = utf8ToBytes(value.toString())\n\t    var len = bytes.length\n\t    for (i = start; i < end; i++) {\n\t      this[i] = bytes[i % len]\n\t    }\n\t  }\n\n\t  return this\n\t}\n\n\t/**\n\t * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n\t * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n\t */\n\tBuffer.prototype.toArrayBuffer = function () {\n\t  if (typeof Uint8Array !== 'undefined') {\n\t    if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t      return (new Buffer(this)).buffer\n\t    } else {\n\t      var buf = new Uint8Array(this.length)\n\t      for (var i = 0, len = buf.length; i < len; i += 1) {\n\t        buf[i] = this[i]\n\t      }\n\t      return buf.buffer\n\t    }\n\t  } else {\n\t    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n\t  }\n\t}\n\n\t// HELPER FUNCTIONS\n\t// ================\n\n\tvar BP = Buffer.prototype\n\n\t/**\n\t * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n\t */\n\tBuffer._augment = function (arr) {\n\t  arr.constructor = Buffer\n\t  arr._isBuffer = true\n\n\t  // save reference to original Uint8Array get/set methods before overwriting\n\t  arr._get = arr.get\n\t  arr._set = arr.set\n\n\t  // deprecated, will be removed in node 0.13+\n\t  arr.get = BP.get\n\t  arr.set = BP.set\n\n\t  arr.write = BP.write\n\t  arr.toString = BP.toString\n\t  arr.toLocaleString = BP.toString\n\t  arr.toJSON = BP.toJSON\n\t  arr.equals = BP.equals\n\t  arr.compare = BP.compare\n\t  arr.copy = BP.copy\n\t  arr.slice = BP.slice\n\t  arr.readUIntLE = BP.readUIntLE\n\t  arr.readUIntBE = BP.readUIntBE\n\t  arr.readUInt8 = BP.readUInt8\n\t  arr.readUInt16LE = BP.readUInt16LE\n\t  arr.readUInt16BE = BP.readUInt16BE\n\t  arr.readUInt32LE = BP.readUInt32LE\n\t  arr.readUInt32BE = BP.readUInt32BE\n\t  arr.readIntLE = BP.readIntLE\n\t  arr.readIntBE = BP.readIntBE\n\t  arr.readInt8 = BP.readInt8\n\t  arr.readInt16LE = BP.readInt16LE\n\t  arr.readInt16BE = BP.readInt16BE\n\t  arr.readInt32LE = BP.readInt32LE\n\t  arr.readInt32BE = BP.readInt32BE\n\t  arr.readFloatLE = BP.readFloatLE\n\t  arr.readFloatBE = BP.readFloatBE\n\t  arr.readDoubleLE = BP.readDoubleLE\n\t  arr.readDoubleBE = BP.readDoubleBE\n\t  arr.writeUInt8 = BP.writeUInt8\n\t  arr.writeUIntLE = BP.writeUIntLE\n\t  arr.writeUIntBE = BP.writeUIntBE\n\t  arr.writeUInt16LE = BP.writeUInt16LE\n\t  arr.writeUInt16BE = BP.writeUInt16BE\n\t  arr.writeUInt32LE = BP.writeUInt32LE\n\t  arr.writeUInt32BE = BP.writeUInt32BE\n\t  arr.writeIntLE = BP.writeIntLE\n\t  arr.writeIntBE = BP.writeIntBE\n\t  arr.writeInt8 = BP.writeInt8\n\t  arr.writeInt16LE = BP.writeInt16LE\n\t  arr.writeInt16BE = BP.writeInt16BE\n\t  arr.writeInt32LE = BP.writeInt32LE\n\t  arr.writeInt32BE = BP.writeInt32BE\n\t  arr.writeFloatLE = BP.writeFloatLE\n\t  arr.writeFloatBE = BP.writeFloatBE\n\t  arr.writeDoubleLE = BP.writeDoubleLE\n\t  arr.writeDoubleBE = BP.writeDoubleBE\n\t  arr.fill = BP.fill\n\t  arr.inspect = BP.inspect\n\t  arr.toArrayBuffer = BP.toArrayBuffer\n\n\t  return arr\n\t}\n\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\n\tfunction isArrayish (subject) {\n\t  return isArray(subject) || Buffer.isBuffer(subject) ||\n\t      subject && typeof subject === 'object' &&\n\t      typeof subject.length === 'number'\n\t}\n\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t  var i = 0\n\n\t  for (; i < length; i++) {\n\t    codePoint = string.charCodeAt(i)\n\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (leadSurrogate) {\n\t        // 2 leads in a row\n\t        if (codePoint < 0xDC00) {\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          leadSurrogate = codePoint\n\t          continue\n\t        } else {\n\t          // valid surrogate pair\n\t          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n\t          leadSurrogate = null\n\t        }\n\t      } else {\n\t        // no lead yet\n\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else {\n\t          // valid lead\n\t          leadSurrogate = codePoint\n\t          continue\n\t        }\n\t      }\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t      leadSurrogate = null\n\t    }\n\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x200000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\n\t  return bytes\n\t}\n\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; i++) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; i++) {\n\t    if ((units -= 2) < 0) break\n\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\n\t  return byteArray\n\t}\n\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; i++) {\n\t    if ((i + offset >= dst.length) || (i >= src.length))\n\t      break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\n\tfunction decodeUtf8Char (str) {\n\t  try {\n\t    return decodeURIComponent(str)\n\t  } catch (err) {\n\t    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n\t  }\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(78).Buffer))\n\n/***/ },\n\n/***/ 83:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\texports.fixed = fixed;\n\texports.wrapPromise = wrapPromise;\n\texports.bind = bind;\n\n\tfunction fixed(total, progress) {\n\t  if (!progress) {\n\t    return function () {};\n\t  }var loaded = 0;\n\t  progress.report(0, total);\n\t  return function (extra) {\n\t    return progress.report(++loaded, total, extra);\n\t  };\n\t}\n\n\tfunction wrapPromise(progress, f) {\n\t  var current = 0;\n\t  var total = 0;\n\t  return function () {\n\t    progress.report(current, ++total);\n\t    return Promise.resolve(f.apply(this, arguments)).tap(function () {\n\t      return progress.report(++current, total);\n\t    });\n\t  };\n\t}\n\n\tfunction bind(from, to) {\n\t  return from.watch(function () {\n\t    return to.report(from.current, from.total, from.extra);\n\t  });\n\t}\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 86:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tvar punycode = __webpack_require__(230);\n\n\texports.parse = urlParse;\n\texports.resolve = urlResolve;\n\texports.resolveObject = urlResolveObject;\n\texports.format = urlFormat;\n\n\texports.Url = Url;\n\n\tfunction Url() {\n\t  this.protocol = null;\n\t  this.slashes = null;\n\t  this.auth = null;\n\t  this.host = null;\n\t  this.port = null;\n\t  this.hostname = null;\n\t  this.hash = null;\n\t  this.search = null;\n\t  this.query = null;\n\t  this.pathname = null;\n\t  this.path = null;\n\t  this.href = null;\n\t}\n\n\t// Reference: RFC 3986, RFC 1808, RFC 2396\n\n\t// define these here so at least they only have to be\n\t// compiled once on the first module load.\n\tvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n\t    portPattern = /:[0-9]*$/,\n\n\t    // RFC 2396: characters reserved for delimiting URLs.\n\t    // We actually just auto-escape these.\n\t    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n\t    // RFC 2396: characters not allowed for various reasons.\n\t    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n\t    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n\t    autoEscape = ['\\''].concat(unwise),\n\t    // Characters that are never ever allowed in a hostname.\n\t    // Note that any invalid chars are also handled, but these\n\t    // are the ones that are *expected* to be seen, so we fast-path\n\t    // them.\n\t    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n\t    hostEndingChars = ['/', '?', '#'],\n\t    hostnameMaxLen = 255,\n\t    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n\t    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n\t    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\t    unsafeProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that never have a hostname.\n\t    hostlessProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that always contain a // bit.\n\t    slashedProtocol = {\n\t      'http': true,\n\t      'https': true,\n\t      'ftp': true,\n\t      'gopher': true,\n\t      'file': true,\n\t      'http:': true,\n\t      'https:': true,\n\t      'ftp:': true,\n\t      'gopher:': true,\n\t      'file:': true\n\t    },\n\t    querystring = __webpack_require__(233);\n\n\tfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n\t  if (url && isObject(url) && url instanceof Url) return url;\n\n\t  var u = new Url;\n\t  u.parse(url, parseQueryString, slashesDenoteHost);\n\t  return u;\n\t}\n\n\tUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n\t  if (!isString(url)) {\n\t    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n\t  }\n\n\t  var rest = url;\n\n\t  // trim before proceeding.\n\t  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\t  rest = rest.trim();\n\n\t  var proto = protocolPattern.exec(rest);\n\t  if (proto) {\n\t    proto = proto[0];\n\t    var lowerProto = proto.toLowerCase();\n\t    this.protocol = lowerProto;\n\t    rest = rest.substr(proto.length);\n\t  }\n\n\t  // figure out if it's got a host\n\t  // user@server is *always* interpreted as a hostname, and url\n\t  // resolution will treat //foo/bar as host=foo,path=bar because that's\n\t  // how the browser resolves relative URLs.\n\t  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n\t    var slashes = rest.substr(0, 2) === '//';\n\t    if (slashes && !(proto && hostlessProtocol[proto])) {\n\t      rest = rest.substr(2);\n\t      this.slashes = true;\n\t    }\n\t  }\n\n\t  if (!hostlessProtocol[proto] &&\n\t      (slashes || (proto && !slashedProtocol[proto]))) {\n\n\t    // there's a hostname.\n\t    // the first instance of /, ?, ;, or # ends the host.\n\t    //\n\t    // If there is an @ in the hostname, then non-host chars *are* allowed\n\t    // to the left of the last @ sign, unless some host-ending character\n\t    // comes *before* the @-sign.\n\t    // URLs are obnoxious.\n\t    //\n\t    // ex:\n\t    // http://a@b@c/ => user:a@b host:c\n\t    // http://a@b?@c => user:a host:c path:/?@c\n\n\t    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n\t    // Review our test case against browsers more comprehensively.\n\n\t    // find the first instance of any hostEndingChars\n\t    var hostEnd = -1;\n\t    for (var i = 0; i < hostEndingChars.length; i++) {\n\t      var hec = rest.indexOf(hostEndingChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\n\t    // at this point, either we have an explicit point where the\n\t    // auth portion cannot go past, or the last @ char is the decider.\n\t    var auth, atSign;\n\t    if (hostEnd === -1) {\n\t      // atSign can be anywhere.\n\t      atSign = rest.lastIndexOf('@');\n\t    } else {\n\t      // atSign must be in auth portion.\n\t      // http://a@b/c@d => host:b auth:a path:/c@d\n\t      atSign = rest.lastIndexOf('@', hostEnd);\n\t    }\n\n\t    // Now we have a portion which is definitely the auth.\n\t    // Pull that off.\n\t    if (atSign !== -1) {\n\t      auth = rest.slice(0, atSign);\n\t      rest = rest.slice(atSign + 1);\n\t      this.auth = decodeURIComponent(auth);\n\t    }\n\n\t    // the host is the remaining to the left of the first non-host char\n\t    hostEnd = -1;\n\t    for (var i = 0; i < nonHostChars.length; i++) {\n\t      var hec = rest.indexOf(nonHostChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t    // if we still have not hit it, then the entire thing is a host.\n\t    if (hostEnd === -1)\n\t      hostEnd = rest.length;\n\n\t    this.host = rest.slice(0, hostEnd);\n\t    rest = rest.slice(hostEnd);\n\n\t    // pull out port.\n\t    this.parseHost();\n\n\t    // we've indicated that there is a hostname,\n\t    // so even if it's empty, it has to be present.\n\t    this.hostname = this.hostname || '';\n\n\t    // if hostname begins with [ and ends with ]\n\t    // assume that it's an IPv6 address.\n\t    var ipv6Hostname = this.hostname[0] === '[' &&\n\t        this.hostname[this.hostname.length - 1] === ']';\n\n\t    // validate a little.\n\t    if (!ipv6Hostname) {\n\t      var hostparts = this.hostname.split(/\\./);\n\t      for (var i = 0, l = hostparts.length; i < l; i++) {\n\t        var part = hostparts[i];\n\t        if (!part) continue;\n\t        if (!part.match(hostnamePartPattern)) {\n\t          var newpart = '';\n\t          for (var j = 0, k = part.length; j < k; j++) {\n\t            if (part.charCodeAt(j) > 127) {\n\t              // we replace non-ASCII char with a temporary placeholder\n\t              // we need this to make sure size of hostname is not\n\t              // broken by replacing non-ASCII by nothing\n\t              newpart += 'x';\n\t            } else {\n\t              newpart += part[j];\n\t            }\n\t          }\n\t          // we test again with ASCII char only\n\t          if (!newpart.match(hostnamePartPattern)) {\n\t            var validParts = hostparts.slice(0, i);\n\t            var notHost = hostparts.slice(i + 1);\n\t            var bit = part.match(hostnamePartStart);\n\t            if (bit) {\n\t              validParts.push(bit[1]);\n\t              notHost.unshift(bit[2]);\n\t            }\n\t            if (notHost.length) {\n\t              rest = '/' + notHost.join('.') + rest;\n\t            }\n\t            this.hostname = validParts.join('.');\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    if (this.hostname.length > hostnameMaxLen) {\n\t      this.hostname = '';\n\t    } else {\n\t      // hostnames are always lower case.\n\t      this.hostname = this.hostname.toLowerCase();\n\t    }\n\n\t    if (!ipv6Hostname) {\n\t      // IDNA Support: Returns a puny coded representation of \"domain\".\n\t      // It only converts the part of the domain name that\n\t      // has non ASCII characters. I.e. it dosent matter if\n\t      // you call it with a domain that already is in ASCII.\n\t      var domainArray = this.hostname.split('.');\n\t      var newOut = [];\n\t      for (var i = 0; i < domainArray.length; ++i) {\n\t        var s = domainArray[i];\n\t        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n\t            'xn--' + punycode.encode(s) : s);\n\t      }\n\t      this.hostname = newOut.join('.');\n\t    }\n\n\t    var p = this.port ? ':' + this.port : '';\n\t    var h = this.hostname || '';\n\t    this.host = h + p;\n\t    this.href += this.host;\n\n\t    // strip [ and ] from the hostname\n\t    // the host field still retains them, though\n\t    if (ipv6Hostname) {\n\t      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n\t      if (rest[0] !== '/') {\n\t        rest = '/' + rest;\n\t      }\n\t    }\n\t  }\n\n\t  // now rest is set to the post-host stuff.\n\t  // chop off any delim chars.\n\t  if (!unsafeProtocol[lowerProto]) {\n\n\t    // First, make 100% sure that any \"autoEscape\" chars get\n\t    // escaped, even if encodeURIComponent doesn't think they\n\t    // need to be.\n\t    for (var i = 0, l = autoEscape.length; i < l; i++) {\n\t      var ae = autoEscape[i];\n\t      var esc = encodeURIComponent(ae);\n\t      if (esc === ae) {\n\t        esc = escape(ae);\n\t      }\n\t      rest = rest.split(ae).join(esc);\n\t    }\n\t  }\n\n\n\t  // chop off from the tail first.\n\t  var hash = rest.indexOf('#');\n\t  if (hash !== -1) {\n\t    // got a fragment string.\n\t    this.hash = rest.substr(hash);\n\t    rest = rest.slice(0, hash);\n\t  }\n\t  var qm = rest.indexOf('?');\n\t  if (qm !== -1) {\n\t    this.search = rest.substr(qm);\n\t    this.query = rest.substr(qm + 1);\n\t    if (parseQueryString) {\n\t      this.query = querystring.parse(this.query);\n\t    }\n\t    rest = rest.slice(0, qm);\n\t  } else if (parseQueryString) {\n\t    // no query string, but parseQueryString still requested\n\t    this.search = '';\n\t    this.query = {};\n\t  }\n\t  if (rest) this.pathname = rest;\n\t  if (slashedProtocol[lowerProto] &&\n\t      this.hostname && !this.pathname) {\n\t    this.pathname = '/';\n\t  }\n\n\t  //to support http.request\n\t  if (this.pathname || this.search) {\n\t    var p = this.pathname || '';\n\t    var s = this.search || '';\n\t    this.path = p + s;\n\t  }\n\n\t  // finally, reconstruct the href based on what has been validated.\n\t  this.href = this.format();\n\t  return this;\n\t};\n\n\t// format a parsed object into a url string\n\tfunction urlFormat(obj) {\n\t  // ensure it's an object, and not a string url.\n\t  // If it's an obj, this is a no-op.\n\t  // this way, you can call url_format() on strings\n\t  // to clean up potentially wonky urls.\n\t  if (isString(obj)) obj = urlParse(obj);\n\t  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n\t  return obj.format();\n\t}\n\n\tUrl.prototype.format = function() {\n\t  var auth = this.auth || '';\n\t  if (auth) {\n\t    auth = encodeURIComponent(auth);\n\t    auth = auth.replace(/%3A/i, ':');\n\t    auth += '@';\n\t  }\n\n\t  var protocol = this.protocol || '',\n\t      pathname = this.pathname || '',\n\t      hash = this.hash || '',\n\t      host = false,\n\t      query = '';\n\n\t  if (this.host) {\n\t    host = auth + this.host;\n\t  } else if (this.hostname) {\n\t    host = auth + (this.hostname.indexOf(':') === -1 ?\n\t        this.hostname :\n\t        '[' + this.hostname + ']');\n\t    if (this.port) {\n\t      host += ':' + this.port;\n\t    }\n\t  }\n\n\t  if (this.query &&\n\t      isObject(this.query) &&\n\t      Object.keys(this.query).length) {\n\t    query = querystring.stringify(this.query);\n\t  }\n\n\t  var search = this.search || (query && ('?' + query)) || '';\n\n\t  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n\t  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n\t  // unless they had them to begin with.\n\t  if (this.slashes ||\n\t      (!protocol || slashedProtocol[protocol]) && host !== false) {\n\t    host = '//' + (host || '');\n\t    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n\t  } else if (!host) {\n\t    host = '';\n\t  }\n\n\t  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n\t  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n\t  pathname = pathname.replace(/[?#]/g, function(match) {\n\t    return encodeURIComponent(match);\n\t  });\n\t  search = search.replace('#', '%23');\n\n\t  return protocol + host + pathname + search + hash;\n\t};\n\n\tfunction urlResolve(source, relative) {\n\t  return urlParse(source, false, true).resolve(relative);\n\t}\n\n\tUrl.prototype.resolve = function(relative) {\n\t  return this.resolveObject(urlParse(relative, false, true)).format();\n\t};\n\n\tfunction urlResolveObject(source, relative) {\n\t  if (!source) return relative;\n\t  return urlParse(source, false, true).resolveObject(relative);\n\t}\n\n\tUrl.prototype.resolveObject = function(relative) {\n\t  if (isString(relative)) {\n\t    var rel = new Url();\n\t    rel.parse(relative, false, true);\n\t    relative = rel;\n\t  }\n\n\t  var result = new Url();\n\t  Object.keys(this).forEach(function(k) {\n\t    result[k] = this[k];\n\t  }, this);\n\n\t  // hash is always overridden, no matter what.\n\t  // even href=\"\" will remove it.\n\t  result.hash = relative.hash;\n\n\t  // if the relative url is empty, then there's nothing left to do here.\n\t  if (relative.href === '') {\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\n\t  // hrefs like //foo/bar always cut to the protocol.\n\t  if (relative.slashes && !relative.protocol) {\n\t    // take everything except the protocol from relative\n\t    Object.keys(relative).forEach(function(k) {\n\t      if (k !== 'protocol')\n\t        result[k] = relative[k];\n\t    });\n\n\t    //urlParse appends trailing / to urls like http://www.example.com\n\t    if (slashedProtocol[result.protocol] &&\n\t        result.hostname && !result.pathname) {\n\t      result.path = result.pathname = '/';\n\t    }\n\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\n\t  if (relative.protocol && relative.protocol !== result.protocol) {\n\t    // if it's a known url protocol, then changing\n\t    // the protocol does weird things\n\t    // first, if it's not file:, then we MUST have a host,\n\t    // and if there was a path\n\t    // to begin with, then we MUST have a path.\n\t    // if it is file:, then the host is dropped,\n\t    // because that's known to be hostless.\n\t    // anything else is assumed to be absolute.\n\t    if (!slashedProtocol[relative.protocol]) {\n\t      Object.keys(relative).forEach(function(k) {\n\t        result[k] = relative[k];\n\t      });\n\t      result.href = result.format();\n\t      return result;\n\t    }\n\n\t    result.protocol = relative.protocol;\n\t    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n\t      var relPath = (relative.pathname || '').split('/');\n\t      while (relPath.length && !(relative.host = relPath.shift()));\n\t      if (!relative.host) relative.host = '';\n\t      if (!relative.hostname) relative.hostname = '';\n\t      if (relPath[0] !== '') relPath.unshift('');\n\t      if (relPath.length < 2) relPath.unshift('');\n\t      result.pathname = relPath.join('/');\n\t    } else {\n\t      result.pathname = relative.pathname;\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    result.host = relative.host || '';\n\t    result.auth = relative.auth;\n\t    result.hostname = relative.hostname || relative.host;\n\t    result.port = relative.port;\n\t    // to support http.request\n\t    if (result.pathname || result.search) {\n\t      var p = result.pathname || '';\n\t      var s = result.search || '';\n\t      result.path = p + s;\n\t    }\n\t    result.slashes = result.slashes || relative.slashes;\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\n\t  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n\t      isRelAbs = (\n\t          relative.host ||\n\t          relative.pathname && relative.pathname.charAt(0) === '/'\n\t      ),\n\t      mustEndAbs = (isRelAbs || isSourceAbs ||\n\t                    (result.host && relative.pathname)),\n\t      removeAllDots = mustEndAbs,\n\t      srcPath = result.pathname && result.pathname.split('/') || [],\n\t      relPath = relative.pathname && relative.pathname.split('/') || [],\n\t      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n\t  // if the url is a non-slashed url, then relative\n\t  // links like ../.. should be able\n\t  // to crawl up to the hostname, as well.  This is strange.\n\t  // result.protocol has already been set by now.\n\t  // Later on, put the first path part into the host field.\n\t  if (psychotic) {\n\t    result.hostname = '';\n\t    result.port = null;\n\t    if (result.host) {\n\t      if (srcPath[0] === '') srcPath[0] = result.host;\n\t      else srcPath.unshift(result.host);\n\t    }\n\t    result.host = '';\n\t    if (relative.protocol) {\n\t      relative.hostname = null;\n\t      relative.port = null;\n\t      if (relative.host) {\n\t        if (relPath[0] === '') relPath[0] = relative.host;\n\t        else relPath.unshift(relative.host);\n\t      }\n\t      relative.host = null;\n\t    }\n\t    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n\t  }\n\n\t  if (isRelAbs) {\n\t    // it's absolute.\n\t    result.host = (relative.host || relative.host === '') ?\n\t                  relative.host : result.host;\n\t    result.hostname = (relative.hostname || relative.hostname === '') ?\n\t                      relative.hostname : result.hostname;\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    srcPath = relPath;\n\t    // fall through to the dot-handling below.\n\t  } else if (relPath.length) {\n\t    // it's relative\n\t    // throw away the existing file, and take the new path instead.\n\t    if (!srcPath) srcPath = [];\n\t    srcPath.pop();\n\t    srcPath = srcPath.concat(relPath);\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t  } else if (!isNullOrUndefined(relative.search)) {\n\t    // just pull out the search.\n\t    // like href='?foo'.\n\t    // Put this after the other two cases because it simplifies the booleans\n\t    if (psychotic) {\n\t      result.hostname = result.host = srcPath.shift();\n\t      //occationaly the auth can get stuck only in host\n\t      //this especialy happens in cases like\n\t      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                       result.host.split('@') : false;\n\t      if (authInHost) {\n\t        result.auth = authInHost.shift();\n\t        result.host = result.hostname = authInHost.shift();\n\t      }\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    //to support http.request\n\t    if (!isNull(result.pathname) || !isNull(result.search)) {\n\t      result.path = (result.pathname ? result.pathname : '') +\n\t                    (result.search ? result.search : '');\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\n\t  if (!srcPath.length) {\n\t    // no path at all.  easy.\n\t    // we've already handled the other stuff above.\n\t    result.pathname = null;\n\t    //to support http.request\n\t    if (result.search) {\n\t      result.path = '/' + result.search;\n\t    } else {\n\t      result.path = null;\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\n\t  // if a url ENDs in . or .., then it must get a trailing slash.\n\t  // however, if it ends in anything else non-slashy,\n\t  // then it must NOT get a trailing slash.\n\t  var last = srcPath.slice(-1)[0];\n\t  var hasTrailingSlash = (\n\t      (result.host || relative.host) && (last === '.' || last === '..') ||\n\t      last === '');\n\n\t  // strip single dots, resolve double dots to parent dir\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = srcPath.length; i >= 0; i--) {\n\t    last = srcPath[i];\n\t    if (last == '.') {\n\t      srcPath.splice(i, 1);\n\t    } else if (last === '..') {\n\t      srcPath.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      srcPath.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (!mustEndAbs && !removeAllDots) {\n\t    for (; up--; up) {\n\t      srcPath.unshift('..');\n\t    }\n\t  }\n\n\t  if (mustEndAbs && srcPath[0] !== '' &&\n\t      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n\t    srcPath.unshift('');\n\t  }\n\n\t  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n\t    srcPath.push('');\n\t  }\n\n\t  var isAbsolute = srcPath[0] === '' ||\n\t      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n\t  // put the host back\n\t  if (psychotic) {\n\t    result.hostname = result.host = isAbsolute ? '' :\n\t                                    srcPath.length ? srcPath.shift() : '';\n\t    //occationaly the auth can get stuck only in host\n\t    //this especialy happens in cases like\n\t    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                     result.host.split('@') : false;\n\t    if (authInHost) {\n\t      result.auth = authInHost.shift();\n\t      result.host = result.hostname = authInHost.shift();\n\t    }\n\t  }\n\n\t  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n\t  if (mustEndAbs && !isAbsolute) {\n\t    srcPath.unshift('');\n\t  }\n\n\t  if (!srcPath.length) {\n\t    result.pathname = null;\n\t    result.path = null;\n\t  } else {\n\t    result.pathname = srcPath.join('/');\n\t  }\n\n\t  //to support request.http\n\t  if (!isNull(result.pathname) || !isNull(result.search)) {\n\t    result.path = (result.pathname ? result.pathname : '') +\n\t                  (result.search ? result.search : '');\n\t  }\n\t  result.auth = relative.auth || result.auth;\n\t  result.slashes = result.slashes || relative.slashes;\n\t  result.href = result.format();\n\t  return result;\n\t};\n\n\tUrl.prototype.parseHost = function() {\n\t  var host = this.host;\n\t  var port = portPattern.exec(host);\n\t  if (port) {\n\t    port = port[0];\n\t    if (port !== ':') {\n\t      this.port = port.substr(1);\n\t    }\n\t    host = host.substr(0, host.length - port.length);\n\t  }\n\t  if (host) this.hostname = host;\n\t};\n\n\tfunction isString(arg) {\n\t  return typeof arg === \"string\";\n\t}\n\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\tfunction isNullOrUndefined(arg) {\n\t  return  arg == null;\n\t}\n\n\n/***/ },\n\n/***/ 89:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\tvar PIXI = _interopRequire(__webpack_require__(18));\n\n\tvar SkinNode = _interopRequire(__webpack_require__(32));\n\n\tvar Instance = _interopRequire(__webpack_require__(33));\n\n\tvar Expression = _interopRequire(__webpack_require__(55));\n\n\tvar Animation = _interopRequire(__webpack_require__(249));\n\n\t// Numeric properties that may be interpreted as expressions.\n\tvar properties = [{ name: \"x\", \"default\": \"0\", apply: function (obj, v) {\n\t    return obj.x = v;\n\t  } }, { name: \"y\", \"default\": \"0\", apply: function (obj, v) {\n\t    return obj.y = v;\n\t  } }, { name: \"scale-x\", \"default\": \"1\", apply: function (obj, v) {\n\t    return obj.scale.x = v;\n\t  } }, { name: \"scale-y\", \"default\": \"1\", apply: function (obj, v) {\n\t    return obj.scale.y = v;\n\t  } }, { name: \"alpha\", \"default\": \"1\", apply: function (obj, v) {\n\t    return obj.alpha = v;\n\t  } }, { name: \"width\", apply: function (obj, v) {\n\t    return obj.width = v;\n\t  } }, { name: \"height\", apply: function (obj, v) {\n\t    return obj.height = v;\n\t  } }, { name: \"visible\", apply: function (obj, v) {\n\t    return obj.visible = v;\n\t  } }];\n\n\tvar DisplayObject = exports.DisplayObject = (function (_SkinNode) {\n\t  function DisplayObject() {\n\t    _classCallCheck(this, DisplayObject);\n\n\t    if (_SkinNode != null) {\n\t      _SkinNode.apply(this, arguments);\n\t    }\n\t  }\n\n\t  _inherits(DisplayObject, _SkinNode);\n\n\t  _createClass(DisplayObject, {\n\t    compile: {\n\t      value: function compile(compiler, $el) {\n\t        this._animation = Animation.compile(compiler, $el);\n\t        this._bindings = [];\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\n\t        try {\n\t          for (var _iterator = properties[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var property = _step.value;\n\n\t            var code = $el.attr(property.name) || property[\"default\"];\n\t            if (!code) continue;\n\t            var expression = new Expression(code);\n\t            var getter = this._animation.prop(property.name, expression);\n\t            this._bindings.push({\n\t              getter: getter,\n\t              apply: property.apply });\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError = true;\n\t          _iteratorError = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t              _iterator[\"return\"]();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError) {\n\t              throw _iteratorError;\n\t            }\n\t          }\n\t        }\n\n\t        this.blendMode = parseBlendMode($el.attr(\"blend\") || \"normal\");\n\t        this.ref = $el.attr(\"ref\") || null;\n\t      }\n\t    },\n\t    instantiate: {\n\t      value: function instantiate(context, subject) {\n\t        var _this = this;\n\n\t        var object = subject.object;\n\t        var bindings = [];\n\t        var onDestroy = null;\n\t        object.blendMode = this.blendMode;\n\t        for (var i = 0; i < this._bindings.length; i++) {\n\t          var binding = this._bindings[i];\n\t          bindings.push([binding.getter, binding.apply.bind(null, object)]);\n\t        }\n\t        if (this.ref) {\n\t          context.ref(this.ref, object);\n\t          onDestroy = function () {\n\t            return context.unref(_this.ref, object);\n\t          };\n\t        }\n\t        return new Instance({\n\t          bindings: bindings,\n\t          onDestroy: onDestroy });\n\t      }\n\t    }\n\t  });\n\n\t  return DisplayObject;\n\t})(SkinNode);\n\n\tfunction parseBlendMode(text) {\n\t  if (text === \"normal\") {\n\t    return PIXI.blendModes.NORMAL;\n\t  }if (text === \"screen\") {\n\t    return PIXI.blendModes.SCREEN;\n\t  }throw new Error(\"Invalid blend mode: \" + text);\n\t}\n\n\texports[\"default\"] = DisplayObject;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 93:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction bounceOut(t) {\n\t  var a = 4.0 / 11.0\n\t  var b = 8.0 / 11.0\n\t  var c = 9.0 / 10.0\n\n\t  var ca = 4356.0 / 361.0\n\t  var cb = 35442.0 / 1805.0\n\t  var cc = 16061.0 / 1805.0\n\n\t  var t2 = t * t\n\n\t  return t < a\n\t    ? 7.5625 * t2\n\t    : t < b\n\t      ? 9.075 * t2 - 9.9 * t + 3.4\n\t      : t < c\n\t        ? ca * t2 - cb * t + cc\n\t        : 10.8 * t * t - 20.52 * t + 10.72\n\t}\n\n\tmodule.exports = bounceOut\n\n/***/ },\n\n/***/ 117:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar DataStructure = _interopRequire(__webpack_require__(41));\n\n\tvar GameEvent = new DataStructure({\n\t  beat: Number,\n\t  time: Number,\n\t  position: Number });\n\n\texports.GameEvent = GameEvent;\n\texports[\"default\"] = GameEvent;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 118:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\texports.getSkinUrl = getSkinUrl;\n\n\tvar load = __webpack_require__(275).load;\n\n\tvar Context = __webpack_require__(274).Context;\n\n\texports.load = load;\n\texports.Context = Context;\n\n\tfunction getSkinUrl() {\n\t  if (window.innerWidth < window.innerHeight) {\n\t    return \"/skins/default/skin_touch.xml\";\n\t  } else {\n\t    return \"/skins/default/skin_screen.xml\";\n\t  }\n\t}\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 127:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\t;(function (exports) {\n\t\t'use strict';\n\n\t  var Arr = (typeof Uint8Array !== 'undefined')\n\t    ? Uint8Array\n\t    : Array\n\n\t\tvar PLUS   = '+'.charCodeAt(0)\n\t\tvar SLASH  = '/'.charCodeAt(0)\n\t\tvar NUMBER = '0'.charCodeAt(0)\n\t\tvar LOWER  = 'a'.charCodeAt(0)\n\t\tvar UPPER  = 'A'.charCodeAt(0)\n\t\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\t\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\t\tfunction decode (elt) {\n\t\t\tvar code = elt.charCodeAt(0)\n\t\t\tif (code === PLUS ||\n\t\t\t    code === PLUS_URL_SAFE)\n\t\t\t\treturn 62 // '+'\n\t\t\tif (code === SLASH ||\n\t\t\t    code === SLASH_URL_SAFE)\n\t\t\t\treturn 63 // '/'\n\t\t\tif (code < NUMBER)\n\t\t\t\treturn -1 //no match\n\t\t\tif (code < NUMBER + 10)\n\t\t\t\treturn code - NUMBER + 26 + 26\n\t\t\tif (code < UPPER + 26)\n\t\t\t\treturn code - UPPER\n\t\t\tif (code < LOWER + 26)\n\t\t\t\treturn code - LOWER + 26\n\t\t}\n\n\t\tfunction b64ToByteArray (b64) {\n\t\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\t\tif (b64.length % 4 > 0) {\n\t\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t\t}\n\n\t\t\t// the number of equal signs (place holders)\n\t\t\t// if there are two placeholders, than the two characters before it\n\t\t\t// represent one byte\n\t\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t\t// this is just a cheap hack to not do indexOf twice\n\t\t\tvar len = b64.length\n\t\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t\t// base64 is 4/3 + up to two characters of the original data\n\t\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\t\tvar L = 0\n\n\t\t\tfunction push (v) {\n\t\t\t\tarr[L++] = v\n\t\t\t}\n\n\t\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t}\n\n\t\t\tif (placeHolders === 2) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t} else if (placeHolders === 1) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t}\n\n\t\t\treturn arr\n\t\t}\n\n\t\tfunction uint8ToBase64 (uint8) {\n\t\t\tvar i,\n\t\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\t\toutput = \"\",\n\t\t\t\ttemp, length\n\n\t\t\tfunction encode (num) {\n\t\t\t\treturn lookup.charAt(num)\n\t\t\t}\n\n\t\t\tfunction tripletToBase64 (num) {\n\t\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t\t}\n\n\t\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\t\toutput += tripletToBase64(temp)\n\t\t\t}\n\n\t\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\t\tswitch (extraBytes) {\n\t\t\t\tcase 1:\n\t\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\t\toutput += '=='\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\t\toutput += '='\n\t\t\t\t\tbreak\n\t\t\t}\n\n\t\t\treturn output\n\t\t}\n\n\t\texports.toByteArray = b64ToByteArray\n\t\texports.fromByteArray = uint8ToBase64\n\t}(false ? (this.base64js = {}) : exports))\n\n\n/***/ },\n\n/***/ 128:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports.read = function(buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m,\n\t      eLen = nBytes * 8 - mLen - 1,\n\t      eMax = (1 << eLen) - 1,\n\t      eBias = eMax >> 1,\n\t      nBits = -7,\n\t      i = isLE ? (nBytes - 1) : 0,\n\t      d = isLE ? -1 : 1,\n\t      s = buffer[offset + i];\n\n\t  i += d;\n\n\t  e = s & ((1 << (-nBits)) - 1);\n\t  s >>= (-nBits);\n\t  nBits += eLen;\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n\t  m = e & ((1 << (-nBits)) - 1);\n\t  e >>= (-nBits);\n\t  nBits += mLen;\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n\t  if (e === 0) {\n\t    e = 1 - eBias;\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity);\n\t  } else {\n\t    m = m + Math.pow(2, mLen);\n\t    e = e - eBias;\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n\t};\n\n\texports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c,\n\t      eLen = nBytes * 8 - mLen - 1,\n\t      eMax = (1 << eLen) - 1,\n\t      eBias = eMax >> 1,\n\t      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n\t      i = isLE ? 0 : (nBytes - 1),\n\t      d = isLE ? 1 : -1,\n\t      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n\t  value = Math.abs(value);\n\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0;\n\t    e = eMax;\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2);\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--;\n\t      c *= 2;\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c;\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias);\n\t    }\n\t    if (value * c >= 2) {\n\t      e++;\n\t      c /= 2;\n\t    }\n\n\t    if (e + eBias >= eMax) {\n\t      m = 0;\n\t      e = eMax;\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen);\n\t      e = e + eBias;\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n\t      e = 0;\n\t    }\n\t  }\n\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n\t  e = (e << mLen) | m;\n\t  eLen += mLen;\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n\t  buffer[offset + i - d] |= s * 128;\n\t};\n\n\n/***/ },\n\n/***/ 129:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * isArray\n\t */\n\n\tvar isArray = Array.isArray;\n\n\t/**\n\t * toString\n\t */\n\n\tvar str = Object.prototype.toString;\n\n\t/**\n\t * Whether or not the given `val`\n\t * is an array.\n\t *\n\t * example:\n\t *\n\t *        isArray([]);\n\t *        // > true\n\t *        isArray(arguments);\n\t *        // > false\n\t *        isArray('');\n\t *        // > false\n\t *\n\t * @param {mixed} val\n\t * @return {bool}\n\t */\n\n\tmodule.exports = isArray || function (val) {\n\t  return !! val && '[object Array]' == str.call(val);\n\t};\n\n\n/***/ },\n\n/***/ 130:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\tvar _ = _interopRequire(__webpack_require__(12));\n\n\tvar NoteArea = exports.NoteArea = (function () {\n\t  function NoteArea(notes, barLines) {\n\t    _classCallCheck(this, NoteArea);\n\n\t    this._notes = _.sortBy(notes, position);\n\t    this._barLines = _(barLines).pluck(\"position\").sortBy().value();\n\t  }\n\n\t  _createClass(NoteArea, {\n\t    getVisibleNotes: {\n\t      value: function getVisibleNotes(lower, upper, headroom) {\n\t        var out = [];\n\t        var notes = this._notes;\n\t        if (!headroom) headroom = 0;\n\t        for (var i = 0; i < notes.length; i++) {\n\t          var note = notes[i];\n\t          var visible = note.end ? !(note.position > upper || note.end.position < lower - headroom) : !(note.position > upper || note.position < lower - headroom);\n\t          if (visible) {\n\t            var entity = { note: note };\n\t            if (!note.end) {\n\t              entity.y = y(lower, upper, note.position);\n\t            } else {\n\t              var head = y(lower, upper, note.position);\n\t              var tail = y(lower, upper, note.end.position);\n\t              entity.y = Math.min(head, tail);\n\t              entity.height = Math.abs(head - tail);\n\t            }\n\t            out.push(entity);\n\t          }\n\t        }\n\t        return out;\n\t      }\n\t    },\n\t    getVisibleBarLines: {\n\t      value: function getVisibleBarLines(lower, upper, headroom) {\n\t        if (!headroom) headroom = 0;\n\t        return this._barLines.filter(function (pos) {\n\t          return lower - headroom <= pos && pos <= upper;\n\t        }).map(function (pos) {\n\t          return { id: pos, y: y(lower, upper, pos) };\n\t        });\n\t      }\n\t    }\n\t  });\n\n\t  return NoteArea;\n\t})();\n\n\texports[\"default\"] = NoteArea;\n\n\tfunction y(lower, upper, pos) {\n\t  return 1 - (pos - lower) / (upper - lower);\n\t}\n\n\tfunction position(event) {\n\t  return event.position;\n\t}\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 131:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\texports.parseFrame = parseFrame;\n\n\tvar PIXI = _interopRequire(__webpack_require__(18));\n\n\tfunction parseFrame(text) {\n\t  var m = text.match(/^(\\d+)x(\\d+)\\+(\\d+)\\+(\\d+)$/);\n\t  if (!m) {\n\t    return null;\n\t  }return new PIXI.Rectangle(+m[3], +m[4], +m[1], +m[2]);\n\t}\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 134:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar lerp = __webpack_require__(332)\n\n\tmodule.exports = function lerpValues(value1, value2, t, out) {\n\t    if (typeof value1 === 'number'\n\t            && typeof value2 === 'number')\n\t        return lerp(value1, value2, t)\n\t    else { //assume array\n\t        var len = Math.min(value1.length, value2.length)\n\t        out = out||new Array(len)\n\t        for (var i=0; i<len; i++) \n\t            out[i] = lerp(value1[i], value2[i], t)\n\t        return out\n\t    }\n\t}\n\n/***/ },\n\n/***/ 136:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar DataStructure = _interopRequire(__webpack_require__(41));\n\n\tvar Event = _interopRequire(__webpack_require__(117));\n\n\tvar GameNote = new DataStructure(Event, {\n\t  id: Number,\n\t  end: DataStructure.maybe(Event),\n\t  column: String });\n\n\texports.GameNote = GameNote;\n\texports[\"default\"] = GameNote;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 230:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/punycode v1.3.2 by @mathias */\n\t;(function(root) {\n\n\t\t/** Detect free variables */\n\t\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t\t!exports.nodeType && exports;\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\t!module.nodeType && module;\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (\n\t\t\tfreeGlobal.global === freeGlobal ||\n\t\t\tfreeGlobal.window === freeGlobal ||\n\t\t\tfreeGlobal.self === freeGlobal\n\t\t) {\n\t\t\troot = freeGlobal;\n\t\t}\n\n\t\t/**\n\t\t * The `punycode` object.\n\t\t * @name punycode\n\t\t * @type Object\n\t\t */\n\t\tvar punycode,\n\n\t\t/** Highest positive signed 32-bit float value */\n\t\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t\t/** Bootstring parameters */\n\t\tbase = 36,\n\t\ttMin = 1,\n\t\ttMax = 26,\n\t\tskew = 38,\n\t\tdamp = 700,\n\t\tinitialBias = 72,\n\t\tinitialN = 128, // 0x80\n\t\tdelimiter = '-', // '\\x2D'\n\n\t\t/** Regular expressions */\n\t\tregexPunycode = /^xn--/,\n\t\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\t\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t\t/** Error messages */\n\t\terrors = {\n\t\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t\t'invalid-input': 'Invalid input'\n\t\t},\n\n\t\t/** Convenience shortcuts */\n\t\tbaseMinusTMin = base - tMin,\n\t\tfloor = Math.floor,\n\t\tstringFromCharCode = String.fromCharCode,\n\n\t\t/** Temporary variable */\n\t\tkey;\n\n\t\t/*--------------------------------------------------------------------------*/\n\n\t\t/**\n\t\t * A generic error utility function.\n\t\t * @private\n\t\t * @param {String} type The error type.\n\t\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t\t */\n\t\tfunction error(type) {\n\t\t\tthrow RangeError(errors[type]);\n\t\t}\n\n\t\t/**\n\t\t * A generic `Array#map` utility function.\n\t\t * @private\n\t\t * @param {Array} array The array to iterate over.\n\t\t * @param {Function} callback The function that gets called for every array\n\t\t * item.\n\t\t * @returns {Array} A new array of values returned by the callback function.\n\t\t */\n\t\tfunction map(array, fn) {\n\t\t\tvar length = array.length;\n\t\t\tvar result = [];\n\t\t\twhile (length--) {\n\t\t\t\tresult[length] = fn(array[length]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t\t * addresses.\n\t\t * @private\n\t\t * @param {String} domain The domain name or email address.\n\t\t * @param {Function} callback The function that gets called for every\n\t\t * character.\n\t\t * @returns {Array} A new string of characters returned by the callback\n\t\t * function.\n\t\t */\n\t\tfunction mapDomain(string, fn) {\n\t\t\tvar parts = string.split('@');\n\t\t\tvar result = '';\n\t\t\tif (parts.length > 1) {\n\t\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\t\tresult = parts[0] + '@';\n\t\t\t\tstring = parts[1];\n\t\t\t}\n\t\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\t\tvar labels = string.split('.');\n\t\t\tvar encoded = map(labels, fn).join('.');\n\t\t\treturn result + encoded;\n\t\t}\n\n\t\t/**\n\t\t * Creates an array containing the numeric code points of each Unicode\n\t\t * character in the string. While JavaScript uses UCS-2 internally,\n\t\t * this function will convert a pair of surrogate halves (each of which\n\t\t * UCS-2 exposes as separate characters) into a single code point,\n\t\t * matching UTF-16.\n\t\t * @see `punycode.ucs2.encode`\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode.ucs2\n\t\t * @name decode\n\t\t * @param {String} string The Unicode input string (UCS-2).\n\t\t * @returns {Array} The new array of code points.\n\t\t */\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [],\n\t\t\t    counter = 0,\n\t\t\t    length = string.length,\n\t\t\t    value,\n\t\t\t    extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t\t * Creates a string based on an array of numeric code points.\n\t\t * @see `punycode.ucs2.decode`\n\t\t * @memberOf punycode.ucs2\n\t\t * @name encode\n\t\t * @param {Array} codePoints The array of numeric code points.\n\t\t * @returns {String} The new Unicode string (UCS-2).\n\t\t */\n\t\tfunction ucs2encode(array) {\n\t\t\treturn map(array, function(value) {\n\t\t\t\tvar output = '';\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t\treturn output;\n\t\t\t}).join('');\n\t\t}\n\n\t\t/**\n\t\t * Converts a basic code point into a digit/integer.\n\t\t * @see `digitToBasic()`\n\t\t * @private\n\t\t * @param {Number} codePoint The basic numeric code point value.\n\t\t * @returns {Number} The numeric value of a basic code point (for use in\n\t\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t\t * the code point does not represent a value.\n\t\t */\n\t\tfunction basicToDigit(codePoint) {\n\t\t\tif (codePoint - 48 < 10) {\n\t\t\t\treturn codePoint - 22;\n\t\t\t}\n\t\t\tif (codePoint - 65 < 26) {\n\t\t\t\treturn codePoint - 65;\n\t\t\t}\n\t\t\tif (codePoint - 97 < 26) {\n\t\t\t\treturn codePoint - 97;\n\t\t\t}\n\t\t\treturn base;\n\t\t}\n\n\t\t/**\n\t\t * Converts a digit/integer into a basic code point.\n\t\t * @see `basicToDigit()`\n\t\t * @private\n\t\t * @param {Number} digit The numeric value of a basic code point.\n\t\t * @returns {Number} The basic code point whose value (when used for\n\t\t * representing integers) is `digit`, which needs to be in the range\n\t\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t\t * used; else, the lowercase form is used. The behavior is undefined\n\t\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t\t */\n\t\tfunction digitToBasic(digit, flag) {\n\t\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t\t// 26..35 map to ASCII 0..9\n\t\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t\t}\n\n\t\t/**\n\t\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t\t * @private\n\t\t */\n\t\tfunction adapt(delta, numPoints, firstTime) {\n\t\t\tvar k = 0;\n\t\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\t\tdelta += floor(delta / numPoints);\n\t\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t\t}\n\t\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t\t}\n\n\t\t/**\n\t\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t\t * symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t\t * @returns {String} The resulting string of Unicode symbols.\n\t\t */\n\t\tfunction decode(input) {\n\t\t\t// Don't use UCS-2\n\t\t\tvar output = [],\n\t\t\t    inputLength = input.length,\n\t\t\t    out,\n\t\t\t    i = 0,\n\t\t\t    n = initialN,\n\t\t\t    bias = initialBias,\n\t\t\t    basic,\n\t\t\t    j,\n\t\t\t    index,\n\t\t\t    oldi,\n\t\t\t    w,\n\t\t\t    k,\n\t\t\t    digit,\n\t\t\t    t,\n\t\t\t    /** Cached calculation results */\n\t\t\t    baseMinusT;\n\n\t\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t\t// the first basic code points to the output.\n\n\t\t\tbasic = input.lastIndexOf(delimiter);\n\t\t\tif (basic < 0) {\n\t\t\t\tbasic = 0;\n\t\t\t}\n\n\t\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t\t// if it's not a basic code point\n\t\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\t\terror('not-basic');\n\t\t\t\t}\n\t\t\t\toutput.push(input.charCodeAt(j));\n\t\t\t}\n\n\t\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t\t// points were copied; start at the beginning otherwise.\n\n\t\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t\t// value at the end to obtain `delta`.\n\t\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\t\terror('invalid-input');\n\t\t\t\t\t}\n\n\t\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\n\t\t\t\t\ti += digit * w;\n\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\t\tif (digit < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\n\t\t\t\t\tw *= baseMinusT;\n\n\t\t\t\t}\n\n\t\t\t\tout = output.length + 1;\n\t\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tn += floor(i / out);\n\t\t\t\ti %= out;\n\n\t\t\t\t// Insert `n` at position `i` of the output\n\t\t\t\toutput.splice(i++, 0, n);\n\n\t\t\t}\n\n\t\t\treturn ucs2encode(output);\n\t\t}\n\n\t\t/**\n\t\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t\t * Punycode string of ASCII-only symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The string of Unicode symbols.\n\t\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t\t */\n\t\tfunction encode(input) {\n\t\t\tvar n,\n\t\t\t    delta,\n\t\t\t    handledCPCount,\n\t\t\t    basicLength,\n\t\t\t    bias,\n\t\t\t    j,\n\t\t\t    m,\n\t\t\t    q,\n\t\t\t    k,\n\t\t\t    t,\n\t\t\t    currentValue,\n\t\t\t    output = [],\n\t\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t\t    inputLength,\n\t\t\t    /** Cached calculation results */\n\t\t\t    handledCPCountPlusOne,\n\t\t\t    baseMinusT,\n\t\t\t    qMinusT;\n\n\t\t\t// Convert the input in UCS-2 to Unicode\n\t\t\tinput = ucs2decode(input);\n\n\t\t\t// Cache the length\n\t\t\tinputLength = input.length;\n\n\t\t\t// Initialize the state\n\t\t\tn = initialN;\n\t\t\tdelta = 0;\n\t\t\tbias = initialBias;\n\n\t\t\t// Handle the basic code points\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue < 0x80) {\n\t\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thandledCPCount = basicLength = output.length;\n\n\t\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t\t// `basicLength` is the number of basic code points.\n\n\t\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\t\tif (basicLength) {\n\t\t\t\toutput.push(delimiter);\n\t\t\t}\n\n\t\t\t// Main encoding loop:\n\t\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t\t// larger one:\n\t\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\t\tm = currentValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t\t// but guard against overflow\n\t\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\t\tn = m;\n\n\t\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\t\tdelta = 0;\n\t\t\t\t\t\t++handledCPCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t++delta;\n\t\t\t\t++n;\n\n\t\t\t}\n\t\t\treturn output.join('');\n\t\t}\n\n\t\t/**\n\t\t * Converts a Punycode string representing a domain name or an email address\n\t\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t\t * it doesn't matter if you call it on a string that has already been\n\t\t * converted to Unicode.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycoded domain name or email address to\n\t\t * convert to Unicode.\n\t\t * @returns {String} The Unicode representation of the given Punycode\n\t\t * string.\n\t\t */\n\t\tfunction toUnicode(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexPunycode.test(string)\n\t\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Converts a Unicode string representing a domain name or an email address to\n\t\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t\t * ASCII.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The domain name or email address to convert, as a\n\t\t * Unicode string.\n\t\t * @returns {String} The Punycode representation of the given domain name or\n\t\t * email address.\n\t\t */\n\t\tfunction toASCII(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\n\t\t/*--------------------------------------------------------------------------*/\n\n\t\t/** Define the public API */\n\t\tpunycode = {\n\t\t\t/**\n\t\t\t * A string representing the current Punycode.js version number.\n\t\t\t * @memberOf punycode\n\t\t\t * @type String\n\t\t\t */\n\t\t\t'version': '1.3.2',\n\t\t\t/**\n\t\t\t * An object of methods to convert from JavaScript's internal character\n\t\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t\t * @memberOf punycode\n\t\t\t * @type Object\n\t\t\t */\n\t\t\t'ucs2': {\n\t\t\t\t'decode': ucs2decode,\n\t\t\t\t'encode': ucs2encode\n\t\t\t},\n\t\t\t'decode': decode,\n\t\t\t'encode': encode,\n\t\t\t'toASCII': toASCII,\n\t\t\t'toUnicode': toUnicode\n\t\t};\n\n\t\t/** Expose `punycode` */\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn punycode;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (freeExports && freeModule) {\n\t\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = punycode;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (key in punycode) {\n\t\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.punycode = punycode;\n\t\t}\n\n\t}(this));\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(51)(module), (function() { return this; }())))\n\n/***/ },\n\n/***/ 231:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\t'use strict';\n\n\t// If obj.hasOwnProperty has been overridden, then calling\n\t// obj.hasOwnProperty(prop) will break.\n\t// See: https://github.com/joyent/node/issues/1707\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\n\tmodule.exports = function(qs, sep, eq, options) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  var obj = {};\n\n\t  if (typeof qs !== 'string' || qs.length === 0) {\n\t    return obj;\n\t  }\n\n\t  var regexp = /\\+/g;\n\t  qs = qs.split(sep);\n\n\t  var maxKeys = 1000;\n\t  if (options && typeof options.maxKeys === 'number') {\n\t    maxKeys = options.maxKeys;\n\t  }\n\n\t  var len = qs.length;\n\t  // maxKeys <= 0 means that we should not limit keys count\n\t  if (maxKeys > 0 && len > maxKeys) {\n\t    len = maxKeys;\n\t  }\n\n\t  for (var i = 0; i < len; ++i) {\n\t    var x = qs[i].replace(regexp, '%20'),\n\t        idx = x.indexOf(eq),\n\t        kstr, vstr, k, v;\n\n\t    if (idx >= 0) {\n\t      kstr = x.substr(0, idx);\n\t      vstr = x.substr(idx + 1);\n\t    } else {\n\t      kstr = x;\n\t      vstr = '';\n\t    }\n\n\t    k = decodeURIComponent(kstr);\n\t    v = decodeURIComponent(vstr);\n\n\t    if (!hasOwnProperty(obj, k)) {\n\t      obj[k] = v;\n\t    } else if (Array.isArray(obj[k])) {\n\t      obj[k].push(v);\n\t    } else {\n\t      obj[k] = [obj[k], v];\n\t    }\n\t  }\n\n\t  return obj;\n\t};\n\n\n/***/ },\n\n/***/ 232:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\t'use strict';\n\n\tvar stringifyPrimitive = function(v) {\n\t  switch (typeof v) {\n\t    case 'string':\n\t      return v;\n\n\t    case 'boolean':\n\t      return v ? 'true' : 'false';\n\n\t    case 'number':\n\t      return isFinite(v) ? v : '';\n\n\t    default:\n\t      return '';\n\t  }\n\t};\n\n\tmodule.exports = function(obj, sep, eq, name) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  if (obj === null) {\n\t    obj = undefined;\n\t  }\n\n\t  if (typeof obj === 'object') {\n\t    return Object.keys(obj).map(function(k) {\n\t      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\t      if (Array.isArray(obj[k])) {\n\t        return obj[k].map(function(v) {\n\t          return ks + encodeURIComponent(stringifyPrimitive(v));\n\t        }).join(sep);\n\t      } else {\n\t        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n\t      }\n\t    }).join(sep);\n\n\t  }\n\n\t  if (!name) return '';\n\t  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n\t         encodeURIComponent(stringifyPrimitive(obj));\n\t};\n\n\n/***/ },\n\n/***/ 233:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.decode = exports.parse = __webpack_require__(231);\n\texports.encode = exports.stringify = __webpack_require__(232);\n\n\n/***/ },\n\n/***/ 249:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _toConsumableArray = function (arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\texports._compile = _compile;\n\texports._attrs = _attrs;\n\n\tvar _ = _interopRequire(__webpack_require__(12));\n\n\tvar $ = _interopRequire(__webpack_require__(31));\n\n\tvar keytime = _interopRequire(__webpack_require__(296));\n\n\tvar createKeytime = function (def) {\n\t  return Object.assign({}, def, { data: keytime(def.data) });\n\t};\n\n\tvar Animation = exports.Animation = (function () {\n\t  function Animation(animations) {\n\t    _classCallCheck(this, Animation);\n\n\t    this._properties = _(animations).map(function (animation) {\n\t      return _.pluck(animation.data, \"name\");\n\t    }).flatten().thru(function (array) {\n\t      return new Set(array);\n\t    }).value();\n\t    this._animations = _.map(animations, createKeytime);\n\t    this._events = _.uniq(_.pluck(animations, \"on\"));\n\t  }\n\n\t  _createClass(Animation, {\n\t    prop: {\n\t      value: function prop(name, fallback) {\n\t        var _this = this;\n\n\t        if (!this._properties.has(name)) {\n\t          return fallback;\n\t        }\n\t        return function (data) {\n\t          var values = _this._getAnimation(data);\n\t          if (values.hasOwnProperty(name)) {\n\t            return values[name];\n\t          } else {\n\t            return fallback(data);\n\t          }\n\t        };\n\t      }\n\t    },\n\t    _getAnimation: {\n\t      value: function _getAnimation(data) {\n\t        var event = _(this._events).filter(function (e) {\n\t          return e === \"\" || e in data;\n\t        }).max(function (e) {\n\t          return data[e] || 0;\n\t        });\n\t        var t = data.t - (data[event] || 0);\n\t        var animations = this._animations.filter(function (a) {\n\t          return a.on === event;\n\t        });\n\t        var values = animations.map(function (a) {\n\t          return a.data.values(t);\n\t        });\n\t        return Object.assign.apply(Object, [{}].concat(_toConsumableArray(values)));\n\t      }\n\t    }\n\t  }, {\n\t    compile: {\n\t      value: function compile(compiler, $el) {\n\t        var animationElements = Array.from($el.children(\"animation\"));\n\t        var animations = _.map(animationElements, function (el) {\n\t          return _compile($(el));\n\t        });\n\t        return new Animation(animations);\n\t      }\n\t    }\n\t  });\n\n\t  return Animation;\n\t})();\n\n\tfunction _compile($el) {\n\t  var keyframes = _.map(Array.from($el.children(\"keyframe\")), _attrs);\n\t  var attrs = {};\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = keyframes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var keyframe = _step.value;\n\n\t      var time = +keyframe.t;\n\t      var ease = keyframe.ease || \"linear\";\n\t      if (isNaN(time)) throw new Error(\"Expected keyframe to have \\\"t\\\" attribute\");\n\t      for (var key in keyframe) {\n\t        if (key === \"t\" || key === \"ease\") continue;\n\t        var value = +keyframe[key];\n\t        var attr = attrs[key] || (attrs[key] = _createKeyframes(key));\n\t        attr.keyframes.push({ time: time, value: value, ease: ease });\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t        _iterator[\"return\"]();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\n\t  return {\n\t    on: $el.attr(\"on\") || \"\",\n\t    data: _.values(attrs) };\n\t}\n\n\tfunction _createKeyframes(name) {\n\t  return { name: name, keyframes: [] };\n\t}\n\n\tfunction _attrs(el) {\n\t  return _(el.attributes).map(function (n) {\n\t    return [n.name.toLowerCase(), n.value];\n\t  }).object().value();\n\t}\n\n\texports[\"default\"] = Animation;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 273:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\tvar debug = _interopRequire(__webpack_require__(124));\n\n\tvar log = debug(\"scintillator:compiler\");\n\n\tvar $ = _interopRequire(__webpack_require__(31));\n\n\tvar SkinRootNode = _interopRequire(__webpack_require__(279));\n\n\tvar SpriteNode = _interopRequire(__webpack_require__(280));\n\n\tvar GroupNode = _interopRequire(__webpack_require__(276));\n\n\tvar ObjectNode = _interopRequire(__webpack_require__(278));\n\n\tvar TextNode = _interopRequire(__webpack_require__(281));\n\n\tvar IfNode = _interopRequire(__webpack_require__(277));\n\n\tvar NODES = {\n\t  skin: SkinRootNode,\n\t  sprite: SpriteNode,\n\t  group: GroupNode,\n\t  object: ObjectNode,\n\t  text: TextNode,\n\t  \"if\": IfNode };\n\n\t/**\n\t * A Compiler compiles the $xml theme file into SkinNode.\n\t */\n\n\tvar Compiler = (function () {\n\t  function Compiler(env) {\n\t    _classCallCheck(this, Compiler);\n\n\t    Object.assign(this, env);\n\t    this._defs = new Map();\n\t  }\n\n\t  _createClass(Compiler, {\n\t    compile: {\n\t      value: function compile($el) {\n\t        var nodeName = $el[0].nodeName;\n\t        log(\"compiling\", $el[0]);\n\t        var Node = Compiler.getNodeClass(nodeName);\n\t        if (!Node) throw new Error(\"Invalid node name: \" + nodeName);\n\t        return Node.compile(this, $el);\n\t      }\n\t    },\n\t    compileChildren: {\n\t      value: function compileChildren($el) {\n\t        var output = [];\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\n\t        try {\n\t          for (var _iterator = Array.from($el.children())[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var child = _step.value;\n\n\t            var nodeName = child.nodeName;\n\t            if (nodeName === \"defs\") {\n\t              this.compileDefs($(child));\n\t            } else if (nodeName === \"use\") {\n\t              output.push(this.getDef(child.getAttribute(\"def\")));\n\t            } else {\n\t              var _Node = Compiler.getNodeClass(nodeName);\n\t              if (_Node) output.push(this.compile($(child)));\n\t            }\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError = true;\n\t          _iteratorError = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t              _iterator[\"return\"]();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError) {\n\t              throw _iteratorError;\n\t            }\n\t          }\n\t        }\n\n\t        return output;\n\t      }\n\t    },\n\t    compileDefs: {\n\t      value: function compileDefs($el) {\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\n\t        try {\n\t          for (var _iterator = Array.from($el.children())[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var child = _step.value;\n\n\t            var id = child.getAttribute(\"id\");\n\t            if (!id) throw new Error(\"A def should have an id: \" + child.nodeName);\n\t            this._defs.set(id, this.compile($(child)));\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError = true;\n\t          _iteratorError = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t              _iterator[\"return\"]();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError) {\n\t              throw _iteratorError;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    },\n\t    getDef: {\n\t      value: function getDef(id) {\n\t        var node = this._defs.get(id);\n\t        if (!node) throw new Error(\"Cannot find def: \" + id);\n\t        return node;\n\t      }\n\t    }\n\t  }, {\n\t    getNodeClass: {\n\t      value: function getNodeClass(nodeName) {\n\t        return NODES[nodeName];\n\t      }\n\t    }\n\t  });\n\n\t  return Compiler;\n\t})();\n\n\tmodule.exports = Compiler;\n\n/***/ },\n\n/***/ 274:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\tvar PIXI = _interopRequire(__webpack_require__(18));\n\n\tfunction createRenderer(w, h) {\n\t  if (navigator.userAgent.match(/Gecko\\//)) {\n\t    return new PIXI.autoDetectRenderer(w, h);\n\t  } else {\n\t    return new PIXI.CanvasRenderer(w, h);\n\t  }\n\t}\n\n\tvar Context = exports.Context = (function () {\n\t  function Context(skin) {\n\t    _classCallCheck(this, Context);\n\n\t    this.refs = {};\n\t    this._skin = skin;\n\t    this._instance = skin.instantiate(this);\n\t    this._renderer = createRenderer(skin.width, skin.height);\n\t    this.stage = this._instance.object;\n\t    this.view = this._renderer.view;\n\t    this._setupInteractivity();\n\t  }\n\n\t  _createClass(Context, {\n\t    render: {\n\t      value: function render(data) {\n\t        this._instance.push(data);\n\t        this._renderer.render(this.stage);\n\t      }\n\t    },\n\t    destroy: {\n\t      value: function destroy() {\n\t        this._instance.destroy();\n\t        this._instance = null;\n\t        this._teardownInteractivity();\n\t      }\n\t    },\n\t    input: {\n\t      get: function () {\n\t        return this._input.get();\n\t      }\n\t    },\n\t    ref: {\n\t      value: function ref(key, object) {\n\t        var set = this.refs[key] || (this.refs[key] = new Set());\n\t        set.add(object);\n\t      }\n\t    },\n\t    unref: {\n\t      value: function unref(key, object) {\n\t        var set = this.refs[key];\n\t        if (!set) {\n\t          return;\n\t        }set[\"delete\"](object);\n\t      }\n\t    },\n\t    _setupInteractivity: {\n\t      value: function _setupInteractivity() {\n\t        var _this = this;\n\n\t        var mouse = null;\n\t        var touches = [];\n\t        var onMouse = function (e) {\n\t          mouse = e;\n\t        };\n\t        var onUpdateMouse = function (e) {\n\t          mouse = mouse && e;\n\t        };\n\t        var onNoMouse = function () {\n\t          mouse = null;\n\t        };\n\t        var onTouch = function (e) {\n\t          touches = [].slice.call(e.touches);\n\t        };\n\t        var view = this.view;\n\t        var width = this._skin.width;\n\t        var height = this._skin.height;\n\t        view.addEventListener(\"mousedown\", onMouse, false);\n\t        view.addEventListener(\"mousemove\", onUpdateMouse, false);\n\t        view.addEventListener(\"mouseup\", onNoMouse, false);\n\t        view.addEventListener(\"touchstart\", onTouch, false);\n\t        view.addEventListener(\"touchmove\", onTouch, false);\n\t        view.addEventListener(\"touchend\", onTouch, false);\n\t        this._teardownInteractivity = function () {\n\t          view.removeEventListener(\"mousedown\", onMouse, false);\n\t          view.removeEventListener(\"mousemove\", onUpdateMouse, false);\n\t          view.removeEventListener(\"mouseup\", onNoMouse, false);\n\t          view.removeEventListener(\"touchstart\", onTouch, false);\n\t          view.removeEventListener(\"touchmove\", onTouch, false);\n\t          view.removeEventListener(\"touchend\", onTouch, false);\n\t        };\n\t        this._input = {\n\t          get: function () {\n\t            var output = [];\n\t            var rect = _this.view.getBoundingClientRect();\n\t            if (mouse) {\n\t              output.push(point(\"mouse\", mouse, rect));\n\t            }\n\t            for (var i = 0; i < touches.length; i++) {\n\t              var touch = touches[i];\n\t              output.push(point(\"touch\" + touch.identifier, touch, rect));\n\t            }\n\t            return output;\n\t          }\n\t        };\n\t        function point(id, p, rect) {\n\t          return {\n\t            x: (p.clientX - rect.left) / rect.width * width,\n\t            y: (p.clientY - rect.top) / rect.height * height,\n\t            id: id };\n\t        }\n\t      }\n\t    }\n\t  });\n\n\t  return Context;\n\t})();\n\n\texports[\"default\"] = Context;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 275:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; };\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\texports.load = load;\n\n\tvar debug = _interopRequire(__webpack_require__(124));\n\n\tvar log = debug(\"scintillator:loader\");\n\n\tvar $ = _interopRequire(__webpack_require__(31));\n\n\tvar url = _interopRequire(__webpack_require__(86));\n\n\tvar co = _interopRequire(__webpack_require__(30));\n\n\tvar PIXI = _interopRequire(__webpack_require__(18));\n\n\tvar ProgressUtils = _interopRequireWildcard(__webpack_require__(83));\n\n\tvar Resources = _interopRequire(__webpack_require__(282));\n\n\tvar Compiler = _interopRequire(__webpack_require__(273));\n\n\tfunction load(xmlPath, progress) {\n\t  return co(regeneratorRuntime.mark(function callee$1$0() {\n\t    var $xml, resources, paths, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, element, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, path, assetUrl, onload, skin;\n\n\t    return regeneratorRuntime.wrap(function callee$1$0$(context$2$0) {\n\t      while (1) switch (context$2$0.prev = context$2$0.next) {\n\t        case 0:\n\n\t          log(\"load XML from %s\", xmlPath);\n\t          context$2$0.next = 3;\n\t          return loadXml(xmlPath);\n\n\t        case 3:\n\t          $xml = context$2$0.sent;\n\t          resources = new Resources();\n\t          paths = new Set();\n\t          _iteratorNormalCompletion = true;\n\t          _didIteratorError = false;\n\t          _iteratorError = undefined;\n\t          context$2$0.prev = 9;\n\n\t          for (_iterator = Array.from($xml.find(\"[image]\"))[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            element = _step.value;\n\n\t            paths.add($(element).attr(\"image\"));\n\t          }\n\t          context$2$0.next = 17;\n\t          break;\n\n\t        case 13:\n\t          context$2$0.prev = 13;\n\t          context$2$0.t7 = context$2$0[\"catch\"](9);\n\t          _didIteratorError = true;\n\t          _iteratorError = context$2$0.t7;\n\n\t        case 17:\n\t          context$2$0.prev = 17;\n\t          context$2$0.prev = 18;\n\n\t          if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t            _iterator[\"return\"]();\n\t          }\n\n\t        case 20:\n\t          context$2$0.prev = 20;\n\n\t          if (!_didIteratorError) {\n\t            context$2$0.next = 23;\n\t            break;\n\t          }\n\n\t          throw _iteratorError;\n\n\t        case 23:\n\t          return context$2$0.finish(20);\n\n\t        case 24:\n\t          return context$2$0.finish(17);\n\n\t        case 25:\n\t          _iteratorNormalCompletion2 = true;\n\t          _didIteratorError2 = false;\n\t          _iteratorError2 = undefined;\n\t          context$2$0.prev = 28;\n\t          for (_iterator2 = Array.from($xml.find(\"[font-src]\"))[Symbol.iterator](); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            element = _step2.value;\n\n\t            paths.add($(element).attr(\"font-src\"));\n\t          }\n\t          context$2$0.next = 36;\n\t          break;\n\n\t        case 32:\n\t          context$2$0.prev = 32;\n\t          context$2$0.t8 = context$2$0[\"catch\"](28);\n\t          _didIteratorError2 = true;\n\t          _iteratorError2 = context$2$0.t8;\n\n\t        case 36:\n\t          context$2$0.prev = 36;\n\t          context$2$0.prev = 37;\n\n\t          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"]) {\n\t            _iterator2[\"return\"]();\n\t          }\n\n\t        case 39:\n\t          context$2$0.prev = 39;\n\n\t          if (!_didIteratorError2) {\n\t            context$2$0.next = 42;\n\t            break;\n\t          }\n\n\t          throw _iteratorError2;\n\n\t        case 42:\n\t          return context$2$0.finish(39);\n\n\t        case 43:\n\t          return context$2$0.finish(36);\n\n\t        case 44:\n\t          _iteratorNormalCompletion3 = true;\n\t          _didIteratorError3 = false;\n\t          _iteratorError3 = undefined;\n\t          context$2$0.prev = 47;\n\t          for (_iterator3 = paths[Symbol.iterator](); !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t            path = _step3.value;\n\t            assetUrl = url.resolve(xmlPath, path);\n\n\t            resources.add(path, assetUrl);\n\t          }\n\n\t          context$2$0.next = 55;\n\t          break;\n\n\t        case 51:\n\t          context$2$0.prev = 51;\n\t          context$2$0.t9 = context$2$0[\"catch\"](47);\n\t          _didIteratorError3 = true;\n\t          _iteratorError3 = context$2$0.t9;\n\n\t        case 55:\n\t          context$2$0.prev = 55;\n\t          context$2$0.prev = 56;\n\n\t          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"]) {\n\t            _iterator3[\"return\"]();\n\t          }\n\n\t        case 58:\n\t          context$2$0.prev = 58;\n\n\t          if (!_didIteratorError3) {\n\t            context$2$0.next = 61;\n\t            break;\n\t          }\n\n\t          throw _iteratorError3;\n\n\t        case 61:\n\t          return context$2$0.finish(58);\n\n\t        case 62:\n\t          return context$2$0.finish(55);\n\n\t        case 63:\n\t          onload = ProgressUtils.fixed(1 + paths.size, progress);\n\n\t          onload();\n\t          context$2$0.next = 67;\n\t          return loadResources(resources, onload);\n\n\t        case 67:\n\n\t          // compile the skin\n\t          log(\"compiling\");\n\t          skin = new Compiler({ resources: resources }).compile($xml);\n\t          return context$2$0.abrupt(\"return\", skin);\n\n\t        case 70:\n\t        case \"end\":\n\t          return context$2$0.stop();\n\t      }\n\t    }, callee$1$0, this, [[9, 13, 17, 25], [18,, 20, 24], [28, 32, 36, 44], [37,, 39, 43], [47, 51, 55, 63], [56,, 58, 62]]);\n\t  }));\n\t}\n\n\tfunction loadXml(xmlUrl) {\n\t  return Promise.resolve($.ajax({ url: xmlUrl, dataType: \"xml\" })).then(function (xml) {\n\t    return $(xml.documentElement);\n\t  });\n\t}\n\n\tfunction loadResources(resources, onprogress) {\n\t  log(\"loading resources\");\n\t  return new Promise(function (resolve) {\n\t    if (resources.urls.length === 0) return resolve();\n\t    var loader = new PIXI.AssetLoader(resources.urls);\n\t    loader.on(\"onComplete\", function () {\n\t      log(\"resources finished loading\");\n\t      resolve();\n\t    });\n\t    if (onprogress) loader.on(\"onProgress\", onprogress);\n\t    loader.load();\n\t  });\n\t}\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\t// scan all images\n\t// load all images + progress reporting\n\n/***/ },\n\n/***/ 276:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\tvar PIXI = _interopRequire(__webpack_require__(18));\n\n\tvar SkinNode = _interopRequire(__webpack_require__(32));\n\n\tvar Instance = _interopRequire(__webpack_require__(33));\n\n\tvar DisplayObject = _interopRequire(__webpack_require__(89));\n\n\tvar parseFrame = __webpack_require__(131).parseFrame;\n\n\tvar Mask = exports.Mask = (function () {\n\t  function Mask(frame) {\n\t    _classCallCheck(this, Mask);\n\n\t    this._frame = frame;\n\t  }\n\n\t  _createClass(Mask, {\n\t    instantiate: {\n\t      value: function instantiate(context, subject) {\n\t        var mask = new PIXI.Graphics();\n\t        mask.beginFill();\n\t        mask.drawShape(this._frame);\n\t        mask.endFill();\n\t        subject.object.mask = mask;\n\t        return new Instance({\n\t          context: context,\n\t          object: mask,\n\t          parent: subject.object });\n\t      }\n\t    }\n\t  });\n\n\t  return Mask;\n\t})();\n\n\tvar GroupNode = exports.GroupNode = (function (_SkinNode) {\n\t  function GroupNode() {\n\t    _classCallCheck(this, GroupNode);\n\n\t    if (_SkinNode != null) {\n\t      _SkinNode.apply(this, arguments);\n\t    }\n\t  }\n\n\t  _inherits(GroupNode, _SkinNode);\n\n\t  _createClass(GroupNode, {\n\t    compile: {\n\t      value: function compile(compiler, $el) {\n\t        this.children = compiler.compileChildren($el);\n\t        this.display = DisplayObject.compile(compiler, $el);\n\t        var maskFrame = parseFrame($el.attr(\"mask\") || \"\");\n\t        if (maskFrame) this.mask = new Mask(maskFrame);\n\t      }\n\t    },\n\t    instantiate: {\n\t      value: function instantiate(context, container) {\n\t        var object = new PIXI.DisplayObjectContainer();\n\t        var concerns = [this.display];\n\t        if (this.mask) {\n\t          concerns.push(this.mask);\n\t        }\n\t        return new Instance({\n\t          context: context,\n\t          object: object,\n\t          parent: container,\n\t          concerns: concerns,\n\t          children: this.children });\n\t      }\n\t    }\n\t  });\n\n\t  return GroupNode;\n\t})(SkinNode);\n\n\texports[\"default\"] = GroupNode;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 277:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\tvar PIXI = _interopRequire(__webpack_require__(18));\n\n\tvar SkinNode = _interopRequire(__webpack_require__(32));\n\n\tvar Instance = _interopRequire(__webpack_require__(33));\n\n\tvar Expression = _interopRequire(__webpack_require__(55));\n\n\tvar IfNode = exports.IfNode = (function (_SkinNode) {\n\t  function IfNode() {\n\t    _classCallCheck(this, IfNode);\n\n\t    if (_SkinNode != null) {\n\t      _SkinNode.apply(this, arguments);\n\t    }\n\t  }\n\n\t  _inherits(IfNode, _SkinNode);\n\n\t  _createClass(IfNode, {\n\t    compile: {\n\t      value: function compile(compiler, $el) {\n\t        var children = compiler.compileChildren($el);\n\t        if (children.length !== 1) {\n\t          throw new Error(\"Expected exactly 1 children, \" + children.length + \" found\");\n\t        }\n\t        this.child = children[0];\n\t        this.key = new Expression($el.attr(\"key\"));\n\t        this.value = String($el.attr(\"value\"));\n\t      }\n\t    },\n\t    instantiate: {\n\t      value: function instantiate(context, container) {\n\t        var object = new PIXI.DisplayObjectContainer();\n\t        var expr = this.key;\n\t        var value = this.value;\n\t        var childNode = this.child;\n\t        var child = null;\n\t        return new Instance({\n\t          context: context,\n\t          parent: container,\n\t          object: object,\n\t          onData: function (data) {\n\t            if (String(expr(data)) === value) {\n\t              if (child === null) {\n\t                child = childNode.instantiate(context, object);\n\t              }\n\t              child.push(data);\n\t            } else {\n\t              if (child !== null) {\n\t                child.destroy();\n\t                child = null;\n\t              }\n\t            }\n\t          } });\n\t      }\n\t    }\n\t  });\n\n\t  return IfNode;\n\t})(SkinNode);\n\n\texports[\"default\"] = IfNode;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 278:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\tvar PIXI = _interopRequire(__webpack_require__(18));\n\n\tvar SkinNode = _interopRequire(__webpack_require__(32));\n\n\tvar Instance = _interopRequire(__webpack_require__(33));\n\n\tvar Expression = _interopRequire(__webpack_require__(55));\n\n\tfunction ChildManager(expr, child, poolSize) {\n\t  return {\n\t    instantiate: function instantiate(context, subject) {\n\t      var instances = new Map();\n\t      var pool = [];\n\t      initPool();\n\t      return new Instance({\n\t        context: context,\n\t        onData: function (data) {\n\t          update(expr(data));\n\t        } });\n\t      function initPool() {\n\t        var instance;\n\t        console.log(\"init i\" + poolSize);\n\t        for (var i = 0; i < poolSize; i++) {\n\t          instance = child.instantiate(context, subject.object);\n\t          instance.detach();\n\t          pool.push(instance);\n\t        }\n\t      }\n\t      function update(array) {\n\t        var unused = new Set(instances.keys());\n\t        var key;\n\t        var item;\n\t        var instance;\n\t        if (!array) array = [];\n\t        for (var i = 0; i < array.length; i++) {\n\t          item = array[i];\n\t          key = item.key;\n\t          if (instances.has(key)) {\n\t            instance = instances.get(key);\n\t          } else {\n\t            instance = createInstance();\n\t            instances.set(key, instance);\n\t          }\n\t          instance.push(item);\n\t          unused[\"delete\"](key);\n\t        }\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\n\t        try {\n\t          for (var _iterator = unused[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            key = _step.value;\n\n\t            instance = instances.get(key);\n\t            instance.detach();\n\t            instances[\"delete\"](key);\n\t            pool.push(instance);\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError = true;\n\t          _iteratorError = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t              _iterator[\"return\"]();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError) {\n\t              throw _iteratorError;\n\t            }\n\t          }\n\t        }\n\t      }\n\t      function createInstance() {\n\t        var instance = pool.pop();\n\t        if (instance) {\n\t          instance.attachTo(subject.object);\n\t        } else {\n\t          instance = child.instantiate(context, subject.object);\n\t        }\n\t        return instance;\n\t      }\n\t    }\n\t  };\n\t}\n\n\tvar ObjectNode = exports.ObjectNode = (function (_SkinNode) {\n\t  function ObjectNode() {\n\t    _classCallCheck(this, ObjectNode);\n\n\t    if (_SkinNode != null) {\n\t      _SkinNode.apply(this, arguments);\n\t    }\n\t  }\n\n\t  _inherits(ObjectNode, _SkinNode);\n\n\t  _createClass(ObjectNode, {\n\t    compile: {\n\t      value: function compile(compiler, $el) {\n\t        this.children = compiler.compileChildren($el);\n\t        if (this.children.length !== 1) {\n\t          throw new Error(\"Expected exactly 1 children, \" + this.children.length + \" given\");\n\t        }\n\t        this.pool = +$el.attr(\"pool\") || 1;\n\t        this.key = new Expression($el.attr(\"key\"));\n\t      }\n\t    },\n\t    instantiate: {\n\t      value: function instantiate(context, container) {\n\t        var batch = new PIXI.SpriteBatch();\n\t        var manager = new ChildManager(this.key, this.children[0], this.pool);\n\t        return new Instance({\n\t          context: context,\n\t          parent: container,\n\t          object: batch,\n\t          concerns: [manager] });\n\t      }\n\t    }\n\t  });\n\n\t  return ObjectNode;\n\t})(SkinNode);\n\n\texports[\"default\"] = ObjectNode;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 279:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\tvar PIXI = _interopRequire(__webpack_require__(18));\n\n\tvar SkinNode = _interopRequire(__webpack_require__(32));\n\n\tvar Instance = _interopRequire(__webpack_require__(33));\n\n\tvar SkinRootNode = exports.SkinRootNode = (function (_SkinNode) {\n\t  function SkinRootNode() {\n\t    _classCallCheck(this, SkinRootNode);\n\n\t    if (_SkinNode != null) {\n\t      _SkinNode.apply(this, arguments);\n\t    }\n\t  }\n\n\t  _inherits(SkinRootNode, _SkinNode);\n\n\t  _createClass(SkinRootNode, {\n\t    compile: {\n\t      value: function compile(compiler, $el) {\n\t        this.children = compiler.compileChildren($el);\n\t        this.width = +$el.attr(\"width\");\n\t        this.height = +$el.attr(\"height\");\n\t      }\n\t    },\n\t    instantiate: {\n\t      value: function instantiate(context) {\n\t        var stage = new PIXI.Stage(591879);\n\t        return new Instance({\n\t          context: context,\n\t          object: stage,\n\t          children: this.children });\n\t      }\n\t    }\n\t  });\n\n\t  return SkinRootNode;\n\t})(SkinNode);\n\n\texports[\"default\"] = SkinRootNode;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 280:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\tvar PIXI = _interopRequire(__webpack_require__(18));\n\n\tvar SkinNode = _interopRequire(__webpack_require__(32));\n\n\tvar Instance = _interopRequire(__webpack_require__(33));\n\n\tvar parseFrame = __webpack_require__(131).parseFrame;\n\n\tvar DisplayObject = _interopRequire(__webpack_require__(89));\n\n\tvar SpriteNode = exports.SpriteNode = (function (_SkinNode) {\n\t  function SpriteNode() {\n\t    _classCallCheck(this, SpriteNode);\n\n\t    if (_SkinNode != null) {\n\t      _SkinNode.apply(this, arguments);\n\t    }\n\t  }\n\n\t  _inherits(SpriteNode, _SkinNode);\n\n\t  _createClass(SpriteNode, {\n\t    compile: {\n\t      value: function compile(compiler, $el) {\n\t        this.url = compiler.resources.get($el.attr(\"image\"));\n\t        this.display = DisplayObject.compile(compiler, $el);\n\t        this.frame = parseFrame($el.attr(\"frame\") || \"\");\n\t      }\n\t    },\n\t    instantiate: {\n\t      value: function instantiate(context, container) {\n\t        var sprite = new PIXI.Sprite(this.getTexture());\n\t        return new Instance({\n\t          context: context,\n\t          object: sprite,\n\t          parent: container,\n\t          concerns: [this.display] });\n\t      }\n\t    },\n\t    getTexture: {\n\t      value: function getTexture() {\n\t        if (this._texture) {\n\t          return this._texture;\n\t        }var scaleMode = PIXI.scaleModes.NEAREST;\n\t        var base = PIXI.BaseTexture.fromImage(this.url, undefined, scaleMode);\n\t        var texture = new PIXI.Texture(base, this.frame);\n\t        this._texture = texture;\n\t        return texture;\n\t      }\n\t    }\n\t  });\n\n\t  return SpriteNode;\n\t})(SkinNode);\n\n\texports[\"default\"] = SpriteNode;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 281:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\tvar PIXI = _interopRequire(__webpack_require__(18));\n\n\tvar SkinNode = _interopRequire(__webpack_require__(32));\n\n\tvar Instance = _interopRequire(__webpack_require__(33));\n\n\tvar DisplayObject = _interopRequire(__webpack_require__(89));\n\n\tvar Expression = _interopRequire(__webpack_require__(55));\n\n\tvar TextNode = exports.TextNode = (function (_SkinNode) {\n\t  function TextNode() {\n\t    _classCallCheck(this, TextNode);\n\n\t    if (_SkinNode != null) {\n\t      _SkinNode.apply(this, arguments);\n\t    }\n\t  }\n\n\t  _inherits(TextNode, _SkinNode);\n\n\t  _createClass(TextNode, {\n\t    compile: {\n\t      value: function compile(compiler, $el) {\n\t        this.font = $el.attr(\"font\");\n\t        this.text = $el.attr(\"text\");\n\t        this.data = new Expression($el.attr(\"data\") || \"0\");\n\t        this.display = DisplayObject.compile(compiler, $el);\n\t        this.align = $el.attr(\"align\") === \"center\" ? 0.5 : 0;\n\t      }\n\t    },\n\t    instantiate: {\n\t      value: function instantiate(context, container) {\n\t        var _this = this;\n\n\t        var text = new PIXI.BitmapText(this.text, { font: this.font });\n\t        var object = new PIXI.DisplayObjectContainer();\n\t        object.addChild(text);\n\t        return new Instance({\n\t          context: context,\n\t          parent: container,\n\t          object: object,\n\t          concerns: [this.display],\n\t          bindings: [[this.data, function (v) {\n\t            text.setText(_this.text.replace(\"%s\", v));\n\t            text.x = text.width * -_this.align;\n\t          }]] });\n\t      }\n\t    }\n\t  });\n\n\t  return TextNode;\n\t})(SkinNode);\n\n\texports[\"default\"] = TextNode;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 282:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\tvar _ = _interopRequire(__webpack_require__(12));\n\n\t/**\n\t * The resources class contains a mapping from an image \"src\" to the resolved\n\t * image \"url.\"\n\t */\n\n\tvar Resources = exports.Resources = (function () {\n\t  function Resources() {\n\t    _classCallCheck(this, Resources);\n\n\t    this._map = {};\n\t  }\n\n\t  _createClass(Resources, {\n\t    add: {\n\t      value: function add(src, url) {\n\t        this._map[src] = url;\n\t      }\n\t    },\n\t    get: {\n\t      value: function get(src) {\n\t        if (!(src in this._map)) throw new Error(\"Not registered: \" + src);\n\t        return this._map[src];\n\t      }\n\t    },\n\t    urls: {\n\t      get: function () {\n\t        return _.values(this._map);\n\t      }\n\t    }\n\t  });\n\n\t  return Resources;\n\t})();\n\n\texports[\"default\"] = Resources;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 295:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar lerp = __webpack_require__(134)\n\tvar Property = __webpack_require__(334)\n\n\tfunction indexOfName(list, name) {\n\t\tfor (var i=0; i<list.length; i++)\n\t\t\tif (list[i].name === name)\n\t\t\t\treturn i\n\t\treturn -1\n\t}\n\n\tfunction TimelineBase(data) {\n\t\tif (!(this instanceof TimelineBase))\n\t\t\treturn new TimelineBase(data)\n\t\t\n\t\tthis.properties = []\n\n\t\tif (data)\n\t\t\tthis.load(data)\n\t}\n\n\tTimelineBase.prototype.dispose = function() {\n\t\tthis.properties.forEach(function(p) {\n\t\t\tp.dispose()\n\t\t})\n\t\tthis.properties.length = 0 \n\t}\n\n\tTimelineBase.prototype.addProperty = function(propData) {\n\t\tthis.properties.push(new Property(propData))\n\t}\n\n\t//Finds the max duration of all properties\n\tTimelineBase.prototype.duration = function() {\n\t\tvar maxTime = 0\n\t\tfor (var j=0; j<this.properties.length; j++) {\n\t\t\tvar prop = this.properties[j]\n\t\t\tvar frames = prop.keyframes.frames\n\t\t\tfor (var i=0; i<frames.length; i++) \n\t\t\t\tmaxTime = Math.max(frames[i].time, maxTime)\n\t\t}\n\t\treturn maxTime\n\t}\n\n\t//Returns the first control by the specified name or index\n\tTimelineBase.prototype.property = function(prop) {\n\t\tvar idx = typeof prop === 'number' ? prop : indexOfName(this.properties, prop)\n\t\treturn idx<0 ? undefined : this.properties[idx]\n\t}\n\n\t//Loads timeline animation data\n\tTimelineBase.prototype.load = function(data) {\n\t\tthis.dispose()\n\n\t\tif (!data)\n\t\t\treturn\n\n\t\tthis.properties = data.map(function(d) {\n\t\t\treturn new Property(d)\n\t\t})\n\t}\n\n\tTimelineBase.prototype.export = function() {\n\t\treturn this.properties.map(function(p) {\n\t\t\treturn p.export()\n\t\t})\n\t}\n\n\t//Eases the time; by default only linear ease is supported (entry point exposes others)\n\tTimelineBase.prototype.ease = function(name, t) {\n\t\treturn t\n\t}\n\n\t//Interpolate between two frames; subclasses can override to provide custom \n\t//interpolators (e.g. quaternions, paths, etc)\n\tTimelineBase.prototype.interpolate = function(property, frame1, frame2, t) {\n\t\treturn lerp(frame1.value, frame2.value, t)\n\t}\n\n\t//Determine the value at the given time stamp of the specified property\n\tTimelineBase.prototype.valueOf = function(time, property) {\n\t\tvar keys = property.keyframes,\n\t\t\tv = keys.interpolation(time),\n\t\t\tv0 = v[0],\n\t\t\tv1 = v[1],\n\t\t\tt = v[2]\n\n\t\t//return default value of property\n\t\tif (v0 === -1 || v1 === -1)\n\t\t\treturn property.value\n\n\t\tvar start = keys.frames[v0],\n\t\t\tend = keys.frames[v1]\n\n\t\t//frames match, return the first\n\t\tif (v0 === v1)\n\t\t\treturn start.value\n\n\t\t//ease and interpolate frames\n\t\telse {\n\t\t\tvar easeName = end.ease\n\t\t\tif (easeName) //remap time with easing equation\n\t\t\t\tt = this.ease(easeName, t)\n\t\t\treturn this.interpolate(property, start, end, t)\n\t\t}\n\t}\n\n\t//Convenience to get the values of all properties at a given time stamp\n\tTimelineBase.prototype.values = function(time, out) {\n\t\tif (!out)\n\t\t\tout = {}\n\t\tfor (var i=0; i<this.properties.length; i++) {\n\t\t\tvar prop = this.properties[i]\n\t\t\tout[prop.name] = this.valueOf(time, prop)\n\t\t}\n\t\treturn out\n\t}\n\n\tmodule.exports = TimelineBase\n\n/***/ },\n\n/***/ 296:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar eases = __webpack_require__(314)\n\tvar inherits = __webpack_require__(328)\n\tvar Base = __webpack_require__(295)\n\n\tfunction BasicTimeline(data) {\n\t\tif (!(this instanceof BasicTimeline))\n\t\t\treturn new BasicTimeline(data)\n\t\tBase.call(this, data)\n\t}\n\n\tinherits(BasicTimeline, Base)\n\n\tBasicTimeline.prototype.ease = function(name, t) {\n\t\treturn eases[name](t)\n\t}\n\n\tmodule.exports = BasicTimeline\n\n/***/ },\n\n/***/ 297:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction backInOut(t) {\n\t  var s = 1.70158 * 1.525\n\t  if ((t *= 2) < 1)\n\t    return 0.5 * (t * t * ((s + 1) * t - s))\n\t  return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2)\n\t}\n\n\tmodule.exports = backInOut\n\n/***/ },\n\n/***/ 298:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction backIn(t) {\n\t  var s = 1.70158\n\t  return t * t * ((s + 1) * t - s)\n\t}\n\n\tmodule.exports = backIn\n\n/***/ },\n\n/***/ 299:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction backOut(t) {\n\t  var s = 1.70158\n\t  return --t * t * ((s + 1) * t + s) + 1\n\t}\n\n\tmodule.exports = backOut\n\n/***/ },\n\n/***/ 300:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar bounceOut = __webpack_require__(93)\n\n\tfunction bounceInOut(t) {\n\t  return t < 0.5\n\t    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n\t    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5\n\t}\n\n\tmodule.exports = bounceInOut\n\n/***/ },\n\n/***/ 301:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar bounceOut = __webpack_require__(93)\n\n\tfunction bounceIn(t) {\n\t  return 1.0 - bounceOut(1.0 - t)\n\t}\n\n\tmodule.exports = bounceIn\n\n/***/ },\n\n/***/ 302:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction circInOut(t) {\n\t  if ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1)\n\t  return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1)\n\t}\n\n\tmodule.exports = circInOut\n\n/***/ },\n\n/***/ 303:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction circIn(t) {\n\t  return 1.0 - Math.sqrt(1.0 - t * t)\n\t}\n\n\tmodule.exports = circIn\n\n/***/ },\n\n/***/ 304:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction circOut(t) {\n\t  return Math.sqrt(1 - ( --t * t ))\n\t}\n\n\tmodule.exports = circOut\n\n/***/ },\n\n/***/ 305:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction cubicInOut(t) {\n\t  return t < 0.5\n\t    ? 4.0 * t * t * t\n\t    : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0\n\t}\n\n\tmodule.exports = cubicInOut\n\n/***/ },\n\n/***/ 306:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction cubicIn(t) {\n\t  return t * t * t\n\t}\n\n\tmodule.exports = cubicIn\n\n/***/ },\n\n/***/ 307:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction cubicOut(t) {\n\t  var f = t - 1.0\n\t  return f * f * f + 1.0\n\t}\n\n\tmodule.exports = cubicOut\n\n/***/ },\n\n/***/ 308:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction elasticInOut(t) {\n\t  return t < 0.5\n\t    ? 0.5 * Math.sin(+13.0 * Math.PI/2 * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n\t    : 0.5 * Math.sin(-13.0 * Math.PI/2 * ((2.0 * t - 1.0) + 1.0)) * Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) + 1.0\n\t}\n\n\tmodule.exports = elasticInOut\n\n/***/ },\n\n/***/ 309:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction elasticIn(t) {\n\t  return Math.sin(13.0 * t * Math.PI/2) * Math.pow(2.0, 10.0 * (t - 1.0))\n\t}\n\n\tmodule.exports = elasticIn\n\n/***/ },\n\n/***/ 310:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction elasticOut(t) {\n\t  return Math.sin(-13.0 * (t + 1.0) * Math.PI/2) * Math.pow(2.0, -10.0 * t) + 1.0\n\t}\n\n\tmodule.exports = elasticOut\n\n/***/ },\n\n/***/ 311:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction expoInOut(t) {\n\t  return (t === 0.0 || t === 1.0)\n\t    ? t\n\t    : t < 0.5\n\t      ? +0.5 * Math.pow(2.0, (20.0 * t) - 10.0)\n\t      : -0.5 * Math.pow(2.0, 10.0 - (t * 20.0)) + 1.0\n\t}\n\n\tmodule.exports = expoInOut\n\n/***/ },\n\n/***/ 312:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction expoIn(t) {\n\t  return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0))\n\t}\n\n\tmodule.exports = expoIn\n\n/***/ },\n\n/***/ 313:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction expoOut(t) {\n\t  return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t)\n\t}\n\n\tmodule.exports = expoOut\n\n/***/ },\n\n/***/ 314:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t\t'backInOut': __webpack_require__(297),\n\t\t'backIn': __webpack_require__(298),\n\t\t'backOut': __webpack_require__(299),\n\t\t'bounceInOut': __webpack_require__(300),\n\t\t'bounceIn': __webpack_require__(301),\n\t\t'bounceOut': __webpack_require__(93),\n\t\t'circInOut': __webpack_require__(302),\n\t\t'circIn': __webpack_require__(303),\n\t\t'circOut': __webpack_require__(304),\n\t\t'cubicInOut': __webpack_require__(305),\n\t\t'cubicIn': __webpack_require__(306),\n\t\t'cubicOut': __webpack_require__(307),\n\t\t'elasticInOut': __webpack_require__(308),\n\t\t'elasticIn': __webpack_require__(309),\n\t\t'elasticOut': __webpack_require__(310),\n\t\t'expoInOut': __webpack_require__(311),\n\t\t'expoIn': __webpack_require__(312),\n\t\t'expoOut': __webpack_require__(313),\n\t\t'linear': __webpack_require__(315),\n\t\t'quadInOut': __webpack_require__(316),\n\t\t'quadIn': __webpack_require__(317),\n\t\t'quadOut': __webpack_require__(318),\n\t\t'quartInOut': __webpack_require__(319),\n\t\t'quartIn': __webpack_require__(320),\n\t\t'quartOut': __webpack_require__(321),\n\t\t'quintInOut': __webpack_require__(322),\n\t\t'quintIn': __webpack_require__(323),\n\t\t'quintOut': __webpack_require__(324),\n\t\t'sineInOut': __webpack_require__(325),\n\t\t'sineIn': __webpack_require__(326),\n\t\t'sineOut': __webpack_require__(327)\n\t}\n\n/***/ },\n\n/***/ 315:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction linear(t) {\n\t  return t\n\t}\n\n\tmodule.exports = linear\n\n/***/ },\n\n/***/ 316:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction quadInOut(t) {\n\t    t /= 0.5\n\t    if (t < 1) return 0.5*t*t\n\t    t--\n\t    return -0.5 * (t*(t-2) - 1)\n\t}\n\n\tmodule.exports = quadInOut\n\n/***/ },\n\n/***/ 317:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction quadIn(t) {\n\t  return t * t\n\t}\n\n\tmodule.exports = quadIn\n\n/***/ },\n\n/***/ 318:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction quadOut(t) {\n\t  return -t * (t - 2.0)\n\t}\n\n\tmodule.exports = quadOut\n\n/***/ },\n\n/***/ 319:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction quarticInOut(t) {\n\t  return t < 0.5\n\t    ? +8.0 * Math.pow(t, 4.0)\n\t    : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0\n\t}\n\n\tmodule.exports = quarticInOut\n\n/***/ },\n\n/***/ 320:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction quarticIn(t) {\n\t  return Math.pow(t, 4.0)\n\t}\n\n\tmodule.exports = quarticIn\n\n/***/ },\n\n/***/ 321:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction quarticOut(t) {\n\t  return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0\n\t}\n\n\tmodule.exports = quarticOut\n\n/***/ },\n\n/***/ 322:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction qinticInOut(t) {\n\t    if ( ( t *= 2 ) < 1 ) return 0.5 * t * t * t * t * t\n\t    return 0.5 * ( ( t -= 2 ) * t * t * t * t + 2 )\n\t}\n\n\tmodule.exports = qinticInOut\n\n/***/ },\n\n/***/ 323:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction qinticIn(t) {\n\t  return t * t * t * t * t\n\t}\n\n\tmodule.exports = qinticIn\n\n/***/ },\n\n/***/ 324:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction qinticOut(t) {\n\t  return --t * t * t * t * t + 1\n\t}\n\n\tmodule.exports = qinticOut\n\n/***/ },\n\n/***/ 325:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction sineInOut(t) {\n\t  return -0.5 * (Math.cos(Math.PI*t) - 1)\n\t}\n\n\tmodule.exports = sineInOut\n\n/***/ },\n\n/***/ 326:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction sineIn(t) {\n\t  return 1 - Math.cos( t * Math.PI / 2 )\n\t}\n\n\tmodule.exports = sineIn\n\n/***/ },\n\n/***/ 327:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction sineOut(t) {\n\t  return Math.sin(t * Math.PI/2)\n\t}\n\n\tmodule.exports = sineOut\n\n/***/ },\n\n/***/ 328:\n/***/ function(module, exports, __webpack_require__) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 329:\n/***/ function(module, exports, __webpack_require__) {\n\n\t//Generic list of keyframes with timestamps and values\n\n\tvar lerp = __webpack_require__(134)\n\tvar range = __webpack_require__(331)\n\tvar vec3 = __webpack_require__(330)\n\n\tvar temp = [0, 0, 0]\n\n\tfunction sort(a, b) {\n\t    return a.time - b.time\n\t}\n\n\tfunction Keyframes(frames, sorted) {\n\t    if (!(this instanceof Keyframes)) \n\t        return new Keyframes(frames, sorted)\n\t    this.frames = frames||[]\n\t    if (!sorted)\n\t        this.sort()\n\t}\n\n\t//Finds the index of the nearest keyframe to the given time stamp.\n\t//If radius is specified, it will return the nearest only within that radius\n\tKeyframes.prototype.nearestIndex = function(time, radius) {\n\t    radius = typeof radius === 'number' ? radius : Number.MAX_VALUE\n\t    var minDist = Number.MAX_VALUE\n\t    var nearest = -1\n\t    for (var i=0; i<this.frames.length; i++) {\n\t        var dist = Math.abs(this.frames[i].time - time)\n\t        if (dist < minDist && dist <= radius) {\n\t            minDist = dist\n\t            nearest = i\n\t        }\n\t    }\n\t    return nearest\n\t}\n\n\t//Gets the keyframe at the index\n\tKeyframes.prototype.nearest = function(time, radius) {\n\t    var idx = this.nearestIndex(time, radius)\n\t    return idx === -1 ? null : this.frames[idx]\n\t}\n\n\t//Gets the keyframe at time\n\tKeyframes.prototype.get = function(time) {\n\t    return this.nearest(time, 0)\n\t}\n\n\t//Gets the keyframe index at time\n\tKeyframes.prototype.getIndex = function(time) {\n\t    return this.nearestIndex(time, 0)\n\t}\n\n\t//lerps the value at the specified time stamp\n\t//returns null if no keyframes exist\n\tKeyframes.prototype.value = function(time, ease) {\n\t    var v = this.interpolation(time)\n\t    if (v[0] === -1 || v[1] === -1)\n\t        return null\n\n\t    var startFrame = this.frames[ v[0] ]\n\t    var endFrame = this.frames[ v[1] ]\n\t    var t = v[2]\n\t    \n\t    //We ease from left keyframe to right, with a custom easing\n\t    //equation if specified\n\t    if (typeof ease === 'function')\n\t        return ease(startFrame, endFrame, t)\n\n\t    //Otherwise we assume the values are simple numbers and lerp them\n\t    return lerp(startFrame.value, endFrame.value, t)\n\t}\n\n\tKeyframes.prototype.interpolation = function(time) {\n\t    if (this.frames.length === 0)\n\t        return vec3(temp, -1, -1, 0)\n\n\t    var prev = -1\n\t    //get last keyframe to time\n\t    for (var i=this.frames.length-1; i>=0; i--) {\n\t        if (time >= this.frames[i].time) {\n\t            prev = i\n\t            break\n\t        }\n\t    }\n\t    \n\t    //start or end keyframes\n\t    if (prev === -1 || prev === this.frames.length-1) {\n\t        if (prev < 0)\n\t            prev = 0\n\t        return vec3(temp, prev, prev, 0)\n\t    } \n\t    else {\n\t        var startFrame = this.frames[prev]\n\t        var endFrame = this.frames[prev+1]\n\n\t        //clamp and get range\n\t        time = Math.max(startFrame.time, Math.min(time, endFrame.time))\n\t        var t = range(startFrame.time, endFrame.time, time)\n\n\t        //provide interpolation factor\n\t        return vec3(temp, prev, prev+1, t)\n\t    }\n\t}\n\n\tKeyframes.prototype.next = function(time) {\n\t    if (this.frames.length < 1)\n\t        return null\n\n\t    var cur = -1\n\t    //get last keyframe to time\n\t    for (var i=0; i<this.frames.length; i++) {\n\t        if (time < this.frames[i].time) {\n\t            cur = i\n\t            break\n\t        }\n\t    }\n\t    return cur===-1 ? null : this.frames[cur]\n\t}\n\n\tKeyframes.prototype.previous = function(time) {\n\t    if (this.frames.length < 1)\n\t        return null\n\n\t    var cur = -1\n\t    //get last keyframe to time\n\t    for (var i=this.frames.length-1; i>=0; i--) {\n\t        if (time > this.frames[i].time) {\n\t            cur = i\n\t            break\n\t        }\n\t    }\n\t    return cur===-1 ? null : this.frames[cur]\n\t}\n\n\t//Adds a frame at the given time stamp\n\tKeyframes.prototype.add = function(frame) {\n\t    this.frames.push(frame)\n\t    this.sort()\n\t}\n\n\t//convenience for .frames.splice\n\t//if items are inserted, a sort will be applied after insertion\n\tKeyframes.prototype.splice = function(index, howmany, itemsN) {\n\t    this.frames.splice.apply(this.frames, arguments)\n\t    if (arguments.length > 2)\n\t        this.sort()\n\t}\n\n\t//sorts the keyframes. you should do this after \n\t//adding new keyframes that are not in linear time\n\tKeyframes.prototype.sort = function() {\n\t    this.frames.sort(sort)\n\t}\n\n\t//Clears the keyframe list\n\tKeyframes.prototype.clear = function() {\n\t    this.frames.length = 0\n\t}\n\n\tObject.defineProperty(Keyframes.prototype, \"count\", {\n\t    get: function() {\n\t        return this.frames.length\n\t    }\n\t})\n\n\tmodule.exports = Keyframes\n\n/***/ },\n\n/***/ 330:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = set;\n\n\t/**\n\t * Set the components of a vec3 to the given values\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @returns {vec3} out\n\t */\n\tfunction set(out, x, y, z) {\n\t    out[0] = x\n\t    out[1] = y\n\t    out[2] = z\n\t    return out\n\t}\n\n/***/ },\n\n/***/ 331:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function range(min, max, value) {\n\t  return (value - min) / (max - min)\n\t}\n\n/***/ },\n\n/***/ 332:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction lerp(v0, v1, t) {\n\t    return v0*(1-t)+v1*t\n\t}\n\tmodule.exports = lerp\n\n/***/ },\n\n/***/ 333:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = extend\n\n\tfunction extend() {\n\t    var target = {}\n\n\t    for (var i = 0; i < arguments.length; i++) {\n\t        var source = arguments[i]\n\n\t        for (var key in source) {\n\t            if (source.hasOwnProperty(key)) {\n\t                target[key] = source[key]\n\t            }\n\t        }\n\t    }\n\n\t    return target\n\t}\n\n\n/***/ },\n\n/***/ 334:\n/***/ function(module, exports, __webpack_require__) {\n\n\t//a \"Property\" maintains a set of tweenable values\n\t//for e.g.:\n\t//  position [x, y]\n\t//  color [r, g, b, a]\n\t//  alpha [a]\n\n\t//It will also store application-level flags like\n\t//whether or not your data is hidden, or what type\n\t//of property you might be dealing with\n\n\tvar keyframes = __webpack_require__(329)\n\tvar xtend = __webpack_require__(333)\n\n\tfunction Property(data) {\n\t\tif (!(this instanceof Property)) \n\t\t\treturn new Property(data)\n\n\t\tthis.keyframes = keyframes()\n\t\tthis.value = null\n\t\tthis.name = ''\n\t\tif (data)\n\t\t\tthis.load(data)\n\t}\n\n\tProperty.prototype.dispose = function() {\n\t\tthis.keyframes.clear()\n\t}\n\n\tProperty.prototype.export = function() {\n\t\treturn xtend(this, {\n\t\t\tkeyframes: this.keyframes.frames\n\t\t})\n\t}\n\n\tProperty.prototype.load = function(data) {\n\t\tthis.dispose()\n\n\t\tif (!data)\n\t\t\treturn\n\t\t\n\t\tfor (var k in data) {\n\t\t\tif (!data.hasOwnProperty(k))\n\t\t\t\tcontinue\n\t\t\tif (k === 'keyframes')\n\t\t\t\tthis.keyframes.frames = data.keyframes\n\t\t\telse\n\t\t\t\tthis[k] = data[k]\n\t\t}\n\t}\n\n\tmodule.exports = Property\n\n/***/ },\n\n/***/ 336:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = (function() {\n\t  /*\n\t   * Generated by PEG.js 0.8.0.\n\t   *\n\t   * http://pegjs.majda.cz/\n\t   */\n\n\t  function peg$subclass(child, parent) {\n\t    function ctor() { this.constructor = child; }\n\t    ctor.prototype = parent.prototype;\n\t    child.prototype = new ctor();\n\t  }\n\n\t  function SyntaxError(message, expected, found, offset, line, column) {\n\t    this.message  = message;\n\t    this.expected = expected;\n\t    this.found    = found;\n\t    this.offset   = offset;\n\t    this.line     = line;\n\t    this.column   = column;\n\n\t    this.name     = \"SyntaxError\";\n\t  }\n\n\t  peg$subclass(SyntaxError, Error);\n\n\t  function parse(input) {\n\t    var options = arguments.length > 1 ? arguments[1] : {},\n\n\t        peg$FAILED = {},\n\n\t        peg$startRuleFunctions = { expr: peg$parseexpr },\n\t        peg$startRuleFunction  = peg$parseexpr,\n\n\t        peg$c0 = peg$FAILED,\n\t        peg$c1 = [],\n\t        peg$c2 = \"||\",\n\t        peg$c3 = { type: \"literal\", value: \"||\", description: \"\\\"||\\\"\" },\n\t        peg$c4 = function(first, rest) {\n\t              return combine(first, rest);\n\t            },\n\t        peg$c5 = \"&&\",\n\t        peg$c6 = { type: \"literal\", value: \"&&\", description: \"\\\"&&\\\"\" },\n\t        peg$c7 = \"+\",\n\t        peg$c8 = { type: \"literal\", value: \"+\", description: \"\\\"+\\\"\" },\n\t        peg$c9 = \"-\",\n\t        peg$c10 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n\t        peg$c11 = \"*\",\n\t        peg$c12 = { type: \"literal\", value: \"*\", description: \"\\\"*\\\"\" },\n\t        peg$c13 = \"/\",\n\t        peg$c14 = { type: \"literal\", value: \"/\", description: \"\\\"/\\\"\" },\n\t        peg$c15 = \"%\",\n\t        peg$c16 = { type: \"literal\", value: \"%\", description: \"\\\"%\\\"\" },\n\t        peg$c17 = \"(\",\n\t        peg$c18 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n\t        peg$c19 = \")\",\n\t        peg$c20 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n\t        peg$c21 = function(expr) { return \"(\" + expr + \")\"; },\n\t        peg$c22 = \"!\",\n\t        peg$c23 = { type: \"literal\", value: \"!\", description: \"\\\"!\\\"\" },\n\t        peg$c24 = function(val) { return \"!\" + val },\n\t        peg$c25 = { type: \"other\", description: \"number\" },\n\t        peg$c26 = null,\n\t        peg$c27 = function() { return text(); },\n\t        peg$c28 = /^[eE]/,\n\t        peg$c29 = { type: \"class\", value: \"[eE]\", description: \"[eE]\" },\n\t        peg$c30 = /^[0-9]/,\n\t        peg$c31 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n\t        peg$c32 = \".\",\n\t        peg$c33 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n\t        peg$c34 = \"0\",\n\t        peg$c35 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n\t        peg$c36 = /^[1-9]/,\n\t        peg$c37 = { type: \"class\", value: \"[1-9]\", description: \"[1-9]\" },\n\t        peg$c38 = /^[a-zA-Z]/,\n\t        peg$c39 = { type: \"class\", value: \"[a-zA-Z]\", description: \"[a-zA-Z]\" },\n\t        peg$c40 = /^[a-zA-Z0-9_]/,\n\t        peg$c41 = { type: \"class\", value: \"[a-zA-Z0-9_]\", description: \"[a-zA-Z0-9_]\" },\n\t        peg$c42 = function() { return \"get(\" + JSON.stringify(text()) + \")\" },\n\t        peg$c43 = { type: \"other\", description: \"whitespace\" },\n\t        peg$c44 = /^[ \\t\\n\\r]/,\n\t        peg$c45 = { type: \"class\", value: \"[ \\\\t\\\\n\\\\r]\", description: \"[ \\\\t\\\\n\\\\r]\" },\n\n\t        peg$currPos          = 0,\n\t        peg$reportedPos      = 0,\n\t        peg$cachedPos        = 0,\n\t        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n\t        peg$maxFailPos       = 0,\n\t        peg$maxFailExpected  = [],\n\t        peg$silentFails      = 0,\n\n\t        peg$result;\n\n\t    if (\"startRule\" in options) {\n\t      if (!(options.startRule in peg$startRuleFunctions)) {\n\t        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n\t      }\n\n\t      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n\t    }\n\n\t    function text() {\n\t      return input.substring(peg$reportedPos, peg$currPos);\n\t    }\n\n\t    function offset() {\n\t      return peg$reportedPos;\n\t    }\n\n\t    function line() {\n\t      return peg$computePosDetails(peg$reportedPos).line;\n\t    }\n\n\t    function column() {\n\t      return peg$computePosDetails(peg$reportedPos).column;\n\t    }\n\n\t    function expected(description) {\n\t      throw peg$buildException(\n\t        null,\n\t        [{ type: \"other\", description: description }],\n\t        peg$reportedPos\n\t      );\n\t    }\n\n\t    function error(message) {\n\t      throw peg$buildException(message, null, peg$reportedPos);\n\t    }\n\n\t    function peg$computePosDetails(pos) {\n\t      function advance(details, startPos, endPos) {\n\t        var p, ch;\n\n\t        for (p = startPos; p < endPos; p++) {\n\t          ch = input.charAt(p);\n\t          if (ch === \"\\n\") {\n\t            if (!details.seenCR) { details.line++; }\n\t            details.column = 1;\n\t            details.seenCR = false;\n\t          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n\t            details.line++;\n\t            details.column = 1;\n\t            details.seenCR = true;\n\t          } else {\n\t            details.column++;\n\t            details.seenCR = false;\n\t          }\n\t        }\n\t      }\n\n\t      if (peg$cachedPos !== pos) {\n\t        if (peg$cachedPos > pos) {\n\t          peg$cachedPos = 0;\n\t          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n\t        }\n\t        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n\t        peg$cachedPos = pos;\n\t      }\n\n\t      return peg$cachedPosDetails;\n\t    }\n\n\t    function peg$fail(expected) {\n\t      if (peg$currPos < peg$maxFailPos) { return; }\n\n\t      if (peg$currPos > peg$maxFailPos) {\n\t        peg$maxFailPos = peg$currPos;\n\t        peg$maxFailExpected = [];\n\t      }\n\n\t      peg$maxFailExpected.push(expected);\n\t    }\n\n\t    function peg$buildException(message, expected, pos) {\n\t      function cleanupExpected(expected) {\n\t        var i = 1;\n\n\t        expected.sort(function(a, b) {\n\t          if (a.description < b.description) {\n\t            return -1;\n\t          } else if (a.description > b.description) {\n\t            return 1;\n\t          } else {\n\t            return 0;\n\t          }\n\t        });\n\n\t        while (i < expected.length) {\n\t          if (expected[i - 1] === expected[i]) {\n\t            expected.splice(i, 1);\n\t          } else {\n\t            i++;\n\t          }\n\t        }\n\t      }\n\n\t      function buildMessage(expected, found) {\n\t        function stringEscape(s) {\n\t          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n\t          return s\n\t            .replace(/\\\\/g,   '\\\\\\\\')\n\t            .replace(/\"/g,    '\\\\\"')\n\t            .replace(/\\x08/g, '\\\\b')\n\t            .replace(/\\t/g,   '\\\\t')\n\t            .replace(/\\n/g,   '\\\\n')\n\t            .replace(/\\f/g,   '\\\\f')\n\t            .replace(/\\r/g,   '\\\\r')\n\t            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n\t            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n\t            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n\t            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n\t        }\n\n\t        var expectedDescs = new Array(expected.length),\n\t            expectedDesc, foundDesc, i;\n\n\t        for (i = 0; i < expected.length; i++) {\n\t          expectedDescs[i] = expected[i].description;\n\t        }\n\n\t        expectedDesc = expected.length > 1\n\t          ? expectedDescs.slice(0, -1).join(\", \")\n\t              + \" or \"\n\t              + expectedDescs[expected.length - 1]\n\t          : expectedDescs[0];\n\n\t        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n\t        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n\t      }\n\n\t      var posDetails = peg$computePosDetails(pos),\n\t          found      = pos < input.length ? input.charAt(pos) : null;\n\n\t      if (expected !== null) {\n\t        cleanupExpected(expected);\n\t      }\n\n\t      return new SyntaxError(\n\t        message !== null ? message : buildMessage(expected, found),\n\t        expected,\n\t        found,\n\t        pos,\n\t        posDetails.line,\n\t        posDetails.column\n\t      );\n\t    }\n\n\t    function peg$parseexpr() {\n\t      var s0;\n\n\t      s0 = peg$parselogical_or();\n\n\t      return s0;\n\t    }\n\n\t    function peg$parselogical_or() {\n\t      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n\t      s0 = peg$currPos;\n\t      s1 = peg$parselogical_and();\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$currPos;\n\t        s4 = peg$parse_();\n\t        if (s4 !== peg$FAILED) {\n\t          if (input.substr(peg$currPos, 2) === peg$c2) {\n\t            s5 = peg$c2;\n\t            peg$currPos += 2;\n\t          } else {\n\t            s5 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n\t          }\n\t          if (s5 !== peg$FAILED) {\n\t            s6 = peg$parse_();\n\t            if (s6 !== peg$FAILED) {\n\t              s7 = peg$parselogical_and();\n\t              if (s7 !== peg$FAILED) {\n\t                s4 = [s4, s5, s6, s7];\n\t                s3 = s4;\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s3;\n\t          s3 = peg$c0;\n\t        }\n\t        while (s3 !== peg$FAILED) {\n\t          s2.push(s3);\n\t          s3 = peg$currPos;\n\t          s4 = peg$parse_();\n\t          if (s4 !== peg$FAILED) {\n\t            if (input.substr(peg$currPos, 2) === peg$c2) {\n\t              s5 = peg$c2;\n\t              peg$currPos += 2;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n\t            }\n\t            if (s5 !== peg$FAILED) {\n\t              s6 = peg$parse_();\n\t              if (s6 !== peg$FAILED) {\n\t                s7 = peg$parselogical_and();\n\t                if (s7 !== peg$FAILED) {\n\t                  s4 = [s4, s5, s6, s7];\n\t                  s3 = s4;\n\t                } else {\n\t                  peg$currPos = s3;\n\t                  s3 = peg$c0;\n\t                }\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$c0;\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c4(s1, s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\n\t      return s0;\n\t    }\n\n\t    function peg$parselogical_and() {\n\t      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n\t      s0 = peg$currPos;\n\t      s1 = peg$parseadd();\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$currPos;\n\t        s4 = peg$parse_();\n\t        if (s4 !== peg$FAILED) {\n\t          if (input.substr(peg$currPos, 2) === peg$c5) {\n\t            s5 = peg$c5;\n\t            peg$currPos += 2;\n\t          } else {\n\t            s5 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n\t          }\n\t          if (s5 !== peg$FAILED) {\n\t            s6 = peg$parse_();\n\t            if (s6 !== peg$FAILED) {\n\t              s7 = peg$parseadd();\n\t              if (s7 !== peg$FAILED) {\n\t                s4 = [s4, s5, s6, s7];\n\t                s3 = s4;\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s3;\n\t          s3 = peg$c0;\n\t        }\n\t        while (s3 !== peg$FAILED) {\n\t          s2.push(s3);\n\t          s3 = peg$currPos;\n\t          s4 = peg$parse_();\n\t          if (s4 !== peg$FAILED) {\n\t            if (input.substr(peg$currPos, 2) === peg$c5) {\n\t              s5 = peg$c5;\n\t              peg$currPos += 2;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n\t            }\n\t            if (s5 !== peg$FAILED) {\n\t              s6 = peg$parse_();\n\t              if (s6 !== peg$FAILED) {\n\t                s7 = peg$parseadd();\n\t                if (s7 !== peg$FAILED) {\n\t                  s4 = [s4, s5, s6, s7];\n\t                  s3 = s4;\n\t                } else {\n\t                  peg$currPos = s3;\n\t                  s3 = peg$c0;\n\t                }\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$c0;\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c4(s1, s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\n\t      return s0;\n\t    }\n\n\t    function peg$parseadd() {\n\t      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n\t      s0 = peg$currPos;\n\t      s1 = peg$parsemul();\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$currPos;\n\t        s4 = peg$parse_();\n\t        if (s4 !== peg$FAILED) {\n\t          if (input.charCodeAt(peg$currPos) === 43) {\n\t            s5 = peg$c7;\n\t            peg$currPos++;\n\t          } else {\n\t            s5 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n\t          }\n\t          if (s5 === peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 45) {\n\t              s5 = peg$c9;\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c10); }\n\t            }\n\t          }\n\t          if (s5 !== peg$FAILED) {\n\t            s6 = peg$parse_();\n\t            if (s6 !== peg$FAILED) {\n\t              s7 = peg$parsemul();\n\t              if (s7 !== peg$FAILED) {\n\t                s4 = [s4, s5, s6, s7];\n\t                s3 = s4;\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s3;\n\t          s3 = peg$c0;\n\t        }\n\t        while (s3 !== peg$FAILED) {\n\t          s2.push(s3);\n\t          s3 = peg$currPos;\n\t          s4 = peg$parse_();\n\t          if (s4 !== peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 43) {\n\t              s5 = peg$c7;\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n\t            }\n\t            if (s5 === peg$FAILED) {\n\t              if (input.charCodeAt(peg$currPos) === 45) {\n\t                s5 = peg$c9;\n\t                peg$currPos++;\n\t              } else {\n\t                s5 = peg$FAILED;\n\t                if (peg$silentFails === 0) { peg$fail(peg$c10); }\n\t              }\n\t            }\n\t            if (s5 !== peg$FAILED) {\n\t              s6 = peg$parse_();\n\t              if (s6 !== peg$FAILED) {\n\t                s7 = peg$parsemul();\n\t                if (s7 !== peg$FAILED) {\n\t                  s4 = [s4, s5, s6, s7];\n\t                  s3 = s4;\n\t                } else {\n\t                  peg$currPos = s3;\n\t                  s3 = peg$c0;\n\t                }\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$c0;\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c4(s1, s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\n\t      return s0;\n\t    }\n\n\t    function peg$parsemul() {\n\t      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n\t      s0 = peg$currPos;\n\t      s1 = peg$parseval();\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$currPos;\n\t        s4 = peg$parse_();\n\t        if (s4 !== peg$FAILED) {\n\t          if (input.charCodeAt(peg$currPos) === 42) {\n\t            s5 = peg$c11;\n\t            peg$currPos++;\n\t          } else {\n\t            s5 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n\t          }\n\t          if (s5 === peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 47) {\n\t              s5 = peg$c13;\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n\t            }\n\t            if (s5 === peg$FAILED) {\n\t              if (input.charCodeAt(peg$currPos) === 37) {\n\t                s5 = peg$c15;\n\t                peg$currPos++;\n\t              } else {\n\t                s5 = peg$FAILED;\n\t                if (peg$silentFails === 0) { peg$fail(peg$c16); }\n\t              }\n\t            }\n\t          }\n\t          if (s5 !== peg$FAILED) {\n\t            s6 = peg$parse_();\n\t            if (s6 !== peg$FAILED) {\n\t              s7 = peg$parseval();\n\t              if (s7 !== peg$FAILED) {\n\t                s4 = [s4, s5, s6, s7];\n\t                s3 = s4;\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s3;\n\t          s3 = peg$c0;\n\t        }\n\t        while (s3 !== peg$FAILED) {\n\t          s2.push(s3);\n\t          s3 = peg$currPos;\n\t          s4 = peg$parse_();\n\t          if (s4 !== peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 42) {\n\t              s5 = peg$c11;\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c12); }\n\t            }\n\t            if (s5 === peg$FAILED) {\n\t              if (input.charCodeAt(peg$currPos) === 47) {\n\t                s5 = peg$c13;\n\t                peg$currPos++;\n\t              } else {\n\t                s5 = peg$FAILED;\n\t                if (peg$silentFails === 0) { peg$fail(peg$c14); }\n\t              }\n\t              if (s5 === peg$FAILED) {\n\t                if (input.charCodeAt(peg$currPos) === 37) {\n\t                  s5 = peg$c15;\n\t                  peg$currPos++;\n\t                } else {\n\t                  s5 = peg$FAILED;\n\t                  if (peg$silentFails === 0) { peg$fail(peg$c16); }\n\t                }\n\t              }\n\t            }\n\t            if (s5 !== peg$FAILED) {\n\t              s6 = peg$parse_();\n\t              if (s6 !== peg$FAILED) {\n\t                s7 = peg$parseval();\n\t                if (s7 !== peg$FAILED) {\n\t                  s4 = [s4, s5, s6, s7];\n\t                  s3 = s4;\n\t                } else {\n\t                  peg$currPos = s3;\n\t                  s3 = peg$c0;\n\t                }\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$c0;\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c4(s1, s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\n\t      return s0;\n\t    }\n\n\t    function peg$parseval() {\n\t      var s0, s1, s2, s3, s4, s5;\n\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 40) {\n\t        s1 = peg$c17;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parse_();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parselogical_or();\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parse_();\n\t            if (s4 !== peg$FAILED) {\n\t              if (input.charCodeAt(peg$currPos) === 41) {\n\t                s5 = peg$c19;\n\t                peg$currPos++;\n\t              } else {\n\t                s5 = peg$FAILED;\n\t                if (peg$silentFails === 0) { peg$fail(peg$c20); }\n\t              }\n\t              if (s5 !== peg$FAILED) {\n\t                peg$reportedPos = s0;\n\t                s1 = peg$c21(s3);\n\t                s0 = s1;\n\t              } else {\n\t                peg$currPos = s0;\n\t                s0 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        if (input.charCodeAt(peg$currPos) === 33) {\n\t          s1 = peg$c22;\n\t          peg$currPos++;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          s2 = peg$parseval();\n\t          if (s2 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c24(s2);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$parsenumber();\n\t          if (s0 === peg$FAILED) {\n\t            s0 = peg$parseidentifier();\n\t          }\n\t        }\n\t      }\n\n\t      return s0;\n\t    }\n\n\t    function peg$parsenumber() {\n\t      var s0, s1, s2, s3, s4;\n\n\t      peg$silentFails++;\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 45) {\n\t        s1 = peg$c9;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c10); }\n\t      }\n\t      if (s1 === peg$FAILED) {\n\t        s1 = peg$c26;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseint();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parsefrac();\n\t          if (s3 === peg$FAILED) {\n\t            s3 = peg$c26;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parseexp();\n\t            if (s4 === peg$FAILED) {\n\t              s4 = peg$c26;\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c27();\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t      peg$silentFails--;\n\t      if (s0 === peg$FAILED) {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c25); }\n\t      }\n\n\t      return s0;\n\t    }\n\n\t    function peg$parseexp() {\n\t      var s0, s1, s2, s3, s4;\n\n\t      s0 = peg$currPos;\n\t      if (peg$c28.test(input.charAt(peg$currPos))) {\n\t        s1 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        if (input.charCodeAt(peg$currPos) === 45) {\n\t          s2 = peg$c9;\n\t          peg$currPos++;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n\t        }\n\t        if (s2 === peg$FAILED) {\n\t          if (input.charCodeAt(peg$currPos) === 43) {\n\t            s2 = peg$c7;\n\t            peg$currPos++;\n\t          } else {\n\t            s2 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n\t          }\n\t        }\n\t        if (s2 === peg$FAILED) {\n\t          s2 = peg$c26;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          if (peg$c30.test(input.charAt(peg$currPos))) {\n\t            s4 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c31); }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            while (s4 !== peg$FAILED) {\n\t              s3.push(s4);\n\t              if (peg$c30.test(input.charAt(peg$currPos))) {\n\t                s4 = input.charAt(peg$currPos);\n\t                peg$currPos++;\n\t              } else {\n\t                s4 = peg$FAILED;\n\t                if (peg$silentFails === 0) { peg$fail(peg$c31); }\n\t              }\n\t            }\n\t          } else {\n\t            s3 = peg$c0;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s1 = [s1, s2, s3];\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\n\t      return s0;\n\t    }\n\n\t    function peg$parsefrac() {\n\t      var s0, s1, s2, s3;\n\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 46) {\n\t        s1 = peg$c32;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        if (peg$c30.test(input.charAt(peg$currPos))) {\n\t          s3 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s3 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c31); }\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            if (peg$c30.test(input.charAt(peg$currPos))) {\n\t              s3 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s3 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c31); }\n\t            }\n\t          }\n\t        } else {\n\t          s2 = peg$c0;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s1 = [s1, s2];\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\n\t      return s0;\n\t    }\n\n\t    function peg$parseint() {\n\t      var s0, s1, s2, s3;\n\n\t      if (input.charCodeAt(peg$currPos) === 48) {\n\t        s0 = peg$c34;\n\t        peg$currPos++;\n\t      } else {\n\t        s0 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n\t      }\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        if (peg$c36.test(input.charAt(peg$currPos))) {\n\t          s1 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c37); }\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          s2 = [];\n\t          if (peg$c30.test(input.charAt(peg$currPos))) {\n\t            s3 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c31); }\n\t          }\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            if (peg$c30.test(input.charAt(peg$currPos))) {\n\t              s3 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s3 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c31); }\n\t            }\n\t          }\n\t          if (s2 !== peg$FAILED) {\n\t            s1 = [s1, s2];\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      }\n\n\t      return s0;\n\t    }\n\n\t    function peg$parseidentifier() {\n\t      var s0, s1, s2, s3;\n\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      if (peg$c38.test(input.charAt(peg$currPos))) {\n\t        s2 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s2 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          if (peg$c38.test(input.charAt(peg$currPos))) {\n\t            s2 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s2 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c39); }\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$c0;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        if (peg$c40.test(input.charAt(peg$currPos))) {\n\t          s3 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s3 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n\t        }\n\t        while (s3 !== peg$FAILED) {\n\t          s2.push(s3);\n\t          if (peg$c40.test(input.charAt(peg$currPos))) {\n\t            s3 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c41); }\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c42();\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\n\t      return s0;\n\t    }\n\n\t    function peg$parse_() {\n\t      var s0, s1;\n\n\t      peg$silentFails++;\n\t      s0 = [];\n\t      if (peg$c44.test(input.charAt(peg$currPos))) {\n\t        s1 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n\t      }\n\t      while (s1 !== peg$FAILED) {\n\t        s0.push(s1);\n\t        if (peg$c44.test(input.charAt(peg$currPos))) {\n\t          s1 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n\t        }\n\t      }\n\t      peg$silentFails--;\n\t      if (s0 === peg$FAILED) {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n\t      }\n\n\t      return s0;\n\t    }\n\n\n\t      function operate(item) {\n\t        var operator = item[1]\n\t        var operand = item[3]\n\t        return \" \" + operator + \" \" + operand\n\t      }\n\t      function combine(first, rest) {\n\t        return first + rest.map(operate).join('')\n\t      }\n\n\n\t    peg$result = peg$startRuleFunction();\n\n\t    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n\t      return peg$result;\n\t    } else {\n\t      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n\t        peg$fail({ type: \"end\", description: \"end of input\" });\n\t      }\n\n\t      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n\t    }\n\t  }\n\n\t  return {\n\t    SyntaxError: SyntaxError,\n\t    parse:       parse\n\t  };\n\t})();\n\n/***/ },\n\n/***/ 380:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; };\n\n\texports.main = main;\n\n\tvar Scintillator = _interopRequireWildcard(__webpack_require__(118));\n\n\tvar co = _interopRequire(__webpack_require__(30));\n\n\tvar $ = _interopRequire(__webpack_require__(31));\n\n\tvar Chance = _interopRequire(__webpack_require__(498));\n\n\tvar GameNote = _interopRequire(__webpack_require__(136));\n\n\tvar NoteArea = _interopRequire(__webpack_require__(130));\n\n\tfunction main() {\n\t  co(regeneratorRuntime.mark(function callee$1$0() {\n\t    var skin, context, notes, area, data, columns, updateNotes, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, column, started, draw;\n\n\t    return regeneratorRuntime.wrap(function callee$1$0$(context$2$0) {\n\t      while (1) switch (context$2$0.prev = context$2$0.next) {\n\t        case 0:\n\t          updateNotes = function updateNotes() {\n\t            var p = data.t * 192 / 60;\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\n\t            try {\n\t              for (var _iterator = columns[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                var column = _step.value;\n\n\t                data[\"p1_note_\" + column].length = 0;\n\t                data[\"p1_longnote_\" + column].length = 0;\n\t              }\n\t            } catch (err) {\n\t              _didIteratorError = true;\n\t              _iteratorError = err;\n\t            } finally {\n\t              try {\n\t                if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t                  _iterator[\"return\"]();\n\t                }\n\t              } finally {\n\t                if (_didIteratorError) {\n\t                  throw _iteratorError;\n\t                }\n\t              }\n\t            }\n\n\t            var entities = area.getVisibleNotes(p, p + 5 / 2.5);\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\n\t            try {\n\t              for (var _iterator2 = entities[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                var entity = _step2.value;\n\n\t                var note = entity.note;\n\t                var column = note.column;\n\t                if (entity.height) {\n\t                  data[\"p1_longnote_\" + column].push({\n\t                    key: note.id,\n\t                    y: entity.y,\n\t                    height: entity.height,\n\t                    active: entity.y + entity.height > 1,\n\t                    missed: entity.y + entity.height > 1.1 && note.id % 5 === 0 });\n\t                } else {\n\t                  data[\"p1_note_\" + column].push({\n\t                    key: note.id,\n\t                    y: entity.y });\n\t                }\n\t              }\n\t            } catch (err) {\n\t              _didIteratorError2 = true;\n\t              _iteratorError2 = err;\n\t            } finally {\n\t              try {\n\t                if (!_iteratorNormalCompletion2 && _iterator2[\"return\"]) {\n\t                  _iterator2[\"return\"]();\n\t                }\n\t              } finally {\n\t                if (_didIteratorError2) {\n\t                  throw _iteratorError2;\n\t                }\n\t              }\n\t            }\n\t          };\n\n\t          context$2$0.next = 3;\n\t          return Scintillator.load(Scintillator.getSkinUrl());\n\n\t        case 3:\n\t          skin = context$2$0.sent;\n\t          context = new Scintillator.Context(skin);\n\t          notes = generateRandomNotes();\n\t          area = new NoteArea(notes, []);\n\t          data = {};\n\t          columns = [\"SC\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n\t          _iteratorNormalCompletion = true;\n\t          _didIteratorError = false;\n\t          _iteratorError = undefined;\n\t          context$2$0.prev = 12;\n\n\t          for (_iterator = columns[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            column = _step.value;\n\n\t            data[\"p1_note_\" + column] = [];\n\t            data[\"p1_longnote_\" + column] = [];\n\t          }\n\n\t          context$2$0.next = 20;\n\t          break;\n\n\t        case 16:\n\t          context$2$0.prev = 16;\n\t          context$2$0.t2 = context$2$0[\"catch\"](12);\n\t          _didIteratorError = true;\n\t          _iteratorError = context$2$0.t2;\n\n\t        case 20:\n\t          context$2$0.prev = 20;\n\t          context$2$0.prev = 21;\n\n\t          if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t            _iterator[\"return\"]();\n\t          }\n\n\t        case 23:\n\t          context$2$0.prev = 23;\n\n\t          if (!_didIteratorError) {\n\t            context$2$0.next = 26;\n\t            break;\n\t          }\n\n\t          throw _iteratorError;\n\n\t        case 26:\n\t          return context$2$0.finish(23);\n\n\t        case 27:\n\t          return context$2$0.finish(20);\n\n\t        case 28:\n\t          started = new Date().getTime();\n\n\t          draw = function () {\n\t            data.t = (new Date().getTime() - started) / 1000;\n\t            updateNotes();\n\t            context.render(data);\n\t          };\n\n\t          draw();\n\t          requestAnimationFrame(function f() {\n\t            draw();\n\t            requestAnimationFrame(f);\n\t          });\n\t          showCanvas(context.view);\n\n\t        case 33:\n\t        case \"end\":\n\t          return context$2$0.stop();\n\t      }\n\t    }, callee$1$0, this, [[12, 16, 20, 28], [21,, 23, 27]]);\n\t  })).done();\n\t}\n\n\tfunction generateRandomNotes() {\n\t  var notes = [];\n\t  var chance = new Chance(1234);\n\t  var columns = [\"SC\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n\t  var nextId = 1;\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = columns[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var column = _step.value;\n\n\t      var position = 4;\n\t      for (var j = 0; j < 2000; j++) {\n\t        position += chance.integer({ min: 1, max: 6 }) / 4;\n\t        var _length = chance.bool({ likelihood: 10 }) ? chance.integer({ min: 1, max: 24 }) / 4 : 0;\n\t        var id = nextId++;\n\t        if (_length > 0) {\n\t          var end = { position: position + _length, beat: 0, time: 0 };\n\t          notes.push(new GameNote({ position: position, end: end, column: column, id: id,\n\t            beat: 0, time: 0 }));\n\t          position = end.position;\n\t        } else {\n\t          notes.push(new GameNote({ position: position, column: column, id: id,\n\t            beat: 0, time: 0, end: null }));\n\t        }\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t        _iterator[\"return\"]();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\n\t  return notes;\n\t}\n\n\tfunction showCanvas(view) {\n\t  var width = view.width;\n\t  var height = view.height;\n\n\t  view.style.display = \"block\";\n\t  view.style.margin = \"0 auto\";\n\n\t  document.body.appendChild(view);\n\t  resize();\n\t  $(window).on(\"resize\", resize);\n\n\t  function resize() {\n\t    var scale = Math.min(window.innerWidth / width, window.innerHeight / height);\n\t    view.style.width = Math.round(width * scale) + \"px\";\n\t    view.style.height = Math.round(height * scale) + \"px\";\n\t  }\n\t}\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n/***/ },\n\n/***/ 498:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Buffer) {//  Chance.js 0.7.3\n\t//  http://chancejs.com\n\t//  (c) 2013 Victor Quinn\n\t//  Chance may be freely distributed or modified under the MIT license.\n\n\t(function () {\n\n\t    // Constants\n\t    var MAX_INT = 9007199254740992;\n\t    var MIN_INT = -MAX_INT;\n\t    var NUMBERS = '0123456789';\n\t    var CHARS_LOWER = 'abcdefghijklmnopqrstuvwxyz';\n\t    var CHARS_UPPER = CHARS_LOWER.toUpperCase();\n\t    var HEX_POOL  = NUMBERS + \"abcdef\";\n\n\t    // Cached array helpers\n\t    var slice = Array.prototype.slice;\n\n\t    // Constructor\n\t    function Chance (seed) {\n\t        if (!(this instanceof Chance)) {\n\t            return new Chance(seed);\n\t        }\n\n\t        // if user has provided a function, use that as the generator\n\t        if (typeof seed === 'function') {\n\t            this.random = seed;\n\t            return this;\n\t        }\n\n\t        var seedling;\n\n\t        if (arguments.length) {\n\t            // set a starting value of zero so we can add to it\n\t            this.seed = 0;\n\t        }\n\t        // otherwise, leave this.seed blank so that MT will recieve a blank\n\n\t        for (var i = 0; i < arguments.length; i++) {\n\t            seedling = 0;\n\t            if (typeof arguments[i] === 'string') {\n\t                for (var j = 0; j < arguments[i].length; j++) {\n\t                    seedling += (arguments[i].length - j) * arguments[i].charCodeAt(j);\n\t                }\n\t            } else {\n\t                seedling = arguments[i];\n\t            }\n\t            this.seed += (arguments.length - i) * seedling;\n\t        }\n\n\t        // If no generator function was provided, use our MT\n\t        this.mt = this.mersenne_twister(this.seed);\n\t        this.random = function () {\n\t            return this.mt.random(this.seed);\n\t        };\n\n\t        return this;\n\t    }\n\n\t    Chance.prototype.VERSION = \"0.7.3\";\n\n\t    // Random helper functions\n\t    function initOptions(options, defaults) {\n\t        options || (options = {});\n\n\t        if (defaults) {\n\t            for (var i in defaults) {\n\t                if (typeof options[i] === 'undefined') {\n\t                    options[i] = defaults[i];\n\t                }\n\t            }\n\t        }\n\n\t        return options;\n\t    }\n\n\t    function testRange(test, errorMessage) {\n\t        if (test) {\n\t            throw new RangeError(errorMessage);\n\t        }\n\t    }\n\n\t    /**\n\t     * Encode the input string with Base64.\n\t     */\n\t    var base64 = function() {\n\t        throw new Error('No Base64 encoder available.');\n\t    };\n\n\t    // Select proper Base64 encoder.\n\t    (function determineBase64Encoder() {\n\t        if (typeof btoa === 'function') {\n\t            base64 = btoa;\n\t        } else if (typeof Buffer === 'function') {\n\t            base64 = function(input) {\n\t                return new Buffer(input).toString('base64');\n\t            };\n\t        }\n\t    })();\n\n\t    // -- Basics --\n\n\t    Chance.prototype.bool = function (options) {\n\n\t        // likelihood of success (true)\n\t        options = initOptions(options, {likelihood : 50});\n\n\t        testRange(\n\t            options.likelihood < 0 || options.likelihood > 100,\n\t            \"Chance: Likelihood accepts values from 0 to 100.\"\n\t        );\n\n\t        return this.random() * 100 < options.likelihood;\n\t    };\n\n\t    Chance.prototype.character = function (options) {\n\t        options = initOptions(options);\n\n\t        var symbols = \"!@#$%^&*()[]\",\n\t            letters, pool;\n\n\t        testRange(\n\t            options.alpha && options.symbols,\n\t            \"Chance: Cannot specify both alpha and symbols.\"\n\t        );\n\n\n\t        if (options.casing === 'lower') {\n\t            letters = CHARS_LOWER;\n\t        } else if (options.casing === 'upper') {\n\t            letters = CHARS_UPPER;\n\t        } else {\n\t            letters = CHARS_LOWER + CHARS_UPPER;\n\t        }\n\n\t        if (options.pool) {\n\t            pool = options.pool;\n\t        } else if (options.alpha) {\n\t            pool = letters;\n\t        } else if (options.symbols) {\n\t            pool = symbols;\n\t        } else {\n\t            pool = letters + NUMBERS + symbols;\n\t        }\n\n\t        return pool.charAt(this.natural({max: (pool.length - 1)}));\n\t    };\n\n\t    // Note, wanted to use \"float\" or \"double\" but those are both JS reserved words.\n\n\t    // Note, fixed means N OR LESS digits after the decimal. This because\n\t    // It could be 14.9000 but in JavaScript, when this is cast as a number,\n\t    // the trailing zeroes are dropped. Left to the consumer if trailing zeroes are\n\t    // needed\n\t    Chance.prototype.floating = function (options) {\n\t        var num;\n\n\t        options = initOptions(options, {fixed : 4});\n\t        var fixed = Math.pow(10, options.fixed);\n\n\t        testRange(\n\t            options.fixed && options.precision,\n\t            \"Chance: Cannot specify both fixed and precision.\"\n\t        );\n\n\t        var max = MAX_INT / fixed;\n\t        var min = -max;\n\n\t        testRange(\n\t            options.min && options.fixed && options.min < min,\n\t            \"Chance: Min specified is out of range with fixed. Min should be, at least, \" + min\n\t        );\n\t        testRange(\n\t            options.max && options.fixed && options.max > max,\n\t            \"Chance: Max specified is out of range with fixed. Max should be, at most, \" + max\n\t        );\n\n\t        options = initOptions(options, {min : min, max : max});\n\n\t        // Todo - Make this work!\n\t        // options.precision = (typeof options.precision !== \"undefined\") ? options.precision : false;\n\n\t        num = this.integer({min: options.min * fixed, max: options.max * fixed});\n\t        var num_fixed = (num / fixed).toFixed(options.fixed);\n\n\t        return parseFloat(num_fixed);\n\t    };\n\n\t    // NOTE the max and min are INCLUDED in the range. So:\n\t    //\n\t    // chance.natural({min: 1, max: 3});\n\t    //\n\t    // would return either 1, 2, or 3.\n\n\t    Chance.prototype.integer = function (options) {\n\n\t        // 9007199254740992 (2^53) is the max integer number in JavaScript\n\t        // See: http://vq.io/132sa2j\n\t        options = initOptions(options, {min: MIN_INT, max: MAX_INT});\n\n\t        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n\t        return Math.floor(this.random() * (options.max - options.min + 1) + options.min);\n\t    };\n\n\t    Chance.prototype.natural = function (options) {\n\t        options = initOptions(options, {min: 0, max: MAX_INT});\n\t        return this.integer(options);\n\t    };\n\n\t    Chance.prototype.string = function (options) {\n\t        options = initOptions(options);\n\n\t        var length = options.length || this.natural({min: 5, max: 20}),\n\t            pool = options.pool,\n\t            text = this.n(this.character, length, {pool: pool});\n\n\t        return text.join(\"\");\n\t    };\n\n\t    // -- End Basics --\n\n\t    // -- Helpers --\n\n\t    Chance.prototype.capitalize = function (word) {\n\t        return word.charAt(0).toUpperCase() + word.substr(1);\n\t    };\n\n\t    Chance.prototype.mixin = function (obj) {\n\t        for (var func_name in obj) {\n\t            Chance.prototype[func_name] = obj[func_name];\n\t        }\n\t        return this;\n\t    };\n\n\t    // Given a function that generates something random and a number of items to generate,\n\t    // return an array of items where none repeat.\n\t    Chance.prototype.unique = function(fn, num, options) {\n\t        options = initOptions(options, {\n\t            // Default comparator to check that val is not already in arr.\n\t            // Should return `false` if item not in array, `true` otherwise\n\t            comparator: function(arr, val) {\n\t                return arr.indexOf(val) !== -1;\n\t            }\n\t        });\n\n\t        var arr = [], count = 0, result, MAX_DUPLICATES = num * 50, params = slice.call(arguments, 2);\n\n\t        while (arr.length < num) {\n\t            result = fn.apply(this, params);\n\t            if (!options.comparator(arr, result)) {\n\t                arr.push(result);\n\t                // reset count when unique found\n\t                count = 0;\n\t            }\n\n\t            if (++count > MAX_DUPLICATES) {\n\t                throw new RangeError(\"Chance: num is likely too large for sample set\");\n\t            }\n\t        }\n\t        return arr;\n\t    };\n\n\t    /**\n\t     *  Gives an array of n random terms\n\t     *  @param fn the function that generates something random\n\t     *  @param n number of terms to generate\n\t     *  There can be more parameters after these. All additional parameters are provided to the given function\n\t     */\n\t    Chance.prototype.n = function(fn, n) {\n\t        if (typeof n === 'undefined') {\n\t            n = 1;\n\t        }\n\t        var i = n, arr = [], params = slice.call(arguments, 2);\n\n\t        // Providing a negative count should result in a noop.\n\t        i = Math.max( 0, i );\n\n\t        for (null; i--; null) {\n\t            arr.push(fn.apply(this, params));\n\t        }\n\n\t        return arr;\n\t    };\n\n\t    // H/T to SO for this one: http://vq.io/OtUrZ5\n\t    Chance.prototype.pad = function (number, width, pad) {\n\t        // Default pad to 0 if none provided\n\t        pad = pad || '0';\n\t        // Convert number to a string\n\t        number = number + '';\n\t        return number.length >= width ? number : new Array(width - number.length + 1).join(pad) + number;\n\t    };\n\n\t    Chance.prototype.pick = function (arr, count) {\n\t        if (arr.length === 0) {\n\t            throw new RangeError(\"Chance: Cannot pick() from an empty array\");\n\t        }\n\t        if (!count || count === 1) {\n\t            return arr[this.natural({max: arr.length - 1})];\n\t        } else {\n\t            return this.shuffle(arr).slice(0, count);\n\t        }\n\t    };\n\n\t    Chance.prototype.shuffle = function (arr) {\n\t        var old_array = arr.slice(0),\n\t            new_array = [],\n\t            j = 0,\n\t            length = Number(old_array.length);\n\n\t        for (var i = 0; i < length; i++) {\n\t            // Pick a random index from the array\n\t            j = this.natural({max: old_array.length - 1});\n\t            // Add it to the new array\n\t            new_array[i] = old_array[j];\n\t            // Remove that element from the original array\n\t            old_array.splice(j, 1);\n\t        }\n\n\t        return new_array;\n\t    };\n\n\t    // Returns a single item from an array with relative weighting of odds\n\t    Chance.prototype.weighted = function(arr, weights) {\n\t        if (arr.length !== weights.length) {\n\t            throw new RangeError(\"Chance: length of array and weights must match\");\n\t        }\n\n\t        // Handle weights that are less or equal to zero.\n\t        for (var weightIndex = weights.length - 1; weightIndex >= 0; --weightIndex) {\n\t            // If the weight is less or equal to zero, remove it and the value.\n\t            if (weights[weightIndex] <= 0) {\n\t                arr.splice(weightIndex,1);\n\t                weights.splice(weightIndex,1);\n\t            }\n\t        }\n\n\t        // If any of the weights are less than 1, we want to scale them up to whole\n\t        //   numbers for the rest of this logic to work\n\t        if (weights.some(function(weight) { return weight < 1; })) {\n\t            var min = weights.reduce(function(min, weight) {\n\t                return (weight < min) ? weight : min;\n\t            }, weights[0]);\n\n\t            var scaling_factor = 1 / min;\n\n\t            weights = weights.map(function(weight) {\n\t                return weight * scaling_factor;\n\t            });\n\t        }\n\n\t        var sum = weights.reduce(function(total, weight) {\n\t            return total + weight;\n\t        }, 0);\n\n\t        // get an index\n\t        var selected = this.natural({ min: 1, max: sum });\n\n\t        var total = 0;\n\t        var chosen;\n\t        // Using some() here so we can bail as soon as we get our match\n\t        weights.some(function(weight, index) {\n\t            if (selected <= total + weight) {\n\t                chosen = arr[index];\n\t                return true;\n\t            }\n\t            total += weight;\n\t            return false;\n\t        });\n\n\t        return chosen;\n\t    };\n\n\t    // -- End Helpers --\n\n\t    // -- Text --\n\n\t    Chance.prototype.paragraph = function (options) {\n\t        options = initOptions(options);\n\n\t        var sentences = options.sentences || this.natural({min: 3, max: 7}),\n\t            sentence_array = this.n(this.sentence, sentences);\n\n\t        return sentence_array.join(' ');\n\t    };\n\n\t    // Could get smarter about this than generating random words and\n\t    // chaining them together. Such as: http://vq.io/1a5ceOh\n\t    Chance.prototype.sentence = function (options) {\n\t        options = initOptions(options);\n\n\t        var words = options.words || this.natural({min: 12, max: 18}),\n\t            text, word_array = this.n(this.word, words);\n\n\t        text = word_array.join(' ');\n\n\t        // Capitalize first letter of sentence, add period at end\n\t        text = this.capitalize(text) + '.';\n\n\t        return text;\n\t    };\n\n\t    Chance.prototype.syllable = function (options) {\n\t        options = initOptions(options);\n\n\t        var length = options.length || this.natural({min: 2, max: 3}),\n\t            consonants = 'bcdfghjklmnprstvwz', // consonants except hard to speak ones\n\t            vowels = 'aeiou', // vowels\n\t            all = consonants + vowels, // all\n\t            text = '',\n\t            chr;\n\n\t        // I'm sure there's a more elegant way to do this, but this works\n\t        // decently well.\n\t        for (var i = 0; i < length; i++) {\n\t            if (i === 0) {\n\t                // First character can be anything\n\t                chr = this.character({pool: all});\n\t            } else if (consonants.indexOf(chr) === -1) {\n\t                // Last character was a vowel, now we want a consonant\n\t                chr = this.character({pool: consonants});\n\t            } else {\n\t                // Last character was a consonant, now we want a vowel\n\t                chr = this.character({pool: vowels});\n\t            }\n\n\t            text += chr;\n\t        }\n\n\t        return text;\n\t    };\n\n\t    Chance.prototype.word = function (options) {\n\t        options = initOptions(options);\n\n\t        testRange(\n\t            options.syllables && options.length,\n\t            \"Chance: Cannot specify both syllables AND length.\"\n\t        );\n\n\t        var syllables = options.syllables || this.natural({min: 1, max: 3}),\n\t            text = '';\n\n\t        if (options.length) {\n\t            // Either bound word by length\n\t            do {\n\t                text += this.syllable();\n\t            } while (text.length < options.length);\n\t            text = text.substring(0, options.length);\n\t        } else {\n\t            // Or by number of syllables\n\t            for (var i = 0; i < syllables; i++) {\n\t                text += this.syllable();\n\t            }\n\t        }\n\t        return text;\n\t    };\n\n\t    // -- End Text --\n\n\t    // -- Person --\n\n\t    Chance.prototype.age = function (options) {\n\t        options = initOptions(options);\n\t        var ageRange;\n\n\t        switch (options.type) {\n\t            case 'child':\n\t                ageRange = {min: 1, max: 12};\n\t                break;\n\t            case 'teen':\n\t                ageRange = {min: 13, max: 19};\n\t                break;\n\t            case 'adult':\n\t                ageRange = {min: 18, max: 65};\n\t                break;\n\t            case 'senior':\n\t                ageRange = {min: 65, max: 100};\n\t                break;\n\t            case 'all':\n\t                ageRange = {min: 1, max: 100};\n\t                break;\n\t            default:\n\t                ageRange = {min: 18, max: 65};\n\t                break;\n\t        }\n\n\t        return this.natural(ageRange);\n\t    };\n\n\t    Chance.prototype.birthday = function (options) {\n\t        options = initOptions(options, {\n\t            year: (new Date().getFullYear() - this.age(options))\n\t        });\n\n\t        return this.date(options);\n\t    };\n\n\t    // CPF; ID to identify taxpayers in Brazil\n\t    Chance.prototype.cpf = function () {\n\t        var n = this.n(this.natural, 9, { max: 9 });\n\t        var d1 = n[8]*2+n[7]*3+n[6]*4+n[5]*5+n[4]*6+n[3]*7+n[2]*8+n[1]*9+n[0]*10;\n\t        d1 = 11 - (d1 % 11);\n\t        if (d1>=10) {\n\t            d1 = 0;\n\t        }\n\t        var d2 = d1*2+n[8]*3+n[7]*4+n[6]*5+n[5]*6+n[4]*7+n[3]*8+n[2]*9+n[1]*10+n[0]*11;\n\t        d2 = 11 - (d2 % 11);\n\t        if (d2>=10) {\n\t            d2 = 0;\n\t        }\n\t        return ''+n[0]+n[1]+n[2]+'.'+n[3]+n[4]+n[5]+'.'+n[6]+n[7]+n[8]+'-'+d1+d2;\n\t    };\n\n\t    Chance.prototype.first = function (options) {\n\t        options = initOptions(options, {gender: this.gender()});\n\t        return this.pick(this.get(\"firstNames\")[options.gender.toLowerCase()]);\n\t    };\n\n\t    Chance.prototype.gender = function () {\n\t        return this.pick(['Male', 'Female']);\n\t    };\n\n\t    Chance.prototype.last = function () {\n\t        return this.pick(this.get(\"lastNames\"));\n\t    };\n\n\t    Chance.prototype.name = function (options) {\n\t        options = initOptions(options);\n\n\t        var first = this.first(options),\n\t            last = this.last(),\n\t            name;\n\n\t        if (options.middle) {\n\t            name = first + ' ' + this.first(options) + ' ' + last;\n\t        } else if (options.middle_initial) {\n\t            name = first + ' ' + this.character({alpha: true, casing: 'upper'}) + '. ' + last;\n\t        } else {\n\t            name = first + ' ' + last;\n\t        }\n\n\t        if (options.prefix) {\n\t            name = this.prefix(options) + ' ' + name;\n\t        }\n\n\t        if (options.suffix) {\n\t            name = name + ' ' + this.suffix(options);\n\t        }\n\n\t        return name;\n\t    };\n\n\t    // Return the list of available name prefixes based on supplied gender.\n\t    Chance.prototype.name_prefixes = function (gender) {\n\t        gender = gender || \"all\";\n\t        gender = gender.toLowerCase();\n\n\t        var prefixes = [\n\t            { name: 'Doctor', abbreviation: 'Dr.' }\n\t        ];\n\n\t        if (gender === \"male\" || gender === \"all\") {\n\t            prefixes.push({ name: 'Mister', abbreviation: 'Mr.' });\n\t        }\n\n\t        if (gender === \"female\" || gender === \"all\") {\n\t            prefixes.push({ name: 'Miss', abbreviation: 'Miss' });\n\t            prefixes.push({ name: 'Misses', abbreviation: 'Mrs.' });\n\t        }\n\n\t        return prefixes;\n\t    };\n\n\t    // Alias for name_prefix\n\t    Chance.prototype.prefix = function (options) {\n\t        return this.name_prefix(options);\n\t    };\n\n\t    Chance.prototype.name_prefix = function (options) {\n\t        options = initOptions(options, { gender: \"all\" });\n\t        return options.full ?\n\t            this.pick(this.name_prefixes(options.gender)).name :\n\t            this.pick(this.name_prefixes(options.gender)).abbreviation;\n\t    };\n\n\t    Chance.prototype.ssn = function (options) {\n\t        options = initOptions(options, {ssnFour: false, dashes: true});\n\t        var ssn_pool = \"1234567890\",\n\t            ssn,\n\t            dash = options.dashes ? '-' : '';\n\n\t        if(!options.ssnFour) {\n\t            ssn = this.string({pool: ssn_pool, length: 3}) + dash +\n\t            this.string({pool: ssn_pool, length: 2}) + dash +\n\t            this.string({pool: ssn_pool, length: 4});\n\t        } else {\n\t            ssn = this.string({pool: ssn_pool, length: 4});\n\t        }\n\t        return ssn;\n\t    };\n\n\t    // Return the list of available name suffixes\n\t    Chance.prototype.name_suffixes = function () {\n\t        var suffixes = [\n\t            { name: 'Doctor of Osteopathic Medicine', abbreviation: 'D.O.' },\n\t            { name: 'Doctor of Philosophy', abbreviation: 'Ph.D.' },\n\t            { name: 'Esquire', abbreviation: 'Esq.' },\n\t            { name: 'Junior', abbreviation: 'Jr.' },\n\t            { name: 'Juris Doctor', abbreviation: 'J.D.' },\n\t            { name: 'Master of Arts', abbreviation: 'M.A.' },\n\t            { name: 'Master of Business Administration', abbreviation: 'M.B.A.' },\n\t            { name: 'Master of Science', abbreviation: 'M.S.' },\n\t            { name: 'Medical Doctor', abbreviation: 'M.D.' },\n\t            { name: 'Senior', abbreviation: 'Sr.' },\n\t            { name: 'The Third', abbreviation: 'III' },\n\t            { name: 'The Fourth', abbreviation: 'IV' }\n\t        ];\n\t        return suffixes;\n\t    };\n\n\t    // Alias for name_suffix\n\t    Chance.prototype.suffix = function (options) {\n\t        return this.name_suffix(options);\n\t    };\n\n\t    Chance.prototype.name_suffix = function (options) {\n\t        options = initOptions(options);\n\t        return options.full ?\n\t            this.pick(this.name_suffixes()).name :\n\t            this.pick(this.name_suffixes()).abbreviation;\n\t    };\n\n\t    // -- End Person --\n\n\t    // -- Mobile --\n\t    // Android GCM Registration ID\n\t    Chance.prototype.android_id = function () {\n\t        return \"APA91\" + this.string({ pool: \"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_\", length: 178 });\n\t    };\n\n\t    // Apple Push Token\n\t    Chance.prototype.apple_token = function () {\n\t        return this.string({ pool: \"abcdef1234567890\", length: 64 });\n\t    };\n\n\t    // Windows Phone 8 ANID2\n\t    Chance.prototype.wp8_anid2 = function () {\n\t        return base64( this.hash( { length : 32 } ) );\n\t    };\n\n\t    // Windows Phone 7 ANID\n\t    Chance.prototype.wp7_anid = function () {\n\t        return 'A=' + this.guid().replace(/-/g, '').toUpperCase() + '&E=' + this.hash({ length:3 }) + '&W=' + this.integer({ min:0, max:9 });\n\t    };\n\n\t    // BlackBerry Device PIN\n\t    Chance.prototype.bb_pin = function () {\n\t        return this.hash({ length: 8 });\n\t    };\n\n\t    // -- End Mobile --\n\n\t    // -- Web --\n\t    Chance.prototype.color = function (options) {\n\t        function gray(value, delimiter) {\n\t            return [value, value, value].join(delimiter || '');\n\t        }\n\n\t        options = initOptions(options, {format: this.pick(['hex', 'shorthex', 'rgb', '0x']), grayscale: false, casing: 'lower'});\n\t        var isGrayscale = options.grayscale;\n\t        var colorValue;\n\n\t        if (options.format === 'hex') {\n\t            colorValue = '#' + (isGrayscale ? gray(this.hash({length: 2})) : this.hash({length: 6}));\n\n\t        } else if (options.format === 'shorthex') {\n\t            colorValue = '#' + (isGrayscale ? gray(this.hash({length: 1})) : this.hash({length: 3}));\n\n\t        } else if (options.format === 'rgb') {\n\t            if (isGrayscale) {\n\t                colorValue = 'rgb(' + gray(this.natural({max: 255}), ',') + ')';\n\t            } else {\n\t                colorValue = 'rgb(' + this.natural({max: 255}) + ',' + this.natural({max: 255}) + ',' + this.natural({max: 255}) + ')';\n\t            }\n\t        } else if (options.format === '0x') {\n\t            colorValue = '0x' + (isGrayscale ? gray(this.hash({length: 2})) : this.hash({length: 6}));\n\t        } else {\n\t            throw new Error('Invalid format provided. Please provide one of \"hex\", \"shorthex\", \"rgb\" or \"0x\".');\n\t        }\n\n\t        if (options.casing === 'upper' ) {\n\t            colorValue = colorValue.toUpperCase();\n\t        }\n\n\t        return colorValue;\n\t    };\n\n\t    Chance.prototype.domain = function (options) {\n\t        options = initOptions(options);\n\t        return this.word() + '.' + (options.tld || this.tld());\n\t    };\n\n\t    Chance.prototype.email = function (options) {\n\t        options = initOptions(options);\n\t        return this.word({length: options.length}) + '@' + (options.domain || this.domain());\n\t    };\n\n\t    Chance.prototype.fbid = function () {\n\t        return parseInt('10000' + this.natural({max: 100000000000}), 10);\n\t    };\n\n\t    Chance.prototype.google_analytics = function () {\n\t        var account = this.pad(this.natural({max: 999999}), 6);\n\t        var property = this.pad(this.natural({max: 99}), 2);\n\n\t        return 'UA-' + account + '-' + property;\n\t    };\n\n\t    Chance.prototype.hashtag = function () {\n\t        return '#' + this.word();\n\t    };\n\n\t    Chance.prototype.ip = function () {\n\t        // Todo: This could return some reserved IPs. See http://vq.io/137dgYy\n\t        // this should probably be updated to account for that rare as it may be\n\t        return this.natural({max: 255}) + '.' +\n\t               this.natural({max: 255}) + '.' +\n\t               this.natural({max: 255}) + '.' +\n\t               this.natural({max: 255});\n\t    };\n\n\t    Chance.prototype.ipv6 = function () {\n\t        var ip_addr = this.n(this.hash, 8, {length: 4});\n\n\t        return ip_addr.join(\":\");\n\t    };\n\n\t    Chance.prototype.klout = function () {\n\t        return this.natural({min: 1, max: 99});\n\t    };\n\n\t    Chance.prototype.tlds = function () {\n\t        return ['com', 'org', 'edu', 'gov', 'co.uk', 'net', 'io'];\n\t    };\n\n\t    Chance.prototype.tld = function () {\n\t        return this.pick(this.tlds());\n\t    };\n\n\t    Chance.prototype.twitter = function () {\n\t        return '@' + this.word();\n\t    };\n\n\t    Chance.prototype.url = function (options) {\n\t        options = initOptions(options, { protocol: \"http\", domain: this.domain(options), domain_prefix: \"\", path: this.word(), extensions: []});\n\n\t        var extension = options.extensions.length > 0 ? \".\" + this.pick(options.extensions) : \"\";\n\t        var domain = options.domain_prefix ? options.domain_prefix + \".\" + options.domain : options.domain;\n\n\t        return options.protocol + \"://\" + domain + \"/\" + options.path + extension;\n\t    };\n\n\t    // -- End Web --\n\n\t    // -- Location --\n\n\t    Chance.prototype.address = function (options) {\n\t        options = initOptions(options);\n\t        return this.natural({min: 5, max: 2000}) + ' ' + this.street(options);\n\t    };\n\n\t    Chance.prototype.altitude = function (options) {\n\t        options = initOptions(options, {fixed : 5, max: 8848});\n\t        return this.floating({min: 0, max: options.max, fixed: options.fixed});\n\t    };\n\n\t    Chance.prototype.areacode = function (options) {\n\t        options = initOptions(options, {parens : true});\n\t        // Don't want area codes to start with 1, or have a 9 as the second digit\n\t        var areacode = this.natural({min: 2, max: 9}).toString() +\n\t                this.natural({min: 0, max: 8}).toString() +\n\t                this.natural({min: 0, max: 9}).toString();\n\n\t        return options.parens ? '(' + areacode + ')' : areacode;\n\t    };\n\n\t    Chance.prototype.city = function () {\n\t        return this.capitalize(this.word({syllables: 3}));\n\t    };\n\n\t    Chance.prototype.coordinates = function (options) {\n\t        options = initOptions(options);\n\t        return this.latitude(options) + ', ' + this.longitude(options);\n\t    };\n\n\t    Chance.prototype.countries = function () {\n\t        return this.get(\"countries\");\n\t    };\n\n\t    Chance.prototype.country = function (options) {\n\t        options = initOptions(options);\n\t        var country = this.pick(this.countries());\n\t        return options.full ? country.name : country.abbreviation;\n\t    };\n\n\t    Chance.prototype.depth = function (options) {\n\t        options = initOptions(options, {fixed: 5, min: -2550});\n\t        return this.floating({min: options.min, max: 0, fixed: options.fixed});\n\t    };\n\n\t    Chance.prototype.geohash = function (options) {\n\t        options = initOptions(options, { length: 7 });\n\t        return this.string({ length: options.length, pool: '0123456789bcdefghjkmnpqrstuvwxyz' });\n\t    };\n\n\t    Chance.prototype.geojson = function (options) {\n\t        options = initOptions(options);\n\t        return this.latitude(options) + ', ' + this.longitude(options) + ', ' + this.altitude(options);\n\t    };\n\n\t    Chance.prototype.latitude = function (options) {\n\t        options = initOptions(options, {fixed: 5, min: -90, max: 90});\n\t        return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n\t    };\n\n\t    Chance.prototype.longitude = function (options) {\n\t        options = initOptions(options, {fixed: 5, min: -180, max: 180});\n\t        return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n\t    };\n\n\t    Chance.prototype.phone = function (options) {\n\t        var self = this,\n\t            numPick,\n\t            ukNum = function (parts) {\n\t                var section = [];\n\t                //fills the section part of the phone number with random numbers.\n\t                parts.sections.forEach(function(n) {\n\t                    section.push(self.string({ pool: '0123456789', length: n}));\n\t                });\n\t                return parts.area + section.join(' ');\n\t            };\n\t        options = initOptions(options, {\n\t            formatted: true,\n\t            country: 'us',\n\t            mobile: false\n\t        });\n\t        if (!options.formatted) {\n\t            options.parens = false;\n\t        }\n\t        var phone;\n\t        switch (options.country) {\n\t            case 'fr':\n\t                if (!options.mobile) {\n\t                    numPick = this.pick([\n\t                        // Valid zone and département codes.\n\t                        '01' + this.pick(['30', '34', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '53', '55', '56', '58', '60', '64', '69', '70', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83']) + self.string({ pool: '0123456789', length: 6}),\n\t                        '02' + this.pick(['14', '18', '22', '23', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '56', '57', '61', '62', '69', '72', '76', '77', '78', '85', '90', '96', '97', '98', '99']) + self.string({ pool: '0123456789', length: 6}),\n\t                        '03' + this.pick(['10', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '39', '44', '45', '51', '52', '54', '55', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90']) + self.string({ pool: '0123456789', length: 6}),\n\t                        '04' + this.pick(['11', '13', '15', '20', '22', '26', '27', '30', '32', '34', '37', '42', '43', '44', '50', '56', '57', '63', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '88', '89', '90', '91', '92', '93', '94', '95', '97', '98']) + self.string({ pool: '0123456789', length: 6}),\n\t                        '05' + this.pick(['08', '16', '17', '19', '24', '31', '32', '33', '34', '35', '40', '45', '46', '47', '49', '53', '55', '56', '57', '58', '59', '61', '62', '63', '64', '65', '67', '79', '81', '82', '86', '87', '90', '94']) + self.string({ pool: '0123456789', length: 6}),\n\t                        '09' + self.string({ pool: '0123456789', length: 8}),\n\t                    ]);\n\t                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n\t                } else {\n\t                    numPick = this.pick(['06', '07']) + self.string({ pool: '0123456789', length: 8});\n\t                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n\t                }\n\t                break;\n\t            case 'uk':\n\t                if (!options.mobile) {\n\t                    numPick = this.pick([\n\t                        //valid area codes of major cities/counties followed by random numbers in required format.\n\t                        { area: '01' + this.character({ pool: '234569' }) + '1 ', sections: [3,4] },\n\t                        { area: '020 ' + this.character({ pool: '378' }), sections: [3,4] },\n\t                        { area: '023 ' + this.character({ pool: '89' }), sections: [3,4] },\n\t                        { area: '024 7', sections: [3,4] },\n\t                        { area: '028 ' + this.pick(['25','28','37','71','82','90','92','95']), sections: [2,4] },\n\t                        { area: '012' + this.pick(['04','08','54','76','97','98']) + ' ', sections: [5] },\n\t                        { area: '013' + this.pick(['63','64','84','86']) + ' ', sections: [5] },\n\t                        { area: '014' + this.pick(['04','20','60','61','80','88']) + ' ', sections: [5] },\n\t                        { area: '015' + this.pick(['24','27','62','66']) + ' ', sections: [5] },\n\t                        { area: '016' + this.pick(['06','29','35','47','59','95']) + ' ', sections: [5] },\n\t                        { area: '017' + this.pick(['26','44','50','68']) + ' ', sections: [5] },\n\t                        { area: '018' + this.pick(['27','37','84','97']) + ' ', sections: [5] },\n\t                        { area: '019' + this.pick(['00','05','35','46','49','63','95']) + ' ', sections: [5] }\n\t                    ]);\n\t                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '', 'g');\n\t                } else {\n\t                    numPick = this.pick([\n\t                        { area: '07' + this.pick(['4','5','7','8','9']), sections: [2,6] },\n\t                        { area: '07624 ', sections: [6] }\n\t                    ]);\n\t                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '');\n\t                }\n\t                break;\n\t            case 'us':\n\t                var areacode = this.areacode(options).toString();\n\t                var exchange = this.natural({ min: 2, max: 9 }).toString() +\n\t                    this.natural({ min: 0, max: 9 }).toString() +\n\t                    this.natural({ min: 0, max: 9 }).toString();\n\t                var subscriber = this.natural({ min: 1000, max: 9999 }).toString(); // this could be random [0-9]{4}\n\t                phone = options.formatted ? areacode + ' ' + exchange + '-' + subscriber : areacode + exchange + subscriber;\n\t        }\n\t        return phone;\n\t    };\n\n\t    Chance.prototype.postal = function () {\n\t        // Postal District\n\t        var pd = this.character({pool: \"XVTSRPNKLMHJGECBA\"});\n\t        // Forward Sortation Area (FSA)\n\t        var fsa = pd + this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"});\n\t        // Local Delivery Unut (LDU)\n\t        var ldu = this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"}) + this.natural({max: 9});\n\n\t        return fsa + \" \" + ldu;\n\t    };\n\n\t    Chance.prototype.provinces = function () {\n\t        return this.get(\"provinces\");\n\t    };\n\n\t    Chance.prototype.province = function (options) {\n\t        return (options && options.full) ?\n\t            this.pick(this.provinces()).name :\n\t            this.pick(this.provinces()).abbreviation;\n\t    };\n\n\t    Chance.prototype.state = function (options) {\n\t        return (options && options.full) ?\n\t            this.pick(this.states(options)).name :\n\t            this.pick(this.states(options)).abbreviation;\n\t    };\n\n\t    Chance.prototype.states = function (options) {\n\t        options = initOptions(options);\n\n\t        var states,\n\t            us_states_and_dc = this.get(\"us_states_and_dc\"),\n\t            territories = this.get(\"territories\"),\n\t            armed_forces = this.get(\"armed_forces\");\n\n\t        states = us_states_and_dc;\n\n\t        if (options.territories) {\n\t            states = states.concat(territories);\n\t        }\n\t        if (options.armed_forces) {\n\t            states = states.concat(armed_forces);\n\t        }\n\n\t        return states;\n\t    };\n\n\t    Chance.prototype.street = function (options) {\n\t        options = initOptions(options);\n\n\t        var street = this.word({syllables: 2});\n\t        street = this.capitalize(street);\n\t        street += ' ';\n\t        street += options.short_suffix ?\n\t            this.street_suffix().abbreviation :\n\t            this.street_suffix().name;\n\t        return street;\n\t    };\n\n\t    Chance.prototype.street_suffix = function () {\n\t        return this.pick(this.street_suffixes());\n\t    };\n\n\t    Chance.prototype.street_suffixes = function () {\n\t        // These are the most common suffixes.\n\t        return this.get(\"street_suffixes\");\n\t    };\n\n\t    // Note: only returning US zip codes, internationalization will be a whole\n\t    // other beast to tackle at some point.\n\t    Chance.prototype.zip = function (options) {\n\t        var zip = this.n(this.natural, 5, {max: 9});\n\n\t        if (options && options.plusfour === true) {\n\t            zip.push('-');\n\t            zip = zip.concat(this.n(this.natural, 4, {max: 9}));\n\t        }\n\n\t        return zip.join(\"\");\n\t    };\n\n\t    // -- End Location --\n\n\t    // -- Time\n\n\t    Chance.prototype.ampm = function () {\n\t        return this.bool() ? 'am' : 'pm';\n\t    };\n\n\t    Chance.prototype.date = function (options) {\n\t        var date_string, date;\n\n\t        // If interval is specified we ignore preset\n\t        if(options && (options.min || options.max)) {\n\t            options = initOptions(options, {\n\t                american: true,\n\t                string: false\n\t            });\n\t            var min = typeof options.min !== \"undefined\" ? options.min.getTime() : 1;\n\t            // 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. http://es5.github.io/#x15.9.1.1\n\t            var max = typeof options.max !== \"undefined\" ? options.max.getTime() : 8640000000000000;\n\n\t            date = new Date(this.natural({min: min, max: max}));\n\t        } else {\n\t            var m = this.month({raw: true});\n\n\t            options = initOptions(options, {\n\t                year: parseInt(this.year(), 10),\n\t                // Necessary to subtract 1 because Date() 0-indexes month but not day or year\n\t                // for some reason.\n\t                month: m.numeric - 1,\n\t                day: this.natural({min: 1, max: m.days}),\n\t                hour: this.hour(),\n\t                minute: this.minute(),\n\t                second: this.second(),\n\t                millisecond: this.millisecond(),\n\t                american: true,\n\t                string: false\n\t            });\n\n\t            date = new Date(options.year, options.month, options.day, options.hour, options.minute, options.second, options.millisecond);\n\t        }\n\n\t        if (options.american) {\n\t            // Adding 1 to the month is necessary because Date() 0-indexes\n\t            // months but not day for some odd reason.\n\t            date_string = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();\n\t        } else {\n\t            date_string = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n\t        }\n\n\t        return options.string ? date_string : date;\n\t    };\n\n\t    Chance.prototype.hammertime = function (options) {\n\t        return this.date(options).getTime();\n\t    };\n\n\t    Chance.prototype.hour = function (options) {\n\t        options = initOptions(options, {min: 1, max: options && options.twentyfour ? 24 : 12});\n\n\t        testRange(options.min < 1, \"Chance: Min cannot be less than 1.\");\n\t        testRange(options.twentyfour && options.max > 24, \"Chance: Max cannot be greater than 24 for twentyfour option.\");\n\t        testRange(!options.twentyfour && options.max > 12, \"Chance: Max cannot be greater than 12.\");\n\t        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n\t        return this.natural({min: options.min, max: options.max});\n\t    };\n\n\t    Chance.prototype.millisecond = function () {\n\t        return this.natural({max: 999});\n\t    };\n\n\t    Chance.prototype.minute = Chance.prototype.second = function (options) {\n\t        options = initOptions(options, {min: 0, max: 59});\n\n\t        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n\t        testRange(options.max > 59, \"Chance: Max cannot be greater than 59.\");\n\t        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n\t        return this.natural({min: options.min, max: options.max});\n\t    };\n\n\t    Chance.prototype.month = function (options) {\n\t        options = initOptions(options, {min: 1, max: 12});\n\n\t        testRange(options.min < 1, \"Chance: Min cannot be less than 1.\");\n\t        testRange(options.max > 12, \"Chance: Max cannot be greater than 12.\");\n\t        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n\t        var month = this.pick(this.months().slice(options.min - 1, options.max));\n\t        return options.raw ? month : month.name;\n\t    };\n\n\t    Chance.prototype.months = function () {\n\t        return this.get(\"months\");\n\t    };\n\n\t    Chance.prototype.second = function () {\n\t        return this.natural({max: 59});\n\t    };\n\n\t    Chance.prototype.timestamp = function () {\n\t        return this.natural({min: 1, max: parseInt(new Date().getTime() / 1000, 10)});\n\t    };\n\n\t    Chance.prototype.year = function (options) {\n\t        // Default to current year as min if none specified\n\t        options = initOptions(options, {min: new Date().getFullYear()});\n\n\t        // Default to one century after current year as max if none specified\n\t        options.max = (typeof options.max !== \"undefined\") ? options.max : options.min + 100;\n\n\t        return this.natural(options).toString();\n\t    };\n\n\t    // -- End Time\n\n\t    // -- Finance --\n\n\t    Chance.prototype.cc = function (options) {\n\t        options = initOptions(options);\n\n\t        var type, number, to_generate;\n\n\t        type = (options.type) ?\n\t                    this.cc_type({ name: options.type, raw: true }) :\n\t                    this.cc_type({ raw: true });\n\n\t        number = type.prefix.split(\"\");\n\t        to_generate = type.length - type.prefix.length - 1;\n\n\t        // Generates n - 1 digits\n\t        number = number.concat(this.n(this.integer, to_generate, {min: 0, max: 9}));\n\n\t        // Generates the last digit according to Luhn algorithm\n\t        number.push(this.luhn_calculate(number.join(\"\")));\n\n\t        return number.join(\"\");\n\t    };\n\n\t    Chance.prototype.cc_types = function () {\n\t        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n\t        return this.get(\"cc_types\");\n\t    };\n\n\t    Chance.prototype.cc_type = function (options) {\n\t        options = initOptions(options);\n\t        var types = this.cc_types(),\n\t            type = null;\n\n\t        if (options.name) {\n\t            for (var i = 0; i < types.length; i++) {\n\t                // Accept either name or short_name to specify card type\n\t                if (types[i].name === options.name || types[i].short_name === options.name) {\n\t                    type = types[i];\n\t                    break;\n\t                }\n\t            }\n\t            if (type === null) {\n\t                throw new Error(\"Credit card type '\" + options.name + \"'' is not supported\");\n\t            }\n\t        } else {\n\t            type = this.pick(types);\n\t        }\n\n\t        return options.raw ? type : type.name;\n\t    };\n\n\t    //return all world currency by ISO 4217\n\t    Chance.prototype.currency_types = function () {\n\t        return this.get(\"currency_types\");\n\t    };\n\n\t    //return random world currency by ISO 4217\n\t    Chance.prototype.currency = function () {\n\t        return this.pick(this.currency_types());\n\t    };\n\n\t    //Return random correct currency exchange pair (e.g. EUR/USD) or array of currency code\n\t    Chance.prototype.currency_pair = function (returnAsString) {\n\t        var currencies = this.unique(this.currency, 2, {\n\t            comparator: function(arr, val) {\n\n\t                return arr.reduce(function(acc, item) {\n\t                    // If a match has been found, short circuit check and just return\n\t                    return acc || (item.code === val.code);\n\t                }, false);\n\t            }\n\t        });\n\n\t        if (returnAsString) {\n\t            return  currencies[0] + '/' + currencies[1];\n\t        } else {\n\t            return currencies;\n\t        }\n\t    };\n\n\t    Chance.prototype.dollar = function (options) {\n\t        // By default, a somewhat more sane max for dollar than all available numbers\n\t        options = initOptions(options, {max : 10000, min : 0});\n\n\t        var dollar = this.floating({min: options.min, max: options.max, fixed: 2}).toString(),\n\t            cents = dollar.split('.')[1];\n\n\t        if (cents === undefined) {\n\t            dollar += '.00';\n\t        } else if (cents.length < 2) {\n\t            dollar = dollar + '0';\n\t        }\n\n\t        if (dollar < 0) {\n\t            return '-$' + dollar.replace('-', '');\n\t        } else {\n\t            return '$' + dollar;\n\t        }\n\t    };\n\n\t    Chance.prototype.exp = function (options) {\n\t        options = initOptions(options);\n\t        var exp = {};\n\n\t        exp.year = this.exp_year();\n\n\t        // If the year is this year, need to ensure month is greater than the\n\t        // current month or this expiration will not be valid\n\t        if (exp.year === (new Date().getFullYear())) {\n\t            exp.month = this.exp_month({future: true});\n\t        } else {\n\t            exp.month = this.exp_month();\n\t        }\n\n\t        return options.raw ? exp : exp.month + '/' + exp.year;\n\t    };\n\n\t    Chance.prototype.exp_month = function (options) {\n\t        options = initOptions(options);\n\t        var month, month_int,\n\t            curMonth = new Date().getMonth();\n\n\t        if (options.future) {\n\t            do {\n\t                month = this.month({raw: true}).numeric;\n\t                month_int = parseInt(month, 10);\n\t            } while (month_int < curMonth);\n\t        } else {\n\t            month = this.month({raw: true}).numeric;\n\t        }\n\n\t        return month;\n\t    };\n\n\t    Chance.prototype.exp_year = function () {\n\t        return this.year({max: new Date().getFullYear() + 10});\n\t    };\n\n\t    // -- End Finance\n\n\t    // -- Miscellaneous --\n\n\t    // Dice - For all the board game geeks out there, myself included ;)\n\t    function diceFn (range) {\n\t        return function () {\n\t            return this.natural(range);\n\t        };\n\t    }\n\t    Chance.prototype.d4 = diceFn({min: 1, max: 4});\n\t    Chance.prototype.d6 = diceFn({min: 1, max: 6});\n\t    Chance.prototype.d8 = diceFn({min: 1, max: 8});\n\t    Chance.prototype.d10 = diceFn({min: 1, max: 10});\n\t    Chance.prototype.d12 = diceFn({min: 1, max: 12});\n\t    Chance.prototype.d20 = diceFn({min: 1, max: 20});\n\t    Chance.prototype.d30 = diceFn({min: 1, max: 30});\n\t    Chance.prototype.d100 = diceFn({min: 1, max: 100});\n\n\t    Chance.prototype.rpg = function (thrown, options) {\n\t        options = initOptions(options);\n\t        if (thrown === null) {\n\t            throw new Error(\"A type of die roll must be included\");\n\t        } else {\n\t            var bits = thrown.toLowerCase().split(\"d\"),\n\t                rolls = [];\n\n\t            if (bits.length !== 2 || !parseInt(bits[0], 10) || !parseInt(bits[1], 10)) {\n\t                throw new Error(\"Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die\");\n\t            }\n\t            for (var i = bits[0]; i > 0; i--) {\n\t                rolls[i - 1] = this.natural({min: 1, max: bits[1]});\n\t            }\n\t            return (typeof options.sum !== 'undefined' && options.sum) ? rolls.reduce(function (p, c) { return p + c; }) : rolls;\n\t        }\n\t    };\n\n\t    // Guid\n\t    Chance.prototype.guid = function (options) {\n\t        options = initOptions(options, { version: 5 });\n\n\t        var guid_pool = \"abcdef1234567890\",\n\t            variant_pool = \"ab89\",\n\t            guid = this.string({ pool: guid_pool, length: 8 }) + '-' +\n\t                   this.string({ pool: guid_pool, length: 4 }) + '-' +\n\t                   // The Version\n\t                   options.version +\n\t                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n\t                   // The Variant\n\t                   this.string({ pool: variant_pool, length: 1 }) +\n\t                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n\t                   this.string({ pool: guid_pool, length: 12 });\n\t        return guid;\n\t    };\n\n\t    // Hash\n\t    Chance.prototype.hash = function (options) {\n\t        options = initOptions(options, {length : 40, casing: 'lower'});\n\t        var pool = options.casing === 'upper' ? HEX_POOL.toUpperCase() : HEX_POOL;\n\t        return this.string({pool: pool, length: options.length});\n\t    };\n\n\t    Chance.prototype.luhn_check = function (num) {\n\t        var str = num.toString();\n\t        var checkDigit = +str.substring(str.length - 1);\n\t        return checkDigit === this.luhn_calculate(+str.substring(0, str.length - 1));\n\t    };\n\n\t    Chance.prototype.luhn_calculate = function (num) {\n\t        var digits = num.toString().split(\"\").reverse();\n\t        var sum = 0;\n\t        var digit;\n\n\t        for (var i = 0, l = digits.length; l > i; ++i) {\n\t            digit = +digits[i];\n\t            if (i % 2 === 0) {\n\t                digit *= 2;\n\t                if (digit > 9) {\n\t                    digit -= 9;\n\t                }\n\t            }\n\t            sum += digit;\n\t        }\n\t        return (sum * 9) % 10;\n\t    };\n\n\n\t    var data = {\n\n\t        firstNames: {\n\t            \"male\": [\"James\", \"John\", \"Robert\", \"Michael\", \"William\", \"David\", \"Richard\", \"Joseph\", \"Charles\", \"Thomas\", \"Christopher\", \"Daniel\", \"Matthew\", \"George\", \"Donald\", \"Anthony\", \"Paul\", \"Mark\", \"Edward\", \"Steven\", \"Kenneth\", \"Andrew\", \"Brian\", \"Joshua\", \"Kevin\", \"Ronald\", \"Timothy\", \"Jason\", \"Jeffrey\", \"Frank\", \"Gary\", \"Ryan\", \"Nicholas\", \"Eric\", \"Stephen\", \"Jacob\", \"Larry\", \"Jonathan\", \"Scott\", \"Raymond\", \"Justin\", \"Brandon\", \"Gregory\", \"Samuel\", \"Benjamin\", \"Patrick\", \"Jack\", \"Henry\", \"Walter\", \"Dennis\", \"Jerry\", \"Alexander\", \"Peter\", \"Tyler\", \"Douglas\", \"Harold\", \"Aaron\", \"Jose\", \"Adam\", \"Arthur\", \"Zachary\", \"Carl\", \"Nathan\", \"Albert\", \"Kyle\", \"Lawrence\", \"Joe\", \"Willie\", \"Gerald\", \"Roger\", \"Keith\", \"Jeremy\", \"Terry\", \"Harry\", \"Ralph\", \"Sean\", \"Jesse\", \"Roy\", \"Louis\", \"Billy\", \"Austin\", \"Bruce\", \"Eugene\", \"Christian\", \"Bryan\", \"Wayne\", \"Russell\", \"Howard\", \"Fred\", \"Ethan\", \"Jordan\", \"Philip\", \"Alan\", \"Juan\", \"Randy\", \"Vincent\", \"Bobby\", \"Dylan\", \"Johnny\", \"Phillip\", \"Victor\", \"Clarence\", \"Ernest\", \"Martin\", \"Craig\", \"Stanley\", \"Shawn\", \"Travis\", \"Bradley\", \"Leonard\", \"Earl\", \"Gabriel\", \"Jimmy\", \"Francis\", \"Todd\", \"Noah\", \"Danny\", \"Dale\", \"Cody\", \"Carlos\", \"Allen\", \"Frederick\", \"Logan\", \"Curtis\", \"Alex\", \"Joel\", \"Luis\", \"Norman\", \"Marvin\", \"Glenn\", \"Tony\", \"Nathaniel\", \"Rodney\", \"Melvin\", \"Alfred\", \"Steve\", \"Cameron\", \"Chad\", \"Edwin\", \"Caleb\", \"Evan\", \"Antonio\", \"Lee\", \"Herbert\", \"Jeffery\", \"Isaac\", \"Derek\", \"Ricky\", \"Marcus\", \"Theodore\", \"Elijah\", \"Luke\", \"Jesus\", \"Eddie\", \"Troy\", \"Mike\", \"Dustin\", \"Ray\", \"Adrian\", \"Bernard\", \"Leroy\", \"Angel\", \"Randall\", \"Wesley\", \"Ian\", \"Jared\", \"Mason\", \"Hunter\", \"Calvin\", \"Oscar\", \"Clifford\", \"Jay\", \"Shane\", \"Ronnie\", \"Barry\", \"Lucas\", \"Corey\", \"Manuel\", \"Leo\", \"Tommy\", \"Warren\", \"Jackson\", \"Isaiah\", \"Connor\", \"Don\", \"Dean\", \"Jon\", \"Julian\", \"Miguel\", \"Bill\", \"Lloyd\", \"Charlie\", \"Mitchell\", \"Leon\", \"Jerome\", \"Darrell\", \"Jeremiah\", \"Alvin\", \"Brett\", \"Seth\", \"Floyd\", \"Jim\", \"Blake\", \"Micheal\", \"Gordon\", \"Trevor\", \"Lewis\", \"Erik\", \"Edgar\", \"Vernon\", \"Devin\", \"Gavin\", \"Jayden\", \"Chris\", \"Clyde\", \"Tom\", \"Derrick\", \"Mario\", \"Brent\", \"Marc\", \"Herman\", \"Chase\", \"Dominic\", \"Ricardo\", \"Franklin\", \"Maurice\", \"Max\", \"Aiden\", \"Owen\", \"Lester\", \"Gilbert\", \"Elmer\", \"Gene\", \"Francisco\", \"Glen\", \"Cory\", \"Garrett\", \"Clayton\", \"Sam\", \"Jorge\", \"Chester\", \"Alejandro\", \"Jeff\", \"Harvey\", \"Milton\", \"Cole\", \"Ivan\", \"Andre\", \"Duane\", \"Landon\"],\n\t            \"female\": [\"Mary\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\", \"Alice\", \"Bertha\", \"Sarah\", \"Annie\", \"Clara\", \"Ella\", \"Florence\", \"Cora\", \"Martha\", \"Laura\", \"Nellie\", \"Grace\", \"Carrie\", \"Maude\", \"Mabel\", \"Bessie\", \"Jennie\", \"Gertrude\", \"Julia\", \"Hattie\", \"Edith\", \"Mattie\", \"Rose\", \"Catherine\", \"Lillian\", \"Ada\", \"Lillie\", \"Helen\", \"Jessie\", \"Louise\", \"Ethel\", \"Lula\", \"Myrtle\", \"Eva\", \"Frances\", \"Lena\", \"Lucy\", \"Edna\", \"Maggie\", \"Pearl\", \"Daisy\", \"Fannie\", \"Josephine\", \"Dora\", \"Rosa\", \"Katherine\", \"Agnes\", \"Marie\", \"Nora\", \"May\", \"Mamie\", \"Blanche\", \"Stella\", \"Ellen\", \"Nancy\", \"Effie\", \"Sallie\", \"Nettie\", \"Della\", \"Lizzie\", \"Flora\", \"Susie\", \"Maud\", \"Mae\", \"Etta\", \"Harriet\", \"Sadie\", \"Caroline\", \"Katie\", \"Lydia\", \"Elsie\", \"Kate\", \"Susan\", \"Mollie\", \"Alma\", \"Addie\", \"Georgia\", \"Eliza\", \"Lulu\", \"Nannie\", \"Lottie\", \"Amanda\", \"Belle\", \"Charlotte\", \"Rebecca\", \"Ruth\", \"Viola\", \"Olive\", \"Amelia\", \"Hannah\", \"Jane\", \"Virginia\", \"Emily\", \"Matilda\", \"Irene\", \"Kathryn\", \"Esther\", \"Willie\", \"Henrietta\", \"Ollie\", \"Amy\", \"Rachel\", \"Sara\", \"Estella\", \"Theresa\", \"Augusta\", \"Ora\", \"Pauline\", \"Josie\", \"Lola\", \"Sophia\", \"Leona\", \"Anne\", \"Mildred\", \"Ann\", \"Beulah\", \"Callie\", \"Lou\", \"Delia\", \"Eleanor\", \"Barbara\", \"Iva\", \"Louisa\", \"Maria\", \"Mayme\", \"Evelyn\", \"Estelle\", \"Nina\", \"Betty\", \"Marion\", \"Bettie\", \"Dorothy\", \"Luella\", \"Inez\", \"Lela\", \"Rosie\", \"Allie\", \"Millie\", \"Janie\", \"Cornelia\", \"Victoria\", \"Ruby\", \"Winifred\", \"Alta\", \"Celia\", \"Christine\", \"Beatrice\", \"Birdie\", \"Harriett\", \"Mable\", \"Myra\", \"Sophie\", \"Tillie\", \"Isabel\", \"Sylvia\", \"Carolyn\", \"Isabelle\", \"Leila\", \"Sally\", \"Ina\", \"Essie\", \"Bertie\", \"Nell\", \"Alberta\", \"Katharine\", \"Lora\", \"Rena\", \"Mina\", \"Rhoda\", \"Mathilda\", \"Abbie\", \"Eula\", \"Dollie\", \"Hettie\", \"Eunice\", \"Fanny\", \"Ola\", \"Lenora\", \"Adelaide\", \"Christina\", \"Lelia\", \"Nelle\", \"Sue\", \"Johanna\", \"Lilly\", \"Lucinda\", \"Minerva\", \"Lettie\", \"Roxie\", \"Cynthia\", \"Helena\", \"Hilda\", \"Hulda\", \"Bernice\", \"Genevieve\", \"Jean\", \"Cordelia\", \"Marian\", \"Francis\", \"Jeanette\", \"Adeline\", \"Gussie\", \"Leah\", \"Lois\", \"Lura\", \"Mittie\", \"Hallie\", \"Isabella\", \"Olga\", \"Phoebe\", \"Teresa\", \"Hester\", \"Lida\", \"Lina\", \"Winnie\", \"Claudia\", \"Marguerite\", \"Vera\", \"Cecelia\", \"Bess\", \"Emilie\", \"John\", \"Rosetta\", \"Verna\", \"Myrtie\", \"Cecilia\", \"Elva\", \"Olivia\", \"Ophelia\", \"Georgie\", \"Elnora\", \"Violet\", \"Adele\", \"Lily\", \"Linnie\", \"Loretta\", \"Madge\", \"Polly\", \"Virgie\", \"Eugenia\", \"Lucile\", \"Lucille\", \"Mabelle\", \"Rosalie\"]\n\t        },\n\n\t        lastNames: ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Thompson', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis', 'Lee', 'Walker', 'Hall', 'Allen', 'Young', 'Hernandez', 'King', 'Wright', 'Lopez', 'Hill', 'Scott', 'Green', 'Adams', 'Baker', 'Gonzalez', 'Nelson', 'Carter', 'Mitchell', 'Perez', 'Roberts', 'Turner', 'Phillips', 'Campbell', 'Parker', 'Evans', 'Edwards', 'Collins', 'Stewart', 'Sanchez', 'Morris', 'Rogers', 'Reed', 'Cook', 'Morgan', 'Bell', 'Murphy', 'Bailey', 'Rivera', 'Cooper', 'Richardson', 'Cox', 'Howard', 'Ward', 'Torres', 'Peterson', 'Gray', 'Ramirez', 'James', 'Watson', 'Brooks', 'Kelly', 'Sanders', 'Price', 'Bennett', 'Wood', 'Barnes', 'Ross', 'Henderson', 'Coleman', 'Jenkins', 'Perry', 'Powell', 'Long', 'Patterson', 'Hughes', 'Flores', 'Washington', 'Butler', 'Simmons', 'Foster', 'Gonzales', 'Bryant', 'Alexander', 'Russell', 'Griffin', 'Diaz', 'Hayes', 'Myers', 'Ford', 'Hamilton', 'Graham', 'Sullivan', 'Wallace', 'Woods', 'Cole', 'West', 'Jordan', 'Owens', 'Reynolds', 'Fisher', 'Ellis', 'Harrison', 'Gibson', 'McDonald', 'Cruz', 'Marshall', 'Ortiz', 'Gomez', 'Murray', 'Freeman', 'Wells', 'Webb', 'Simpson', 'Stevens', 'Tucker', 'Porter', 'Hunter', 'Hicks', 'Crawford', 'Henry', 'Boyd', 'Mason', 'Morales', 'Kennedy', 'Warren', 'Dixon', 'Ramos', 'Reyes', 'Burns', 'Gordon', 'Shaw', 'Holmes', 'Rice', 'Robertson', 'Hunt', 'Black', 'Daniels', 'Palmer', 'Mills', 'Nichols', 'Grant', 'Knight', 'Ferguson', 'Rose', 'Stone', 'Hawkins', 'Dunn', 'Perkins', 'Hudson', 'Spencer', 'Gardner', 'Stephens', 'Payne', 'Pierce', 'Berry', 'Matthews', 'Arnold', 'Wagner', 'Willis', 'Ray', 'Watkins', 'Olson', 'Carroll', 'Duncan', 'Snyder', 'Hart', 'Cunningham', 'Bradley', 'Lane', 'Andrews', 'Ruiz', 'Harper', 'Fox', 'Riley', 'Armstrong', 'Carpenter', 'Weaver', 'Greene', 'Lawrence', 'Elliott', 'Chavez', 'Sims', 'Austin', 'Peters', 'Kelley', 'Franklin', 'Lawson', 'Fields', 'Gutierrez', 'Ryan', 'Schmidt', 'Carr', 'Vasquez', 'Castillo', 'Wheeler', 'Chapman', 'Oliver', 'Montgomery', 'Richards', 'Williamson', 'Johnston', 'Banks', 'Meyer', 'Bishop', 'McCoy', 'Howell', 'Alvarez', 'Morrison', 'Hansen', 'Fernandez', 'Garza', 'Harvey', 'Little', 'Burton', 'Stanley', 'Nguyen', 'George', 'Jacobs', 'Reid', 'Kim', 'Fuller', 'Lynch', 'Dean', 'Gilbert', 'Garrett', 'Romero', 'Welch', 'Larson', 'Frazier', 'Burke', 'Hanson', 'Day', 'Mendoza', 'Moreno', 'Bowman', 'Medina', 'Fowler', 'Brewer', 'Hoffman', 'Carlson', 'Silva', 'Pearson', 'Holland', 'Douglas', 'Fleming', 'Jensen', 'Vargas', 'Byrd', 'Davidson', 'Hopkins', 'May', 'Terry', 'Herrera', 'Wade', 'Soto', 'Walters', 'Curtis', 'Neal', 'Caldwell', 'Lowe', 'Jennings', 'Barnett', 'Graves', 'Jimenez', 'Horton', 'Shelton', 'Barrett', 'Obrien', 'Castro', 'Sutton', 'Gregory', 'McKinney', 'Lucas', 'Miles', 'Craig', 'Rodriquez', 'Chambers', 'Holt', 'Lambert', 'Fletcher', 'Watts', 'Bates', 'Hale', 'Rhodes', 'Pena', 'Beck', 'Newman', 'Haynes', 'McDaniel', 'Mendez', 'Bush', 'Vaughn', 'Parks', 'Dawson', 'Santiago', 'Norris', 'Hardy', 'Love', 'Steele', 'Curry', 'Powers', 'Schultz', 'Barker', 'Guzman', 'Page', 'Munoz', 'Ball', 'Keller', 'Chandler', 'Weber', 'Leonard', 'Walsh', 'Lyons', 'Ramsey', 'Wolfe', 'Schneider', 'Mullins', 'Benson', 'Sharp', 'Bowen', 'Daniel', 'Barber', 'Cummings', 'Hines', 'Baldwin', 'Griffith', 'Valdez', 'Hubbard', 'Salazar', 'Reeves', 'Warner', 'Stevenson', 'Burgess', 'Santos', 'Tate', 'Cross', 'Garner', 'Mann', 'Mack', 'Moss', 'Thornton', 'Dennis', 'McGee', 'Farmer', 'Delgado', 'Aguilar', 'Vega', 'Glover', 'Manning', 'Cohen', 'Harmon', 'Rodgers', 'Robbins', 'Newton', 'Todd', 'Blair', 'Higgins', 'Ingram', 'Reese', 'Cannon', 'Strickland', 'Townsend', 'Potter', 'Goodwin', 'Walton', 'Rowe', 'Hampton', 'Ortega', 'Patton', 'Swanson', 'Joseph', 'Francis', 'Goodman', 'Maldonado', 'Yates', 'Becker', 'Erickson', 'Hodges', 'Rios', 'Conner', 'Adkins', 'Webster', 'Norman', 'Malone', 'Hammond', 'Flowers', 'Cobb', 'Moody', 'Quinn', 'Blake', 'Maxwell', 'Pope', 'Floyd', 'Osborne', 'Paul', 'McCarthy', 'Guerrero', 'Lindsey', 'Estrada', 'Sandoval', 'Gibbs', 'Tyler', 'Gross', 'Fitzgerald', 'Stokes', 'Doyle', 'Sherman', 'Saunders', 'Wise', 'Colon', 'Gill', 'Alvarado', 'Greer', 'Padilla', 'Simon', 'Waters', 'Nunez', 'Ballard', 'Schwartz', 'McBride', 'Houston', 'Christensen', 'Klein', 'Pratt', 'Briggs', 'Parsons', 'McLaughlin', 'Zimmerman', 'French', 'Buchanan', 'Moran', 'Copeland', 'Roy', 'Pittman', 'Brady', 'McCormick', 'Holloway', 'Brock', 'Poole', 'Frank', 'Logan', 'Owen', 'Bass', 'Marsh', 'Drake', 'Wong', 'Jefferson', 'Park', 'Morton', 'Abbott', 'Sparks', 'Patrick', 'Norton', 'Huff', 'Clayton', 'Massey', 'Lloyd', 'Figueroa', 'Carson', 'Bowers', 'Roberson', 'Barton', 'Tran', 'Lamb', 'Harrington', 'Casey', 'Boone', 'Cortez', 'Clarke', 'Mathis', 'Singleton', 'Wilkins', 'Cain', 'Bryan', 'Underwood', 'Hogan', 'McKenzie', 'Collier', 'Luna', 'Phelps', 'McGuire', 'Allison', 'Bridges', 'Wilkerson', 'Nash', 'Summers', 'Atkins'],\n\n\t        // Data taken from https://github.com/umpirsky/country-list/blob/master/country/cldr/en_US/country.json\n\t        countries: [{\"name\":\"Afghanistan\",\"abbreviation\":\"AF\"},{\"name\":\"Albania\",\"abbreviation\":\"AL\"},{\"name\":\"Algeria\",\"abbreviation\":\"DZ\"},{\"name\":\"American Samoa\",\"abbreviation\":\"AS\"},{\"name\":\"Andorra\",\"abbreviation\":\"AD\"},{\"name\":\"Angola\",\"abbreviation\":\"AO\"},{\"name\":\"Anguilla\",\"abbreviation\":\"AI\"},{\"name\":\"Antarctica\",\"abbreviation\":\"AQ\"},{\"name\":\"Antigua and Barbuda\",\"abbreviation\":\"AG\"},{\"name\":\"Argentina\",\"abbreviation\":\"AR\"},{\"name\":\"Armenia\",\"abbreviation\":\"AM\"},{\"name\":\"Aruba\",\"abbreviation\":\"AW\"},{\"name\":\"Australia\",\"abbreviation\":\"AU\"},{\"name\":\"Austria\",\"abbreviation\":\"AT\"},{\"name\":\"Azerbaijan\",\"abbreviation\":\"AZ\"},{\"name\":\"Bahamas\",\"abbreviation\":\"BS\"},{\"name\":\"Bahrain\",\"abbreviation\":\"BH\"},{\"name\":\"Bangladesh\",\"abbreviation\":\"BD\"},{\"name\":\"Barbados\",\"abbreviation\":\"BB\"},{\"name\":\"Belarus\",\"abbreviation\":\"BY\"},{\"name\":\"Belgium\",\"abbreviation\":\"BE\"},{\"name\":\"Belize\",\"abbreviation\":\"BZ\"},{\"name\":\"Benin\",\"abbreviation\":\"BJ\"},{\"name\":\"Bermuda\",\"abbreviation\":\"BM\"},{\"name\":\"Bhutan\",\"abbreviation\":\"BT\"},{\"name\":\"Bolivia\",\"abbreviation\":\"BO\"},{\"name\":\"Bosnia and Herzegovina\",\"abbreviation\":\"BA\"},{\"name\":\"Botswana\",\"abbreviation\":\"BW\"},{\"name\":\"Bouvet Island\",\"abbreviation\":\"BV\"},{\"name\":\"Brazil\",\"abbreviation\":\"BR\"},{\"name\":\"British Antarctic Territory\",\"abbreviation\":\"BQ\"},{\"name\":\"British Indian Ocean Territory\",\"abbreviation\":\"IO\"},{\"name\":\"British Virgin Islands\",\"abbreviation\":\"VG\"},{\"name\":\"Brunei\",\"abbreviation\":\"BN\"},{\"name\":\"Bulgaria\",\"abbreviation\":\"BG\"},{\"name\":\"Burkina Faso\",\"abbreviation\":\"BF\"},{\"name\":\"Burundi\",\"abbreviation\":\"BI\"},{\"name\":\"Cambodia\",\"abbreviation\":\"KH\"},{\"name\":\"Cameroon\",\"abbreviation\":\"CM\"},{\"name\":\"Canada\",\"abbreviation\":\"CA\"},{\"name\":\"Canton and Enderbury Islands\",\"abbreviation\":\"CT\"},{\"name\":\"Cape Verde\",\"abbreviation\":\"CV\"},{\"name\":\"Cayman Islands\",\"abbreviation\":\"KY\"},{\"name\":\"Central African Republic\",\"abbreviation\":\"CF\"},{\"name\":\"Chad\",\"abbreviation\":\"TD\"},{\"name\":\"Chile\",\"abbreviation\":\"CL\"},{\"name\":\"China\",\"abbreviation\":\"CN\"},{\"name\":\"Christmas Island\",\"abbreviation\":\"CX\"},{\"name\":\"Cocos [Keeling] Islands\",\"abbreviation\":\"CC\"},{\"name\":\"Colombia\",\"abbreviation\":\"CO\"},{\"name\":\"Comoros\",\"abbreviation\":\"KM\"},{\"name\":\"Congo - Brazzaville\",\"abbreviation\":\"CG\"},{\"name\":\"Congo - Kinshasa\",\"abbreviation\":\"CD\"},{\"name\":\"Cook Islands\",\"abbreviation\":\"CK\"},{\"name\":\"Costa Rica\",\"abbreviation\":\"CR\"},{\"name\":\"Croatia\",\"abbreviation\":\"HR\"},{\"name\":\"Cuba\",\"abbreviation\":\"CU\"},{\"name\":\"Cyprus\",\"abbreviation\":\"CY\"},{\"name\":\"Czech Republic\",\"abbreviation\":\"CZ\"},{\"name\":\"Côte d’Ivoire\",\"abbreviation\":\"CI\"},{\"name\":\"Denmark\",\"abbreviation\":\"DK\"},{\"name\":\"Djibouti\",\"abbreviation\":\"DJ\"},{\"name\":\"Dominica\",\"abbreviation\":\"DM\"},{\"name\":\"Dominican Republic\",\"abbreviation\":\"DO\"},{\"name\":\"Dronning Maud Land\",\"abbreviation\":\"NQ\"},{\"name\":\"East Germany\",\"abbreviation\":\"DD\"},{\"name\":\"Ecuador\",\"abbreviation\":\"EC\"},{\"name\":\"Egypt\",\"abbreviation\":\"EG\"},{\"name\":\"El Salvador\",\"abbreviation\":\"SV\"},{\"name\":\"Equatorial Guinea\",\"abbreviation\":\"GQ\"},{\"name\":\"Eritrea\",\"abbreviation\":\"ER\"},{\"name\":\"Estonia\",\"abbreviation\":\"EE\"},{\"name\":\"Ethiopia\",\"abbreviation\":\"ET\"},{\"name\":\"Falkland Islands\",\"abbreviation\":\"FK\"},{\"name\":\"Faroe Islands\",\"abbreviation\":\"FO\"},{\"name\":\"Fiji\",\"abbreviation\":\"FJ\"},{\"name\":\"Finland\",\"abbreviation\":\"FI\"},{\"name\":\"France\",\"abbreviation\":\"FR\"},{\"name\":\"French Guiana\",\"abbreviation\":\"GF\"},{\"name\":\"French Polynesia\",\"abbreviation\":\"PF\"},{\"name\":\"French Southern Territories\",\"abbreviation\":\"TF\"},{\"name\":\"French Southern and Antarctic Territories\",\"abbreviation\":\"FQ\"},{\"name\":\"Gabon\",\"abbreviation\":\"GA\"},{\"name\":\"Gambia\",\"abbreviation\":\"GM\"},{\"name\":\"Georgia\",\"abbreviation\":\"GE\"},{\"name\":\"Germany\",\"abbreviation\":\"DE\"},{\"name\":\"Ghana\",\"abbreviation\":\"GH\"},{\"name\":\"Gibraltar\",\"abbreviation\":\"GI\"},{\"name\":\"Greece\",\"abbreviation\":\"GR\"},{\"name\":\"Greenland\",\"abbreviation\":\"GL\"},{\"name\":\"Grenada\",\"abbreviation\":\"GD\"},{\"name\":\"Guadeloupe\",\"abbreviation\":\"GP\"},{\"name\":\"Guam\",\"abbreviation\":\"GU\"},{\"name\":\"Guatemala\",\"abbreviation\":\"GT\"},{\"name\":\"Guernsey\",\"abbreviation\":\"GG\"},{\"name\":\"Guinea\",\"abbreviation\":\"GN\"},{\"name\":\"Guinea-Bissau\",\"abbreviation\":\"GW\"},{\"name\":\"Guyana\",\"abbreviation\":\"GY\"},{\"name\":\"Haiti\",\"abbreviation\":\"HT\"},{\"name\":\"Heard Island and McDonald Islands\",\"abbreviation\":\"HM\"},{\"name\":\"Honduras\",\"abbreviation\":\"HN\"},{\"name\":\"Hong Kong SAR China\",\"abbreviation\":\"HK\"},{\"name\":\"Hungary\",\"abbreviation\":\"HU\"},{\"name\":\"Iceland\",\"abbreviation\":\"IS\"},{\"name\":\"India\",\"abbreviation\":\"IN\"},{\"name\":\"Indonesia\",\"abbreviation\":\"ID\"},{\"name\":\"Iran\",\"abbreviation\":\"IR\"},{\"name\":\"Iraq\",\"abbreviation\":\"IQ\"},{\"name\":\"Ireland\",\"abbreviation\":\"IE\"},{\"name\":\"Isle of Man\",\"abbreviation\":\"IM\"},{\"name\":\"Israel\",\"abbreviation\":\"IL\"},{\"name\":\"Italy\",\"abbreviation\":\"IT\"},{\"name\":\"Jamaica\",\"abbreviation\":\"JM\"},{\"name\":\"Japan\",\"abbreviation\":\"JP\"},{\"name\":\"Jersey\",\"abbreviation\":\"JE\"},{\"name\":\"Johnston Island\",\"abbreviation\":\"JT\"},{\"name\":\"Jordan\",\"abbreviation\":\"JO\"},{\"name\":\"Kazakhstan\",\"abbreviation\":\"KZ\"},{\"name\":\"Kenya\",\"abbreviation\":\"KE\"},{\"name\":\"Kiribati\",\"abbreviation\":\"KI\"},{\"name\":\"Kuwait\",\"abbreviation\":\"KW\"},{\"name\":\"Kyrgyzstan\",\"abbreviation\":\"KG\"},{\"name\":\"Laos\",\"abbreviation\":\"LA\"},{\"name\":\"Latvia\",\"abbreviation\":\"LV\"},{\"name\":\"Lebanon\",\"abbreviation\":\"LB\"},{\"name\":\"Lesotho\",\"abbreviation\":\"LS\"},{\"name\":\"Liberia\",\"abbreviation\":\"LR\"},{\"name\":\"Libya\",\"abbreviation\":\"LY\"},{\"name\":\"Liechtenstein\",\"abbreviation\":\"LI\"},{\"name\":\"Lithuania\",\"abbreviation\":\"LT\"},{\"name\":\"Luxembourg\",\"abbreviation\":\"LU\"},{\"name\":\"Macau SAR China\",\"abbreviation\":\"MO\"},{\"name\":\"Macedonia\",\"abbreviation\":\"MK\"},{\"name\":\"Madagascar\",\"abbreviation\":\"MG\"},{\"name\":\"Malawi\",\"abbreviation\":\"MW\"},{\"name\":\"Malaysia\",\"abbreviation\":\"MY\"},{\"name\":\"Maldives\",\"abbreviation\":\"MV\"},{\"name\":\"Mali\",\"abbreviation\":\"ML\"},{\"name\":\"Malta\",\"abbreviation\":\"MT\"},{\"name\":\"Marshall Islands\",\"abbreviation\":\"MH\"},{\"name\":\"Martinique\",\"abbreviation\":\"MQ\"},{\"name\":\"Mauritania\",\"abbreviation\":\"MR\"},{\"name\":\"Mauritius\",\"abbreviation\":\"MU\"},{\"name\":\"Mayotte\",\"abbreviation\":\"YT\"},{\"name\":\"Metropolitan France\",\"abbreviation\":\"FX\"},{\"name\":\"Mexico\",\"abbreviation\":\"MX\"},{\"name\":\"Micronesia\",\"abbreviation\":\"FM\"},{\"name\":\"Midway Islands\",\"abbreviation\":\"MI\"},{\"name\":\"Moldova\",\"abbreviation\":\"MD\"},{\"name\":\"Monaco\",\"abbreviation\":\"MC\"},{\"name\":\"Mongolia\",\"abbreviation\":\"MN\"},{\"name\":\"Montenegro\",\"abbreviation\":\"ME\"},{\"name\":\"Montserrat\",\"abbreviation\":\"MS\"},{\"name\":\"Morocco\",\"abbreviation\":\"MA\"},{\"name\":\"Mozambique\",\"abbreviation\":\"MZ\"},{\"name\":\"Myanmar [Burma]\",\"abbreviation\":\"MM\"},{\"name\":\"Namibia\",\"abbreviation\":\"NA\"},{\"name\":\"Nauru\",\"abbreviation\":\"NR\"},{\"name\":\"Nepal\",\"abbreviation\":\"NP\"},{\"name\":\"Netherlands\",\"abbreviation\":\"NL\"},{\"name\":\"Netherlands Antilles\",\"abbreviation\":\"AN\"},{\"name\":\"Neutral Zone\",\"abbreviation\":\"NT\"},{\"name\":\"New Caledonia\",\"abbreviation\":\"NC\"},{\"name\":\"New Zealand\",\"abbreviation\":\"NZ\"},{\"name\":\"Nicaragua\",\"abbreviation\":\"NI\"},{\"name\":\"Niger\",\"abbreviation\":\"NE\"},{\"name\":\"Nigeria\",\"abbreviation\":\"NG\"},{\"name\":\"Niue\",\"abbreviation\":\"NU\"},{\"name\":\"Norfolk Island\",\"abbreviation\":\"NF\"},{\"name\":\"North Korea\",\"abbreviation\":\"KP\"},{\"name\":\"North Vietnam\",\"abbreviation\":\"VD\"},{\"name\":\"Northern Mariana Islands\",\"abbreviation\":\"MP\"},{\"name\":\"Norway\",\"abbreviation\":\"NO\"},{\"name\":\"Oman\",\"abbreviation\":\"OM\"},{\"name\":\"Pacific Islands Trust Territory\",\"abbreviation\":\"PC\"},{\"name\":\"Pakistan\",\"abbreviation\":\"PK\"},{\"name\":\"Palau\",\"abbreviation\":\"PW\"},{\"name\":\"Palestinian Territories\",\"abbreviation\":\"PS\"},{\"name\":\"Panama\",\"abbreviation\":\"PA\"},{\"name\":\"Panama Canal Zone\",\"abbreviation\":\"PZ\"},{\"name\":\"Papua New Guinea\",\"abbreviation\":\"PG\"},{\"name\":\"Paraguay\",\"abbreviation\":\"PY\"},{\"name\":\"People's Democratic Republic of Yemen\",\"abbreviation\":\"YD\"},{\"name\":\"Peru\",\"abbreviation\":\"PE\"},{\"name\":\"Philippines\",\"abbreviation\":\"PH\"},{\"name\":\"Pitcairn Islands\",\"abbreviation\":\"PN\"},{\"name\":\"Poland\",\"abbreviation\":\"PL\"},{\"name\":\"Portugal\",\"abbreviation\":\"PT\"},{\"name\":\"Puerto Rico\",\"abbreviation\":\"PR\"},{\"name\":\"Qatar\",\"abbreviation\":\"QA\"},{\"name\":\"Romania\",\"abbreviation\":\"RO\"},{\"name\":\"Russia\",\"abbreviation\":\"RU\"},{\"name\":\"Rwanda\",\"abbreviation\":\"RW\"},{\"name\":\"Réunion\",\"abbreviation\":\"RE\"},{\"name\":\"Saint Barthélemy\",\"abbreviation\":\"BL\"},{\"name\":\"Saint Helena\",\"abbreviation\":\"SH\"},{\"name\":\"Saint Kitts and Nevis\",\"abbreviation\":\"KN\"},{\"name\":\"Saint Lucia\",\"abbreviation\":\"LC\"},{\"name\":\"Saint Martin\",\"abbreviation\":\"MF\"},{\"name\":\"Saint Pierre and Miquelon\",\"abbreviation\":\"PM\"},{\"name\":\"Saint Vincent and the Grenadines\",\"abbreviation\":\"VC\"},{\"name\":\"Samoa\",\"abbreviation\":\"WS\"},{\"name\":\"San Marino\",\"abbreviation\":\"SM\"},{\"name\":\"Saudi Arabia\",\"abbreviation\":\"SA\"},{\"name\":\"Senegal\",\"abbreviation\":\"SN\"},{\"name\":\"Serbia\",\"abbreviation\":\"RS\"},{\"name\":\"Serbia and Montenegro\",\"abbreviation\":\"CS\"},{\"name\":\"Seychelles\",\"abbreviation\":\"SC\"},{\"name\":\"Sierra Leone\",\"abbreviation\":\"SL\"},{\"name\":\"Singapore\",\"abbreviation\":\"SG\"},{\"name\":\"Slovakia\",\"abbreviation\":\"SK\"},{\"name\":\"Slovenia\",\"abbreviation\":\"SI\"},{\"name\":\"Solomon Islands\",\"abbreviation\":\"SB\"},{\"name\":\"Somalia\",\"abbreviation\":\"SO\"},{\"name\":\"South Africa\",\"abbreviation\":\"ZA\"},{\"name\":\"South Georgia and the South Sandwich Islands\",\"abbreviation\":\"GS\"},{\"name\":\"South Korea\",\"abbreviation\":\"KR\"},{\"name\":\"Spain\",\"abbreviation\":\"ES\"},{\"name\":\"Sri Lanka\",\"abbreviation\":\"LK\"},{\"name\":\"Sudan\",\"abbreviation\":\"SD\"},{\"name\":\"Suriname\",\"abbreviation\":\"SR\"},{\"name\":\"Svalbard and Jan Mayen\",\"abbreviation\":\"SJ\"},{\"name\":\"Swaziland\",\"abbreviation\":\"SZ\"},{\"name\":\"Sweden\",\"abbreviation\":\"SE\"},{\"name\":\"Switzerland\",\"abbreviation\":\"CH\"},{\"name\":\"Syria\",\"abbreviation\":\"SY\"},{\"name\":\"São Tomé and Príncipe\",\"abbreviation\":\"ST\"},{\"name\":\"Taiwan\",\"abbreviation\":\"TW\"},{\"name\":\"Tajikistan\",\"abbreviation\":\"TJ\"},{\"name\":\"Tanzania\",\"abbreviation\":\"TZ\"},{\"name\":\"Thailand\",\"abbreviation\":\"TH\"},{\"name\":\"Timor-Leste\",\"abbreviation\":\"TL\"},{\"name\":\"Togo\",\"abbreviation\":\"TG\"},{\"name\":\"Tokelau\",\"abbreviation\":\"TK\"},{\"name\":\"Tonga\",\"abbreviation\":\"TO\"},{\"name\":\"Trinidad and Tobago\",\"abbreviation\":\"TT\"},{\"name\":\"Tunisia\",\"abbreviation\":\"TN\"},{\"name\":\"Turkey\",\"abbreviation\":\"TR\"},{\"name\":\"Turkmenistan\",\"abbreviation\":\"TM\"},{\"name\":\"Turks and Caicos Islands\",\"abbreviation\":\"TC\"},{\"name\":\"Tuvalu\",\"abbreviation\":\"TV\"},{\"name\":\"U.S. Minor Outlying Islands\",\"abbreviation\":\"UM\"},{\"name\":\"U.S. Miscellaneous Pacific Islands\",\"abbreviation\":\"PU\"},{\"name\":\"U.S. Virgin Islands\",\"abbreviation\":\"VI\"},{\"name\":\"Uganda\",\"abbreviation\":\"UG\"},{\"name\":\"Ukraine\",\"abbreviation\":\"UA\"},{\"name\":\"Union of Soviet Socialist Republics\",\"abbreviation\":\"SU\"},{\"name\":\"United Arab Emirates\",\"abbreviation\":\"AE\"},{\"name\":\"United Kingdom\",\"abbreviation\":\"GB\"},{\"name\":\"United States\",\"abbreviation\":\"US\"},{\"name\":\"Unknown or Invalid Region\",\"abbreviation\":\"ZZ\"},{\"name\":\"Uruguay\",\"abbreviation\":\"UY\"},{\"name\":\"Uzbekistan\",\"abbreviation\":\"UZ\"},{\"name\":\"Vanuatu\",\"abbreviation\":\"VU\"},{\"name\":\"Vatican City\",\"abbreviation\":\"VA\"},{\"name\":\"Venezuela\",\"abbreviation\":\"VE\"},{\"name\":\"Vietnam\",\"abbreviation\":\"VN\"},{\"name\":\"Wake Island\",\"abbreviation\":\"WK\"},{\"name\":\"Wallis and Futuna\",\"abbreviation\":\"WF\"},{\"name\":\"Western Sahara\",\"abbreviation\":\"EH\"},{\"name\":\"Yemen\",\"abbreviation\":\"YE\"},{\"name\":\"Zambia\",\"abbreviation\":\"ZM\"},{\"name\":\"Zimbabwe\",\"abbreviation\":\"ZW\"},{\"name\":\"Åland Islands\",\"abbreviation\":\"AX\"}],\n\n\t        provinces: [\n\t            {name: 'Alberta', abbreviation: 'AB'},\n\t            {name: 'British Columbia', abbreviation: 'BC'},\n\t            {name: 'Manitoba', abbreviation: 'MB'},\n\t            {name: 'New Brunswick', abbreviation: 'NB'},\n\t            {name: 'Newfoundland and Labrador', abbreviation: 'NL'},\n\t            {name: 'Nova Scotia', abbreviation: 'NS'},\n\t            {name: 'Ontario', abbreviation: 'ON'},\n\t            {name: 'Prince Edward Island', abbreviation: 'PE'},\n\t            {name: 'Quebec', abbreviation: 'QC'},\n\t            {name: 'Saskatchewan', abbreviation: 'SK'},\n\n\t            // The case could be made that the following are not actually provinces\n\t            // since they are technically considered \"territories\" however they all\n\t            // look the same on an envelope!\n\t            {name: 'Northwest Territories', abbreviation: 'NT'},\n\t            {name: 'Nunavut', abbreviation: 'NU'},\n\t            {name: 'Yukon', abbreviation: 'YT'}\n\t        ],\n\n\t        us_states_and_dc: [\n\t            {name: 'Alabama', abbreviation: 'AL'},\n\t            {name: 'Alaska', abbreviation: 'AK'},\n\t            {name: 'Arizona', abbreviation: 'AZ'},\n\t            {name: 'Arkansas', abbreviation: 'AR'},\n\t            {name: 'California', abbreviation: 'CA'},\n\t            {name: 'Colorado', abbreviation: 'CO'},\n\t            {name: 'Connecticut', abbreviation: 'CT'},\n\t            {name: 'Delaware', abbreviation: 'DE'},\n\t            {name: 'District of Columbia', abbreviation: 'DC'},\n\t            {name: 'Florida', abbreviation: 'FL'},\n\t            {name: 'Georgia', abbreviation: 'GA'},\n\t            {name: 'Hawaii', abbreviation: 'HI'},\n\t            {name: 'Idaho', abbreviation: 'ID'},\n\t            {name: 'Illinois', abbreviation: 'IL'},\n\t            {name: 'Indiana', abbreviation: 'IN'},\n\t            {name: 'Iowa', abbreviation: 'IA'},\n\t            {name: 'Kansas', abbreviation: 'KS'},\n\t            {name: 'Kentucky', abbreviation: 'KY'},\n\t            {name: 'Louisiana', abbreviation: 'LA'},\n\t            {name: 'Maine', abbreviation: 'ME'},\n\t            {name: 'Maryland', abbreviation: 'MD'},\n\t            {name: 'Massachusetts', abbreviation: 'MA'},\n\t            {name: 'Michigan', abbreviation: 'MI'},\n\t            {name: 'Minnesota', abbreviation: 'MN'},\n\t            {name: 'Mississippi', abbreviation: 'MS'},\n\t            {name: 'Missouri', abbreviation: 'MO'},\n\t            {name: 'Montana', abbreviation: 'MT'},\n\t            {name: 'Nebraska', abbreviation: 'NE'},\n\t            {name: 'Nevada', abbreviation: 'NV'},\n\t            {name: 'New Hampshire', abbreviation: 'NH'},\n\t            {name: 'New Jersey', abbreviation: 'NJ'},\n\t            {name: 'New Mexico', abbreviation: 'NM'},\n\t            {name: 'New York', abbreviation: 'NY'},\n\t            {name: 'North Carolina', abbreviation: 'NC'},\n\t            {name: 'North Dakota', abbreviation: 'ND'},\n\t            {name: 'Ohio', abbreviation: 'OH'},\n\t            {name: 'Oklahoma', abbreviation: 'OK'},\n\t            {name: 'Oregon', abbreviation: 'OR'},\n\t            {name: 'Pennsylvania', abbreviation: 'PA'},\n\t            {name: 'Rhode Island', abbreviation: 'RI'},\n\t            {name: 'South Carolina', abbreviation: 'SC'},\n\t            {name: 'South Dakota', abbreviation: 'SD'},\n\t            {name: 'Tennessee', abbreviation: 'TN'},\n\t            {name: 'Texas', abbreviation: 'TX'},\n\t            {name: 'Utah', abbreviation: 'UT'},\n\t            {name: 'Vermont', abbreviation: 'VT'},\n\t            {name: 'Virginia', abbreviation: 'VA'},\n\t            {name: 'Washington', abbreviation: 'WA'},\n\t            {name: 'West Virginia', abbreviation: 'WV'},\n\t            {name: 'Wisconsin', abbreviation: 'WI'},\n\t            {name: 'Wyoming', abbreviation: 'WY'}\n\t        ],\n\n\t        territories: [\n\t            {name: 'American Samoa', abbreviation: 'AS'},\n\t            {name: 'Federated States of Micronesia', abbreviation: 'FM'},\n\t            {name: 'Guam', abbreviation: 'GU'},\n\t            {name: 'Marshall Islands', abbreviation: 'MH'},\n\t            {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n\t            {name: 'Puerto Rico', abbreviation: 'PR'},\n\t            {name: 'Virgin Islands, U.S.', abbreviation: 'VI'}\n\t        ],\n\n\t        armed_forces: [\n\t            {name: 'Armed Forces Europe', abbreviation: 'AE'},\n\t            {name: 'Armed Forces Pacific', abbreviation: 'AP'},\n\t            {name: 'Armed Forces the Americas', abbreviation: 'AA'}\n\t        ],\n\n\t        street_suffixes: [\n\t            {name: 'Avenue', abbreviation: 'Ave'},\n\t            {name: 'Boulevard', abbreviation: 'Blvd'},\n\t            {name: 'Center', abbreviation: 'Ctr'},\n\t            {name: 'Circle', abbreviation: 'Cir'},\n\t            {name: 'Court', abbreviation: 'Ct'},\n\t            {name: 'Drive', abbreviation: 'Dr'},\n\t            {name: 'Extension', abbreviation: 'Ext'},\n\t            {name: 'Glen', abbreviation: 'Gln'},\n\t            {name: 'Grove', abbreviation: 'Grv'},\n\t            {name: 'Heights', abbreviation: 'Hts'},\n\t            {name: 'Highway', abbreviation: 'Hwy'},\n\t            {name: 'Junction', abbreviation: 'Jct'},\n\t            {name: 'Key', abbreviation: 'Key'},\n\t            {name: 'Lane', abbreviation: 'Ln'},\n\t            {name: 'Loop', abbreviation: 'Loop'},\n\t            {name: 'Manor', abbreviation: 'Mnr'},\n\t            {name: 'Mill', abbreviation: 'Mill'},\n\t            {name: 'Park', abbreviation: 'Park'},\n\t            {name: 'Parkway', abbreviation: 'Pkwy'},\n\t            {name: 'Pass', abbreviation: 'Pass'},\n\t            {name: 'Path', abbreviation: 'Path'},\n\t            {name: 'Pike', abbreviation: 'Pike'},\n\t            {name: 'Place', abbreviation: 'Pl'},\n\t            {name: 'Plaza', abbreviation: 'Plz'},\n\t            {name: 'Point', abbreviation: 'Pt'},\n\t            {name: 'Ridge', abbreviation: 'Rdg'},\n\t            {name: 'River', abbreviation: 'Riv'},\n\t            {name: 'Road', abbreviation: 'Rd'},\n\t            {name: 'Square', abbreviation: 'Sq'},\n\t            {name: 'Street', abbreviation: 'St'},\n\t            {name: 'Terrace', abbreviation: 'Ter'},\n\t            {name: 'Trail', abbreviation: 'Trl'},\n\t            {name: 'Turnpike', abbreviation: 'Tpke'},\n\t            {name: 'View', abbreviation: 'Vw'},\n\t            {name: 'Way', abbreviation: 'Way'}\n\t        ],\n\n\t        months: [\n\t            {name: 'January', short_name: 'Jan', numeric: '01', days: 31},\n\t            // Not messing with leap years...\n\t            {name: 'February', short_name: 'Feb', numeric: '02', days: 28},\n\t            {name: 'March', short_name: 'Mar', numeric: '03', days: 31},\n\t            {name: 'April', short_name: 'Apr', numeric: '04', days: 30},\n\t            {name: 'May', short_name: 'May', numeric: '05', days: 31},\n\t            {name: 'June', short_name: 'Jun', numeric: '06', days: 30},\n\t            {name: 'July', short_name: 'Jul', numeric: '07', days: 31},\n\t            {name: 'August', short_name: 'Aug', numeric: '08', days: 31},\n\t            {name: 'September', short_name: 'Sep', numeric: '09', days: 30},\n\t            {name: 'October', short_name: 'Oct', numeric: '10', days: 31},\n\t            {name: 'November', short_name: 'Nov', numeric: '11', days: 30},\n\t            {name: 'December', short_name: 'Dec', numeric: '12', days: 31}\n\t        ],\n\n\t        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n\t        cc_types: [\n\t            {name: \"American Express\", short_name: 'amex', prefix: '34', length: 15},\n\t            {name: \"Bankcard\", short_name: 'bankcard', prefix: '5610', length: 16},\n\t            {name: \"China UnionPay\", short_name: 'chinaunion', prefix: '62', length: 16},\n\t            {name: \"Diners Club Carte Blanche\", short_name: 'dccarte', prefix: '300', length: 14},\n\t            {name: \"Diners Club enRoute\", short_name: 'dcenroute', prefix: '2014', length: 15},\n\t            {name: \"Diners Club International\", short_name: 'dcintl', prefix: '36', length: 14},\n\t            {name: \"Diners Club United States & Canada\", short_name: 'dcusc', prefix: '54', length: 16},\n\t            {name: \"Discover Card\", short_name: 'discover', prefix: '6011', length: 16},\n\t            {name: \"InstaPayment\", short_name: 'instapay', prefix: '637', length: 16},\n\t            {name: \"JCB\", short_name: 'jcb', prefix: '3528', length: 16},\n\t            {name: \"Laser\", short_name: 'laser', prefix: '6304', length: 16},\n\t            {name: \"Maestro\", short_name: 'maestro', prefix: '5018', length: 16},\n\t            {name: \"Mastercard\", short_name: 'mc', prefix: '51', length: 16},\n\t            {name: \"Solo\", short_name: 'solo', prefix: '6334', length: 16},\n\t            {name: \"Switch\", short_name: 'switch', prefix: '4903', length: 16},\n\t            {name: \"Visa\", short_name: 'visa', prefix: '4', length: 16},\n\t            {name: \"Visa Electron\", short_name: 'electron', prefix: '4026', length: 16}\n\t        ],\n\n\t        //return all world currency by ISO 4217\n\t        currency_types: [\n\t            {'code' : 'AED', 'name' : 'United Arab Emirates Dirham'},\n\t            {'code' : 'AFN', 'name' : 'Afghanistan Afghani'},\n\t            {'code' : 'ALL', 'name' : 'Albania Lek'},\n\t            {'code' : 'AMD', 'name' : 'Armenia Dram'},\n\t            {'code' : 'ANG', 'name' : 'Netherlands Antilles Guilder'},\n\t            {'code' : 'AOA', 'name' : 'Angola Kwanza'},\n\t            {'code' : 'ARS', 'name' : 'Argentina Peso'},\n\t            {'code' : 'AUD', 'name' : 'Australia Dollar'},\n\t            {'code' : 'AWG', 'name' : 'Aruba Guilder'},\n\t            {'code' : 'AZN', 'name' : 'Azerbaijan New Manat'},\n\t            {'code' : 'BAM', 'name' : 'Bosnia and Herzegovina Convertible Marka'},\n\t            {'code' : 'BBD', 'name' : 'Barbados Dollar'},\n\t            {'code' : 'BDT', 'name' : 'Bangladesh Taka'},\n\t            {'code' : 'BGN', 'name' : 'Bulgaria Lev'},\n\t            {'code' : 'BHD', 'name' : 'Bahrain Dinar'},\n\t            {'code' : 'BIF', 'name' : 'Burundi Franc'},\n\t            {'code' : 'BMD', 'name' : 'Bermuda Dollar'},\n\t            {'code' : 'BND', 'name' : 'Brunei Darussalam Dollar'},\n\t            {'code' : 'BOB', 'name' : 'Bolivia Boliviano'},\n\t            {'code' : 'BRL', 'name' : 'Brazil Real'},\n\t            {'code' : 'BSD', 'name' : 'Bahamas Dollar'},\n\t            {'code' : 'BTN', 'name' : 'Bhutan Ngultrum'},\n\t            {'code' : 'BWP', 'name' : 'Botswana Pula'},\n\t            {'code' : 'BYR', 'name' : 'Belarus Ruble'},\n\t            {'code' : 'BZD', 'name' : 'Belize Dollar'},\n\t            {'code' : 'CAD', 'name' : 'Canada Dollar'},\n\t            {'code' : 'CDF', 'name' : 'Congo/Kinshasa Franc'},\n\t            {'code' : 'CHF', 'name' : 'Switzerland Franc'},\n\t            {'code' : 'CLP', 'name' : 'Chile Peso'},\n\t            {'code' : 'CNY', 'name' : 'China Yuan Renminbi'},\n\t            {'code' : 'COP', 'name' : 'Colombia Peso'},\n\t            {'code' : 'CRC', 'name' : 'Costa Rica Colon'},\n\t            {'code' : 'CUC', 'name' : 'Cuba Convertible Peso'},\n\t            {'code' : 'CUP', 'name' : 'Cuba Peso'},\n\t            {'code' : 'CVE', 'name' : 'Cape Verde Escudo'},\n\t            {'code' : 'CZK', 'name' : 'Czech Republic Koruna'},\n\t            {'code' : 'DJF', 'name' : 'Djibouti Franc'},\n\t            {'code' : 'DKK', 'name' : 'Denmark Krone'},\n\t            {'code' : 'DOP', 'name' : 'Dominican Republic Peso'},\n\t            {'code' : 'DZD', 'name' : 'Algeria Dinar'},\n\t            {'code' : 'EGP', 'name' : 'Egypt Pound'},\n\t            {'code' : 'ERN', 'name' : 'Eritrea Nakfa'},\n\t            {'code' : 'ETB', 'name' : 'Ethiopia Birr'},\n\t            {'code' : 'EUR', 'name' : 'Euro Member Countries'},\n\t            {'code' : 'FJD', 'name' : 'Fiji Dollar'},\n\t            {'code' : 'FKP', 'name' : 'Falkland Islands (Malvinas) Pound'},\n\t            {'code' : 'GBP', 'name' : 'United Kingdom Pound'},\n\t            {'code' : 'GEL', 'name' : 'Georgia Lari'},\n\t            {'code' : 'GGP', 'name' : 'Guernsey Pound'},\n\t            {'code' : 'GHS', 'name' : 'Ghana Cedi'},\n\t            {'code' : 'GIP', 'name' : 'Gibraltar Pound'},\n\t            {'code' : 'GMD', 'name' : 'Gambia Dalasi'},\n\t            {'code' : 'GNF', 'name' : 'Guinea Franc'},\n\t            {'code' : 'GTQ', 'name' : 'Guatemala Quetzal'},\n\t            {'code' : 'GYD', 'name' : 'Guyana Dollar'},\n\t            {'code' : 'HKD', 'name' : 'Hong Kong Dollar'},\n\t            {'code' : 'HNL', 'name' : 'Honduras Lempira'},\n\t            {'code' : 'HRK', 'name' : 'Croatia Kuna'},\n\t            {'code' : 'HTG', 'name' : 'Haiti Gourde'},\n\t            {'code' : 'HUF', 'name' : 'Hungary Forint'},\n\t            {'code' : 'IDR', 'name' : 'Indonesia Rupiah'},\n\t            {'code' : 'ILS', 'name' : 'Israel Shekel'},\n\t            {'code' : 'IMP', 'name' : 'Isle of Man Pound'},\n\t            {'code' : 'INR', 'name' : 'India Rupee'},\n\t            {'code' : 'IQD', 'name' : 'Iraq Dinar'},\n\t            {'code' : 'IRR', 'name' : 'Iran Rial'},\n\t            {'code' : 'ISK', 'name' : 'Iceland Krona'},\n\t            {'code' : 'JEP', 'name' : 'Jersey Pound'},\n\t            {'code' : 'JMD', 'name' : 'Jamaica Dollar'},\n\t            {'code' : 'JOD', 'name' : 'Jordan Dinar'},\n\t            {'code' : 'JPY', 'name' : 'Japan Yen'},\n\t            {'code' : 'KES', 'name' : 'Kenya Shilling'},\n\t            {'code' : 'KGS', 'name' : 'Kyrgyzstan Som'},\n\t            {'code' : 'KHR', 'name' : 'Cambodia Riel'},\n\t            {'code' : 'KMF', 'name' : 'Comoros Franc'},\n\t            {'code' : 'KPW', 'name' : 'Korea (North) Won'},\n\t            {'code' : 'KRW', 'name' : 'Korea (South) Won'},\n\t            {'code' : 'KWD', 'name' : 'Kuwait Dinar'},\n\t            {'code' : 'KYD', 'name' : 'Cayman Islands Dollar'},\n\t            {'code' : 'KZT', 'name' : 'Kazakhstan Tenge'},\n\t            {'code' : 'LAK', 'name' : 'Laos Kip'},\n\t            {'code' : 'LBP', 'name' : 'Lebanon Pound'},\n\t            {'code' : 'LKR', 'name' : 'Sri Lanka Rupee'},\n\t            {'code' : 'LRD', 'name' : 'Liberia Dollar'},\n\t            {'code' : 'LSL', 'name' : 'Lesotho Loti'},\n\t            {'code' : 'LTL', 'name' : 'Lithuania Litas'},\n\t            {'code' : 'LYD', 'name' : 'Libya Dinar'},\n\t            {'code' : 'MAD', 'name' : 'Morocco Dirham'},\n\t            {'code' : 'MDL', 'name' : 'Moldova Leu'},\n\t            {'code' : 'MGA', 'name' : 'Madagascar Ariary'},\n\t            {'code' : 'MKD', 'name' : 'Macedonia Denar'},\n\t            {'code' : 'MMK', 'name' : 'Myanmar (Burma) Kyat'},\n\t            {'code' : 'MNT', 'name' : 'Mongolia Tughrik'},\n\t            {'code' : 'MOP', 'name' : 'Macau Pataca'},\n\t            {'code' : 'MRO', 'name' : 'Mauritania Ouguiya'},\n\t            {'code' : 'MUR', 'name' : 'Mauritius Rupee'},\n\t            {'code' : 'MVR', 'name' : 'Maldives (Maldive Islands) Rufiyaa'},\n\t            {'code' : 'MWK', 'name' : 'Malawi Kwacha'},\n\t            {'code' : 'MXN', 'name' : 'Mexico Peso'},\n\t            {'code' : 'MYR', 'name' : 'Malaysia Ringgit'},\n\t            {'code' : 'MZN', 'name' : 'Mozambique Metical'},\n\t            {'code' : 'NAD', 'name' : 'Namibia Dollar'},\n\t            {'code' : 'NGN', 'name' : 'Nigeria Naira'},\n\t            {'code' : 'NIO', 'name' : 'Nicaragua Cordoba'},\n\t            {'code' : 'NOK', 'name' : 'Norway Krone'},\n\t            {'code' : 'NPR', 'name' : 'Nepal Rupee'},\n\t            {'code' : 'NZD', 'name' : 'New Zealand Dollar'},\n\t            {'code' : 'OMR', 'name' : 'Oman Rial'},\n\t            {'code' : 'PAB', 'name' : 'Panama Balboa'},\n\t            {'code' : 'PEN', 'name' : 'Peru Nuevo Sol'},\n\t            {'code' : 'PGK', 'name' : 'Papua New Guinea Kina'},\n\t            {'code' : 'PHP', 'name' : 'Philippines Peso'},\n\t            {'code' : 'PKR', 'name' : 'Pakistan Rupee'},\n\t            {'code' : 'PLN', 'name' : 'Poland Zloty'},\n\t            {'code' : 'PYG', 'name' : 'Paraguay Guarani'},\n\t            {'code' : 'QAR', 'name' : 'Qatar Riyal'},\n\t            {'code' : 'RON', 'name' : 'Romania New Leu'},\n\t            {'code' : 'RSD', 'name' : 'Serbia Dinar'},\n\t            {'code' : 'RUB', 'name' : 'Russia Ruble'},\n\t            {'code' : 'RWF', 'name' : 'Rwanda Franc'},\n\t            {'code' : 'SAR', 'name' : 'Saudi Arabia Riyal'},\n\t            {'code' : 'SBD', 'name' : 'Solomon Islands Dollar'},\n\t            {'code' : 'SCR', 'name' : 'Seychelles Rupee'},\n\t            {'code' : 'SDG', 'name' : 'Sudan Pound'},\n\t            {'code' : 'SEK', 'name' : 'Sweden Krona'},\n\t            {'code' : 'SGD', 'name' : 'Singapore Dollar'},\n\t            {'code' : 'SHP', 'name' : 'Saint Helena Pound'},\n\t            {'code' : 'SLL', 'name' : 'Sierra Leone Leone'},\n\t            {'code' : 'SOS', 'name' : 'Somalia Shilling'},\n\t            {'code' : 'SPL', 'name' : 'Seborga Luigino'},\n\t            {'code' : 'SRD', 'name' : 'Suriname Dollar'},\n\t            {'code' : 'STD', 'name' : 'São Tomé and Príncipe Dobra'},\n\t            {'code' : 'SVC', 'name' : 'El Salvador Colon'},\n\t            {'code' : 'SYP', 'name' : 'Syria Pound'},\n\t            {'code' : 'SZL', 'name' : 'Swaziland Lilangeni'},\n\t            {'code' : 'THB', 'name' : 'Thailand Baht'},\n\t            {'code' : 'TJS', 'name' : 'Tajikistan Somoni'},\n\t            {'code' : 'TMT', 'name' : 'Turkmenistan Manat'},\n\t            {'code' : 'TND', 'name' : 'Tunisia Dinar'},\n\t            {'code' : 'TOP', 'name' : 'Tonga Pa\\'anga'},\n\t            {'code' : 'TRY', 'name' : 'Turkey Lira'},\n\t            {'code' : 'TTD', 'name' : 'Trinidad and Tobago Dollar'},\n\t            {'code' : 'TVD', 'name' : 'Tuvalu Dollar'},\n\t            {'code' : 'TWD', 'name' : 'Taiwan New Dollar'},\n\t            {'code' : 'TZS', 'name' : 'Tanzania Shilling'},\n\t            {'code' : 'UAH', 'name' : 'Ukraine Hryvnia'},\n\t            {'code' : 'UGX', 'name' : 'Uganda Shilling'},\n\t            {'code' : 'USD', 'name' : 'United States Dollar'},\n\t            {'code' : 'UYU', 'name' : 'Uruguay Peso'},\n\t            {'code' : 'UZS', 'name' : 'Uzbekistan Som'},\n\t            {'code' : 'VEF', 'name' : 'Venezuela Bolivar'},\n\t            {'code' : 'VND', 'name' : 'Viet Nam Dong'},\n\t            {'code' : 'VUV', 'name' : 'Vanuatu Vatu'},\n\t            {'code' : 'WST', 'name' : 'Samoa Tala'},\n\t            {'code' : 'XAF', 'name' : 'Communauté Financière Africaine (BEAC) CFA Franc BEAC'},\n\t            {'code' : 'XCD', 'name' : 'East Caribbean Dollar'},\n\t            {'code' : 'XDR', 'name' : 'International Monetary Fund (IMF) Special Drawing Rights'},\n\t            {'code' : 'XOF', 'name' : 'Communauté Financière Africaine (BCEAO) Franc'},\n\t            {'code' : 'XPF', 'name' : 'Comptoirs Français du Pacifique (CFP) Franc'},\n\t            {'code' : 'YER', 'name' : 'Yemen Rial'},\n\t            {'code' : 'ZAR', 'name' : 'South Africa Rand'},\n\t            {'code' : 'ZMW', 'name' : 'Zambia Kwacha'},\n\t            {'code' : 'ZWD', 'name' : 'Zimbabwe Dollar'}\n\t        ]\n\t    };\n\n\t    var o_hasOwnProperty = Object.prototype.hasOwnProperty;\n\t    var o_keys = (Object.keys || function(obj) {\n\t      var result = [];\n\t      for (var key in obj) {\n\t        if (o_hasOwnProperty.call(obj, key)) {\n\t          result.push(key);\n\t        }\n\t      }\n\n\t      return result;\n\t    });\n\n\t    function _copyObject(source, target) {\n\t      var keys = o_keys(source);\n\t      var key;\n\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        key = keys[i];\n\t        target[key] = source[key] || target[key];\n\t      }\n\t    }\n\n\t    function _copyArray(source, target) {\n\t      for (var i = 0, l = source.length; i < l; i++) {\n\t        target[i] = source[i];\n\t      }\n\t    }\n\n\t    function copyObject(source, _target) {\n\t        var isArray = Array.isArray(source);\n\t        var target = _target || (isArray ? new Array(source.length) : {});\n\n\t        if (isArray) {\n\t          _copyArray(source, target);\n\t        } else {\n\t          _copyObject(source, target);\n\t        }\n\n\t        return target;\n\t    }\n\n\t    /** Get the data based on key**/\n\t    Chance.prototype.get = function (name) {\n\t        return copyObject(data[name]);\n\t    };\n\n\t    // Mac Address\n\t    Chance.prototype.mac_address = function(options){\n\t        // typically mac addresses are separated by \":\"\n\t        // however they can also be separated by \"-\"\n\t        // the network variant uses a dot every fourth byte\n\n\t        options = initOptions(options);\n\t        if(!options.separator) {\n\t            options.separator =  options.networkVersion ? \".\" : \":\";\n\t        }\n\n\t        var mac_pool=\"ABCDEF1234567890\",\n\t            mac = \"\";\n\t        if(!options.networkVersion) {\n\t            mac = this.n(this.string, 6, { pool: mac_pool, length:2 }).join(options.separator);\n\t        } else {\n\t            mac = this.n(this.string, 3, { pool: mac_pool, length:4 }).join(options.separator);\n\t        }\n\n\t        return mac;\n\t    };\n\n\t    Chance.prototype.normal = function (options) {\n\t        options = initOptions(options, {mean : 0, dev : 1});\n\n\t        // The Marsaglia Polar method\n\t        var s, u, v, norm,\n\t            mean = options.mean,\n\t            dev = options.dev;\n\n\t        do {\n\t            // U and V are from the uniform distribution on (-1, 1)\n\t            u = this.random() * 2 - 1;\n\t            v = this.random() * 2 - 1;\n\n\t            s = u * u + v * v;\n\t        } while (s >= 1);\n\n\t        // Compute the standard normal variate\n\t        norm = u * Math.sqrt(-2 * Math.log(s) / s);\n\n\t        // Shape and scale\n\t        return dev * norm + mean;\n\t    };\n\n\t    Chance.prototype.radio = function (options) {\n\t        // Initial Letter (Typically Designated by Side of Mississippi River)\n\t        options = initOptions(options, {side : \"?\"});\n\t        var fl = \"\";\n\t        switch (options.side.toLowerCase()) {\n\t        case \"east\":\n\t        case \"e\":\n\t            fl = \"W\";\n\t            break;\n\t        case \"west\":\n\t        case \"w\":\n\t            fl = \"K\";\n\t            break;\n\t        default:\n\t            fl = this.character({pool: \"KW\"});\n\t            break;\n\t        }\n\n\t        return fl + this.character({alpha: true, casing: \"upper\"}) +\n\t                this.character({alpha: true, casing: \"upper\"}) +\n\t                this.character({alpha: true, casing: \"upper\"});\n\t    };\n\n\t    // Set the data as key and data or the data map\n\t    Chance.prototype.set = function (name, values) {\n\t        if (typeof name === \"string\") {\n\t            data[name] = values;\n\t        } else {\n\t            data = copyObject(name, data);\n\t        }\n\t    };\n\n\t    Chance.prototype.tv = function (options) {\n\t        return this.radio(options);\n\t    };\n\n\t    // ID number for Brazil companies\n\t    Chance.prototype.cnpj = function () {\n\t        var n = this.n(this.natural, 8, { max: 9 });\n\t        var d1 = 2+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\n\t        d1 = 11 - (d1 % 11);\n\t        if (d1>=10){\n\t            d1 = 0;\n\t        }\n\t        var d2 = d1*2+3+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\n\t        d2 = 11 - (d2 % 11);\n\t        if (d2>=10){\n\t            d2 = 0;\n\t        }\n\t        return ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/0001-'+d1+d2;\n\t    };\n\n\t    // -- End Miscellaneous --\n\n\t    Chance.prototype.mersenne_twister = function (seed) {\n\t        return new MersenneTwister(seed);\n\t    };\n\n\t    // Mersenne Twister from https://gist.github.com/banksean/300494\n\t    var MersenneTwister = function (seed) {\n\t        if (seed === undefined) {\n\t            seed = new Date().getTime();\n\t        }\n\t        /* Period parameters */\n\t        this.N = 624;\n\t        this.M = 397;\n\t        this.MATRIX_A = 0x9908b0df;   /* constant vector a */\n\t        this.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n\t        this.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n\t        this.mt = new Array(this.N); /* the array for the state vector */\n\t        this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */\n\n\t        this.init_genrand(seed);\n\t    };\n\n\t    /* initializes mt[N] with a seed */\n\t    MersenneTwister.prototype.init_genrand = function (s) {\n\t        this.mt[0] = s >>> 0;\n\t        for (this.mti = 1; this.mti < this.N; this.mti++) {\n\t            s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\n\t            this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + this.mti;\n\t            /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n\t            /* In the previous versions, MSBs of the seed affect   */\n\t            /* only MSBs of the array mt[].                        */\n\t            /* 2002/01/09 modified by Makoto Matsumoto             */\n\t            this.mt[this.mti] >>>= 0;\n\t            /* for >32 bit machines */\n\t        }\n\t    };\n\n\t    /* initialize by an array with array-length */\n\t    /* init_key is the array for initializing keys */\n\t    /* key_length is its length */\n\t    /* slight change for C++, 2004/2/26 */\n\t    MersenneTwister.prototype.init_by_array = function (init_key, key_length) {\n\t        var i = 1, j = 0, k, s;\n\t        this.init_genrand(19650218);\n\t        k = (this.N > key_length ? this.N : key_length);\n\t        for (; k; k--) {\n\t            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n\t            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525))) + init_key[j] + j; /* non linear */\n\t            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t            i++;\n\t            j++;\n\t            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n\t            if (j >= key_length) { j = 0; }\n\t        }\n\t        for (k = this.N - 1; k; k--) {\n\t            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n\t            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941)) - i; /* non linear */\n\t            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t            i++;\n\t            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n\t        }\n\n\t        this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n\t    };\n\n\t    /* generates a random number on [0,0xffffffff]-interval */\n\t    MersenneTwister.prototype.genrand_int32 = function () {\n\t        var y;\n\t        var mag01 = new Array(0x0, this.MATRIX_A);\n\t        /* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n\t        if (this.mti >= this.N) { /* generate N words at one time */\n\t            var kk;\n\n\t            if (this.mti === this.N + 1) {   /* if init_genrand() has not been called, */\n\t                this.init_genrand(5489); /* a default initial seed is used */\n\t            }\n\t            for (kk = 0; kk < this.N - this.M; kk++) {\n\t                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n\t                this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t            }\n\t            for (;kk < this.N - 1; kk++) {\n\t                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n\t                this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t            }\n\t            y = (this.mt[this.N - 1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\n\t            this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n\t            this.mti = 0;\n\t        }\n\n\t        y = this.mt[this.mti++];\n\n\t        /* Tempering */\n\t        y ^= (y >>> 11);\n\t        y ^= (y << 7) & 0x9d2c5680;\n\t        y ^= (y << 15) & 0xefc60000;\n\t        y ^= (y >>> 18);\n\n\t        return y >>> 0;\n\t    };\n\n\t    /* generates a random number on [0,0x7fffffff]-interval */\n\t    MersenneTwister.prototype.genrand_int31 = function () {\n\t        return (this.genrand_int32() >>> 1);\n\t    };\n\n\t    /* generates a random number on [0,1]-real-interval */\n\t    MersenneTwister.prototype.genrand_real1 = function () {\n\t        return this.genrand_int32() * (1.0 / 4294967295.0);\n\t        /* divided by 2^32-1 */\n\t    };\n\n\t    /* generates a random number on [0,1)-real-interval */\n\t    MersenneTwister.prototype.random = function () {\n\t        return this.genrand_int32() * (1.0 / 4294967296.0);\n\t        /* divided by 2^32 */\n\t    };\n\n\t    /* generates a random number on (0,1)-real-interval */\n\t    MersenneTwister.prototype.genrand_real3 = function () {\n\t        return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);\n\t        /* divided by 2^32 */\n\t    };\n\n\t    /* generates a random number on [0,1) with 53-bit resolution*/\n\t    MersenneTwister.prototype.genrand_res53 = function () {\n\t        var a = this.genrand_int32()>>>5, b = this.genrand_int32()>>>6;\n\t        return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\n\t    };\n\n\n\t    // CommonJS module\n\t    if (true) {\n\t        if (typeof module !== 'undefined' && module.exports) {\n\t            exports = module.exports = Chance;\n\t        }\n\t        exports.Chance = Chance;\n\t    }\n\n\t    // Register as an anonymous AMD module\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t            return Chance;\n\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    }\n\n\t    // if there is a importsScrips object define chance for worker\n\t    if (typeof importScripts !== 'undefined') {\n\t        chance = new Chance();\n\t    }\n\n\t    // If there is a window object, that at least has a document property,\n\t    // instantiate and define chance on the window\n\t    if (typeof window === \"object\" && typeof window.document === \"object\") {\n\t        window.Chance = Chance;\n\t        window.chance = new Chance();\n\t    }\n\t})();\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(78).Buffer))\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** testSkinMode-ed8af055721cf4f68eb6.js\n **/","/**\n * @license\n * lodash 3.7.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.7.0';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_DROP_WHILE_FLAG = 0,\n      LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]+|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?)\\1\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n   * In addition to special characters the forward slash is escaped to allow for\n   * easier `eval` use and `Function` compilation.\n   */\n  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to detect and test for whitespace. */\n  var whitespace = (\n    // Basic whitespace characters.\n    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\n    // Line terminators.\n    '\\n\\r\\u2028\\u2029' +\n\n    // Unicode category \"Zs\" space separators.\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n    'isFinite', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    'window'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it is the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare to `other`.\n   * @param {*} other The value to compare to `value`.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsReflexive = value === value,\n          othIsReflexive = other === other;\n\n      if (value > other || !valIsReflexive || (value === undefined && othIsReflexive)) {\n        return 1;\n      }\n      if (value < other || !othIsReflexive || (other === undefined && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it is not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback for string values.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the code unit of the first character of the string.\n   */\n  function charAtCallback(string) {\n    return string.charCodeAt(0);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of each element\n   * in a collection and stable sort them in the following order:\n   *\n   * If `orders` is unspecified, sort in ascending order for all properties.\n   * Otherwise, for each property, sort in ascending order if its corresponding value in\n   * orders is true, and descending order if false.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        return result * (orders[index] ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to detect DOM support. */\n    var document = (document = context.window) && document.document;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = context._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      escapeRegExp(objToString)\n      .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = isNative(ArrayBuffer = context.ArrayBuffer) && ArrayBuffer,\n        bufferSlice = isNative(bufferSlice = ArrayBuffer && new ArrayBuffer(0).slice) && bufferSlice,\n        ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        getOwnPropertySymbols = isNative(getOwnPropertySymbols = Object.getOwnPropertySymbols) && getOwnPropertySymbols,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        push = arrayProto.push,\n        preventExtensions = isNative(Object.preventExtensions = Object.preventExtensions) && preventExtensions,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = isNative(Set = context.Set) && Set,\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = isNative(Uint8Array = context.Uint8Array) && Uint8Array,\n        WeakMap = isNative(WeakMap = context.WeakMap) && WeakMap;\n\n    /** Used to clone array buffers. */\n    var Float64Array = (function() {\n      // Safari 5 errors when using an array buffer to initialize a typed array\n      // where the array buffer's `byteLength` is not a multiple of the typed\n      // array's `BYTES_PER_ELEMENT`.\n      try {\n        var func = isNative(func = context.Float64Array) && func,\n            result = new func(new ArrayBuffer(10), 0, 1) && func;\n      } catch(e) {}\n      return result;\n    }());\n\n    /** Used as `baseAssign`. */\n    var nativeAssign = (function() {\n      // Avoid `Object.assign` in Firefox 34-37 which have an early implementation\n      // with a now defunct try/catch behavior. See https://bugzilla.mozilla.org/show_bug.cgi?id=1103344\n      // for more details.\n      //\n      // Use `Object.preventExtensions` on a plain object instead of simply using\n      // `Object('x')` because Chrome and IE fail to throw an error when attempting\n      // to assign values to readonly indexes of strings in strict mode.\n      var object = { '1': 0 },\n          func = preventExtensions && isNative(func = Object.assign) && func;\n\n      try { func(preventExtensions(object), 'xo'); } catch(e) {}\n      return !object[1] && func;\n    }());\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsFinite = context.isFinite,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = isNative(nativeNow = Date.now) && nativeNow,\n        nativeNumIsFinite = isNative(nativeNumIsFinite = Number.isFinite) && nativeNumIsFinite,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1,\n        MAX_ARRAY_INDEX =  MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /** Used as the size, in bytes, of each `Float64Array` element. */\n    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n    /**\n     * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that return a boolean or single value will\n     * automatically end the chain returning the unwrapped value. Explicit chaining\n     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n     * that is, execution is deferred until `_#value` is implicitly or explicitly\n     * called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization that merges iteratees to avoid creating intermediate\n     * arrays and reduce the number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n     * `difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n     * `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n     * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n     * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n     * `keysIn`, `map`, `mapValues`, `matches`, `matchesProperty`, `memoize`,\n     * `merge`, `mixin`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `reverse`,\n     * `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`, `sortByOrder`, `splice`,\n     * `spread`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`,\n     * `throttle`, `thru`, `times`, `toArray`, `toPlainObject`, `transform`,\n     * `union`, `uniq`, `unshift`, `unzip`, `values`, `valuesIn`, `where`,\n     * `without`, `wrap`, `xor`, `zip`, and `zipObject`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n     * `identity`, `includes`, `indexOf`, `inRange`, `isArguments`, `isArray`,\n     * `isBoolean`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`, `isFinite`\n     * `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`,\n     * `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `isTypedArray`,\n     * `join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`, `noConflict`,\n     * `noop`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`,\n     * `reduce`, `reduceRight`, `repeat`, `result`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`, `startsWith`,\n     * `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`, `unescape`,\n     * `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    (function(x) {\n      var Ctor = function() { this.x = x; },\n          object = { '0': x, 'length': x },\n          props = [];\n\n      Ctor.prototype = { 'valueOf': x, 'y': x };\n      for (var key in new Ctor) { props.push(key); }\n\n      /**\n       * Detect if functions can be decompiled by `Function#toString`\n       * (all but Firefox OS certified apps, older Opera mobile browsers, and\n       * the PlayStation 3; forced `false` for Windows 8 apps).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.funcDecomp = /\\bthis\\b/.test(function() { return this; });\n\n      /**\n       * Detect if `Function#name` is supported (all but IE).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.funcNames = typeof Function.name == 'string';\n\n      /**\n       * Detect if the DOM is supported.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.dom = document.createDocumentFragment().nodeType === 11;\n      } catch(e) {\n        support.dom = false;\n      }\n\n      /**\n       * Detect if `arguments` object indexes are non-enumerable.\n       *\n       * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n       * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n       * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n       * checks for indexes that exceed the number of function parameters and\n       * whose associated argument values are `0`.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n      } catch(e) {\n        support.nonEnumArgs = true;\n      }\n    }(1, 0));\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = null;\n      this.__dir__ = 1;\n      this.__dropCount__ = 0;\n      this.__filtered__ = false;\n      this.__iteratees__ = null;\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = null;\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var actions = this.__actions__,\n          iteratees = this.__iteratees__,\n          views = this.__views__,\n          result = new LazyWrapper(this.__wrapped__);\n\n      result.__actions__ = actions ? arrayCopy(actions) : null;\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = iteratees ? arrayCopy(iteratees) : null;\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = views ? arrayCopy(views) : null;\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value();\n      if (!isArray(array)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var dir = this.__dir__,\n          isRight = dir < 0,\n          view = getView(0, array.length, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          takeCount = nativeMin(length, this.__takeCount__),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees ? iteratees.length : 0,\n          resIndex = 0,\n          result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type;\n\n          if (type == LAZY_DROP_WHILE_FLAG) {\n            if (data.done && (isRight ? (index > data.index) : (index < data.index))) {\n              data.count = 0;\n              data.done = false;\n            }\n            data.index = index;\n            if (!data.done) {\n              var limit = data.limit;\n              if (!(data.done = limit > -1 ? (data.count++ >= limit) : !iteratee(value))) {\n                continue outer;\n              }\n            }\n          } else {\n            var computed = iteratee(value);\n            if (type == LAZY_MAP_FLAG) {\n              value = computed;\n            } else if (!computed) {\n              if (type == LAZY_FILTER_FLAG) {\n                continue outer;\n              } else {\n                break outer;\n              }\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.max` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     */\n    function arrayMax(array) {\n      var index = -1,\n          length = array.length,\n          result = NEGATIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n        if (value > result) {\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.min` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     */\n    function arrayMin(array) {\n      var index = -1,\n          length = array.length,\n          result = POSITIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n        if (value < result) {\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +array[length] || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var props = keys(source);\n      push.apply(props, getSymbols(source));\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    var baseAssign = nativeAssign || function(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, getSymbols(source), baseCopy(source, keys(source), object));\n    };\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          length = collection.length,\n          isArr = isLength(length),\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function Object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object;\n          Object.prototype = null;\n        }\n        return result || context.Object();\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= 200) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} isDeep Specify a deep flatten.\n     * @param {boolean} isStrict Restrict flattening to arrays and `arguments` objects.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (isObjectLike(value) && isLength(value.length) && (isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            value = baseFlatten(value, isDeep, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length;\n\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[++resIndex] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = -1,\n          length = path.length;\n\n      while (object != null && ++index < length) {\n        var result = object = object[path[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      // Exit early for identical values.\n      if (value === other) {\n        // Treat `+0` vs. `-0` as not equal.\n        return value !== 0 || (1 / value == 1 / other);\n      }\n      var valType = typeof value,\n          othType = typeof other;\n\n      // Exit early for unlike primitive values.\n      if ((valType != 'function' && valType != 'object' && othType != 'function' && othType != 'object') ||\n          value == null || other == null) {\n        // Return `false` unless both values are `NaN`.\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var valWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (valWrapped || othWrapped) {\n          return equalFunc(valWrapped ? object.value() : object, othWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The source property names to match.\n     * @param {Array} values The source values to match.\n     * @param {Array} strictCompareFlags Strict comparison flags for source values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, props, values, strictCompareFlags, customizer) {\n      var index = -1,\n          length = props.length,\n          noCustomizer = !customizer;\n\n      while (++index < length) {\n        if ((noCustomizer && strictCompareFlags[index])\n              ? values[index] !== object[props[index]]\n              : !(props[index] in object)\n            ) {\n          return false;\n        }\n      }\n      index = -1;\n      while (++index < length) {\n        var key = props[index],\n            objValue = object[key],\n            srcValue = values[index];\n\n        if (noCustomizer && strictCompareFlags[index]) {\n          var result = objValue !== undefined || (key in object);\n        } else {\n          result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (result === undefined) {\n            result = baseIsEqual(srcValue, objValue, customizer, true);\n          }\n        }\n        if (!result) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          length = getLength(collection),\n          result = isLength(length) ? Array(length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var props = keys(source),\n          length = props.length;\n\n      if (!length) {\n        return constant(true);\n      }\n      if (length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return function(object) {\n            if (object == null) {\n              return false;\n            }\n            return object[key] === value && (value !== undefined || (key in toObject(object)));\n          };\n        }\n      }\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = source[props[length]];\n        values[length] = value;\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n      return function(object) {\n        return object != null && baseIsMatch(toObject(object), props, values, strictCompareFlags);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not which does\n     * not clone `value`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} value The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, value) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(value),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === value\n          ? (value !== undefined || (key in object))\n          : baseIsEqual(value, object[key], null, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n      if (!isSrcArr) {\n        var props = keys(source);\n        push.apply(props, getSymbols(source));\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((isSrcArr || result !== undefined) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (getLength(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = indexes.length;\n      while (length--) {\n        var index = parseFloat(indexes[length]);\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= 200,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var args = [result],\n            action = actions[index];\n\n        push.apply(args, action.args);\n        result = action.func.apply(action.thisArg, args);\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (retHighest ? (computed <= value) : (computed < value)) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = floor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || computed !== undefined);\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      return bufferSlice.call(buffer, 0);\n    }\n    if (!bufferSlice) {\n      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n        var byteLength = buffer.byteLength,\n            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n            result = new ArrayBuffer(byteLength);\n\n        if (floatLength) {\n          var view = new Float64Array(result, 0, floatLength);\n          view.set(new Float64Array(buffer, 0, floatLength));\n        }\n        if (byteLength != offset) {\n          view = new Uint8Array(result, offset);\n          view.set(new Uint8Array(buffer, offset));\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(argsLength + leftLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var pad = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[pad + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[pad + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an accumulator\n     * object composed from the results of running each element in the collection\n     * through an iteratee.\n     *\n     * **Note:** This function is used to create `_.countBy`, `_.groupBy`, `_.indexBy`,\n     * and `_.partition`.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that assigns properties of source object(s) to a given\n     * destination object.\n     *\n     * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 && sources[length - 2],\n            guard = length > 2 && sources[2],\n            thisArg = length > 1 && sources[length - 1];\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : null;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? null : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n      return new SetCache(values);\n    };\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, arguments);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = null;\n        }\n        var result = createWrapper(func, flag, null, null, null, null, null, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to get the extremum value from an array.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the maximum,\n     *  extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(arrayFunc, isMin) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = null;\n        }\n        var func = getCallback(),\n            noIteratee = iteratee == null;\n\n        if (!(func === baseCallback && noIteratee)) {\n          noIteratee = false;\n          iteratee = func(iteratee, thisArg, 3);\n        }\n        if (noIteratee) {\n          var isArr = isArray(collection);\n          if (!isArr && isString(collection)) {\n            iteratee = charAtCallback;\n          } else {\n            return arrayFunc(isArr ? collection : toIterable(collection));\n          }\n        }\n        return extremumBy(collection, iteratee, isMin);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      }\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var length = arguments.length;\n        if (!length) {\n          return function() { return arguments[0]; };\n        }\n        var wrapper,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          var funcName = wrapper ? '' : getFuncName(func);\n          wrapper = funcName == 'wrapper' ? new LodashWrapper([]) : wrapper;\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n          funcName = getFuncName(func);\n\n          var data = funcName == 'wrapper' ? getData(func) : null;\n          if (data && isLaziable(data[0])) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments;\n          if (wrapper && args.length == 1 && isArray(args[0])) {\n            return wrapper.plant(args[0]).value();\n          }\n          var index = 0,\n              result = funcs[index].apply(this, args);\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return string && ((fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string));\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, null, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG;\n\n      var Ctor = !isBindKey && createCtorWrapper(func),\n          key = func;\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : null,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : null,\n                newHoldersRight = isCurry ? null : argsHolders,\n                newPartials = isCurry ? args : null,\n                newPartialsRight = isCurry ? null : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this;\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? (Ctor || createCtorWrapper(func)) : func;\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(argsLength + leftLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var func = getCallback(iteratee);\n        return (func === baseCallback && iteratee == null)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, func(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = null;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = null;\n      }\n      var data = isBindKey ? null : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length,\n          result = true;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (result && ++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        result = undefined;\n        if (customizer) {\n          result = isLoose\n            ? customizer(othValue, arrValue, index)\n            : customizer(arrValue, othValue, index);\n        }\n        if (result === undefined) {\n          // Recursively compare arrays (susceptible to call stack limits).\n          if (isLoose) {\n            var othIndex = othLength;\n            while (othIndex--) {\n              othValue = other[othIndex];\n              result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              if (result) {\n                break;\n              }\n            }\n          } else {\n            result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n          }\n        }\n      }\n      return !!result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} value The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            // But, treat `-0` vs. `+0` as not equal.\n            : (object == 0 ? ((1 / object) == (1 / other)) : object == +other);\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var skipCtor = isLoose,\n          index = -1;\n\n      while (++index < objLength) {\n        var key = objProps[index],\n            result = isLoose ? key in other : hasOwnProperty.call(other, key);\n\n        if (result) {\n          var objValue = object[key],\n              othValue = other[key];\n\n          result = undefined;\n          if (customizer) {\n            result = isLoose\n              ? customizer(othValue, objValue, key)\n              : customizer(objValue, othValue, key);\n          }\n          if (result === undefined) {\n            // Recursively compare objects (susceptible to call stack limits).\n            result = (objValue && objValue === othValue) || equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB);\n          }\n        }\n        if (!result) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the\n     *  maximum, extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function extremumBy(collection, iteratee, isMin) {\n      var exValue = isMin ? POSITIVE_INFINITY : NEGATIVE_INFINITY,\n          computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = iteratee(value, index, collection);\n        if ((isMin ? (current < computed) : (current > computed)) ||\n            (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    var getFuncName = (function() {\n      if (!support.funcNames) {\n        return constant('');\n      }\n      if (constant.name == 'constant') {\n        return baseProperty('name');\n      }\n      return function(func) {\n        var result = func.name,\n            array = realNames[result],\n            length = array ? array.length : 0;\n\n        while (length--) {\n          var data = array[length],\n              otherFunc = data.func;\n\n          if (otherFunc == null || otherFunc == func) {\n            return data.name;\n          }\n        }\n        return result;\n      };\n    }());\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * in Safari on iOS 8.1 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Creates an array of the own symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !getOwnPropertySymbols ? constant([]) : function(object) {\n      return getOwnPropertySymbols(toObject(object));\n    };\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} [transforms] The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms ? transforms.length : 0;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = +value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number') {\n        var length = getLength(object),\n            prereq = isLength(length) && isIndex(index, length);\n      } else {\n        prereq = type == 'string' && index in object;\n      }\n      if (prereq) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      return !!funcName && func === lodash[funcName] && funcName in LazyWrapper.prototype;\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && (value === 0 ? ((1 / value) > 0) : !isObject(value));\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * A specialized version of `_.pick` that picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` that picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `_.isPlainObject` which checks if `value`\n     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n     * of `null`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var Ctor,\n          support = lodash.support;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n          (!hasOwnProperty.call(value, 'constructor') &&\n            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length,\n          support = lodash.support;\n\n      var allowIndexes = length && isLength(length) &&\n        (isArray(object) || (support.nonEnumArgs && isArguments(object)));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isLength(getLength(value))) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(+size || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(ceil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isArray(array) || isArguments(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using `SameValueZero` for equality comparisons. If `fromIndex` is negative,\n     * it is used as the offset from the end of `array`. If `array` is sorted\n     * providing `true` for `fromIndex` performs a faster binary search.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value),\n            other = array[index];\n\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values in all provided arrays using `SameValueZero`\n     * for equality comparisons.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = [],\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push((isCommon && value.length >= 120) ? createCache(argsIndex && value) : null);\n        }\n      }\n      argsLength = args.length;\n      if (argsLength < 2) {\n        return result;\n      }\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          argsIndex = argsLength;\n          while (--argsIndex) {\n            var cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using `SameValueZero` for equality\n     * comparisons.\n     *\n     * **Notes:**\n     *  - Unlike `_.without`, this method mutates `array`\n     *  - [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     *    comparisons are like strict equality comparisons, e.g. `===`, except\n     *    that `NaN` matches `NaN`\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      array || (array = []);\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using `SameValueZero` for\n     * equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n        isSorted = false;\n      }\n      var func = getCallback();\n      if (!(func === baseCallback && iteratee == null)) {\n        iteratee = func(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-`_.zip`\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      var index = -1,\n          length = (array && array.length && arrayMax(arrayMap(array, getLength))) >>> 0,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all provided values using `SameValueZero` for\n     * equality comparisons.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return (isArray(array) || isArguments(array))\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result\n            ? baseDifference(result, array).concat(baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapper = wrapper.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapper.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapper = wrapper.plant(other);\n     *\n     * otherWrapper.value();\n     * // => [9, 16]\n     *\n     * wrapper.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        if (this.__actions__.length) {\n          value = new LazyWrapper(this);\n        }\n        return new LodashWrapper(value.reverse(), this.__chain__);\n      }\n      return this.thru(function(value) {\n        return value.reverse();\n      });\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      var length = collection ? getLength(collection) : 0;\n      if (isLength(length)) {\n        collection = toIterable(collection);\n      }\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using `SameValueZero` for equality\n     * comparisons. If `fromIndex` is negative, it is used as the offset from\n     * the end of `collection`.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (!length) {\n        return false;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n        : (getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` on each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          length = getLength(collection),\n          result = isLength(length) ? Array(length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : (isProp && value != null && value[path]);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as interatees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`, `drop`,\n     * `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`, `parseInt`,\n     * `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimLeft`,\n     * `trimRight`, `trunc`, `random`, `range`, `sample`, `some`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as interatees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `includes`, `merge`, `sortByAll`, and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight =  createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(n < 0 ? 0 : (+n || 0), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      collection = toIterable(collection);\n\n      var index = -1,\n          length = collection.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var rand = baseRandom(0, index);\n        if (index != rand) {\n          result[index] = result[rand];\n        }\n        result[rand] = collection[index];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. A truthy value in `orders` will\n     * sort the corresponding property name in ascending order while a falsey\n     * value will sort it in descending order.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], [true, false]), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = null;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = null;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a function that delays invoking `func` until after `wait` milliseconds\n     * have elapsed since the last time it was invoked. The created function comes\n     * with a `cancel` method to cancel delayed invocations. Provide an options\n     * object to indicate that `func` should be invoked on the leading and/or\n     * trailing edge of the `wait` timeout. Subsequent calls to the debounced\n     * function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            cache = memoized.cache,\n            key = resolver ? resolver.apply(this, args) : args[0];\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, null, null, null, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a function that only invokes `func` at most once per every `wait`\n     * milliseconds. The created function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the throttled function return the result of the last\n     * `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = +wait;\n      debounceOptions.trailing = trailing;\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, isDeep, customizer);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, true, customizer);\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      var length = isObjectLike(value) ? value.length : undefined;\n      return isLength(length) && objToString.call(value) == argsTag;\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) &&\n        (objToString.call(value).indexOf('Element') > -1);\n    }\n    // Fallback for environments without DOM support.\n    if (!support.dom) {\n      isElement = function(value) {\n        return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n      };\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      var length = getLength(value);\n      if (isLength(length) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n      if (!customizer && isStrictComparable(value) && isStrictComparable(other)) {\n        return value === other;\n      }\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    var isFinite = nativeNumIsFinite || function(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    var isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return objToString.call(value) == funcTag;\n    };\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return type == 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      var props = keys(source),\n          length = props.length;\n\n      if (!length) {\n        return true;\n      }\n      if (object == null) {\n        return false;\n      }\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n      object = toObject(object);\n      if (!customizer && length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return value === object[key] && (value !== undefined || (key in object));\n        }\n      }\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = values[length] = source[props[length]];\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n      return baseIsMatch(object, props, values, strictCompareFlags, customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (objToString.call(value) == funcTag) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && objToString.call(value) == objectTag)) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return (isObjectLike(value) && objToString.call(value) == regexpTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).\n     *\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = null;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = restParam(function(args) {\n      var object = args[0];\n      if (object == null) {\n        return object;\n      }\n      args.push(assignDefaults);\n      return assign.apply(undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value of `path` on `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n        result = object != null && hasOwnProperty.call(object, path);\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = null;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      if (object) {\n        var Ctor = object.constructor,\n            length = object.length;\n      }\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isLength(length))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee, thisArg) {\n      var result = {};\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If `predicate` is provided it is invoked for each property\n     * of `object` omitting the properties `predicate` returns truthy for. The\n     * predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          endIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == endIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) && Ctor.prototype);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (typeof end === 'undefined') {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = null;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't require escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it is shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = floor(mid),\n          rightLength = ceil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it is shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it is shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard && isIterateeCall(string, radix, guard)) {\n        radix = 0;\n      }\n      return nativeParseInt(string, radix);\n    }\n    // Fallback for environments with pre-ES5 implementations.\n    if (nativeParseInt(whitespace + '08') != 8) {\n      parseInt = function(string, radix, guard) {\n        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n        // Chrome fails to trim leading <BOM> whitespace characters.\n        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n          radix = 0;\n        } else if (radix) {\n          radix = +radix;\n        }\n        string = trim(string);\n        return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n      };\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = floor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = null;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it is longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = null;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = null;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = null;\n      }\n      return baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function which performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function which compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} value The value to compare.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, value) {\n      return baseMatchesProperty(path, baseClone(value, true));\n    }\n\n    /**\n     * Creates a function which invokes the method at `path` on a given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      }\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function which invokes\n     * the method at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * // use `_.runInContext` to avoid conflicts (esp. in Node.js)\n     * var _ = require('lodash').runInContext();\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj && keys(source),\n            methodNames = props && props.length && baseFunctions(source, props);\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              var args = [this.value()];\n              push.apply(args, arguments);\n              return func.apply(object, args);\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function which returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function which returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function which returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = null;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = floor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(arrayMax);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(arrayMin, true);\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      var func = getCallback(),\n          noIteratee = iteratee == null;\n\n      if (!(func === baseCallback && noIteratee)) {\n        noIteratee = false;\n        iteratee = func(iteratee, thisArg, 3);\n      }\n      return noIteratee\n        ? arraySum(isArray(collection) ? collection : toIterable(collection))\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.get = get;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['dropWhile', 'filter', 'map', 'takeWhile'], function(methodName, type) {\n      var isFilter = type != LAZY_MAP_FLAG,\n          isDropWhile = type == LAZY_DROP_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var filtered = this.__filtered__,\n            result = (filtered && isDropWhile) ? new LazyWrapper(this) : this.clone(),\n            iteratees = result.__iteratees__ || (result.__iteratees__ = []);\n\n        iteratees.push({\n          'done': false,\n          'count': 0,\n          'index': 0,\n          'iteratee': getCallback(iteratee, thisArg, 1),\n          'limit': -1,\n          'type': type\n        });\n\n        result.__filtered__ = filtered || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      var whileName = methodName + 'While';\n\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__,\n            result = (filtered && !index) ? this.dropWhile() : this.clone();\n\n        n = n == null ? 1 : nativeMax(floor(n) || 0, 0);\n        if (filtered) {\n          if (index) {\n            result.__takeCount__ = nativeMin(result.__takeCount__, n);\n          } else {\n            last(result.__iteratees__).limit = n;\n          }\n        } else {\n          var views = result.__views__ || (result.__views__ = []);\n          views.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n\n      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n        return this.reverse()[whileName](predicate, thisArg).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n      var result = start < 0 ? this.takeRight(-start) : this.drop(start);\n\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.drop(0);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (!lodashFunc) {\n        return;\n      }\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments,\n            length = args.length,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // avoid lazy use if the iteratee has a \"length\" value other than `1`\n          isLazy = useLazy = false;\n        }\n        var onlyLazy = isLazy && !isHybrid;\n        if (retUnwrapped && !chainAll) {\n          return onlyLazy\n            ? func.call(value)\n            : lodashFunc.call(lodash, this.value());\n        }\n        var interceptor = function(value) {\n          var otherArgs = [value];\n          push.apply(otherArgs, args);\n          return lodashFunc.apply(lodash, otherArgs);\n        };\n        if (useLazy) {\n          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n              result = func.apply(wrapper, args);\n\n          if (!retUnwrapped && (isHybrid || result.__actions__)) {\n            var actions = result.__actions__ || (result.__actions__ = []);\n            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n          }\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['concat', 'join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(null, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': null }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Narwhal or Rhino -require.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/index.js\n ** module id = 12\n ** module chunks = 2 3 4 5 6\n **/","/**\r\n * @license\r\n * pixi.js - v2.2.7\r\n * Copyright (c) 2012-2014, Mat Groves\r\n * http://goodboydigital.com/\r\n *\r\n * Compiled: 2015-02-25\r\n *\r\n * pixi.js is licensed under the MIT License.\r\n * http://www.opensource.org/licenses/mit-license.php\r\n */\r\n/**\r\n * @author Mat Groves http://matgroves.com/ @Doormat23\r\n */\r\n\r\n(function(){\r\n\r\n    var root = this;\r\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The [pixi.js](http://www.pixijs.com/) module/namespace.\n *\n * @module PIXI\n */\n\n/**\n * Namespace-class for [pixi.js](http://www.pixijs.com/).\n *\n * Contains assorted static properties and enumerations.\n *\n * @class PIXI\n * @static\n */\nvar PIXI = PIXI || {};\n\n/**\n * @property {Number} WEBGL_RENDERER\n * @protected\n * @static\n */\nPIXI.WEBGL_RENDERER = 0;\n/**\n * @property {Number} CANVAS_RENDERER\n * @protected\n * @static\n */\nPIXI.CANVAS_RENDERER = 1;\n\n/**\n * Version of pixi that is loaded.\n * @property {String} VERSION\n * @static\n */\nPIXI.VERSION = \"v2.2.7\";\n\n/**\n * Various blend modes supported by pixi. IMPORTANT - The WebGL renderer only supports the NORMAL, ADD, MULTIPLY and SCREEN blend modes.\n * @property {Object} blendModes\n * @property {Number} blendModes.NORMAL\n * @property {Number} blendModes.ADD\n * @property {Number} blendModes.MULTIPLY\n * @property {Number} blendModes.SCREEN\n * @property {Number} blendModes.OVERLAY\n * @property {Number} blendModes.DARKEN\n * @property {Number} blendModes.LIGHTEN\n * @property {Number} blendModes.COLOR_DODGE\n * @property {Number} blendModes.COLOR_BURN\n * @property {Number} blendModes.HARD_LIGHT\n * @property {Number} blendModes.SOFT_LIGHT\n * @property {Number} blendModes.DIFFERENCE\n * @property {Number} blendModes.EXCLUSION\n * @property {Number} blendModes.HUE\n * @property {Number} blendModes.SATURATION\n * @property {Number} blendModes.COLOR\n * @property {Number} blendModes.LUMINOSITY\n * @static\n */\nPIXI.blendModes = {\n    NORMAL:0,\n    ADD:1,\n    MULTIPLY:2,\n    SCREEN:3,\n    OVERLAY:4,\n    DARKEN:5,\n    LIGHTEN:6,\n    COLOR_DODGE:7,\n    COLOR_BURN:8,\n    HARD_LIGHT:9,\n    SOFT_LIGHT:10,\n    DIFFERENCE:11,\n    EXCLUSION:12,\n    HUE:13,\n    SATURATION:14,\n    COLOR:15,\n    LUMINOSITY:16\n};\n\n/**\n * The scale modes that are supported by pixi.\n *\n * The DEFAULT scale mode affects the default scaling mode of future operations.\n * It can be re-assigned to either LINEAR or NEAREST, depending upon suitability.\n *\n * @property {Object} scaleModes\n * @property {Number} scaleModes.DEFAULT=LINEAR\n * @property {Number} scaleModes.LINEAR Smooth scaling\n * @property {Number} scaleModes.NEAREST Pixelating scaling\n * @static\n */\nPIXI.scaleModes = {\n    DEFAULT:0,\n    LINEAR:0,\n    NEAREST:1\n};\n\n// used to create uids for various pixi objects..\nPIXI._UID = 0;\n\nif(typeof(Float32Array) != 'undefined')\n{\n    PIXI.Float32Array = Float32Array;\n    PIXI.Uint16Array = Uint16Array;\n\n    // Uint32Array and ArrayBuffer only used by WebGL renderer\n    // We can suppose that if WebGL is supported then typed arrays are supported too\n    // as they predate WebGL support for all browsers:\n    // see typed arrays support: http://caniuse.com/#search=TypedArrays\n    // see WebGL support: http://caniuse.com/#search=WebGL\n    PIXI.Uint32Array = Uint32Array;\n    PIXI.ArrayBuffer = ArrayBuffer;\n}\nelse\n{\n    PIXI.Float32Array = Array;\n    PIXI.Uint16Array = Array;\n}\n\n// interaction frequency\nPIXI.INTERACTION_FREQUENCY = 30;\nPIXI.AUTO_PREVENT_DEFAULT = true;\n\n/**\n * @property {Number} PI_2\n * @static\n */\nPIXI.PI_2 = Math.PI * 2;\n\n/**\n * @property {Number} RAD_TO_DEG\n * @static\n */\nPIXI.RAD_TO_DEG = 180 / Math.PI;\n\n/**\n * @property {Number} DEG_TO_RAD\n * @static\n */\nPIXI.DEG_TO_RAD = Math.PI / 180;\n\n/**\n * @property {String} RETINA_PREFIX\n * @protected\n * @static\n */\nPIXI.RETINA_PREFIX = \"@2x\";\n//PIXI.SCALE_PREFIX \"@x%%\";\n\n/**\n * If true the default pixi startup (console) banner message will be suppressed.\n *\n * @property {Boolean} dontSayHello\n * @default false\n * @static\n */\nPIXI.dontSayHello = false;\n\n/**\n * The default render options if none are supplied to\n * {{#crossLink \"WebGLRenderer\"}}{{/crossLink}} or {{#crossLink \"CanvasRenderer\"}}{{/crossLink}}.\n *\n * @property {Object} defaultRenderOptions\n * @property {Object} defaultRenderOptions.view=null\n * @property {Boolean} defaultRenderOptions.transparent=false\n * @property {Boolean} defaultRenderOptions.antialias=false\n * @property {Boolean} defaultRenderOptions.preserveDrawingBuffer=false\n * @property {Number} defaultRenderOptions.resolution=1\n * @property {Boolean} defaultRenderOptions.clearBeforeRender=true\n * @property {Boolean} defaultRenderOptions.autoResize=false\n * @static\n */\nPIXI.defaultRenderOptions = {\n    view:null,\n    transparent:false,\n    antialias:false,\n    preserveDrawingBuffer:false,\n    resolution:1,\n    clearBeforeRender:true,\n    autoResize:false\n}\n\nPIXI.sayHello = function (type)\n{\n    if(PIXI.dontSayHello)return;\n\n    if ( navigator.userAgent.toLowerCase().indexOf('chrome') > -1 )\n    {\n        var args = [\n            '%c %c %c Pixi.js ' + PIXI.VERSION + ' - ' + type + '  %c ' + ' %c ' + ' http://www.pixijs.com/  %c %c ♥%c♥%c♥ ',\n            'background: #ff66a5',\n            'background: #ff66a5',\n            'color: #ff66a5; background: #030307;',\n            'background: #ff66a5',\n            'background: #ffc3dc',\n            'background: #ff66a5',\n            'color: #ff2424; background: #fff',\n            'color: #ff2424; background: #fff',\n            'color: #ff2424; background: #fff'\n        ];\n\n        console.log.apply(console, args);\n    }\n    else if (window['console'])\n    {\n        console.log('Pixi.js ' + PIXI.VERSION + ' - http://www.pixijs.com/');\n    }\n\n    PIXI.dontSayHello = true;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents the horizontal axis and y represents the vertical axis.\n *\n * @class Point\n * @constructor\n * @param x {Number} position of the point on the x axis\n * @param y {Number} position of the point on the y axis\n */\nPIXI.Point = function(x, y)\n{\n    /**\n     * @property x\n     * @type Number\n     * @default 0\n     */\n    this.x = x || 0;\n\n    /**\n     * @property y\n     * @type Number\n     * @default 0\n     */\n    this.y = y || 0;\n};\n\n/**\n * Creates a clone of this point\n *\n * @method clone\n * @return {Point} a copy of the point\n */\nPIXI.Point.prototype.clone = function()\n{\n    return new PIXI.Point(this.x, this.y);\n};\n\n/**\n * Sets the point to a new x and y position.\n * If y is omitted, both x and y will be set to x.\n * \n * @method set\n * @param [x=0] {Number} position of the point on the x axis\n * @param [y=0] {Number} position of the point on the y axis\n */\nPIXI.Point.prototype.set = function(x, y)\n{\n    this.x = x || 0;\n    this.y = y || ( (y !== 0) ? this.x : 0 ) ;\n};\n\n// constructor\nPIXI.Point.prototype.constructor = PIXI.Point;\r\n/**\n * @author Mat Groves http://matgroves.com/\n */\n\n/**\n * the Rectangle object is an area defined by its position, as indicated by its top-left corner point (x, y) and by its width and its height.\n *\n * @class Rectangle\n * @constructor\n * @param x {Number} The X coordinate of the upper-left corner of the rectangle\n * @param y {Number} The Y coordinate of the upper-left corner of the rectangle\n * @param width {Number} The overall width of this rectangle\n * @param height {Number} The overall height of this rectangle\n */\nPIXI.Rectangle = function(x, y, width, height)\n{\n    /**\n     * @property x\n     * @type Number\n     * @default 0\n     */\n    this.x = x || 0;\n\n    /**\n     * @property y\n     * @type Number\n     * @default 0\n     */\n    this.y = y || 0;\n\n    /**\n     * @property width\n     * @type Number\n     * @default 0\n     */\n    this.width = width || 0;\n\n    /**\n     * @property height\n     * @type Number\n     * @default 0\n     */\n    this.height = height || 0;\n\n    /**\n     * The type of the object, should be one of the Graphics type consts, PIXI.Graphics.RECT in this case\n     * @property type\n     * @type Number\n     * @default 0\n     */\n};\n\n/**\n * Creates a clone of this Rectangle\n *\n * @method clone\n * @return {Rectangle} a copy of the rectangle\n */\nPIXI.Rectangle.prototype.clone = function()\n{\n    return new PIXI.Rectangle(this.x, this.y, this.width, this.height);\n};\n\n/**\n * Checks whether the x and y coordinates given are contained within this Rectangle\n *\n * @method contains\n * @param x {Number} The X coordinate of the point to test\n * @param y {Number} The Y coordinate of the point to test\n * @return {Boolean} Whether the x/y coordinates are within this Rectangle\n */\nPIXI.Rectangle.prototype.contains = function(x, y)\n{\n    if(this.width <= 0 || this.height <= 0)\n        return false;\n\n    var x1 = this.x;\n    if(x >= x1 && x <= x1 + this.width)\n    {\n        var y1 = this.y;\n\n        if(y >= y1 && y <= y1 + this.height)\n        {\n            return true;\n        }\n    }\n\n    return false;\n};\n\n// constructor\nPIXI.Rectangle.prototype.constructor = PIXI.Rectangle;\n\nPIXI.EmptyRectangle = new PIXI.Rectangle(0,0,0,0);\r\n/**\n * @author Adrien Brault <adrien.brault@gmail.com>\n */\n\n/**\n * @class Polygon\n * @constructor\n * @param points* {Array(Point)|Array(Number)|Point...|Number...} This can be an array of Points that form the polygon,\n *      a flat array of numbers that will be interpreted as [x,y, x,y, ...], or the arguments passed can be\n *      all the points of the polygon e.g. `new PIXI.Polygon(new PIXI.Point(), new PIXI.Point(), ...)`, or the\n *      arguments passed can be flat x,y values e.g. `new PIXI.Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are\n *      Numbers.\n */\nPIXI.Polygon = function(points)\n{\n    //if points isn't an array, use arguments as the array\n    if(!(points instanceof Array))points = Array.prototype.slice.call(arguments);\n\n    //if this is a flat array of numbers, convert it to points\n    if(points[0] instanceof PIXI.Point)\n    {\n        var p = [];\n        for(var i = 0, il = points.length; i < il; i++)\n        {\n            p.push(points[i].x, points[i].y);\n        }\n\n        points = p;\n    }\n\n    this.closed = true;\n\n    /**\n     * An array of the points of this polygon\n     * @property points\n     * @type Array(Point)|Array(Number)\n     * \n     */\n    this.points = points;\n\n    /**\n     * The type of the object, should be one of the Graphics type consts, PIXI.Graphics.POLY in this case\n     * @property type\n     * @type Number\n     * @default 0\n     */\n};\n\n/**\n * Creates a clone of this polygon\n *\n * @method clone\n * @return {Polygon} a copy of the polygon\n */\nPIXI.Polygon.prototype.clone = function()\n{\n    var points = this.points.slice();\n    return new PIXI.Polygon(points);\n};\n\n/**\n * Checks whether the x and y coordinates passed to this function are contained within this polygon\n *\n * @method contains\n * @param x {Number} The X coordinate of the point to test\n * @param y {Number} The Y coordinate of the point to test\n * @return {Boolean} Whether the x/y coordinates are within this polygon\n */\nPIXI.Polygon.prototype.contains = function(x, y)\n{\n    var inside = false;\n\n    // use some raycasting to test hits\n    // https://github.com/substack/point-in-polygon/blob/master/index.js\n    var length = this.points.length / 2;\n\n    for(var i = 0, j = length - 1; i < length; j = i++)\n    {\n        var xi = this.points[i * 2], yi = this.points[i * 2 + 1],\n            xj = this.points[j * 2], yj = this.points[j * 2 + 1],\n            intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n\n        if(intersect) inside = !inside;\n    }\n\n    return inside;\n};\n\n// constructor\nPIXI.Polygon.prototype.constructor = PIXI.Polygon;\n\r\n/**\n * @author Chad Engler <chad@pantherdev.com>\n */\n\n/**\n * The Circle object can be used to specify a hit area for displayObjects\n *\n * @class Circle\n * @constructor\n * @param x {Number} The X coordinate of the center of this circle\n * @param y {Number} The Y coordinate of the center of this circle\n * @param radius {Number} The radius of the circle\n */\nPIXI.Circle = function(x, y, radius)\n{\n    /**\n     * @property x\n     * @type Number\n     * @default 0\n     */\n    this.x = x || 0;\n\n    /**\n     * @property y\n     * @type Number\n     * @default 0\n     */\n    this.y = y || 0;\n\n    /**\n     * @property radius\n     * @type Number\n     * @default 0\n     */\n    this.radius = radius || 0;\n\n    /**\n     * The type of the object, should be one of the Graphics type consts, PIXI.Graphics.CIRC in this case\n     * @property type\n     * @type Number\n     * @default 0\n     */\n};\n\n/**\n * Creates a clone of this Circle instance\n *\n * @method clone\n * @return {Circle} a copy of the Circle\n */\nPIXI.Circle.prototype.clone = function()\n{\n    return new PIXI.Circle(this.x, this.y, this.radius);\n};\n\n/**\n * Checks whether the x and y coordinates given are contained within this circle\n *\n * @method contains\n * @param x {Number} The X coordinate of the point to test\n * @param y {Number} The Y coordinate of the point to test\n * @return {Boolean} Whether the x/y coordinates are within this Circle\n */\nPIXI.Circle.prototype.contains = function(x, y)\n{\n    if(this.radius <= 0)\n        return false;\n\n    var dx = (this.x - x),\n        dy = (this.y - y),\n        r2 = this.radius * this.radius;\n\n    dx *= dx;\n    dy *= dy;\n\n    return (dx + dy <= r2);\n};\n\n/**\n* Returns the framing rectangle of the circle as a PIXI.Rectangle object\n*\n* @method getBounds\n* @return {Rectangle} the framing rectangle\n*/\nPIXI.Circle.prototype.getBounds = function()\n{\n    return new PIXI.Rectangle(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);\n};\n\n// constructor\nPIXI.Circle.prototype.constructor = PIXI.Circle;\n\r\n/**\n * @author Chad Engler <chad@pantherdev.com>\n */\n\n/**\n * The Ellipse object can be used to specify a hit area for displayObjects\n *\n * @class Ellipse\n * @constructor\n * @param x {Number} The X coordinate of the center of the ellipse\n * @param y {Number} The Y coordinate of the center of the ellipse\n * @param width {Number} The half width of this ellipse\n * @param height {Number} The half height of this ellipse\n */\nPIXI.Ellipse = function(x, y, width, height)\n{\n    /**\n     * @property x\n     * @type Number\n     * @default 0\n     */\n    this.x = x || 0;\n\n    /**\n     * @property y\n     * @type Number\n     * @default 0\n     */\n    this.y = y || 0;\n\n    /**\n     * @property width\n     * @type Number\n     * @default 0\n     */\n    this.width = width || 0;\n\n    /**\n     * @property height\n     * @type Number\n     * @default 0\n     */\n    this.height = height || 0;\n\n\n    /**\n     * The type of the object, should be one of the Graphics type consts, PIXI.Graphics.ELIP in this case\n     * @property type\n     * @type Number\n     * @default 0\n     */\n};\n\n/**\n * Creates a clone of this Ellipse instance\n *\n * @method clone\n * @return {Ellipse} a copy of the ellipse\n */\nPIXI.Ellipse.prototype.clone = function()\n{\n    return new PIXI.Ellipse(this.x, this.y, this.width, this.height);\n};\n\n/**\n * Checks whether the x and y coordinates given are contained within this ellipse\n *\n * @method contains\n * @param x {Number} The X coordinate of the point to test\n * @param y {Number} The Y coordinate of the point to test\n * @return {Boolean} Whether the x/y coords are within this ellipse\n */\nPIXI.Ellipse.prototype.contains = function(x, y)\n{\n    if(this.width <= 0 || this.height <= 0)\n        return false;\n\n    //normalize the coords to an ellipse with center 0,0\n    var normx = ((x - this.x) / this.width),\n        normy = ((y - this.y) / this.height);\n\n    normx *= normx;\n    normy *= normy;\n\n    return (normx + normy <= 1);\n};\n\n/**\n* Returns the framing rectangle of the ellipse as a PIXI.Rectangle object\n*\n* @method getBounds\n* @return {Rectangle} the framing rectangle\n*/\nPIXI.Ellipse.prototype.getBounds = function()\n{\n    return new PIXI.Rectangle(this.x - this.width, this.y - this.height, this.width, this.height);\n};\n\n// constructor\nPIXI.Ellipse.prototype.constructor = PIXI.Ellipse;\n\r\n/**\n * @author Mat Groves http://matgroves.com/\n */\n\n/**\n * The Rounded Rectangle object is an area defined by its position and has nice rounded corners, as indicated by its top-left corner point (x, y) and by its width and its height.\n *\n * @class RoundedRectangle\n * @constructor\n * @param x {Number} The X coordinate of the upper-left corner of the rounded rectangle\n * @param y {Number} The Y coordinate of the upper-left corner of the rounded rectangle\n * @param width {Number} The overall width of this rounded rectangle\n * @param height {Number} The overall height of this rounded rectangle\n * @param radius {Number} Controls the radius of the rounded corners \n */\nPIXI.RoundedRectangle = function(x, y, width, height, radius)\n{\n    /**\n     * @property x\n     * @type Number\n     * @default 0\n     */\n    this.x = x || 0;\n\n    /**\n     * @property y\n     * @type Number\n     * @default 0\n     */\n    this.y = y || 0;\n\n    /**\n     * @property width\n     * @type Number\n     * @default 0\n     */\n    this.width = width || 0;\n\n    /**\n     * @property height\n     * @type Number\n     * @default 0\n     */\n    this.height = height || 0;\n\n    /**\n     * @property radius\n     * @type Number\n     * @default 20\n     */\n    this.radius = radius || 20;\n\n    /**\n     * The type of the object, should be one of the Graphics type consts, PIXI.Graphics.RRECT in this case\n     * @property type\n     * @type Number\n     * @default 0\n     */\n};\n\n/**\n * Creates a clone of this Rounded Rectangle\n *\n * @method clone\n * @return {RoundedRectangle} a copy of the rounded rectangle\n */\nPIXI.RoundedRectangle.prototype.clone = function()\n{\n    return new PIXI.RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n};\n\n/**\n * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n *\n * @method contains\n * @param x {Number} The X coordinate of the point to test\n * @param y {Number} The Y coordinate of the point to test\n * @return {Boolean} Whether the x/y coordinates are within this Rounded Rectangle\n */\nPIXI.RoundedRectangle.prototype.contains = function(x, y)\n{\n    if(this.width <= 0 || this.height <= 0)\n        return false;\n\n    var x1 = this.x;\n    if(x >= x1 && x <= x1 + this.width)\n    {\n        var y1 = this.y;\n\n        if(y >= y1 && y <= y1 + this.height)\n        {\n            return true;\n        }\n    }\n\n    return false;\n};\n\n// constructor\nPIXI.RoundedRectangle.prototype.constructor = PIXI.RoundedRectangle;\n\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The Matrix class is now an object, which makes it a lot faster, \n * here is a representation of it : \n * | a | b | tx|\n * | c | d | ty|\n * | 0 | 0 | 1 |\n *\n * @class Matrix\n * @constructor\n */\nPIXI.Matrix = function()\n{\n    /**\n     * @property a\n     * @type Number\n     * @default 1\n     */\n    this.a = 1;\n\n    /**\n     * @property b\n     * @type Number\n     * @default 0\n     */\n    this.b = 0;\n\n    /**\n     * @property c\n     * @type Number\n     * @default 0\n     */\n    this.c = 0;\n\n    /**\n     * @property d\n     * @type Number\n     * @default 1\n     */\n    this.d = 1;\n\n    /**\n     * @property tx\n     * @type Number\n     * @default 0\n     */\n    this.tx = 0;\n\n    /**\n     * @property ty\n     * @type Number\n     * @default 0\n     */\n    this.ty = 0;\n};\n\n/**\n * Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\n *\n * a = array[0]\n * b = array[1]\n * c = array[3]\n * d = array[4]\n * tx = array[2]\n * ty = array[5]\n *\n * @method fromArray\n * @param array {Array} The array that the matrix will be populated from.\n */\nPIXI.Matrix.prototype.fromArray = function(array)\n{\n    this.a = array[0];\n    this.b = array[1];\n    this.c = array[3];\n    this.d = array[4];\n    this.tx = array[2];\n    this.ty = array[5];\n};\n\n/**\n * Creates an array from the current Matrix object.\n *\n * @method toArray\n * @param transpose {Boolean} Whether we need to transpose the matrix or not\n * @return {Array} the newly created array which contains the matrix\n */\nPIXI.Matrix.prototype.toArray = function(transpose)\n{\n    if(!this.array) this.array = new PIXI.Float32Array(9);\n    var array = this.array;\n\n    if(transpose)\n    {\n        array[0] = this.a;\n        array[1] = this.b;\n        array[2] = 0;\n        array[3] = this.c;\n        array[4] = this.d;\n        array[5] = 0;\n        array[6] = this.tx;\n        array[7] = this.ty;\n        array[8] = 1;\n    }\n    else\n    {\n        array[0] = this.a;\n        array[1] = this.c;\n        array[2] = this.tx;\n        array[3] = this.b;\n        array[4] = this.d;\n        array[5] = this.ty;\n        array[6] = 0;\n        array[7] = 0;\n        array[8] = 1;\n    }\n\n    return array;\n};\n\n/**\n * Get a new position with the current transformation applied.\n * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n *\n * @method apply\n * @param pos {Point} The origin\n * @param [newPos] {Point} The point that the new position is assigned to (allowed to be same as input)\n * @return {Point} The new point, transformed through this matrix\n */\nPIXI.Matrix.prototype.apply = function(pos, newPos)\n{\n    newPos = newPos || new PIXI.Point();\n\n    newPos.x = this.a * pos.x + this.c * pos.y + this.tx;\n    newPos.y = this.b * pos.x + this.d * pos.y + this.ty;\n\n    return newPos;\n};\n\n/**\n * Get a new position with the inverse of the current transformation applied.\n * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n *\n * @method applyInverse\n * @param pos {Point} The origin\n * @param [newPos] {Point} The point that the new position is assigned to (allowed to be same as input)\n * @return {Point} The new point, inverse-transformed through this matrix\n */\nPIXI.Matrix.prototype.applyInverse = function(pos, newPos)\n{\n    newPos = newPos || new PIXI.Point();\n\n    var id = 1 / (this.a * this.d + this.c * -this.b);\n     \n    newPos.x = this.d * id * pos.x + -this.c * id * pos.y + (this.ty * this.c - this.tx * this.d) * id;\n    newPos.y = this.a * id * pos.y + -this.b * id * pos.x + (-this.ty * this.a + this.tx * this.b) * id;\n\n    return newPos;\n};\n\n/**\n * Translates the matrix on the x and y.\n * \n * @method translate\n * @param {Number} x\n * @param {Number} y\n * @return {Matrix} This matrix. Good for chaining method calls.\n **/\nPIXI.Matrix.prototype.translate = function(x, y)\n{\n    this.tx += x;\n    this.ty += y;\n    \n    return this;\n};\n\n/**\n * Applies a scale transformation to the matrix.\n * \n * @method scale\n * @param {Number} x The amount to scale horizontally\n * @param {Number} y The amount to scale vertically\n * @return {Matrix} This matrix. Good for chaining method calls.\n **/\nPIXI.Matrix.prototype.scale = function(x, y)\n{\n    this.a *= x;\n    this.d *= y;\n    this.c *= x;\n    this.b *= y;\n    this.tx *= x;\n    this.ty *= y;\n\n    return this;\n};\n\n\n/**\n * Applies a rotation transformation to the matrix.\n * @method rotate\n * @param {Number} angle The angle in radians.\n * @return {Matrix} This matrix. Good for chaining method calls.\n **/\nPIXI.Matrix.prototype.rotate = function(angle)\n{\n    var cos = Math.cos( angle );\n    var sin = Math.sin( angle );\n\n    var a1 = this.a;\n    var c1 = this.c;\n    var tx1 = this.tx;\n\n    this.a = a1 * cos-this.b * sin;\n    this.b = a1 * sin+this.b * cos;\n    this.c = c1 * cos-this.d * sin;\n    this.d = c1 * sin+this.d * cos;\n    this.tx = tx1 * cos - this.ty * sin;\n    this.ty = tx1 * sin + this.ty * cos;\n \n    return this;\n};\n\n/**\n * Appends the given Matrix to this Matrix.\n * \n * @method append\n * @param {Matrix} matrix\n * @return {Matrix} This matrix. Good for chaining method calls.\n */\nPIXI.Matrix.prototype.append = function(matrix)\n{\n    var a1 = this.a;\n    var b1 = this.b;\n    var c1 = this.c;\n    var d1 = this.d;\n\n    this.a  = matrix.a * a1 + matrix.b * c1;\n    this.b  = matrix.a * b1 + matrix.b * d1;\n    this.c  = matrix.c * a1 + matrix.d * c1;\n    this.d  = matrix.c * b1 + matrix.d * d1;\n\n    this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;\n    this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;\n    \n    return this;\n};\n\n/**\n * Resets this Matix to an identity (default) matrix.\n * \n * @method identity\n * @return {Matrix} This matrix. Good for chaining method calls.\n */\nPIXI.Matrix.prototype.identity = function()\n{\n    this.a = 1;\n    this.b = 0;\n    this.c = 0;\n    this.d = 1;\n    this.tx = 0;\n    this.ty = 0;\n\n    return this;\n};\n\nPIXI.identityMatrix = new PIXI.Matrix();\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The base class for all objects that are rendered on the screen.\n * This is an abstract class and should not be used on its own rather it should be extended.\n *\n * @class DisplayObject\n * @constructor\n */\nPIXI.DisplayObject = function()\n{\n    /**\n     * The coordinate of the object relative to the local coordinates of the parent.\n     *\n     * @property position\n     * @type Point\n     */\n    this.position = new PIXI.Point();\n\n    /**\n     * The scale factor of the object.\n     *\n     * @property scale\n     * @type Point\n     */\n    this.scale = new PIXI.Point(1,1);//{x:1, y:1};\n\n    /**\n     * The pivot point of the displayObject that it rotates around\n     *\n     * @property pivot\n     * @type Point\n     */\n    this.pivot = new PIXI.Point(0,0);\n\n    /**\n     * The rotation of the object in radians.\n     *\n     * @property rotation\n     * @type Number\n     */\n    this.rotation = 0;\n\n    /**\n     * The opacity of the object.\n     *\n     * @property alpha\n     * @type Number\n     */\n    this.alpha = 1;\n\n    /**\n     * The visibility of the object.\n     *\n     * @property visible\n     * @type Boolean\n     */\n    this.visible = true;\n\n    /**\n     * This is the defined area that will pick up mouse / touch events. It is null by default.\n     * Setting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)\n     *\n     * @property hitArea\n     * @type Rectangle|Circle|Ellipse|Polygon\n     */\n    this.hitArea = null;\n\n    /**\n     * This is used to indicate if the displayObject should display a mouse hand cursor on rollover\n     *\n     * @property buttonMode\n     * @type Boolean\n     */\n    this.buttonMode = false;\n\n    /**\n     * Can this object be rendered\n     *\n     * @property renderable\n     * @type Boolean\n     */\n    this.renderable = false;\n\n    /**\n     * [read-only] The display object container that contains this display object.\n     *\n     * @property parent\n     * @type DisplayObjectContainer\n     * @readOnly\n     */\n    this.parent = null;\n\n    /**\n     * [read-only] The stage the display object is connected to, or undefined if it is not connected to the stage.\n     *\n     * @property stage\n     * @type Stage\n     * @readOnly\n     */\n    this.stage = null;\n\n    /**\n     * [read-only] The multiplied alpha of the displayObject\n     *\n     * @property worldAlpha\n     * @type Number\n     * @readOnly\n     */\n    this.worldAlpha = 1;\n\n    /**\n     * [read-only] Whether or not the object is interactive, do not toggle directly! use the `interactive` property\n     *\n     * @property _interactive\n     * @type Boolean\n     * @readOnly\n     * @private\n     */\n    this._interactive = false;\n\n    /**\n     * This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\n     *\n     * @property defaultCursor\n     * @type String\n     *\n    */\n    this.defaultCursor = 'pointer';\n\n    /**\n     * [read-only] Current transform of the object based on world (parent) factors\n     *\n     * @property worldTransform\n     * @type Matrix\n     * @readOnly\n     * @private\n     */\n    this.worldTransform = new PIXI.Matrix();\n\n    /**\n     * cached sin rotation and cos rotation\n     *\n     * @property _sr\n     * @type Number\n     * @private\n     */\n    this._sr = 0;\n\n    /**\n     * cached sin rotation and cos rotation\n     *\n     * @property _cr\n     * @type Number\n     * @private\n     */\n    this._cr = 1;\n\n    /**\n     * The area the filter is applied to like the hitArea this is used as more of an optimisation\n     * rather than figuring out the dimensions of the displayObject each frame you can set this rectangle\n     *\n     * @property filterArea\n     * @type Rectangle\n     */\n    this.filterArea = null;//new PIXI.Rectangle(0,0,1,1);\n\n    /**\n     * The original, cached bounds of the object\n     *\n     * @property _bounds\n     * @type Rectangle\n     * @private\n     */\n    this._bounds = new PIXI.Rectangle(0, 0, 1, 1);\n\n    /**\n     * The most up-to-date bounds of the object\n     *\n     * @property _currentBounds\n     * @type Rectangle\n     * @private\n     */\n    this._currentBounds = null;\n\n    /**\n     * The original, cached mask of the object\n     *\n     * @property _currentBounds\n     * @type Rectangle\n     * @private\n     */\n    this._mask = null;\n\n    /**\n     * Cached internal flag.\n     *\n     * @property _cacheAsBitmap\n     * @type Boolean\n     * @private\n     */\n    this._cacheAsBitmap = false;\n\n    /**\n     * Cached internal flag.\n     *\n     * @property _cacheIsDirty\n     * @type Boolean\n     * @private\n     */\n    this._cacheIsDirty = false;\n\n\n    /*\n     * MOUSE Callbacks\n     */\n    \n    /**\n     * A callback that is used when the users mouse rolls over the displayObject\n     * @method mouseover\n     * @param interactionData {InteractionData}\n     */\n\n    /**\n     * A callback that is used when the users mouse leaves the displayObject\n     * @method mouseout\n     * @param interactionData {InteractionData}\n     */\n\n    //Left button\n    /**\n     * A callback that is used when the users clicks on the displayObject with their mouse's left button\n     * @method click\n     * @param interactionData {InteractionData}\n     */\n\n    /**\n     * A callback that is used when the user clicks the mouse's left button down over the sprite\n     * @method mousedown\n     * @param interactionData {InteractionData}\n     */\n\n    /**\n     * A callback that is used when the user releases the mouse's left button that was over the displayObject\n     * for this callback to be fired, the mouse's left button must have been pressed down over the displayObject\n     * @method mouseup\n     * @param interactionData {InteractionData}\n     */\n\n    /**\n     * A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\n     * for this callback to be fired, the mouse's left button must have been pressed down over the displayObject\n     * @method mouseupoutside\n     * @param interactionData {InteractionData}\n     */\n\n    //Right button\n    /**\n     * A callback that is used when the users clicks on the displayObject with their mouse's right button\n     * @method rightclick\n     * @param interactionData {InteractionData}\n     */\n\n    /**\n     * A callback that is used when the user clicks the mouse's right button down over the sprite\n     * @method rightdown\n     * @param interactionData {InteractionData}\n     */\n\n    /**\n     * A callback that is used when the user releases the mouse's right button that was over the displayObject\n     * for this callback to be fired the mouse's right button must have been pressed down over the displayObject\n     * @method rightup\n     * @param interactionData {InteractionData}\n     */\n\n    /**\n     * A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\n     * for this callback to be fired, the mouse's right button must have been pressed down over the displayObject\n     * @method rightupoutside\n     * @param interactionData {InteractionData}\n     */\n\n    /*\n     * TOUCH Callbacks\n     */\n\n    /**\n     * A callback that is used when the users taps on the sprite with their finger\n     * basically a touch version of click\n     * @method tap\n     * @param interactionData {InteractionData}\n     */\n\n    /**\n     * A callback that is used when the user touches over the displayObject\n     * @method touchstart\n     * @param interactionData {InteractionData}\n     */\n\n    /**\n     * A callback that is used when the user releases a touch over the displayObject\n     * @method touchend\n     * @param interactionData {InteractionData}\n     */\n\n    /**\n     * A callback that is used when the user releases the touch that was over the displayObject\n     * for this callback to be fired, The touch must have started over the sprite\n     * @method touchendoutside\n     * @param interactionData {InteractionData}\n     */\n};\n\n// constructor\nPIXI.DisplayObject.prototype.constructor = PIXI.DisplayObject;\n\n/**\n * Indicates if the sprite will have touch and mouse interactivity. It is false by default\n *\n * @property interactive\n * @type Boolean\n * @default false\n */\nObject.defineProperty(PIXI.DisplayObject.prototype, 'interactive', {\n    get: function() {\n        return this._interactive;\n    },\n    set: function(value) {\n        this._interactive = value;\n\n        // TODO more to be done here..\n        // need to sort out a re-crawl!\n        if(this.stage)this.stage.dirty = true;\n    }\n});\n\n/**\n * [read-only] Indicates if the sprite is globally visible.\n *\n * @property worldVisible\n * @type Boolean\n */\nObject.defineProperty(PIXI.DisplayObject.prototype, 'worldVisible', {\n    get: function() {\n        var item = this;\n\n        do\n        {\n            if(!item.visible)return false;\n            item = item.parent;\n        }\n        while(item);\n\n        return true;\n    }\n});\n\n/**\n * Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\n * In PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\n * To remove a mask, set this property to null.\n *\n * @property mask\n * @type Graphics\n */\nObject.defineProperty(PIXI.DisplayObject.prototype, 'mask', {\n    get: function() {\n        return this._mask;\n    },\n    set: function(value) {\n\n        if(this._mask)this._mask.isMask = false;\n        this._mask = value;\n        if(this._mask)this._mask.isMask = true;\n    }\n});\n\n/**\n * Sets the filters for the displayObject.\n * * IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\n * To remove filters simply set this property to 'null'\n * @property filters\n * @type Array(Filter)\n */\nObject.defineProperty(PIXI.DisplayObject.prototype, 'filters', {\n\n    get: function() {\n        return this._filters;\n    },\n\n    set: function(value) {\n\n        if(value)\n        {\n            // now put all the passes in one place..\n            var passes = [];\n            for (var i = 0; i < value.length; i++)\n            {\n                var filterPasses = value[i].passes;\n                for (var j = 0; j < filterPasses.length; j++)\n                {\n                    passes.push(filterPasses[j]);\n                }\n            }\n\n            // TODO change this as it is legacy\n            this._filterBlock = {target:this, filterPasses:passes};\n        }\n\n        this._filters = value;\n    }\n});\n\n/**\n * Set if this display object is cached as a bitmap.\n * This basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\n * To remove simply set this property to 'null'\n * @property cacheAsBitmap\n * @type Boolean\n */\nObject.defineProperty(PIXI.DisplayObject.prototype, 'cacheAsBitmap', {\n\n    get: function() {\n        return  this._cacheAsBitmap;\n    },\n\n    set: function(value) {\n\n        if(this._cacheAsBitmap === value)return;\n\n        if(value)\n        {\n            this._generateCachedSprite();\n        }\n        else\n        {\n            this._destroyCachedSprite();\n        }\n\n        this._cacheAsBitmap = value;\n    }\n});\n\n/*\n * Updates the object transform for rendering\n *\n * @method updateTransform\n * @private\n */\nPIXI.DisplayObject.prototype.updateTransform = function()\n{\n    // create some matrix refs for easy access\n    var pt = this.parent.worldTransform;\n    var wt = this.worldTransform;\n\n    // temporary matrix variables\n    var a, b, c, d, tx, ty;\n\n    // so if rotation is between 0 then we can simplify the multiplication process..\n    if(this.rotation % PIXI.PI_2)\n    {\n        // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n        if(this.rotation !== this.rotationCache)\n        {\n            this.rotationCache = this.rotation;\n            this._sr = Math.sin(this.rotation);\n            this._cr = Math.cos(this.rotation);\n        }\n\n        // get the matrix values of the displayobject based on its transform properties..\n        a  =  this._cr * this.scale.x;\n        b  =  this._sr * this.scale.x;\n        c  = -this._sr * this.scale.y;\n        d  =  this._cr * this.scale.y;\n        tx =  this.position.x;\n        ty =  this.position.y;\n        \n        // check for pivot.. not often used so geared towards that fact!\n        if(this.pivot.x || this.pivot.y)\n        {\n            tx -= this.pivot.x * a + this.pivot.y * c;\n            ty -= this.pivot.x * b + this.pivot.y * d;\n        }\n\n        // concat the parent matrix with the objects transform.\n        wt.a  = a  * pt.a + b  * pt.c;\n        wt.b  = a  * pt.b + b  * pt.d;\n        wt.c  = c  * pt.a + d  * pt.c;\n        wt.d  = c  * pt.b + d  * pt.d;\n        wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n        wt.ty = tx * pt.b + ty * pt.d + pt.ty;\n\n        \n    }\n    else\n    {\n        // lets do the fast version as we know there is no rotation..\n        a  = this.scale.x;\n        d  = this.scale.y;\n\n        tx = this.position.x - this.pivot.x * a;\n        ty = this.position.y - this.pivot.y * d;\n\n        wt.a  = a  * pt.a;\n        wt.b  = a  * pt.b;\n        wt.c  = d  * pt.c;\n        wt.d  = d  * pt.d;\n        wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n        wt.ty = tx * pt.b + ty * pt.d + pt.ty;\n    }\n\n    // multiply the alphas..\n    this.worldAlpha = this.alpha * this.parent.worldAlpha;\n};\n\n// performance increase to avoid using call.. (10x faster)\nPIXI.DisplayObject.prototype.displayObjectUpdateTransform = PIXI.DisplayObject.prototype.updateTransform;\n\n/**\n * Retrieves the bounds of the displayObject as a rectangle object\n *\n * @method getBounds\n * @param matrix {Matrix}\n * @return {Rectangle} the rectangular bounding area\n */\nPIXI.DisplayObject.prototype.getBounds = function(matrix)\n{\n    matrix = matrix;//just to get passed js hinting (and preserve inheritance)\n    return PIXI.EmptyRectangle;\n};\n\n/**\n * Retrieves the local bounds of the displayObject as a rectangle object\n *\n * @method getLocalBounds\n * @return {Rectangle} the rectangular bounding area\n */\nPIXI.DisplayObject.prototype.getLocalBounds = function()\n{\n    return this.getBounds(PIXI.identityMatrix);///PIXI.EmptyRectangle();\n};\n\n/**\n * Sets the object's stage reference, the stage this object is connected to\n *\n * @method setStageReference\n * @param stage {Stage} the stage that the object will have as its current stage reference\n */\nPIXI.DisplayObject.prototype.setStageReference = function(stage)\n{\n    this.stage = stage;\n    if(this._interactive)this.stage.dirty = true;\n};\n\n/**\n * Useful function that returns a texture of the displayObject object that can then be used to create sprites\n * This can be quite useful if your displayObject is static / complicated and needs to be reused multiple times.\n *\n * @method generateTexture\n * @param resolution {Number} The resolution of the texture being generated\n * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n * @param renderer {CanvasRenderer|WebGLRenderer} The renderer used to generate the texture.\n * @return {Texture} a texture of the graphics object\n */\nPIXI.DisplayObject.prototype.generateTexture = function(resolution, scaleMode, renderer)\n{\n    var bounds = this.getLocalBounds();\n\n    var renderTexture = new PIXI.RenderTexture(bounds.width | 0, bounds.height | 0, renderer, scaleMode, resolution);\n    \n    PIXI.DisplayObject._tempMatrix.tx = -bounds.x;\n    PIXI.DisplayObject._tempMatrix.ty = -bounds.y;\n    \n    renderTexture.render(this, PIXI.DisplayObject._tempMatrix);\n\n    return renderTexture;\n};\n\n/**\n * Generates and updates the cached sprite for this object.\n *\n * @method updateCache\n */\nPIXI.DisplayObject.prototype.updateCache = function()\n{\n    this._generateCachedSprite();\n};\n\n/**\n * Calculates the global position of the display object\n *\n * @method toGlobal\n * @param position {Point} The world origin to calculate from\n * @return {Point} A point object representing the position of this object\n */\nPIXI.DisplayObject.prototype.toGlobal = function(position)\n{\n    // don't need to u[date the lot\n    this.displayObjectUpdateTransform();\n    return this.worldTransform.apply(position);\n};\n\n/**\n * Calculates the local position of the display object relative to another point\n *\n * @method toLocal\n * @param position {Point} The world origin to calculate from\n * @param [from] {DisplayObject} The DisplayObject to calculate the global position from\n * @return {Point} A point object representing the position of this object\n */\nPIXI.DisplayObject.prototype.toLocal = function(position, from)\n{\n     // \n    if (from)\n    {\n        position = from.toGlobal(position);\n    }\n\n    // don't need to u[date the lot\n    this.displayObjectUpdateTransform();\n    return this.worldTransform.applyInverse(position);\n};\n\n/**\n * Internal method.\n *\n * @method _renderCachedSprite\n * @param renderSession {Object} The render session\n * @private\n */\nPIXI.DisplayObject.prototype._renderCachedSprite = function(renderSession)\n{\n    this._cachedSprite.worldAlpha = this.worldAlpha;\n\n    if(renderSession.gl)\n    {\n        PIXI.Sprite.prototype._renderWebGL.call(this._cachedSprite, renderSession);\n    }\n    else\n    {\n        PIXI.Sprite.prototype._renderCanvas.call(this._cachedSprite, renderSession);\n    }\n};\n\n/**\n * Internal method.\n *\n * @method _generateCachedSprite\n * @private\n */\nPIXI.DisplayObject.prototype._generateCachedSprite = function()\n{\n    this._cacheAsBitmap = false;\n    var bounds = this.getLocalBounds();\n\n    if(!this._cachedSprite)\n    {\n        var renderTexture = new PIXI.RenderTexture(bounds.width | 0, bounds.height | 0);//, renderSession.renderer);\n\n        this._cachedSprite = new PIXI.Sprite(renderTexture);\n        this._cachedSprite.worldTransform = this.worldTransform;\n    }\n    else\n    {\n        this._cachedSprite.texture.resize(bounds.width | 0, bounds.height | 0);\n    }\n\n    //REMOVE filter!\n    var tempFilters = this._filters;\n    this._filters = null;\n\n    this._cachedSprite.filters = tempFilters;\n\n    PIXI.DisplayObject._tempMatrix.tx = -bounds.x;\n    PIXI.DisplayObject._tempMatrix.ty = -bounds.y;\n    \n    this._cachedSprite.texture.render(this, PIXI.DisplayObject._tempMatrix, true);\n\n    this._cachedSprite.anchor.x = -( bounds.x / bounds.width );\n    this._cachedSprite.anchor.y = -( bounds.y / bounds.height );\n\n    this._filters = tempFilters;\n\n    this._cacheAsBitmap = true;\n};\n\n/**\n* Destroys the cached sprite.\n*\n* @method _destroyCachedSprite\n* @private\n*/\nPIXI.DisplayObject.prototype._destroyCachedSprite = function()\n{\n    if(!this._cachedSprite)return;\n\n    this._cachedSprite.texture.destroy(true);\n\n    // TODO could be object pooled!\n    this._cachedSprite = null;\n};\n\n/**\n* Renders the object using the WebGL renderer\n*\n* @method _renderWebGL\n* @param renderSession {RenderSession}\n* @private\n*/\nPIXI.DisplayObject.prototype._renderWebGL = function(renderSession)\n{\n    // OVERWRITE;\n    // this line is just here to pass jshinting :)\n    renderSession = renderSession;\n};\n\n/**\n* Renders the object using the Canvas renderer\n*\n* @method _renderCanvas\n* @param renderSession {RenderSession}\n* @private\n*/\nPIXI.DisplayObject.prototype._renderCanvas = function(renderSession)\n{\n    // OVERWRITE;\n    // this line is just here to pass jshinting :)\n    renderSession = renderSession;\n};\n\n\nPIXI.DisplayObject._tempMatrix = new PIXI.Matrix();\n\n/**\n * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n *\n * @property x\n * @type Number\n */\nObject.defineProperty(PIXI.DisplayObject.prototype, 'x', {\n    get: function() {\n        return  this.position.x;\n    },\n    set: function(value) {\n        this.position.x = value;\n    }\n});\n\n/**\n * The position of the displayObject on the y axis relative to the local coordinates of the parent.\n *\n * @property y\n * @type Number\n */\nObject.defineProperty(PIXI.DisplayObject.prototype, 'y', {\n    get: function() {\n        return  this.position.y;\n    },\n    set: function(value) {\n        this.position.y = value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * A DisplayObjectContainer represents a collection of display objects.\n * It is the base class of all display objects that act as a container for other objects.\n *\n * @class DisplayObjectContainer\n * @extends DisplayObject\n * @constructor\n */\nPIXI.DisplayObjectContainer = function()\n{\n    PIXI.DisplayObject.call( this );\n\n    /**\n     * [read-only] The array of children of this container.\n     *\n     * @property children\n     * @type Array(DisplayObject)\n     * @readOnly\n     */\n    this.children = [];\n\n    // fast access to update transform..\n    \n};\n\n// constructor\nPIXI.DisplayObjectContainer.prototype = Object.create( PIXI.DisplayObject.prototype );\nPIXI.DisplayObjectContainer.prototype.constructor = PIXI.DisplayObjectContainer;\n\n\n/**\n * The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(PIXI.DisplayObjectContainer.prototype, 'width', {\n    get: function() {\n        return this.scale.x * this.getLocalBounds().width;\n    },\n    set: function(value) {\n        \n        var width = this.getLocalBounds().width;\n\n        if(width !== 0)\n        {\n            this.scale.x = value / width;\n        }\n        else\n        {\n            this.scale.x = 1;\n        }\n\n        \n        this._width = value;\n    }\n});\n\n/**\n * The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(PIXI.DisplayObjectContainer.prototype, 'height', {\n    get: function() {\n        return  this.scale.y * this.getLocalBounds().height;\n    },\n    set: function(value) {\n\n        var height = this.getLocalBounds().height;\n\n        if(height !== 0)\n        {\n            this.scale.y = value / height ;\n        }\n        else\n        {\n            this.scale.y = 1;\n        }\n\n        this._height = value;\n    }\n});\n\n/**\n * Adds a child to the container.\n *\n * @method addChild\n * @param child {DisplayObject} The DisplayObject to add to the container\n * @return {DisplayObject} The child that was added.\n */\nPIXI.DisplayObjectContainer.prototype.addChild = function(child)\n{\n    return this.addChildAt(child, this.children.length);\n};\n\n/**\n * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown\n *\n * @method addChildAt\n * @param child {DisplayObject} The child to add\n * @param index {Number} The index to place the child in\n * @return {DisplayObject} The child that was added.\n */\nPIXI.DisplayObjectContainer.prototype.addChildAt = function(child, index)\n{\n    if(index >= 0 && index <= this.children.length)\n    {\n        if(child.parent)\n        {\n            child.parent.removeChild(child);\n        }\n\n        child.parent = this;\n\n        this.children.splice(index, 0, child);\n\n        if(this.stage)child.setStageReference(this.stage);\n\n        return child;\n    }\n    else\n    {\n        throw new Error(child + 'addChildAt: The index '+ index +' supplied is out of bounds ' + this.children.length);\n    }\n};\n\n/**\n * Swaps the position of 2 Display Objects within this container.\n *\n * @method swapChildren\n * @param child {DisplayObject}\n * @param child2 {DisplayObject}\n */\nPIXI.DisplayObjectContainer.prototype.swapChildren = function(child, child2)\n{\n    if(child === child2) {\n        return;\n    }\n\n    var index1 = this.getChildIndex(child);\n    var index2 = this.getChildIndex(child2);\n\n    if(index1 < 0 || index2 < 0) {\n        throw new Error('swapChildren: Both the supplied DisplayObjects must be a child of the caller.');\n    }\n\n    this.children[index1] = child2;\n    this.children[index2] = child;\n\n};\n\n/**\n * Returns the index position of a child DisplayObject instance\n *\n * @method getChildIndex\n * @param child {DisplayObject} The DisplayObject instance to identify\n * @return {Number} The index position of the child display object to identify\n */\nPIXI.DisplayObjectContainer.prototype.getChildIndex = function(child)\n{\n    var index = this.children.indexOf(child);\n    if (index === -1)\n    {\n        throw new Error('The supplied DisplayObject must be a child of the caller');\n    }\n    return index;\n};\n\n/**\n * Changes the position of an existing child in the display object container\n *\n * @method setChildIndex\n * @param child {DisplayObject} The child DisplayObject instance for which you want to change the index number\n * @param index {Number} The resulting index number for the child display object\n */\nPIXI.DisplayObjectContainer.prototype.setChildIndex = function(child, index)\n{\n    if (index < 0 || index >= this.children.length)\n    {\n        throw new Error('The supplied index is out of bounds');\n    }\n    var currentIndex = this.getChildIndex(child);\n    this.children.splice(currentIndex, 1); //remove from old position\n    this.children.splice(index, 0, child); //add at new position\n};\n\n/**\n * Returns the child at the specified index\n *\n * @method getChildAt\n * @param index {Number} The index to get the child from\n * @return {DisplayObject} The child at the given index, if any.\n */\nPIXI.DisplayObjectContainer.prototype.getChildAt = function(index)\n{\n    if (index < 0 || index >= this.children.length)\n    {\n        throw new Error('getChildAt: Supplied index '+ index +' does not exist in the child list, or the supplied DisplayObject must be a child of the caller');\n    }\n    return this.children[index];\n    \n};\n\n/**\n * Removes a child from the container.\n *\n * @method removeChild\n * @param child {DisplayObject} The DisplayObject to remove\n * @return {DisplayObject} The child that was removed.\n */\nPIXI.DisplayObjectContainer.prototype.removeChild = function(child)\n{\n    var index = this.children.indexOf( child );\n    if(index === -1)return;\n    \n    return this.removeChildAt( index );\n};\n\n/**\n * Removes a child from the specified index position.\n *\n * @method removeChildAt\n * @param index {Number} The index to get the child from\n * @return {DisplayObject} The child that was removed.\n */\nPIXI.DisplayObjectContainer.prototype.removeChildAt = function(index)\n{\n    var child = this.getChildAt( index );\n    if(this.stage)\n        child.removeStageReference();\n\n    child.parent = undefined;\n    this.children.splice( index, 1 );\n    return child;\n};\n\n/**\n* Removes all children from this container that are within the begin and end indexes.\n*\n* @method removeChildren\n* @param beginIndex {Number} The beginning position. Default value is 0.\n* @param endIndex {Number} The ending position. Default value is size of the container.\n*/\nPIXI.DisplayObjectContainer.prototype.removeChildren = function(beginIndex, endIndex)\n{\n    var begin = beginIndex || 0;\n    var end = typeof endIndex === 'number' ? endIndex : this.children.length;\n    var range = end - begin;\n\n    if (range > 0 && range <= end)\n    {\n        var removed = this.children.splice(begin, range);\n        for (var i = 0; i < removed.length; i++) {\n            var child = removed[i];\n            if(this.stage)\n                child.removeStageReference();\n            child.parent = undefined;\n        }\n        return removed;\n    }\n    else if (range === 0 && this.children.length === 0)\n    {\n        return [];\n    }\n    else\n    {\n        throw new Error( 'removeChildren: Range Error, numeric values are outside the acceptable range' );\n    }\n};\n\n/*\n * Updates the transform on all children of this container for rendering\n *\n * @method updateTransform\n * @private\n */\nPIXI.DisplayObjectContainer.prototype.updateTransform = function()\n{\n    if(!this.visible)return;\n\n    this.displayObjectUpdateTransform();\n\n    //PIXI.DisplayObject.prototype.updateTransform.call( this );\n\n    if(this._cacheAsBitmap)return;\n\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        this.children[i].updateTransform();\n    }\n};\n\n// performance increase to avoid using call.. (10x faster)\nPIXI.DisplayObjectContainer.prototype.displayObjectContainerUpdateTransform = PIXI.DisplayObjectContainer.prototype.updateTransform;\n\n/**\n * Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration.\n *\n * @method getBounds\n * @return {Rectangle} The rectangular bounding area\n */\nPIXI.DisplayObjectContainer.prototype.getBounds = function()\n{\n    if(this.children.length === 0)return PIXI.EmptyRectangle;\n\n    // TODO the bounds have already been calculated this render session so return what we have\n\n    var minX = Infinity;\n    var minY = Infinity;\n\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n\n    var childBounds;\n    var childMaxX;\n    var childMaxY;\n\n    var childVisible = false;\n\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        var child = this.children[i];\n        \n        if(!child.visible)continue;\n\n        childVisible = true;\n\n        childBounds = this.children[i].getBounds();\n     \n        minX = minX < childBounds.x ? minX : childBounds.x;\n        minY = minY < childBounds.y ? minY : childBounds.y;\n\n        childMaxX = childBounds.width + childBounds.x;\n        childMaxY = childBounds.height + childBounds.y;\n\n        maxX = maxX > childMaxX ? maxX : childMaxX;\n        maxY = maxY > childMaxY ? maxY : childMaxY;\n    }\n\n    if(!childVisible)\n        return PIXI.EmptyRectangle;\n\n    var bounds = this._bounds;\n\n    bounds.x = minX;\n    bounds.y = minY;\n    bounds.width = maxX - minX;\n    bounds.height = maxY - minY;\n\n    // TODO: store a reference so that if this function gets called again in the render cycle we do not have to recalculate\n    //this._currentBounds = bounds;\n   \n    return bounds;\n};\n\n/**\n * Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration.\n *\n * @method getLocalBounds\n * @return {Rectangle} The rectangular bounding area\n */\nPIXI.DisplayObjectContainer.prototype.getLocalBounds = function()\n{\n    var matrixCache = this.worldTransform;\n\n    this.worldTransform = PIXI.identityMatrix;\n\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        this.children[i].updateTransform();\n    }\n\n    var bounds = this.getBounds();\n\n    this.worldTransform = matrixCache;\n\n    return bounds;\n};\n\n/**\n * Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to.\n *\n * @method setStageReference\n * @param stage {Stage} the stage that the container will have as its current stage reference\n */\nPIXI.DisplayObjectContainer.prototype.setStageReference = function(stage)\n{\n    this.stage = stage;\n    if(this._interactive)this.stage.dirty = true;\n\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        var child = this.children[i];\n        child.setStageReference(stage);\n    }\n};\n\n/**\n * Removes the current stage reference from the container and all of its children.\n *\n * @method removeStageReference\n */\nPIXI.DisplayObjectContainer.prototype.removeStageReference = function()\n{\n\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        var child = this.children[i];\n        child.removeStageReference();\n    }\n\n    if(this._interactive)this.stage.dirty = true;\n    \n    this.stage = null;\n};\n\n/**\n* Renders the object using the WebGL renderer\n*\n* @method _renderWebGL\n* @param renderSession {RenderSession} \n* @private\n*/\nPIXI.DisplayObjectContainer.prototype._renderWebGL = function(renderSession)\n{\n    if(!this.visible || this.alpha <= 0)return;\n    \n    if(this._cacheAsBitmap)\n    {\n        this._renderCachedSprite(renderSession);\n        return;\n    }\n    \n    var i,j;\n\n    if(this._mask || this._filters)\n    {\n        \n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if(this._filters)\n        {\n            renderSession.spriteBatch.flush();\n            renderSession.filterManager.pushFilter(this._filterBlock);\n        }\n\n        if(this._mask)\n        {\n            renderSession.spriteBatch.stop();\n            renderSession.maskManager.pushMask(this.mask, renderSession);\n            renderSession.spriteBatch.start();\n        }\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            this.children[i]._renderWebGL(renderSession);\n        }\n\n        renderSession.spriteBatch.stop();\n\n        if(this._mask)renderSession.maskManager.popMask(this._mask, renderSession);\n        if(this._filters)renderSession.filterManager.popFilter();\n        \n        renderSession.spriteBatch.start();\n    }\n    else\n    {\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            this.children[i]._renderWebGL(renderSession);\n        }\n    }\n};\n\n/**\n* Renders the object using the Canvas renderer\n*\n* @method _renderCanvas\n* @param renderSession {RenderSession} \n* @private\n*/\nPIXI.DisplayObjectContainer.prototype._renderCanvas = function(renderSession)\n{\n    if(this.visible === false || this.alpha === 0)return;\n\n    if(this._cacheAsBitmap)\n    {\n\n        this._renderCachedSprite(renderSession);\n        return;\n    }\n\n    if(this._mask)\n    {\n        renderSession.maskManager.pushMask(this._mask, renderSession);\n    }\n\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        var child = this.children[i];\n        child._renderCanvas(renderSession);\n    }\n\n    if(this._mask)\n    {\n        renderSession.maskManager.popMask(renderSession);\n    }\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The Sprite object is the base for all textured objects that are rendered to the screen\n *\n * @class Sprite\n * @extends DisplayObjectContainer\n * @constructor\n * @param texture {Texture} The texture for this sprite\n *\n * A sprite can be created directly from an image like this :\n * var sprite = new PIXI.Sprite.fromImage('assets/image.png');\n * yourStage.addChild(sprite);\n * then obviously don't forget to add it to the stage you have already created\n */\nPIXI.Sprite = function(texture)\n{\n    PIXI.DisplayObjectContainer.call( this );\n\n    /**\n     * The anchor sets the origin point of the texture.\n     * The default is 0,0 this means the texture's origin is the top left\n     * Setting than anchor to 0.5,0.5 means the textures origin is centered\n     * Setting the anchor to 1,1 would mean the textures origin points will be the bottom right corner\n     *\n     * @property anchor\n     * @type Point\n     */\n    this.anchor = new PIXI.Point();\n\n    /**\n     * The texture that the sprite is using\n     *\n     * @property texture\n     * @type Texture\n     */\n    this.texture = texture || PIXI.Texture.emptyTexture;\n    \n    /**\n     * The width of the sprite (this is initially set by the texture)\n     *\n     * @property _width\n     * @type Number\n     * @private\n     */\n    this._width = 0;\n\n    /**\n     * The height of the sprite (this is initially set by the texture)\n     *\n     * @property _height\n     * @type Number\n     * @private\n     */\n    this._height = 0;\n\n    /**\n     * The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.\n     *\n     * @property tint\n     * @type Number\n     * @default 0xFFFFFF\n     */\n    this.tint = 0xFFFFFF;\n\n    /**\n     * The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.\n     *\n     * @property blendMode\n     * @type Number\n     * @default PIXI.blendModes.NORMAL;\n     */\n    this.blendMode = PIXI.blendModes.NORMAL;\n\n    /**\n     * The shader that will be used to render the texture to the stage. Set to null to remove a current shader.\n     *\n     * @property shader\n     * @type AbstractFilter\n     * @default null\n     */\n    this.shader = null;\n\n    if(this.texture.baseTexture.hasLoaded)\n    {\n        this.onTextureUpdate();\n    }\n    else\n    {\n        this.texture.on( 'update', this.onTextureUpdate.bind(this) );\n    }\n\n    this.renderable = true;\n\n};\n\n// constructor\nPIXI.Sprite.prototype = Object.create( PIXI.DisplayObjectContainer.prototype );\nPIXI.Sprite.prototype.constructor = PIXI.Sprite;\n\n/**\n * The width of the sprite, setting this will actually modify the scale to achieve the value set\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(PIXI.Sprite.prototype, 'width', {\n    get: function() {\n        return this.scale.x * this.texture.frame.width;\n    },\n    set: function(value) {\n        this.scale.x = value / this.texture.frame.width;\n        this._width = value;\n    }\n});\n\n/**\n * The height of the sprite, setting this will actually modify the scale to achieve the value set\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(PIXI.Sprite.prototype, 'height', {\n    get: function() {\n        return  this.scale.y * this.texture.frame.height;\n    },\n    set: function(value) {\n        this.scale.y = value / this.texture.frame.height;\n        this._height = value;\n    }\n});\n\n/**\n * Sets the texture of the sprite\n *\n * @method setTexture\n * @param texture {Texture} The PIXI texture that is displayed by the sprite\n */\nPIXI.Sprite.prototype.setTexture = function(texture)\n{\n    this.texture = texture;\n    this.cachedTint = 0xFFFFFF;\n};\n\n/**\n * When the texture is updated, this event will fire to update the scale and frame\n *\n * @method onTextureUpdate\n * @param event\n * @private\n */\nPIXI.Sprite.prototype.onTextureUpdate = function()\n{\n    // so if _width is 0 then width was not set..\n    if(this._width)this.scale.x = this._width / this.texture.frame.width;\n    if(this._height)this.scale.y = this._height / this.texture.frame.height;\n\n    //this.updateFrame = true;\n};\n\n/**\n* Returns the bounds of the Sprite as a rectangle. The bounds calculation takes the worldTransform into account.\n*\n* @method getBounds\n* @param matrix {Matrix} the transformation matrix of the sprite\n* @return {Rectangle} the framing rectangle\n*/\nPIXI.Sprite.prototype.getBounds = function(matrix)\n{\n    var width = this.texture.frame.width;\n    var height = this.texture.frame.height;\n\n    var w0 = width * (1-this.anchor.x);\n    var w1 = width * -this.anchor.x;\n\n    var h0 = height * (1-this.anchor.y);\n    var h1 = height * -this.anchor.y;\n\n    var worldTransform = matrix || this.worldTransform ;\n\n    var a = worldTransform.a;\n    var b = worldTransform.b;\n    var c = worldTransform.c;\n    var d = worldTransform.d;\n    var tx = worldTransform.tx;\n    var ty = worldTransform.ty;\n\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n\n    var minX = Infinity;\n    var minY = Infinity;\n\n    if(b === 0 && c === 0)\n    {\n        // scale may be negative!\n        if(a < 0)a *= -1;\n        if(d < 0)d *= -1;\n\n        // this means there is no rotation going on right? RIGHT?\n        // if thats the case then we can avoid checking the bound values! yay         \n        minX = a * w1 + tx;\n        maxX = a * w0 + tx;\n        minY = d * h1 + ty;\n        maxY = d * h0 + ty;\n    }\n    else\n    {\n        var x1 = a * w1 + c * h1 + tx;\n        var y1 = d * h1 + b * w1 + ty;\n\n        var x2 = a * w0 + c * h1 + tx;\n        var y2 = d * h1 + b * w0 + ty;\n\n        var x3 = a * w0 + c * h0 + tx;\n        var y3 = d * h0 + b * w0 + ty;\n\n        var x4 =  a * w1 + c * h0 + tx;\n        var y4 =  d * h0 + b * w1 + ty;\n\n        minX = x1 < minX ? x1 : minX;\n        minX = x2 < minX ? x2 : minX;\n        minX = x3 < minX ? x3 : minX;\n        minX = x4 < minX ? x4 : minX;\n\n        minY = y1 < minY ? y1 : minY;\n        minY = y2 < minY ? y2 : minY;\n        minY = y3 < minY ? y3 : minY;\n        minY = y4 < minY ? y4 : minY;\n\n        maxX = x1 > maxX ? x1 : maxX;\n        maxX = x2 > maxX ? x2 : maxX;\n        maxX = x3 > maxX ? x3 : maxX;\n        maxX = x4 > maxX ? x4 : maxX;\n\n        maxY = y1 > maxY ? y1 : maxY;\n        maxY = y2 > maxY ? y2 : maxY;\n        maxY = y3 > maxY ? y3 : maxY;\n        maxY = y4 > maxY ? y4 : maxY;\n    }\n\n    var bounds = this._bounds;\n\n    bounds.x = minX;\n    bounds.width = maxX - minX;\n\n    bounds.y = minY;\n    bounds.height = maxY - minY;\n\n    // store a reference so that if this function gets called again in the render cycle we do not have to recalculate\n    this._currentBounds = bounds;\n\n    return bounds;\n};\n\n/**\n* Renders the object using the WebGL renderer\n*\n* @method _renderWebGL\n* @param renderSession {RenderSession}\n* @private\n*/\nPIXI.Sprite.prototype._renderWebGL = function(renderSession)\n{\n    // if the sprite is not visible or the alpha is 0 then no need to render this element\n    if(!this.visible || this.alpha <= 0)return;\n\n    var i,j;\n\n    // do a quick check to see if this element has a mask or a filter.\n    if(this._mask || this._filters)\n    {\n        var spriteBatch =  renderSession.spriteBatch;\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if(this._filters)\n        {\n            spriteBatch.flush();\n            renderSession.filterManager.pushFilter(this._filterBlock);\n        }\n\n        if(this._mask)\n        {\n            spriteBatch.stop();\n            renderSession.maskManager.pushMask(this.mask, renderSession);\n            spriteBatch.start();\n        }\n\n        // add this sprite to the batch\n        spriteBatch.render(this);\n\n        // now loop through the children and make sure they get rendered\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            this.children[i]._renderWebGL(renderSession);\n        }\n\n        // time to stop the sprite batch as either a mask element or a filter draw will happen next\n        spriteBatch.stop();\n\n        if(this._mask)renderSession.maskManager.popMask(this._mask, renderSession);\n        if(this._filters)renderSession.filterManager.popFilter();\n\n        spriteBatch.start();\n    }\n    else\n    {\n        renderSession.spriteBatch.render(this);\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            this.children[i]._renderWebGL(renderSession);\n        }\n\n    }\n};\n\n/**\n* Renders the object using the Canvas renderer\n*\n* @method _renderCanvas\n* @param renderSession {RenderSession}\n* @private\n*/\nPIXI.Sprite.prototype._renderCanvas = function(renderSession)\n{\n    // If the sprite is not visible or the alpha is 0 then no need to render this element\n    if (this.visible === false || this.alpha === 0 || this.texture.crop.width <= 0 || this.texture.crop.height <= 0) return;\n\n    if (this.blendMode !== renderSession.currentBlendMode)\n    {\n        renderSession.currentBlendMode = this.blendMode;\n        renderSession.context.globalCompositeOperation = PIXI.blendModesCanvas[renderSession.currentBlendMode];\n    }\n\n    if (this._mask)\n    {\n        renderSession.maskManager.pushMask(this._mask, renderSession);\n    }\n\n    //  Ignore null sources\n    if (this.texture.valid)\n    {\n        var resolution = this.texture.baseTexture.resolution / renderSession.resolution;\n\n        renderSession.context.globalAlpha = this.worldAlpha;\n\n         //  If smoothingEnabled is supported and we need to change the smoothing property for this texture\n        if (renderSession.smoothProperty && renderSession.scaleMode !== this.texture.baseTexture.scaleMode)\n        {\n            renderSession.scaleMode = this.texture.baseTexture.scaleMode;\n            renderSession.context[renderSession.smoothProperty] = (renderSession.scaleMode === PIXI.scaleModes.LINEAR);\n        }\n\n        //  If the texture is trimmed we offset by the trim x/y, otherwise we use the frame dimensions\n        var dx = (this.texture.trim) ? this.texture.trim.x - this.anchor.x * this.texture.trim.width : this.anchor.x * -this.texture.frame.width;\n        var dy = (this.texture.trim) ? this.texture.trim.y - this.anchor.y * this.texture.trim.height : this.anchor.y * -this.texture.frame.height;\n\n        //  Allow for pixel rounding\n        if (renderSession.roundPixels)\n        {\n            renderSession.context.setTransform(\n                this.worldTransform.a,\n                this.worldTransform.b,\n                this.worldTransform.c,\n                this.worldTransform.d,\n                (this.worldTransform.tx * renderSession.resolution) | 0,\n                (this.worldTransform.ty * renderSession.resolution) | 0);\n\n            dx = dx | 0;\n            dy = dy | 0;\n        }\n        else\n        {\n            renderSession.context.setTransform(\n                this.worldTransform.a,\n                this.worldTransform.b,\n                this.worldTransform.c,\n                this.worldTransform.d,\n                this.worldTransform.tx * renderSession.resolution,\n                this.worldTransform.ty * renderSession.resolution);\n        }\n\n       \n\n     \n        if (this.tint !== 0xFFFFFF)\n        {\n            if (this.cachedTint !== this.tint)\n            {\n                this.cachedTint = this.tint;\n\n                //  TODO clean up caching - how to clean up the caches?\n                this.tintedTexture = PIXI.CanvasTinter.getTintedTexture(this, this.tint);\n            }\n\n            renderSession.context.drawImage(\n                                this.tintedTexture,\n                                0,\n                                0,\n                                this.texture.crop.width,\n                                this.texture.crop.height,\n                                dx / resolution,\n                                dy / resolution,\n                                this.texture.crop.width / resolution,\n                                this.texture.crop.height / resolution);\n        }\n        else\n        {\n            renderSession.context.drawImage(\n                                this.texture.baseTexture.source,\n                                this.texture.crop.x,\n                                this.texture.crop.y,\n                                this.texture.crop.width,\n                                this.texture.crop.height,\n                                dx / resolution,\n                                dy / resolution,\n                                this.texture.crop.width / resolution,\n                                this.texture.crop.height / resolution);\n        }\n    }\n\n    // OVERWRITE\n    for (var i = 0, j = this.children.length; i < j; i++)\n    {\n        this.children[i]._renderCanvas(renderSession);\n    }\n\n    if (this._mask)\n    {\n        renderSession.maskManager.popMask(renderSession);\n    }\n};\n\n// some helper functions..\n\n/**\n *\n * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n * The frame ids are created when a Texture packer file has been loaded\n *\n * @method fromFrame\n * @static\n * @param frameId {String} The frame Id of the texture in the cache\n * @return {Sprite} A new Sprite using a texture from the texture cache matching the frameId\n */\nPIXI.Sprite.fromFrame = function(frameId)\n{\n    var texture = PIXI.TextureCache[frameId];\n    if(!texture) throw new Error('The frameId \"' + frameId + '\" does not exist in the texture cache' + this);\n    return new PIXI.Sprite(texture);\n};\n\n/**\n *\n * Helper function that creates a sprite that will contain a texture based on an image url\n * If the image is not in the texture cache it will be loaded\n *\n * @method fromImage\n * @static\n * @param imageId {String} The image url of the texture\n * @return {Sprite} A new Sprite using a texture from the texture cache matching the image id\n */\nPIXI.Sprite.fromImage = function(imageId, crossorigin, scaleMode)\n{\n    var texture = PIXI.Texture.fromImage(imageId, crossorigin, scaleMode);\n    return new PIXI.Sprite(texture);\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/\n */\n\n/**\n * The SpriteBatch class is a really fast version of the DisplayObjectContainer\n * built solely for speed, so use when you need a lot of sprites or particles.\n * And it's extremely easy to use :\n\n    var container = new PIXI.SpriteBatch();\n\n    stage.addChild(container);\n\n    for(var i  = 0; i < 100; i++)\n    {\n        var sprite = new PIXI.Sprite.fromImage(\"myImage.png\");\n        container.addChild(sprite);\n    }\n * And here you have a hundred sprites that will be renderer at the speed of light\n *\n * @class SpriteBatch\n * @constructor\n * @param texture {Texture}\n */\n\n//TODO RENAME to PARTICLE CONTAINER?\nPIXI.SpriteBatch = function(texture)\n{\n    PIXI.DisplayObjectContainer.call( this);\n\n    this.textureThing = texture;\n\n    this.ready = false;\n};\n\nPIXI.SpriteBatch.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);\nPIXI.SpriteBatch.prototype.constructor = PIXI.SpriteBatch;\n\n/*\n * Initialises the spriteBatch\n *\n * @method initWebGL\n * @param gl {WebGLContext} the current WebGL drawing context\n */\nPIXI.SpriteBatch.prototype.initWebGL = function(gl)\n{\n    // TODO only one needed for the whole engine really?\n    this.fastSpriteBatch = new PIXI.WebGLFastSpriteBatch(gl);\n\n    this.ready = true;\n};\n\n/*\n * Updates the object transform for rendering\n *\n * @method updateTransform\n * @private\n */\nPIXI.SpriteBatch.prototype.updateTransform = function()\n{\n    // TODO don't need to!\n    this.displayObjectUpdateTransform();\n    //  PIXI.DisplayObjectContainer.prototype.updateTransform.call( this );\n};\n\n/**\n* Renders the object using the WebGL renderer\n*\n* @method _renderWebGL\n* @param renderSession {RenderSession}\n* @private\n*/\nPIXI.SpriteBatch.prototype._renderWebGL = function(renderSession)\n{\n    if(!this.visible || this.alpha <= 0 || !this.children.length)return;\n\n    if(!this.ready)this.initWebGL( renderSession.gl );\n\n    if(this.fastSpriteBatch.gl !== renderSession.gl) this.fastSpriteBatch.setContext(renderSession.gl);\n\n    renderSession.spriteBatch.stop();\n\n    renderSession.shaderManager.setShader(renderSession.shaderManager.fastShader);\n\n    this.fastSpriteBatch.begin(this, renderSession);\n    this.fastSpriteBatch.render(this);\n\n    renderSession.spriteBatch.start();\n\n};\n\n/**\n* Renders the object using the Canvas renderer\n*\n* @method _renderCanvas\n* @param renderSession {RenderSession}\n* @private\n*/\nPIXI.SpriteBatch.prototype._renderCanvas = function(renderSession)\n{\n    if(!this.visible || this.alpha <= 0 || !this.children.length)return;\n\n    var context = renderSession.context;\n    context.globalAlpha = this.worldAlpha;\n\n    this.displayObjectUpdateTransform();\n\n    var transform = this.worldTransform;\n    // alow for trimming\n\n    var isRotated = true;\n\n    for (var i = 0; i < this.children.length; i++) {\n\n        var child = this.children[i];\n\n        if(!child.visible)continue;\n\n        var texture = child.texture;\n        var frame = texture.frame;\n\n        context.globalAlpha = this.worldAlpha * child.alpha;\n\n        if(child.rotation % (Math.PI * 2) === 0)\n        {\n            if(isRotated)\n            {\n                context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n                isRotated = false;\n            }\n\n            // this is the fastest  way to optimise! - if rotation is 0 then we can avoid any kind of setTransform call\n            context.drawImage(texture.baseTexture.source,\n                                 frame.x,\n                                 frame.y,\n                                 frame.width,\n                                 frame.height,\n                                 ((child.anchor.x) * (-frame.width * child.scale.x) + child.position.x  + 0.5) | 0,\n                                 ((child.anchor.y) * (-frame.height * child.scale.y) + child.position.y  + 0.5) | 0,\n                                 frame.width * child.scale.x,\n                                 frame.height * child.scale.y);\n        }\n        else\n        {\n            if(!isRotated)isRotated = true;\n\n            child.displayObjectUpdateTransform();\n\n            var childTransform = child.worldTransform;\n\n            // allow for trimming\n\n            if (renderSession.roundPixels)\n            {\n                context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx | 0, childTransform.ty | 0);\n            }\n            else\n            {\n                context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx, childTransform.ty);\n            }\n\n            context.drawImage(texture.baseTexture.source,\n                                 frame.x,\n                                 frame.y,\n                                 frame.width,\n                                 frame.height,\n                                 ((child.anchor.x) * (-frame.width) + 0.5) | 0,\n                                 ((child.anchor.y) * (-frame.height) + 0.5) | 0,\n                                 frame.width,\n                                 frame.height);\n\n\n        }\n\n       // context.restore();\n    }\n\n//    context.restore();\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * A MovieClip is a simple way to display an animation depicted by a list of textures.\n *\n * @class MovieClip\n * @extends Sprite\n * @constructor\n * @param textures {Array(Texture)} an array of {Texture} objects that make up the animation\n */\nPIXI.MovieClip = function(textures)\n{\n    PIXI.Sprite.call(this, textures[0]);\n\n    /**\n     * The array of textures that make up the animation\n     *\n     * @property textures\n     * @type Array(Texture)\n     */\n    this.textures = textures;\n\n    /**\n     * The speed that the MovieClip will play at. Higher is faster, lower is slower\n     *\n     * @property animationSpeed\n     * @type Number\n     * @default 1\n     */\n    this.animationSpeed = 1;\n\n    /**\n     * Whether or not the movie clip repeats after playing.\n     *\n     * @property loop\n     * @type Boolean\n     * @default true\n     */\n    this.loop = true;\n\n    /**\n     * Function to call when a MovieClip finishes playing\n     *\n     * @property onComplete\n     * @type Function\n     */\n    this.onComplete = null;\n\n    /**\n     * [read-only] The MovieClips current frame index (this may not have to be a whole number)\n     *\n     * @property currentFrame\n     * @type Number\n     * @default 0\n     * @readOnly\n     */\n    this.currentFrame = 0;\n\n    /**\n     * [read-only] Indicates if the MovieClip is currently playing\n     *\n     * @property playing\n     * @type Boolean\n     * @readOnly\n     */\n    this.playing = false;\n};\n\n// constructor\nPIXI.MovieClip.prototype = Object.create( PIXI.Sprite.prototype );\nPIXI.MovieClip.prototype.constructor = PIXI.MovieClip;\n\n/**\n* [read-only] totalFrames is the total number of frames in the MovieClip. This is the same as number of textures\n* assigned to the MovieClip.\n*\n* @property totalFrames\n* @type Number\n* @default 0\n* @readOnly\n*/\nObject.defineProperty( PIXI.MovieClip.prototype, 'totalFrames', {\n\tget: function() {\n\n\t\treturn this.textures.length;\n\t}\n});\n\n/**\n * Stops the MovieClip\n *\n * @method stop\n */\nPIXI.MovieClip.prototype.stop = function()\n{\n    this.playing = false;\n};\n\n/**\n * Plays the MovieClip\n *\n * @method play\n */\nPIXI.MovieClip.prototype.play = function()\n{\n    this.playing = true;\n};\n\n/**\n * Stops the MovieClip and goes to a specific frame\n *\n * @method gotoAndStop\n * @param frameNumber {Number} frame index to stop at\n */\nPIXI.MovieClip.prototype.gotoAndStop = function(frameNumber)\n{\n    this.playing = false;\n    this.currentFrame = frameNumber;\n    var round = (this.currentFrame + 0.5) | 0;\n    this.setTexture(this.textures[round % this.textures.length]);\n};\n\n/**\n * Goes to a specific frame and begins playing the MovieClip\n *\n * @method gotoAndPlay\n * @param frameNumber {Number} frame index to start at\n */\nPIXI.MovieClip.prototype.gotoAndPlay = function(frameNumber)\n{\n    this.currentFrame = frameNumber;\n    this.playing = true;\n};\n\n/*\n * Updates the object transform for rendering\n *\n * @method updateTransform\n * @private\n */\nPIXI.MovieClip.prototype.updateTransform = function()\n{\n    this.displayObjectContainerUpdateTransform();\n\n    if(!this.playing)return;\n\n    this.currentFrame += this.animationSpeed;\n\n    var round = (this.currentFrame + 0.5) | 0;\n\n    this.currentFrame = this.currentFrame % this.textures.length;\n\n    if(this.loop || round < this.textures.length)\n    {\n        this.setTexture(this.textures[round % this.textures.length]);\n    }\n    else if(round >= this.textures.length)\n    {\n        this.gotoAndStop(this.textures.length - 1);\n        if(this.onComplete)\n        {\n            this.onComplete();\n        }\n    }\n};\n\n/**\n * A short hand way of creating a movieclip from an array of frame ids\n *\n * @static\n * @method fromFrames\n * @param frames {Array} the array of frames ids the movieclip will use as its texture frames\n * @return {MovieClip}\n */\nPIXI.MovieClip.fromFrames = function(frames)\n{\n    var textures = [];\n\n    for (var i = 0; i < frames.length; i++)\n    {\n        textures.push(new PIXI.Texture.fromFrame(frames[i]));\n    }\n\n    return new PIXI.MovieClip(textures);\n};\n\n/**\n * A short hand way of creating a movieclip from an array of image ids\n *\n * @static\n * @method fromImages\n * @param frames {Array} the array of image ids the movieclip will use as its texture frames\n * @return {MovieClip}\n */\nPIXI.MovieClip.fromImages = function(images)\n{\n    var textures = [];\n\n    for (var i = 0; i < images.length; i++)\n    {\n        textures.push(new PIXI.Texture.fromImage(images[i]));\n    }\n\n    return new PIXI.MovieClip(textures);\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * A target and pass info object for filters.\n * \n * @class FilterBlock\n * @constructor\n */\nPIXI.FilterBlock = function()\n{\n    /**\n     * The visible state of this FilterBlock.\n     *\n     * @property visible\n     * @type Boolean\n     */\n    this.visible = true;\n\n    /**\n     * The renderable state of this FilterBlock.\n     *\n     * @property renderable\n     * @type Boolean\n     */\n    this.renderable = true;\n};\n\nPIXI.FilterBlock.prototype.constructor = PIXI.FilterBlock;\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n * Modified by Tom Slezakowski http://www.tomslezakowski.com @TomSlezakowski (24/03/2014) - Added dropShadowColor.\n */\n\n/**\n * A Text Object will create a line or multiple lines of text. To split a line you can use '\\n' in your text string,\n * or add a wordWrap property set to true and and wordWrapWidth property with a value in the style object.\n *\n * @class Text\n * @extends Sprite\n * @constructor\n * @param text {String} The copy that you would like the text to display\n * @param [style] {Object} The style parameters\n * @param [style.font] {String} default 'bold 20px Arial' The style and size of the font\n * @param [style.fill='black'] {String|Number} A canvas fillstyle that will be used on the text e.g 'red', '#00FF00'\n * @param [style.align='left'] {String} Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text\n * @param [style.stroke] {String|Number} A canvas fillstyle that will be used on the text stroke e.g 'blue', '#FCFF00'\n * @param [style.strokeThickness=0] {Number} A number that represents the thickness of the stroke. Default is 0 (no stroke)\n * @param [style.wordWrap=false] {Boolean} Indicates if word wrap should be used\n * @param [style.wordWrapWidth=100] {Number} The width at which text will wrap, it needs wordWrap to be set to true\n * @param [style.dropShadow=false] {Boolean} Set a drop shadow for the text\n * @param [style.dropShadowColor='#000000'] {String} A fill style to be used on the dropshadow e.g 'red', '#00FF00'\n * @param [style.dropShadowAngle=Math.PI/4] {Number} Set a angle of the drop shadow\n * @param [style.dropShadowDistance=5] {Number} Set a distance of the drop shadow\n */\nPIXI.Text = function(text, style)\n{\n    /**\n     * The canvas element that everything is drawn to\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     */\n    this.canvas = document.createElement('canvas');\n\n    /**\n     * The canvas 2d context that everything is drawn with\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n    this.context = this.canvas.getContext('2d');\n\n    /**\n     * The resolution of the canvas.\n     * @property resolution\n     * @type Number\n     */\n    this.resolution = 1;\n\n    PIXI.Sprite.call(this, PIXI.Texture.fromCanvas(this.canvas));\n\n    this.setText(text);\n    this.setStyle(style);\n\n};\n\n// constructor\nPIXI.Text.prototype = Object.create(PIXI.Sprite.prototype);\nPIXI.Text.prototype.constructor = PIXI.Text;\n\n/**\n * The width of the Text, setting this will actually modify the scale to achieve the value set\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(PIXI.Text.prototype, 'width', {\n    get: function() {\n\n        if(this.dirty)\n        {\n            this.updateText();\n            this.dirty = false;\n        }\n\n\n        return this.scale.x * this.texture.frame.width;\n    },\n    set: function(value) {\n        this.scale.x = value / this.texture.frame.width;\n        this._width = value;\n    }\n});\n\n/**\n * The height of the Text, setting this will actually modify the scale to achieve the value set\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(PIXI.Text.prototype, 'height', {\n    get: function() {\n\n        if(this.dirty)\n        {\n            this.updateText();\n            this.dirty = false;\n        }\n\n\n        return  this.scale.y * this.texture.frame.height;\n    },\n    set: function(value) {\n        this.scale.y = value / this.texture.frame.height;\n        this._height = value;\n    }\n});\n\n/**\n * Set the style of the text\n *\n * @method setStyle\n * @param [style] {Object} The style parameters\n * @param [style.font='bold 20pt Arial'] {String} The style and size of the font\n * @param [style.fill='black'] {Object} A canvas fillstyle that will be used on the text eg 'red', '#00FF00'\n * @param [style.align='left'] {String} Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text\n * @param [style.stroke='black'] {String} A canvas fillstyle that will be used on the text stroke eg 'blue', '#FCFF00'\n * @param [style.strokeThickness=0] {Number} A number that represents the thickness of the stroke. Default is 0 (no stroke)\n * @param [style.wordWrap=false] {Boolean} Indicates if word wrap should be used\n * @param [style.wordWrapWidth=100] {Number} The width at which text will wrap\n * @param [style.dropShadow=false] {Boolean} Set a drop shadow for the text\n * @param [style.dropShadowColor='#000000'] {String} A fill style to be used on the dropshadow e.g 'red', '#00FF00'\n * @param [style.dropShadowAngle=Math.PI/4] {Number} Set a angle of the drop shadow\n * @param [style.dropShadowDistance=5] {Number} Set a distance of the drop shadow\n */\nPIXI.Text.prototype.setStyle = function(style)\n{\n    style = style || {};\n    style.font = style.font || 'bold 20pt Arial';\n    style.fill = style.fill || 'black';\n    style.align = style.align || 'left';\n    style.stroke = style.stroke || 'black'; //provide a default, see: https://github.com/GoodBoyDigital/pixi.js/issues/136\n    style.strokeThickness = style.strokeThickness || 0;\n    style.wordWrap = style.wordWrap || false;\n    style.wordWrapWidth = style.wordWrapWidth || 100;\n    \n    style.dropShadow = style.dropShadow || false;\n    style.dropShadowAngle = style.dropShadowAngle || Math.PI / 6;\n    style.dropShadowDistance = style.dropShadowDistance || 4;\n    style.dropShadowColor = style.dropShadowColor || 'black';\n\n    this.style = style;\n    this.dirty = true;\n};\n\n/**\n * Set the copy for the text object. To split a line you can use '\\n'.\n *\n * @method setText\n * @param text {String} The copy that you would like the text to display\n */\nPIXI.Text.prototype.setText = function(text)\n{\n    this.text = text.toString() || ' ';\n    this.dirty = true;\n};\n\n/**\n * Renders text and updates it when needed\n *\n * @method updateText\n * @private\n */\nPIXI.Text.prototype.updateText = function()\n{\n    this.texture.baseTexture.resolution = this.resolution;\n\n    this.context.font = this.style.font;\n\n    var outputText = this.text;\n\n    // word wrap\n    // preserve original text\n    if(this.style.wordWrap)outputText = this.wordWrap(this.text);\n\n    //split text into lines\n    var lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n\n    //calculate text width\n    var lineWidths = [];\n    var maxLineWidth = 0;\n    var fontProperties = this.determineFontProperties(this.style.font);\n    for (var i = 0; i < lines.length; i++)\n    {\n        var lineWidth = this.context.measureText(lines[i]).width;\n        lineWidths[i] = lineWidth;\n        maxLineWidth = Math.max(maxLineWidth, lineWidth);\n    }\n\n    var width = maxLineWidth + this.style.strokeThickness;\n    if(this.style.dropShadow)width += this.style.dropShadowDistance;\n\n    this.canvas.width = ( width + this.context.lineWidth ) * this.resolution;\n    \n    //calculate text height\n    var lineHeight = fontProperties.fontSize + this.style.strokeThickness;\n \n    var height = lineHeight * lines.length;\n    if(this.style.dropShadow)height += this.style.dropShadowDistance;\n\n    this.canvas.height = height * this.resolution;\n\n    this.context.scale( this.resolution, this.resolution);\n\n    if(navigator.isCocoonJS) this.context.clearRect(0,0,this.canvas.width,this.canvas.height);\n    \n    // used for debugging..\n    //this.context.fillStyle =\"#FF0000\"\n    //this.context.fillRect(0, 0, this.canvas.width,this.canvas.height);\n\n    this.context.font = this.style.font;\n    this.context.strokeStyle = this.style.stroke;\n    this.context.lineWidth = this.style.strokeThickness;\n    this.context.textBaseline = 'alphabetic';\n    //this.context.lineJoin = 'round';\n\n    var linePositionX;\n    var linePositionY;\n\n    if(this.style.dropShadow)\n    {\n        this.context.fillStyle = this.style.dropShadowColor;\n\n        var xShadowOffset = Math.sin(this.style.dropShadowAngle) * this.style.dropShadowDistance;\n        var yShadowOffset = Math.cos(this.style.dropShadowAngle) * this.style.dropShadowDistance;\n\n        for (i = 0; i < lines.length; i++)\n        {\n            linePositionX = this.style.strokeThickness / 2;\n            linePositionY = (this.style.strokeThickness / 2 + i * lineHeight) + fontProperties.ascent;\n\n            if(this.style.align === 'right')\n            {\n                linePositionX += maxLineWidth - lineWidths[i];\n            }\n            else if(this.style.align === 'center')\n            {\n                linePositionX += (maxLineWidth - lineWidths[i]) / 2;\n            }\n\n            if(this.style.fill)\n            {\n                this.context.fillText(lines[i], linePositionX + xShadowOffset, linePositionY + yShadowOffset);\n            }\n\n          //  if(dropShadow)\n        }\n    }\n\n    //set canvas text styles\n    this.context.fillStyle = this.style.fill;\n    \n    //draw lines line by line\n    for (i = 0; i < lines.length; i++)\n    {\n        linePositionX = this.style.strokeThickness / 2;\n        linePositionY = (this.style.strokeThickness / 2 + i * lineHeight) + fontProperties.ascent;\n\n        if(this.style.align === 'right')\n        {\n            linePositionX += maxLineWidth - lineWidths[i];\n        }\n        else if(this.style.align === 'center')\n        {\n            linePositionX += (maxLineWidth - lineWidths[i]) / 2;\n        }\n\n        if(this.style.stroke && this.style.strokeThickness)\n        {\n            this.context.strokeText(lines[i], linePositionX, linePositionY);\n        }\n\n        if(this.style.fill)\n        {\n            this.context.fillText(lines[i], linePositionX, linePositionY);\n        }\n\n      //  if(dropShadow)\n    }\n\n    this.updateTexture();\n};\n\n/**\n * Updates texture size based on canvas size\n *\n * @method updateTexture\n * @private\n */\nPIXI.Text.prototype.updateTexture = function()\n{\n    this.texture.baseTexture.width = this.canvas.width;\n    this.texture.baseTexture.height = this.canvas.height;\n    this.texture.crop.width = this.texture.frame.width = this.canvas.width;\n    this.texture.crop.height = this.texture.frame.height = this.canvas.height;\n\n    this._width = this.canvas.width;\n    this._height = this.canvas.height;\n\n    // update the dirty base textures\n    this.texture.baseTexture.dirty();\n};\n\n/**\n* Renders the object using the WebGL renderer\n*\n* @method _renderWebGL\n* @param renderSession {RenderSession} \n* @private\n*/\nPIXI.Text.prototype._renderWebGL = function(renderSession)\n{\n    if(this.dirty)\n    {\n        this.resolution = renderSession.resolution;\n\n        this.updateText();\n        this.dirty = false;\n    }\n\n    PIXI.Sprite.prototype._renderWebGL.call(this, renderSession);\n};\n\n/**\n* Renders the object using the Canvas renderer\n*\n* @method _renderCanvas\n* @param renderSession {RenderSession} \n* @private\n*/\nPIXI.Text.prototype._renderCanvas = function(renderSession)\n{\n    if(this.dirty)\n    {\n        this.resolution = renderSession.resolution;\n\n        this.updateText();\n        this.dirty = false;\n    }\n     \n    PIXI.Sprite.prototype._renderCanvas.call(this, renderSession);\n};\n\n/**\n* Calculates the ascent, descent and fontSize of a given fontStyle\n*\n* @method determineFontProperties\n* @param fontStyle {Object}\n* @private\n*/\nPIXI.Text.prototype.determineFontProperties = function(fontStyle)\n{\n    var properties = PIXI.Text.fontPropertiesCache[fontStyle];\n\n    if(!properties)\n    {\n        properties = {};\n        \n        var canvas = PIXI.Text.fontPropertiesCanvas;\n        var context = PIXI.Text.fontPropertiesContext;\n\n        context.font = fontStyle;\n\n        var width = Math.ceil(context.measureText('|Mq').width);\n        var baseline = Math.ceil(context.measureText('M').width);\n        var height = 2 * baseline;\n\n        baseline = baseline * 1.4 | 0;\n\n        canvas.width = width;\n        canvas.height = height;\n\n        context.fillStyle = '#f00';\n        context.fillRect(0, 0, width, height);\n\n        context.font = fontStyle;\n\n        context.textBaseline = 'alphabetic';\n        context.fillStyle = '#000';\n        context.fillText('|MÉq', 0, baseline);\n\n        var imagedata = context.getImageData(0, 0, width, height).data;\n        var pixels = imagedata.length;\n        var line = width * 4;\n\n        var i, j;\n\n        var idx = 0;\n        var stop = false;\n\n        // ascent. scan from top to bottom until we find a non red pixel\n        for(i = 0; i < baseline; i++)\n        {\n            for(j = 0; j < line; j += 4)\n            {\n                if(imagedata[idx + j] !== 255)\n                {\n                    stop = true;\n                    break;\n                }\n            }\n            if(!stop)\n            {\n                idx += line;\n            }\n            else\n            {\n                break;\n            }\n        }\n\n        properties.ascent = baseline - i;\n\n        idx = pixels - line;\n        stop = false;\n\n        // descent. scan from bottom to top until we find a non red pixel\n        for(i = height; i > baseline; i--)\n        {\n            for(j = 0; j < line; j += 4)\n            {\n                if(imagedata[idx + j] !== 255)\n                {\n                    stop = true;\n                    break;\n                }\n            }\n            if(!stop)\n            {\n                idx -= line;\n            }\n            else\n            {\n                break;\n            }\n        }\n\n        properties.descent = i - baseline;\n        //TODO might need a tweak. kind of a temp fix!\n        properties.descent += 6;\n        properties.fontSize = properties.ascent + properties.descent;\n\n        PIXI.Text.fontPropertiesCache[fontStyle] = properties;\n    }\n\n    return properties;\n};\n\n/**\n * Applies newlines to a string to have it optimally fit into the horizontal\n * bounds set by the Text object's wordWrapWidth property.\n *\n * @method wordWrap\n * @param text {String}\n * @private\n */\nPIXI.Text.prototype.wordWrap = function(text)\n{\n    // Greedy wrapping algorithm that will wrap words as the line grows longer\n    // than its horizontal bounds.\n    var result = '';\n    var lines = text.split('\\n');\n    for (var i = 0; i < lines.length; i++)\n    {\n        var spaceLeft = this.style.wordWrapWidth;\n        var words = lines[i].split(' ');\n        for (var j = 0; j < words.length; j++)\n        {\n            var wordWidth = this.context.measureText(words[j]).width;\n            var wordWidthWithSpace = wordWidth + this.context.measureText(' ').width;\n            if(j === 0 || wordWidthWithSpace > spaceLeft)\n            {\n                // Skip printing the newline if it's the first word of the line that is\n                // greater than the word wrap width.\n                if(j > 0)\n                {\n                    result += '\\n';\n                }\n                result += words[j];\n                spaceLeft = this.style.wordWrapWidth - wordWidth;\n            }\n            else\n            {\n                spaceLeft -= wordWidthWithSpace;\n                result += ' ' + words[j];\n            }\n        }\n\n        if (i < lines.length-1)\n        {\n            result += '\\n';\n        }\n    }\n    return result;\n};\n\n/**\n* Returns the bounds of the Text as a rectangle. The bounds calculation takes the worldTransform into account.\n*\n* @method getBounds\n* @param matrix {Matrix} the transformation matrix of the Text\n* @return {Rectangle} the framing rectangle\n*/\nPIXI.Text.prototype.getBounds = function(matrix)\n{\n    if(this.dirty)\n    {\n        this.updateText();\n        this.dirty = false;\n    }\n\n    return PIXI.Sprite.prototype.getBounds.call(this, matrix);\n};\n\n/**\n * Destroys this text object.\n *\n * @method destroy\n * @param destroyBaseTexture {Boolean} whether to destroy the base texture as well\n */\nPIXI.Text.prototype.destroy = function(destroyBaseTexture)\n{\n    // make sure to reset the the context and canvas.. dont want this hanging around in memory!\n    this.context = null;\n    this.canvas = null;\n\n    this.texture.destroy(destroyBaseTexture === undefined ? true : destroyBaseTexture);\n};\n\nPIXI.Text.fontPropertiesCache = {};\nPIXI.Text.fontPropertiesCanvas = document.createElement('canvas');\nPIXI.Text.fontPropertiesContext = PIXI.Text.fontPropertiesCanvas.getContext('2d');\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * A BitmapText object will create a line or multiple lines of text using bitmap font. To split a line you can use '\\n', '\\r' or '\\r\\n' in your string.\n * You can generate the fnt files using\n * http://www.angelcode.com/products/bmfont/ for windows or\n * http://www.bmglyph.com/ for mac.\n *\n * @class BitmapText\n * @extends DisplayObjectContainer\n * @constructor\n * @param text {String} The copy that you would like the text to display\n * @param style {Object} The style parameters\n * @param style.font {String} The size (optional) and bitmap font id (required) eq 'Arial' or '20px Arial' (must have loaded previously)\n * @param [style.align='left'] {String} Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text\n */\nPIXI.BitmapText = function(text, style)\n{\n    PIXI.DisplayObjectContainer.call(this);\n\n    /**\n     * [read-only] The width of the overall text, different from fontSize,\n     * which is defined in the style object\n     *\n     * @property textWidth\n     * @type Number\n     * @readOnly\n     */\n    this.textWidth = 0;\n\n    /**\n     * [read-only] The height of the overall text, different from fontSize,\n     * which is defined in the style object\n     *\n     * @property textHeight\n     * @type Number\n     * @readOnly\n     */\n    this.textHeight = 0;\n\n    /**\n     * @property _pool\n     * @type Array\n     * @private\n     */\n    this._pool = [];\n\n    this.setText(text);\n    this.setStyle(style);\n    this.updateText();\n\n    /**\n     * The dirty state of this object.\n     * @property dirty\n     * @type Boolean\n     */\n    this.dirty = false;\n};\n\n// constructor\nPIXI.BitmapText.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);\nPIXI.BitmapText.prototype.constructor = PIXI.BitmapText;\n\n/**\n * Set the text string to be rendered.\n *\n * @method setText\n * @param text {String} The text that you would like displayed\n */\nPIXI.BitmapText.prototype.setText = function(text)\n{\n    this.text = text || ' ';\n    this.dirty = true;\n};\n\n/**\n * Set the style of the text\n * style.font {String} The size (optional) and bitmap font id (required) eq 'Arial' or '20px Arial' (must have loaded previously)\n * [style.align='left'] {String} Alignment for multiline text ('left', 'center' or 'right'), does not affect single lines of text\n *\n * @method setStyle\n * @param style {Object} The style parameters, contained as properties of an object\n */\nPIXI.BitmapText.prototype.setStyle = function(style)\n{\n    style = style || {};\n    style.align = style.align || 'left';\n    this.style = style;\n\n    var font = style.font.split(' ');\n    this.fontName = font[font.length - 1];\n    this.fontSize = font.length >= 2 ? parseInt(font[font.length - 2], 10) : PIXI.BitmapText.fonts[this.fontName].size;\n\n    this.dirty = true;\n    this.tint = style.tint;\n};\n\n/**\n * Renders text and updates it when needed\n *\n * @method updateText\n * @private\n */\nPIXI.BitmapText.prototype.updateText = function()\n{\n    var data = PIXI.BitmapText.fonts[this.fontName];\n    var pos = new PIXI.Point();\n    var prevCharCode = null;\n    var chars = [];\n    var maxLineWidth = 0;\n    var lineWidths = [];\n    var line = 0;\n    var scale = this.fontSize / data.size;\n\n    for(var i = 0; i < this.text.length; i++)\n    {\n        var charCode = this.text.charCodeAt(i);\n\n        if(/(?:\\r\\n|\\r|\\n)/.test(this.text.charAt(i)))\n        {\n            lineWidths.push(pos.x);\n            maxLineWidth = Math.max(maxLineWidth, pos.x);\n            line++;\n\n            pos.x = 0;\n            pos.y += data.lineHeight;\n            prevCharCode = null;\n            continue;\n        }\n\n        var charData = data.chars[charCode];\n\n        if(!charData) continue;\n\n        if(prevCharCode && charData.kerning[prevCharCode])\n        {\n            pos.x += charData.kerning[prevCharCode];\n        }\n\n        chars.push({texture:charData.texture, line: line, charCode: charCode, position: new PIXI.Point(pos.x + charData.xOffset, pos.y + charData.yOffset)});\n        pos.x += charData.xAdvance;\n\n        prevCharCode = charCode;\n    }\n\n    lineWidths.push(pos.x);\n    maxLineWidth = Math.max(maxLineWidth, pos.x);\n\n    var lineAlignOffsets = [];\n\n    for(i = 0; i <= line; i++)\n    {\n        var alignOffset = 0;\n        if(this.style.align === 'right')\n        {\n            alignOffset = maxLineWidth - lineWidths[i];\n        }\n        else if(this.style.align === 'center')\n        {\n            alignOffset = (maxLineWidth - lineWidths[i]) / 2;\n        }\n        lineAlignOffsets.push(alignOffset);\n    }\n\n    var lenChildren = this.children.length;\n    var lenChars = chars.length;\n    var tint = this.tint || 0xFFFFFF;\n\n    for(i = 0; i < lenChars; i++)\n    {\n        var c = i < lenChildren ? this.children[i] : this._pool.pop(); // get old child if have. if not - take from pool.\n\n        if (c) c.setTexture(chars[i].texture); // check if got one before.\n        else c = new PIXI.Sprite(chars[i].texture); // if no create new one.\n\n        c.position.x = (chars[i].position.x + lineAlignOffsets[chars[i].line]) * scale;\n        c.position.y = chars[i].position.y * scale;\n        c.scale.x = c.scale.y = scale;\n        c.tint = tint;\n        if (!c.parent) this.addChild(c);\n    }\n\n    // remove unnecessary children.\n    // and put their into the pool.\n    while(this.children.length > lenChars)\n    {\n        var child = this.getChildAt(this.children.length - 1);\n        this._pool.push(child);\n        this.removeChild(child);\n    }\n\n    this.textWidth = maxLineWidth * scale;\n    this.textHeight = (pos.y + data.lineHeight) * scale;\n};\n\n/**\n * Updates the transform of this object\n *\n * @method updateTransform\n * @private\n */\nPIXI.BitmapText.prototype.updateTransform = function()\n{\n    if(this.dirty)\n    {\n        this.updateText();\n        this.dirty = false;\n    }\n\n    PIXI.DisplayObjectContainer.prototype.updateTransform.call(this);\n};\n\nPIXI.BitmapText.fonts = {};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * Holds all information related to an Interaction event\n *\n * @class InteractionData\n * @constructor\n */\nPIXI.InteractionData = function()\n{\n    /**\n     * This point stores the global coords of where the touch/mouse event happened\n     *\n     * @property global\n     * @type Point\n     */\n    this.global = new PIXI.Point();\n\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @property target\n     * @type Sprite\n     */\n    this.target = null;\n\n    /**\n     * When passed to an event handler, this will be the original DOM Event that was captured\n     *\n     * @property originalEvent\n     * @type Event\n     */\n    this.originalEvent = null;\n};\n\n/**\n * This will return the local coordinates of the specified displayObject for this InteractionData\n *\n * @method getLocalPosition\n * @param displayObject {DisplayObject} The DisplayObject that you would like the local coords off\n * @param [point] {Point} A Point object in which to store the value, optional (otherwise will create a new point)\n * @return {Point} A point containing the coordinates of the InteractionData position relative to the DisplayObject\n */\nPIXI.InteractionData.prototype.getLocalPosition = function(displayObject, point)\n{\n    var worldTransform = displayObject.worldTransform;\n    var global = this.global;\n\n    // do a cheeky transform to get the mouse coords;\n    var a00 = worldTransform.a, a01 = worldTransform.c, a02 = worldTransform.tx,\n        a10 = worldTransform.b, a11 = worldTransform.d, a12 = worldTransform.ty,\n        id = 1 / (a00 * a11 + a01 * -a10);\n\n    point = point || new PIXI.Point();\n\n    point.x = a11 * id * global.x + -a01 * id * global.y + (a12 * a01 - a02 * a11) * id;\n    point.y = a00 * id * global.y + -a10 * id * global.x + (-a12 * a00 + a02 * a10) * id;\n\n    // set the mouse coords...\n    return point;\n};\n\n// constructor\nPIXI.InteractionData.prototype.constructor = PIXI.InteractionData;\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n /**\n * The interaction manager deals with mouse and touch events. Any DisplayObject can be interactive\n * if its interactive parameter is set to true\n * This manager also supports multitouch.\n *\n * @class InteractionManager\n * @constructor\n * @param stage {Stage} The stage to handle interactions\n */\nPIXI.InteractionManager = function(stage)\n{\n    /**\n     * A reference to the stage\n     *\n     * @property stage\n     * @type Stage\n     */\n    this.stage = stage;\n\n    /**\n     * The mouse data\n     *\n     * @property mouse\n     * @type InteractionData\n     */\n    this.mouse = new PIXI.InteractionData();\n\n    /**\n     * An object that stores current touches (InteractionData) by id reference\n     *\n     * @property touches\n     * @type Object\n     */\n    this.touches = {};\n\n    /**\n     * @property tempPoint\n     * @type Point\n     * @private\n     */\n    this.tempPoint = new PIXI.Point();\n\n    /**\n     * @property mouseoverEnabled\n     * @type Boolean\n     * @default\n     */\n    this.mouseoverEnabled = true;\n\n    /**\n     * Tiny little interactiveData pool !\n     *\n     * @property pool\n     * @type Array\n     */\n    this.pool = [];\n\n    /**\n     * An array containing all the iterative items from the our interactive tree\n     * @property interactiveItems\n     * @type Array\n     * @private\n     */\n    this.interactiveItems = [];\n\n    /**\n     * Our canvas\n     * @property interactionDOMElement\n     * @type HTMLCanvasElement\n     * @private\n     */\n    this.interactionDOMElement = null;\n\n    //this will make it so that you don't have to call bind all the time\n\n    /**\n     * @property onMouseMove\n     * @type Function\n     */\n    this.onMouseMove = this.onMouseMove.bind( this );\n\n    /**\n     * @property onMouseDown\n     * @type Function\n     */\n    this.onMouseDown = this.onMouseDown.bind(this);\n\n    /**\n     * @property onMouseOut\n     * @type Function\n     */\n    this.onMouseOut = this.onMouseOut.bind(this);\n\n    /**\n     * @property onMouseUp\n     * @type Function\n     */\n    this.onMouseUp = this.onMouseUp.bind(this);\n\n    /**\n     * @property onTouchStart\n     * @type Function\n     */\n    this.onTouchStart = this.onTouchStart.bind(this);\n\n    /**\n     * @property onTouchEnd\n     * @type Function\n     */\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n\n    /**\n     * @property onTouchCancel\n     * @type Function\n     */\n    this.onTouchCancel = this.onTouchCancel.bind(this);\n\n    /**\n     * @property onTouchMove\n     * @type Function\n     */\n    this.onTouchMove = this.onTouchMove.bind(this);\n\n    /**\n     * @property last\n     * @type Number\n     */\n    this.last = 0;\n\n    /**\n     * The css style of the cursor that is being used\n     * @property currentCursorStyle\n     * @type String\n     */\n    this.currentCursorStyle = 'inherit';\n\n    /**\n     * Is set to true when the mouse is moved out of the canvas\n     * @property mouseOut\n     * @type Boolean\n     */\n    this.mouseOut = false;\n\n    /**\n     * @property resolution\n     * @type Number\n     */\n    this.resolution = 1;\n\n    // used for hit testing\n    this._tempPoint = new PIXI.Point();\n};\n\n// constructor\nPIXI.InteractionManager.prototype.constructor = PIXI.InteractionManager;\n\n/**\n * Collects an interactive sprite recursively to have their interactions managed\n *\n * @method collectInteractiveSprite\n * @param displayObject {DisplayObject} the displayObject to collect\n * @param iParent {DisplayObject} the display object's parent\n * @private\n */\nPIXI.InteractionManager.prototype.collectInteractiveSprite = function(displayObject, iParent)\n{\n    var children = displayObject.children;\n    var length = children.length;\n\n    // make an interaction tree... {item.__interactiveParent}\n    for (var i = length - 1; i >= 0; i--)\n    {\n        var child = children[i];\n\n        // push all interactive bits\n        if (child._interactive)\n        {\n            iParent.interactiveChildren = true;\n            //child.__iParent = iParent;\n            this.interactiveItems.push(child);\n\n            if (child.children.length > 0) {\n                this.collectInteractiveSprite(child, child);\n            }\n        }\n        else\n        {\n            child.__iParent = null;\n            if (child.children.length > 0)\n            {\n                this.collectInteractiveSprite(child, iParent);\n            }\n        }\n\n    }\n};\n\n/**\n * Sets the target for event delegation\n *\n * @method setTarget\n * @param target {WebGLRenderer|CanvasRenderer} the renderer to bind events to\n * @private\n */\nPIXI.InteractionManager.prototype.setTarget = function(target)\n{\n    this.target = target;\n    this.resolution = target.resolution;\n\n    // Check if the dom element has been set. If it has don't do anything.\n    if (this.interactionDOMElement !== null) return;\n\n    this.setTargetDomElement (target.view);\n};\n\n/**\n * Sets the DOM element which will receive mouse/touch events. This is useful for when you have other DOM\n * elements on top of the renderers Canvas element. With this you'll be able to delegate another DOM element\n * to receive those events\n *\n * @method setTargetDomElement\n * @param domElement {DOMElement} the DOM element which will receive mouse and touch events\n * @private\n */\nPIXI.InteractionManager.prototype.setTargetDomElement = function(domElement)\n{\n    this.removeEvents();\n\n    if (window.navigator.msPointerEnabled)\n    {\n        // time to remove some of that zoom in ja..\n        domElement.style['-ms-content-zooming'] = 'none';\n        domElement.style['-ms-touch-action'] = 'none';\n    }\n\n    this.interactionDOMElement = domElement;\n\n    domElement.addEventListener('mousemove',  this.onMouseMove, true);\n    domElement.addEventListener('mousedown',  this.onMouseDown, true);\n    domElement.addEventListener('mouseout',   this.onMouseOut, true);\n\n    // aint no multi touch just yet!\n    domElement.addEventListener('touchstart', this.onTouchStart, true);\n    domElement.addEventListener('touchend', this.onTouchEnd, true);\n    domElement.addEventListener('touchleave', this.onTouchCancel, true);\n    domElement.addEventListener('touchcancel', this.onTouchCancel, true);\n    domElement.addEventListener('touchmove', this.onTouchMove, true);\n\n    window.addEventListener('mouseup',  this.onMouseUp, true);\n};\n\n/**\n * @method removeEvents\n * @private\n */\nPIXI.InteractionManager.prototype.removeEvents = function()\n{\n    if (!this.interactionDOMElement) return;\n\n    this.interactionDOMElement.style['-ms-content-zooming'] = '';\n    this.interactionDOMElement.style['-ms-touch-action'] = '';\n\n    this.interactionDOMElement.removeEventListener('mousemove',  this.onMouseMove, true);\n    this.interactionDOMElement.removeEventListener('mousedown',  this.onMouseDown, true);\n    this.interactionDOMElement.removeEventListener('mouseout',   this.onMouseOut, true);\n\n    // aint no multi touch just yet!\n    this.interactionDOMElement.removeEventListener('touchstart', this.onTouchStart, true);\n    this.interactionDOMElement.removeEventListener('touchend', this.onTouchEnd, true);\n    this.interactionDOMElement.removeEventListener('touchleave', this.onTouchCancel, true);\n    this.interactionDOMElement.removeEventListener('touchcancel', this.onTouchCancel, true);\n    this.interactionDOMElement.removeEventListener('touchmove', this.onTouchMove, true);\n\n    this.interactionDOMElement = null;\n\n    window.removeEventListener('mouseup',  this.onMouseUp, true);\n};\n\n/**\n * updates the state of interactive objects\n *\n * @method update\n * @private\n */\nPIXI.InteractionManager.prototype.update = function()\n{\n    if (!this.target) return;\n\n    // frequency of 30fps??\n    var now = Date.now();\n    var diff = now - this.last;\n    diff = (diff * PIXI.INTERACTION_FREQUENCY ) / 1000;\n    if (diff < 1) return;\n    this.last = now;\n\n    var i = 0;\n\n    // ok.. so mouse events??\n    // yes for now :)\n    // OPTIMISE - how often to check??\n    if (this.dirty)\n    {\n        this.rebuildInteractiveGraph();\n    }\n\n    // loop through interactive objects!\n    var length = this.interactiveItems.length;\n    var cursor = 'inherit';\n    var over = false;\n\n    for (i = 0; i < length; i++)\n    {\n        var item = this.interactiveItems[i];\n\n        // OPTIMISATION - only calculate every time if the mousemove function exists..\n        // OK so.. does the object have any other interactive functions?\n        // hit-test the clip!\n       // if (item.mouseover || item.mouseout || item.buttonMode)\n       // {\n        // ok so there are some functions so lets hit test it..\n        item.__hit = this.hitTest(item, this.mouse);\n        this.mouse.target = item;\n        // ok so deal with interactions..\n        // looks like there was a hit!\n        if (item.__hit && !over)\n        {\n            if (item.buttonMode) cursor = item.defaultCursor;\n\n            if (!item.interactiveChildren)\n            {\n                over = true;\n            }\n\n            if (!item.__isOver)\n            {\n                if (item.mouseover)\n                {\n                    item.mouseover (this.mouse);\n                }\n                item.__isOver = true;\n            }\n        }\n        else\n        {\n            if (item.__isOver)\n            {\n                // roll out!\n                if (item.mouseout)\n                {\n                    item.mouseout (this.mouse);\n                }\n                item.__isOver = false;\n            }\n        }\n    }\n\n    if (this.currentCursorStyle !== cursor)\n    {\n        this.currentCursorStyle = cursor;\n        this.interactionDOMElement.style.cursor = cursor;\n    }\n};\n\n/**\n * @method rebuildInteractiveGraph\n * @private\n */\nPIXI.InteractionManager.prototype.rebuildInteractiveGraph = function()\n{\n    this.dirty = false;\n\n    var len = this.interactiveItems.length;\n\n    for (var i = 0; i < len; i++) {\n        this.interactiveItems[i].interactiveChildren = false;\n    }\n\n    this.interactiveItems = [];\n\n    if (this.stage.interactive)\n    {\n        this.interactiveItems.push(this.stage);\n    }\n\n    // Go through and collect all the objects that are interactive..\n    this.collectInteractiveSprite(this.stage, this.stage);\n};\n\n/**\n * Is called when the mouse moves across the renderer element\n *\n * @method onMouseMove\n * @param event {Event} The DOM event of the mouse moving\n * @private\n */\nPIXI.InteractionManager.prototype.onMouseMove = function(event)\n{\n    if (this.dirty)\n    {\n        this.rebuildInteractiveGraph();\n    }\n\n    this.mouse.originalEvent = event;\n\n    // TODO optimize by not check EVERY TIME! maybe half as often? //\n    var rect = this.interactionDOMElement.getBoundingClientRect();\n\n    this.mouse.global.x = (event.clientX - rect.left) * (this.target.width / rect.width) / this.resolution;\n    this.mouse.global.y = (event.clientY - rect.top) * ( this.target.height / rect.height) / this.resolution;\n\n    var length = this.interactiveItems.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        var item = this.interactiveItems[i];\n\n        // Call the function!\n        if (item.mousemove)\n        {\n            item.mousemove(this.mouse);\n        }\n    }\n};\n\n/**\n * Is called when the mouse button is pressed down on the renderer element\n *\n * @method onMouseDown\n * @param event {Event} The DOM event of a mouse button being pressed down\n * @private\n */\nPIXI.InteractionManager.prototype.onMouseDown = function(event)\n{\n    if (this.dirty)\n    {\n        this.rebuildInteractiveGraph();\n    }\n\n    this.mouse.originalEvent = event;\n\n    if (PIXI.AUTO_PREVENT_DEFAULT)\n    {\n        this.mouse.originalEvent.preventDefault();\n    }\n\n    // loop through interaction tree...\n    // hit test each item! ->\n    // get interactive items under point??\n    //stage.__i\n    var length = this.interactiveItems.length;\n\n    var e = this.mouse.originalEvent;\n    var isRightButton = e.button === 2 || e.which === 3;\n    var downFunction = isRightButton ? 'rightdown' : 'mousedown';\n    var clickFunction = isRightButton ? 'rightclick' : 'click';\n    var buttonIsDown = isRightButton ? '__rightIsDown' : '__mouseIsDown';\n    var isDown = isRightButton ? '__isRightDown' : '__isDown';\n\n    // while\n    // hit test\n    for (var i = 0; i < length; i++)\n    {\n        var item = this.interactiveItems[i];\n\n        if (item[downFunction] || item[clickFunction])\n        {\n            item[buttonIsDown] = true;\n            item.__hit = this.hitTest(item, this.mouse);\n\n            if (item.__hit)\n            {\n                //call the function!\n                if (item[downFunction])\n                {\n                    item[downFunction](this.mouse);\n                }\n                item[isDown] = true;\n\n                // just the one!\n                if (!item.interactiveChildren) break;\n            }\n        }\n    }\n};\n\n/**\n * Is called when the mouse is moved out of the renderer element\n *\n * @method onMouseOut\n * @param event {Event} The DOM event of a mouse being moved out\n * @private\n */\nPIXI.InteractionManager.prototype.onMouseOut = function(event)\n{\n    if (this.dirty)\n    {\n        this.rebuildInteractiveGraph();\n    }\n\n    this.mouse.originalEvent = event;\n\n    var length = this.interactiveItems.length;\n\n    this.interactionDOMElement.style.cursor = 'inherit';\n\n    for (var i = 0; i < length; i++)\n    {\n        var item = this.interactiveItems[i];\n        if (item.__isOver)\n        {\n            this.mouse.target = item;\n            if (item.mouseout)\n            {\n                item.mouseout(this.mouse);\n            }\n            item.__isOver = false;\n        }\n    }\n\n    this.mouseOut = true;\n\n    // move the mouse to an impossible position\n    this.mouse.global.x = -10000;\n    this.mouse.global.y = -10000;\n};\n\n/**\n * Is called when the mouse button is released on the renderer element\n *\n * @method onMouseUp\n * @param event {Event} The DOM event of a mouse button being released\n * @private\n */\nPIXI.InteractionManager.prototype.onMouseUp = function(event)\n{\n    if (this.dirty)\n    {\n        this.rebuildInteractiveGraph();\n    }\n\n    this.mouse.originalEvent = event;\n\n    var length = this.interactiveItems.length;\n    var up = false;\n\n    var e = this.mouse.originalEvent;\n    var isRightButton = e.button === 2 || e.which === 3;\n\n    var upFunction = isRightButton ? 'rightup' : 'mouseup';\n    var clickFunction = isRightButton ? 'rightclick' : 'click';\n    var upOutsideFunction = isRightButton ? 'rightupoutside' : 'mouseupoutside';\n    var isDown = isRightButton ? '__isRightDown' : '__isDown';\n\n    for (var i = 0; i < length; i++)\n    {\n        var item = this.interactiveItems[i];\n\n        if (item[clickFunction] || item[upFunction] || item[upOutsideFunction])\n        {\n            item.__hit = this.hitTest(item, this.mouse);\n\n            if (item.__hit && !up)\n            {\n                //call the function!\n                if (item[upFunction])\n                {\n                    item[upFunction](this.mouse);\n                }\n                if (item[isDown])\n                {\n                    if (item[clickFunction])\n                    {\n                        item[clickFunction](this.mouse);\n                    }\n                }\n\n                if (!item.interactiveChildren)\n                {\n                    up = true;\n                }\n            }\n            else\n            {\n                if (item[isDown])\n                {\n                    if (item[upOutsideFunction]) item[upOutsideFunction](this.mouse);\n                }\n            }\n\n            item[isDown] = false;\n        }\n    }\n};\n\n/**\n * Tests if the current mouse coordinates hit a sprite\n *\n * @method hitTest\n * @param item {DisplayObject} The displayObject to test for a hit\n * @param interactionData {InteractionData} The interactionData object to update in the case there is a hit\n * @private\n */\nPIXI.InteractionManager.prototype.hitTest = function(item, interactionData)\n{\n    var global = interactionData.global;\n\n    if (!item.worldVisible)\n    {\n        return false;\n    }\n\n    // map the global point to local space.\n    item.worldTransform.applyInverse(global,  this._tempPoint);\n\n    var x = this._tempPoint.x,\n        y = this._tempPoint.y,\n        i;\n\n    interactionData.target = item;\n\n    //a sprite or display object with a hit area defined\n    if (item.hitArea && item.hitArea.contains)\n    {\n        return item.hitArea.contains(x, y);\n    }\n    // a sprite with no hitarea defined\n    else if(item instanceof PIXI.Sprite)\n    {\n        var width = item.texture.frame.width;\n        var height = item.texture.frame.height;\n        var x1 = -width * item.anchor.x;\n        var y1;\n\n        if (x > x1 && x < x1 + width)\n        {\n            y1 = -height * item.anchor.y;\n\n            if (y > y1 && y < y1 + height)\n            {\n                // set the target property if a hit is true!\n                return true;\n            }\n        }\n    }\n    else if(item instanceof PIXI.Graphics)\n    {\n        var graphicsData = item.graphicsData;\n        for (i = 0; i < graphicsData.length; i++)\n        {\n            var data = graphicsData[i];\n            if(!data.fill)continue;\n\n            // only deal with fills..\n            if(data.shape)\n            {\n                if(data.shape.contains(x, y))\n                {\n                    //interactionData.target = item;\n                    return true;\n                }\n            }\n        }\n    }\n\n    var length = item.children.length;\n\n    for (i = 0; i < length; i++)\n    {\n        var tempItem = item.children[i];\n        var hit = this.hitTest(tempItem, interactionData);\n        if (hit)\n        {\n            // hmm.. TODO SET CORRECT TARGET?\n            interactionData.target = item;\n            return true;\n        }\n    }\n    return false;\n};\n\n/**\n * Is called when a touch is moved across the renderer element\n *\n * @method onTouchMove\n * @param event {Event} The DOM event of a touch moving across the renderer view\n * @private\n */\nPIXI.InteractionManager.prototype.onTouchMove = function(event)\n{\n    if (this.dirty)\n    {\n        this.rebuildInteractiveGraph();\n    }\n\n    var rect = this.interactionDOMElement.getBoundingClientRect();\n    var changedTouches = event.changedTouches;\n    var touchData;\n    var i = 0;\n\n    for (i = 0; i < changedTouches.length; i++)\n    {\n        var touchEvent = changedTouches[i];\n        touchData = this.touches[touchEvent.identifier];\n        touchData.originalEvent = event;\n\n        // update the touch position\n        touchData.global.x = ( (touchEvent.clientX - rect.left) * (this.target.width / rect.width) ) / this.resolution;\n        touchData.global.y = ( (touchEvent.clientY - rect.top)  * (this.target.height / rect.height) )  / this.resolution;\n        if (navigator.isCocoonJS && !rect.left && !rect.top && !event.target.style.width && !event.target.style.height)\n        {\n            //Support for CocoonJS fullscreen scale modes\n            touchData.global.x = touchEvent.clientX;\n            touchData.global.y = touchEvent.clientY;\n        }\n\n        for (var j = 0; j < this.interactiveItems.length; j++)\n        {\n            var item = this.interactiveItems[j];\n            if (item.touchmove && item.__touchData && item.__touchData[touchEvent.identifier])\n            {\n                item.touchmove(touchData);\n            }\n        }\n    }\n};\n\n/**\n * Is called when a touch is started on the renderer element\n *\n * @method onTouchStart\n * @param event {Event} The DOM event of a touch starting on the renderer view\n * @private\n */\nPIXI.InteractionManager.prototype.onTouchStart = function(event)\n{\n    if (this.dirty)\n    {\n        this.rebuildInteractiveGraph();\n    }\n\n    var rect = this.interactionDOMElement.getBoundingClientRect();\n\n    if (PIXI.AUTO_PREVENT_DEFAULT)\n    {\n        event.preventDefault();\n    }\n\n    var changedTouches = event.changedTouches;\n    for (var i=0; i < changedTouches.length; i++)\n    {\n        var touchEvent = changedTouches[i];\n\n        var touchData = this.pool.pop();\n        if (!touchData)\n        {\n            touchData = new PIXI.InteractionData();\n        }\n\n        touchData.originalEvent = event;\n\n        this.touches[touchEvent.identifier] = touchData;\n        touchData.global.x = ( (touchEvent.clientX - rect.left) * (this.target.width / rect.width) ) / this.resolution;\n        touchData.global.y = ( (touchEvent.clientY - rect.top)  * (this.target.height / rect.height) ) / this.resolution;\n        if (navigator.isCocoonJS && !rect.left && !rect.top && !event.target.style.width && !event.target.style.height)\n        {\n            //Support for CocoonJS fullscreen scale modes\n            touchData.global.x = touchEvent.clientX;\n            touchData.global.y = touchEvent.clientY;\n        }\n\n        var length = this.interactiveItems.length;\n\n        for (var j = 0; j < length; j++)\n        {\n            var item = this.interactiveItems[j];\n\n            if (item.touchstart || item.tap)\n            {\n                item.__hit = this.hitTest(item, touchData);\n\n                if (item.__hit)\n                {\n                    //call the function!\n                    if (item.touchstart)item.touchstart(touchData);\n                    item.__isDown = true;\n                    item.__touchData = item.__touchData || {};\n                    item.__touchData[touchEvent.identifier] = touchData;\n\n                    if (!item.interactiveChildren) break;\n                }\n            }\n        }\n    }\n};\n\n/**\n * Is called when a touch is ended on the renderer element\n *\n * @method onTouchEnd\n * @param event {Event} The DOM event of a touch ending on the renderer view\n * @private\n */\nPIXI.InteractionManager.prototype.onTouchEnd = function(event)\n{\n    if (this.dirty)\n    {\n        this.rebuildInteractiveGraph();\n    }\n\n    var rect = this.interactionDOMElement.getBoundingClientRect();\n    var changedTouches = event.changedTouches;\n\n    for (var i=0; i < changedTouches.length; i++)\n    {\n        var touchEvent = changedTouches[i];\n        var touchData = this.touches[touchEvent.identifier];\n        var up = false;\n        touchData.global.x = ( (touchEvent.clientX - rect.left) * (this.target.width / rect.width) ) / this.resolution;\n        touchData.global.y = ( (touchEvent.clientY - rect.top)  * (this.target.height / rect.height) ) / this.resolution;\n        if (navigator.isCocoonJS && !rect.left && !rect.top && !event.target.style.width && !event.target.style.height)\n        {\n            //Support for CocoonJS fullscreen scale modes\n            touchData.global.x = touchEvent.clientX;\n            touchData.global.y = touchEvent.clientY;\n        }\n\n        var length = this.interactiveItems.length;\n        for (var j = 0; j < length; j++)\n        {\n            var item = this.interactiveItems[j];\n\n            if (item.__touchData && item.__touchData[touchEvent.identifier])\n            {\n\n                item.__hit = this.hitTest(item, item.__touchData[touchEvent.identifier]);\n\n                // so this one WAS down...\n                touchData.originalEvent = event;\n                // hitTest??\n\n                if (item.touchend || item.tap)\n                {\n                    if (item.__hit && !up)\n                    {\n                        if (item.touchend)\n                        {\n                            item.touchend(touchData);\n                        }\n                        if (item.__isDown && item.tap)\n                        {\n                            item.tap(touchData);\n                        }\n                        if (!item.interactiveChildren)\n                        {\n                            up = true;\n                        }\n                    }\n                    else\n                    {\n                        if (item.__isDown && item.touchendoutside)\n                        {\n                            item.touchendoutside(touchData);\n                        }\n                    }\n\n                    item.__isDown = false;\n                }\n\n                item.__touchData[touchEvent.identifier] = null;\n            }\n        }\n        // remove the touch..\n        this.pool.push(touchData);\n        this.touches[touchEvent.identifier] = null;\n    }\n};\n\n/**\n * Is called when a touch is canceled\n *\n * @method onTouchCancel\n * @param event {Event} The DOM event of a touch canceled\n * @private\n */\nPIXI.InteractionManager.prototype.onTouchCancel = function(event)\n{\n    if (this.dirty)\n    {\n        this.rebuildInteractiveGraph();\n    }\n\n    var rect = this.interactionDOMElement.getBoundingClientRect();\n    var changedTouches = event.changedTouches;\n\n    for (var i=0; i < changedTouches.length; i++)\n    {\n        var touchEvent = changedTouches[i];\n        var touchData = this.touches[touchEvent.identifier];\n        var up = false;\n        touchData.global.x = ( (touchEvent.clientX - rect.left) * (this.target.width / rect.width) ) / this.resolution;\n        touchData.global.y = ( (touchEvent.clientY - rect.top)  * (this.target.height / rect.height) ) / this.resolution;\n        if (navigator.isCocoonJS && !rect.left && !rect.top && !event.target.style.width && !event.target.style.height)\n        {\n            //Support for CocoonJS fullscreen scale modes\n            touchData.global.x = touchEvent.clientX;\n            touchData.global.y = touchEvent.clientY;\n        }\n\n        var length = this.interactiveItems.length;\n        for (var j = 0; j < length; j++)\n        {\n            var item = this.interactiveItems[j];\n\n            if (item.__touchData && item.__touchData[touchEvent.identifier])\n            {\n\n                item.__hit = this.hitTest(item, item.__touchData[touchEvent.identifier]);\n\n                // so this one WAS down...\n                touchData.originalEvent = event;\n                // hitTest??\n\n                if (item.touchcancel && !up)\n                {\n                    item.touchcancel(touchData);\n                    if (!item.interactiveChildren)\n                    {\n                        up = true;\n                    }\n                }\n\n                item.__isDown = false;\n                item.__touchData[touchEvent.identifier] = null;\n            }\n        }\n        // remove the touch..\n        this.pool.push(touchData);\n        this.touches[touchEvent.identifier] = null;\n    }\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * A Stage represents the root of the display tree. Everything connected to the stage is rendered\n *\n * @class Stage\n * @extends DisplayObjectContainer\n * @constructor\n * @param backgroundColor {Number} the background color of the stage, you have to pass this in is in hex format\n *      like: 0xFFFFFF for white\n * \n * Creating a stage is a mandatory process when you use Pixi, which is as simple as this : \n * var stage = new PIXI.Stage(0xFFFFFF);\n * where the parameter given is the background colour of the stage, in hex\n * you will use this stage instance to add your sprites to it and therefore to the renderer\n * Here is how to add a sprite to the stage : \n * stage.addChild(sprite);\n */\nPIXI.Stage = function(backgroundColor)\n{\n    PIXI.DisplayObjectContainer.call( this );\n\n    /**\n     * [read-only] Current transform of the object based on world (parent) factors\n     *\n     * @property worldTransform\n     * @type Matrix\n     * @readOnly\n     * @private\n     */\n    this.worldTransform = new PIXI.Matrix();\n\n    /**\n     * Whether or not the stage is interactive\n     *\n     * @property interactive\n     * @type Boolean\n     */\n    this.interactive = true;\n\n    /**\n     * The interaction manage for this stage, manages all interactive activity on the stage\n     *\n     * @property interactionManager\n     * @type InteractionManager\n     */\n    this.interactionManager = new PIXI.InteractionManager(this);\n\n    /**\n     * Whether the stage is dirty and needs to have interactions updated\n     *\n     * @property dirty\n     * @type Boolean\n     * @private\n     */\n    this.dirty = true;\n\n    //the stage is its own stage\n    this.stage = this;\n\n    //optimize hit detection a bit\n    this.stage.hitArea = new PIXI.Rectangle(0, 0, 100000, 100000);\n\n    this.setBackgroundColor(backgroundColor);\n};\n\n// constructor\nPIXI.Stage.prototype = Object.create( PIXI.DisplayObjectContainer.prototype );\nPIXI.Stage.prototype.constructor = PIXI.Stage;\n\n/**\n * Sets another DOM element which can receive mouse/touch interactions instead of the default Canvas element.\n * This is useful for when you have other DOM elements on top of the Canvas element.\n *\n * @method setInteractionDelegate\n * @param domElement {DOMElement} This new domElement which will receive mouse/touch events\n */\nPIXI.Stage.prototype.setInteractionDelegate = function(domElement)\n{\n    this.interactionManager.setTargetDomElement( domElement );\n};\n\n/*\n * Updates the object transform for rendering\n *\n * @method updateTransform\n * @private\n */\nPIXI.Stage.prototype.updateTransform = function()\n{\n    this.worldAlpha = 1;\n\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        this.children[i].updateTransform();\n    }\n\n    if(this.dirty)\n    {\n        this.dirty = false;\n        // update interactive!\n        this.interactionManager.dirty = true;\n    }\n\n    if(this.interactive)this.interactionManager.update();\n};\n\n/**\n * Sets the background color for the stage\n *\n * @method setBackgroundColor\n * @param backgroundColor {Number} the color of the background, easiest way to pass this in is in hex format\n *      like: 0xFFFFFF for white\n */\nPIXI.Stage.prototype.setBackgroundColor = function(backgroundColor)\n{\n    this.backgroundColor = backgroundColor || 0x000000;\n    this.backgroundColorSplit = PIXI.hex2rgb(this.backgroundColor);\n    var hex = this.backgroundColor.toString(16);\n    hex = '000000'.substr(0, 6 - hex.length) + hex;\n    this.backgroundColorString = '#' + hex;\n};\n\n/**\n * This will return the point containing global coordinates of the mouse.\n *\n * @method getMousePosition\n * @return {Point} A point containing the coordinates of the global InteractionData position.\n */\nPIXI.Stage.prototype.getMousePosition = function()\n{\n    return this.interactionManager.mouse.global;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n \n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n// requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\n\n// MIT license\n\n/**\n * A polyfill for requestAnimationFrame\n * You can actually use both requestAnimationFrame and requestAnimFrame, \n * you will still benefit from the polyfill\n *\n * @method requestAnimationFrame\n */\n\n/**\n * A polyfill for cancelAnimationFrame\n *\n * @method cancelAnimationFrame\n */\n(function(window) {\n    var lastTime = 0;\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] ||\n            window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = function(callback) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n              timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n    }\n\n    if (!window.cancelAnimationFrame) {\n        window.cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n    }\n\n    window.requestAnimFrame = window.requestAnimationFrame;\n})(this);\n\n/**\n * Converts a hex color number to an [R, G, B] array\n *\n * @method hex2rgb\n * @param hex {Number}\n */\nPIXI.hex2rgb = function(hex) {\n    return [(hex >> 16 & 0xFF) / 255, ( hex >> 8 & 0xFF) / 255, (hex & 0xFF)/ 255];\n};\n\n/**\n * Converts a color as an [R, G, B] array to a hex number\n *\n * @method rgb2hex\n * @param rgb {Array}\n */\nPIXI.rgb2hex = function(rgb) {\n    return ((rgb[0]*255 << 16) + (rgb[1]*255 << 8) + rgb[2]*255);\n};\n\n/**\n * A polyfill for Function.prototype.bind\n *\n * @method bind\n */\nif (typeof Function.prototype.bind !== 'function') {\n    Function.prototype.bind = (function () {\n        return function (thisArg) {\n            var target = this, i = arguments.length - 1, boundArgs = [];\n            if (i > 0)\n            {\n                boundArgs.length = i;\n                while (i--) boundArgs[i] = arguments[i + 1];\n            }\n\n            if (typeof target !== 'function') throw new TypeError();\n\n            function bound() {\n                var i = arguments.length, args = new Array(i);\n                while (i--) args[i] = arguments[i];\n                args = boundArgs.concat(args);\n                return target.apply(this instanceof bound ? this : thisArg, args);\n            }\n\n            bound.prototype = (function F(proto) {\n                if (proto) F.prototype = proto;\n                if (!(this instanceof F)) return new F();\n            })(target.prototype);\n\n            return bound;\n        };\n    })();\n}\n\n/**\n * A wrapper for ajax requests to be handled cross browser\n *\n * @class AjaxRequest\n * @constructor\n */\nPIXI.AjaxRequest = function()\n{\n    var activexmodes = ['Msxml2.XMLHTTP.6.0', 'Msxml2.XMLHTTP.3.0', 'Microsoft.XMLHTTP']; //activeX versions to check for in IE\n\n    if (window.ActiveXObject)\n    { //Test for support for ActiveXObject in IE first (as XMLHttpRequest in IE7 is broken)\n        for (var i=0; i<activexmodes.length; i++)\n        {\n            try{\n                return new window.ActiveXObject(activexmodes[i]);\n            }\n            catch(e) {\n                //suppress error\n            }\n        }\n    }\n    else if (window.XMLHttpRequest) // if Mozilla, Safari etc\n    {\n        return new window.XMLHttpRequest();\n    }\n    else\n    {\n        return false;\n    }\n};\n/*\nPIXI.packColorRGBA = function(r, g, b, a)//r, g, b, a)\n{\n  //  console.log(r, b, c, d)\n  return (Math.floor((r)*63) << 18) | (Math.floor((g)*63) << 12) | (Math.floor((b)*63) << 6);// | (Math.floor((a)*63))\n  //  i = i | (Math.floor((a)*63));\n   // return i;\n   // var r = (i / 262144.0 ) / 64;\n   // var g = (i / 4096.0)%64 / 64;\n  //  var b = (i / 64.0)%64 / 64;\n  //  var a = (i)%64 / 64;\n     \n  //  console.log(r, g, b, a);\n  //  return i;\n\n};\n*/\n/*\nPIXI.packColorRGB = function(r, g, b)//r, g, b, a)\n{\n    return (Math.floor((r)*255) << 16) | (Math.floor((g)*255) << 8) | (Math.floor((b)*255));\n};\n\nPIXI.unpackColorRGB = function(r, g, b)//r, g, b, a)\n{\n    return (Math.floor((r)*255) << 16) | (Math.floor((g)*255) << 8) | (Math.floor((b)*255));\n};\n*/\n\n/**\n * Checks whether the Canvas BlendModes are supported by the current browser\n *\n * @method canUseNewCanvasBlendModes\n * @return {Boolean} whether they are supported\n */\nPIXI.canUseNewCanvasBlendModes = function()\n{\n    if (typeof document === 'undefined') return false;\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    var context = canvas.getContext('2d');\n    context.fillStyle = '#000';\n    context.fillRect(0,0,1,1);\n    context.globalCompositeOperation = 'multiply';\n    context.fillStyle = '#fff';\n    context.fillRect(0,0,1,1);\n    return context.getImageData(0,0,1,1).data[0] === 0;\n};\n\n/**\n * Given a number, this function returns the closest number that is a power of two\n * this function is taken from Starling Framework as its pretty neat ;)\n *\n * @method getNextPowerOfTwo\n * @param number {Number}\n * @return {Number} the closest number that is a power of two\n */\nPIXI.getNextPowerOfTwo = function(number)\n{\n    if (number > 0 && (number & (number - 1)) === 0) // see: http://goo.gl/D9kPj\n        return number;\n    else\n    {\n        var result = 1;\n        while (result < number) result <<= 1;\n        return result;\n    }\n};\n\n/**\n * checks if the given width and height make a power of two texture\n * @method isPowerOfTwo\n * @param width {Number}\n * @param height {Number}\n * @return {Boolean} \n */\nPIXI.isPowerOfTwo = function(width, height)\n{\n    return (width > 0 && (width & (width - 1)) === 0 && height > 0 && (height & (height - 1)) === 0);\n\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n * @author Chad Engler https://github.com/englercj @Rolnaaba\n */\n\n/**\n * Originally based on https://github.com/mrdoob/eventtarget.js/ from mr Doob.\n * Currently takes inspiration from the nodejs EventEmitter, EventEmitter3, and smokesignals\n */\n\n/**\n * Mixins event emitter functionality to a class\n *\n * @class EventTarget\n * @example\n *      function MyEmitter() {}\n *\n *      PIXI.EventTarget.mixin(MyEmitter.prototype);\n *\n *      var em = new MyEmitter();\n *      em.emit('eventName', 'some data', 'some more data', {}, null, ...);\n */\nPIXI.EventTarget = {\n    /**\n     * Backward compat from when this used to be a function\n     */\n    call: function callCompat(obj) {\n        if(obj) {\n            obj = obj.prototype || obj;\n            PIXI.EventTarget.mixin(obj);\n        }\n    },\n\n    /**\n     * Mixes in the properties of the EventTarget prototype onto another object\n     *\n     * @method mixin\n     * @param object {Object} The obj to mix into\n     */\n    mixin: function mixin(obj) {\n        /**\n         * Return a list of assigned event listeners.\n         *\n         * @method listeners\n         * @param eventName {String} The events that should be listed.\n         * @return {Array} An array of listener functions\n         */\n        obj.listeners = function listeners(eventName) {\n            this._listeners = this._listeners || {};\n\n            return this._listeners[eventName] ? this._listeners[eventName].slice() : [];\n        };\n\n        /**\n         * Emit an event to all registered event listeners.\n         *\n         * @method emit\n         * @alias dispatchEvent\n         * @param eventName {String} The name of the event.\n         * @return {Boolean} Indication if we've emitted an event.\n         */\n        obj.emit = obj.dispatchEvent = function emit(eventName, data) {\n            this._listeners = this._listeners || {};\n\n            //backwards compat with old method \".emit({ type: 'something' })\"\n            if(typeof eventName === 'object') {\n                data = eventName;\n                eventName = eventName.type;\n            }\n\n            //ensure we are using a real pixi event\n            if(!data || data.__isEventObject !== true) {\n                data = new PIXI.Event(this, eventName, data);\n            }\n\n            //iterate the listeners\n            if(this._listeners && this._listeners[eventName]) {\n                var listeners = this._listeners[eventName].slice(0),\n                    length = listeners.length,\n                    fn = listeners[0],\n                    i;\n\n                for(i = 0; i < length; fn = listeners[++i]) {\n                    //call the event listener\n                    fn.call(this, data);\n\n                    //if \"stopImmediatePropagation\" is called, stop calling sibling events\n                    if(data.stoppedImmediate) {\n                        return this;\n                    }\n                }\n\n                //if \"stopPropagation\" is called then don't bubble the event\n                if(data.stopped) {\n                    return this;\n                }\n            }\n\n            //bubble this event up the scene graph\n            if(this.parent && this.parent.emit) {\n                this.parent.emit.call(this.parent, eventName, data);\n            }\n\n            return this;\n        };\n\n        /**\n         * Register a new EventListener for the given event.\n         *\n         * @method on\n         * @alias addEventListener\n         * @param eventName {String} Name of the event.\n         * @param callback {Functon} fn Callback function.\n         */\n        obj.on = obj.addEventListener = function on(eventName, fn) {\n            this._listeners = this._listeners || {};\n\n            (this._listeners[eventName] = this._listeners[eventName] || [])\n                .push(fn);\n\n            return this;\n        };\n\n        /**\n         * Add an EventListener that's only called once.\n         *\n         * @method once\n         * @param eventName {String} Name of the event.\n         * @param callback {Function} Callback function.\n         */\n        obj.once = function once(eventName, fn) {\n            this._listeners = this._listeners || {};\n\n            var self = this;\n            function onceHandlerWrapper() {\n                fn.apply(self.off(eventName, onceHandlerWrapper), arguments);\n            }\n            onceHandlerWrapper._originalHandler = fn;\n\n            return this.on(eventName, onceHandlerWrapper);\n        };\n\n        /**\n         * Remove event listeners.\n         *\n         * @method off\n         * @alias removeEventListener\n         * @param eventName {String} The event we want to remove.\n         * @param callback {Function} The listener that we need to find.\n         */\n        obj.off = obj.removeEventListener = function off(eventName, fn) {\n            this._listeners = this._listeners || {};\n\n            if(!this._listeners[eventName])\n                return this;\n\n            var list = this._listeners[eventName],\n                i = fn ? list.length : 0;\n\n            while(i-- > 0) {\n                if(list[i] === fn || list[i]._originalHandler === fn) {\n                    list.splice(i, 1);\n                }\n            }\n\n            if(list.length === 0) {\n                delete this._listeners[eventName];\n            }\n\n            return this;\n        };\n\n        /**\n         * Remove all listeners or only the listeners for the specified event.\n         *\n         * @method removeAllListeners\n         * @param eventName {String} The event you want to remove all listeners for.\n         */\n        obj.removeAllListeners = function removeAllListeners(eventName) {\n            this._listeners = this._listeners || {};\n\n            if(!this._listeners[eventName])\n                return this;\n\n            delete this._listeners[eventName];\n\n            return this;\n        };\n    }\n};\n\n/**\n * Creates an homogenous object for tracking events so users can know what to expect.\n *\n * @class Event\n * @extends Object\n * @constructor\n * @param target {Object} The target object that the event is called on\n * @param name {String} The string name of the event that was triggered\n * @param data {Object} Arbitrary event data to pass along\n */\nPIXI.Event = function(target, name, data) {\n    //for duck typing in the \".on()\" function\n    this.__isEventObject = true;\n\n    /**\n     * Tracks the state of bubbling propagation. Do not\n     * set this directly, instead use `event.stopPropagation()`\n     *\n     * @property stopped\n     * @type Boolean\n     * @private\n     * @readOnly\n     */\n    this.stopped = false;\n\n    /**\n     * Tracks the state of sibling listener propagation. Do not\n     * set this directly, instead use `event.stopImmediatePropagation()`\n     *\n     * @property stoppedImmediate\n     * @type Boolean\n     * @private\n     * @readOnly\n     */\n    this.stoppedImmediate = false;\n\n    /**\n     * The original target the event triggered on.\n     *\n     * @property target\n     * @type Object\n     * @readOnly\n     */\n    this.target = target;\n\n    /**\n     * The string name of the event that this represents.\n     *\n     * @property type\n     * @type String\n     * @readOnly\n     */\n    this.type = name;\n\n    /**\n     * The data that was passed in with this event.\n     *\n     * @property data\n     * @type Object\n     * @readOnly\n     */\n    this.data = data;\n\n    //backwards compat with older version of events\n    this.content = data;\n\n    /**\n     * The timestamp when the event occurred.\n     *\n     * @property timeStamp\n     * @type Number\n     * @readOnly\n     */\n    this.timeStamp = Date.now();\n};\n\n/**\n * Stops the propagation of events up the scene graph (prevents bubbling).\n *\n * @method stopPropagation\n */\nPIXI.Event.prototype.stopPropagation = function stopPropagation() {\n    this.stopped = true;\n};\n\n/**\n * Stops the propagation of events to sibling listeners (no longer calls any listeners).\n *\n * @method stopImmediatePropagation\n */\nPIXI.Event.prototype.stopImmediatePropagation = function stopImmediatePropagation() {\n    this.stoppedImmediate = true;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * This helper function will automatically detect which renderer you should be using.\n * WebGL is the preferred renderer as it is a lot faster. If webGL is not supported by\n * the browser then this function will return a canvas renderer\n *\n * @method autoDetectRenderer\n * @for PIXI\n * @static\n * @param width=800 {Number} the width of the renderers view\n * @param height=600 {Number} the height of the renderers view\n * \n * @param [options] {Object} The optional renderer parameters\n * @param [options.view] {HTMLCanvasElement} the canvas to use as a view, optional\n * @param [options.transparent=false] {Boolean} If the render view is transparent, default false\n * @param [options.antialias=false] {Boolean} sets antialias (only applicable in chrome at the moment)\n * @param [options.preserveDrawingBuffer=false] {Boolean} enables drawing buffer preservation, enable this if you need to call toDataUrl on the webgl context\n * @param [options.resolution=1] {Number} the resolution of the renderer retina would be 2\n * \n */\nPIXI.autoDetectRenderer = function(width, height, options)\n{\n    if(!width)width = 800;\n    if(!height)height = 600;\n\n    // BORROWED from Mr Doob (mrdoob.com)\n    var webgl = ( function () { try {\n                                    var canvas = document.createElement( 'canvas' );\n                                    return !! window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) );\n                                } catch( e ) {\n                                    return false;\n                                }\n                            } )();\n\n    if( webgl )\n    {\n        return new PIXI.WebGLRenderer(width, height, options);\n    }\n\n    return  new PIXI.CanvasRenderer(width, height, options);\n};\n\n/**\n * This helper function will automatically detect which renderer you should be using.\n * This function is very similar to the autoDetectRenderer function except that is will return a canvas renderer for android.\n * Even thought both android chrome supports webGL the canvas implementation perform better at the time of writing. \n * This function will likely change and update as webGL performance improves on these devices.\n * \n * @method autoDetectRecommendedRenderer\n * @for PIXI\n * @static\n * @param width=800 {Number} the width of the renderers view\n * @param height=600 {Number} the height of the renderers view\n * \n * @param [options] {Object} The optional renderer parameters\n * @param [options.view] {HTMLCanvasElement} the canvas to use as a view, optional\n * @param [options.transparent=false] {Boolean} If the render view is transparent, default false\n * @param [options.antialias=false] {Boolean} sets antialias (only applicable in chrome at the moment)\n * @param [options.preserveDrawingBuffer=false] {Boolean} enables drawing buffer preservation, enable this if you need to call toDataUrl on the webgl context\n * @param [options.resolution=1] {Number} the resolution of the renderer retina would be 2\n * \n */\nPIXI.autoDetectRecommendedRenderer = function(width, height, options)\n{\n    if(!width)width = 800;\n    if(!height)height = 600;\n\n    // BORROWED from Mr Doob (mrdoob.com)\n    var webgl = ( function () { try {\n                                    var canvas = document.createElement( 'canvas' );\n                                    return !! window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) );\n                                } catch( e ) {\n                                    return false;\n                                }\n                            } )();\n\n    var isAndroid = /Android/i.test(navigator.userAgent);\n\n    if( webgl && !isAndroid)\n    {\n        return new PIXI.WebGLRenderer(width, height, options);\n    }\n\n    return  new PIXI.CanvasRenderer(width, height, options);\n};\n\r\n/*\n    PolyK library\n    url: http://polyk.ivank.net\n    Released under MIT licence.\n\n    Copyright (c) 2012 Ivan Kuckir\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without\n    restriction, including without limitation the rights to use,\n    copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following\n    conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n\n    This is an amazing lib!\n\n    Slightly modified by Mat Groves (matgroves.com);\n*/\n\n/**\n * Based on the Polyk library http://polyk.ivank.net released under MIT licence.\n * This is an amazing lib!\n * Slightly modified by Mat Groves (matgroves.com);\n * @class PolyK\n */\nPIXI.PolyK = {};\n\n/**\n * Triangulates shapes for webGL graphic fills.\n *\n * @method Triangulate\n */\nPIXI.PolyK.Triangulate = function(p)\n{\n    var sign = true;\n\n    var n = p.length >> 1;\n    if(n < 3) return [];\n\n    var tgs = [];\n    var avl = [];\n    for(var i = 0; i < n; i++) avl.push(i);\n\n    i = 0;\n    var al = n;\n    while(al > 3)\n    {\n        var i0 = avl[(i+0)%al];\n        var i1 = avl[(i+1)%al];\n        var i2 = avl[(i+2)%al];\n\n        var ax = p[2*i0],  ay = p[2*i0+1];\n        var bx = p[2*i1],  by = p[2*i1+1];\n        var cx = p[2*i2],  cy = p[2*i2+1];\n\n        var earFound = false;\n        if(PIXI.PolyK._convex(ax, ay, bx, by, cx, cy, sign))\n        {\n            earFound = true;\n            for(var j = 0; j < al; j++)\n            {\n                var vi = avl[j];\n                if(vi === i0 || vi === i1 || vi === i2) continue;\n\n                if(PIXI.PolyK._PointInTriangle(p[2*vi], p[2*vi+1], ax, ay, bx, by, cx, cy)) {\n                    earFound = false;\n                    break;\n                }\n            }\n        }\n\n        if(earFound)\n        {\n            tgs.push(i0, i1, i2);\n            avl.splice((i+1)%al, 1);\n            al--;\n            i = 0;\n        }\n        else if(i++ > 3*al)\n        {\n            // need to flip flip reverse it!\n            // reset!\n            if(sign)\n            {\n                tgs = [];\n                avl = [];\n                for(i = 0; i < n; i++) avl.push(i);\n\n                i = 0;\n                al = n;\n\n                sign = false;\n            }\n            else\n            {\n             //   window.console.log(\"PIXI Warning: shape too complex to fill\");\n                return null;\n            }\n        }\n    }\n\n    tgs.push(avl[0], avl[1], avl[2]);\n    return tgs;\n};\n\n/**\n * Checks whether a point is within a triangle\n *\n * @method _PointInTriangle\n * @param px {Number} x coordinate of the point to test\n * @param py {Number} y coordinate of the point to test\n * @param ax {Number} x coordinate of the a point of the triangle\n * @param ay {Number} y coordinate of the a point of the triangle\n * @param bx {Number} x coordinate of the b point of the triangle\n * @param by {Number} y coordinate of the b point of the triangle\n * @param cx {Number} x coordinate of the c point of the triangle\n * @param cy {Number} y coordinate of the c point of the triangle\n * @private\n * @return {Boolean}\n */\nPIXI.PolyK._PointInTriangle = function(px, py, ax, ay, bx, by, cx, cy)\n{\n    var v0x = cx-ax;\n    var v0y = cy-ay;\n    var v1x = bx-ax;\n    var v1y = by-ay;\n    var v2x = px-ax;\n    var v2y = py-ay;\n\n    var dot00 = v0x*v0x+v0y*v0y;\n    var dot01 = v0x*v1x+v0y*v1y;\n    var dot02 = v0x*v2x+v0y*v2y;\n    var dot11 = v1x*v1x+v1y*v1y;\n    var dot12 = v1x*v2x+v1y*v2y;\n\n    var invDenom = 1 / (dot00 * dot11 - dot01 * dot01);\n    var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n    var v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n\n    // Check if point is in triangle\n    return (u >= 0) && (v >= 0) && (u + v < 1);\n};\n\n/**\n * Checks whether a shape is convex\n *\n * @method _convex\n * @private\n * @return {Boolean}\n */\nPIXI.PolyK._convex = function(ax, ay, bx, by, cx, cy, sign)\n{\n    return ((ay-by)*(cx-bx) + (bx-ax)*(cy-by) >= 0) === sign;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n* @method initDefaultShaders\n* @static\n* @private\n*/\nPIXI.initDefaultShaders = function()\n{\n};\n\n/**\n* @method CompileVertexShader\n* @static\n* @param gl {WebGLContext} the current WebGL drawing context\n* @param shaderSrc {Array}\n* @return {Any}\n*/\nPIXI.CompileVertexShader = function(gl, shaderSrc)\n{\n    return PIXI._CompileShader(gl, shaderSrc, gl.VERTEX_SHADER);\n};\n\n/**\n* @method CompileFragmentShader\n* @static\n* @param gl {WebGLContext} the current WebGL drawing context\n* @param shaderSrc {Array}\n* @return {Any}\n*/\nPIXI.CompileFragmentShader = function(gl, shaderSrc)\n{\n    return PIXI._CompileShader(gl, shaderSrc, gl.FRAGMENT_SHADER);\n};\n\n/**\n* @method _CompileShader\n* @static\n* @private\n* @param gl {WebGLContext} the current WebGL drawing context\n* @param shaderSrc {Array}\n* @param shaderType {Number}\n* @return {Any}\n*/\nPIXI._CompileShader = function(gl, shaderSrc, shaderType)\n{\n    var src = shaderSrc.join(\"\\n\");\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n    {\n        window.console.log(gl.getShaderInfoLog(shader));\n        return null;\n    }\n\n    return shader;\n};\n\n/**\n* @method compileProgram\n* @static\n* @param gl {WebGLContext} the current WebGL drawing context\n* @param vertexSrc {Array}\n* @param fragmentSrc {Array}\n* @return {Any}\n*/\nPIXI.compileProgram = function(gl, vertexSrc, fragmentSrc)\n{\n    var fragmentShader = PIXI.CompileFragmentShader(gl, fragmentSrc);\n    var vertexShader = PIXI.CompileVertexShader(gl, vertexSrc);\n\n    var shaderProgram = gl.createProgram();\n\n    gl.attachShader(shaderProgram, vertexShader);\n    gl.attachShader(shaderProgram, fragmentShader);\n    gl.linkProgram(shaderProgram);\n\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS))\n    {\n        window.console.log(\"Could not initialise shaders\");\n    }\n\n    return shaderProgram;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n * @author Richard Davey http://www.photonstorm.com @photonstorm\n */\n\n/**\n* @class PixiShader\n* @constructor\n* @param gl {WebGLContext} the current WebGL drawing context\n*/\nPIXI.PixiShader = function(gl)\n{\n    /**\n     * @property _UID\n     * @type Number\n     * @private\n     */\n    this._UID = PIXI._UID++;\n\n    /**\n     * @property gl\n     * @type WebGLContext\n     */\n    this.gl = gl;\n\n    /**\n     * The WebGL program.\n     * @property program\n     * @type Any\n     */\n    this.program = null;\n\n    /**\n     * The fragment shader.\n     * @property fragmentSrc\n     * @type Array\n     */\n    this.fragmentSrc = [\n        'precision lowp float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform sampler2D uSampler;',\n        'void main(void) {',\n        '   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;',\n        '}'\n    ];\n\n    /**\n     * A local texture counter for multi-texture shaders.\n     * @property textureCount\n     * @type Number\n     */\n    this.textureCount = 0;\n\n    /**\n     * A local flag\n     * @property firstRun\n     * @type Boolean\n     * @private\n     */\n    this.firstRun = true;\n\n    /**\n     * A dirty flag\n     * @property dirty\n     * @type Boolean\n     */\n    this.dirty = true;\n\n    /**\n     * Uniform attributes cache.\n     * @property attributes\n     * @type Array\n     * @private\n     */\n    this.attributes = [];\n\n    this.init();\n};\n\nPIXI.PixiShader.prototype.constructor = PIXI.PixiShader;\n\n/**\n* Initialises the shader.\n*\n* @method init\n*/\nPIXI.PixiShader.prototype.init = function()\n{\n    var gl = this.gl;\n\n    var program = PIXI.compileProgram(gl, this.vertexSrc || PIXI.PixiShader.defaultVertexSrc, this.fragmentSrc);\n\n    gl.useProgram(program);\n\n    // get and store the uniforms for the shader\n    this.uSampler = gl.getUniformLocation(program, 'uSampler');\n    this.projectionVector = gl.getUniformLocation(program, 'projectionVector');\n    this.offsetVector = gl.getUniformLocation(program, 'offsetVector');\n    this.dimensions = gl.getUniformLocation(program, 'dimensions');\n\n    // get and store the attributes\n    this.aVertexPosition = gl.getAttribLocation(program, 'aVertexPosition');\n    this.aTextureCoord = gl.getAttribLocation(program, 'aTextureCoord');\n    this.colorAttribute = gl.getAttribLocation(program, 'aColor');\n\n    // Begin worst hack eva //\n\n    // WHY??? ONLY on my chrome pixel the line above returns -1 when using filters?\n    // maybe its something to do with the current state of the gl context.\n    // I'm convinced this is a bug in the chrome browser as there is NO reason why this should be returning -1 especially as it only manifests on my chrome pixel\n    // If theres any webGL people that know why could happen please help :)\n    if(this.colorAttribute === -1)\n    {\n        this.colorAttribute = 2;\n    }\n\n    this.attributes = [this.aVertexPosition, this.aTextureCoord, this.colorAttribute];\n\n    // End worst hack eva //\n\n    // add those custom shaders!\n    for (var key in this.uniforms)\n    {\n        // get the uniform locations..\n        this.uniforms[key].uniformLocation = gl.getUniformLocation(program, key);\n    }\n\n    this.initUniforms();\n\n    this.program = program;\n};\n\n/**\n* Initialises the shader uniform values.\n*\n* Uniforms are specified in the GLSL_ES Specification: http://www.khronos.org/registry/webgl/specs/latest/1.0/\n* http://www.khronos.org/registry/gles/specs/2.0/GLSL_ES_Specification_1.0.17.pdf\n*\n* @method initUniforms\n*/\nPIXI.PixiShader.prototype.initUniforms = function()\n{\n    this.textureCount = 1;\n    var gl = this.gl;\n    var uniform;\n\n    for (var key in this.uniforms)\n    {\n        uniform = this.uniforms[key];\n\n        var type = uniform.type;\n\n        if (type === 'sampler2D')\n        {\n            uniform._init = false;\n\n            if (uniform.value !== null)\n            {\n                this.initSampler2D(uniform);\n            }\n        }\n        else if (type === 'mat2' || type === 'mat3' || type === 'mat4')\n        {\n            //  These require special handling\n            uniform.glMatrix = true;\n            uniform.glValueLength = 1;\n\n            if (type === 'mat2')\n            {\n                uniform.glFunc = gl.uniformMatrix2fv;\n            }\n            else if (type === 'mat3')\n            {\n                uniform.glFunc = gl.uniformMatrix3fv;\n            }\n            else if (type === 'mat4')\n            {\n                uniform.glFunc = gl.uniformMatrix4fv;\n            }\n        }\n        else\n        {\n            //  GL function reference\n            uniform.glFunc = gl['uniform' + type];\n\n            if (type === '2f' || type === '2i')\n            {\n                uniform.glValueLength = 2;\n            }\n            else if (type === '3f' || type === '3i')\n            {\n                uniform.glValueLength = 3;\n            }\n            else if (type === '4f' || type === '4i')\n            {\n                uniform.glValueLength = 4;\n            }\n            else\n            {\n                uniform.glValueLength = 1;\n            }\n        }\n    }\n\n};\n\n/**\n* Initialises a Sampler2D uniform (which may only be available later on after initUniforms once the texture has loaded)\n*\n* @method initSampler2D\n*/\nPIXI.PixiShader.prototype.initSampler2D = function(uniform)\n{\n    if (!uniform.value || !uniform.value.baseTexture || !uniform.value.baseTexture.hasLoaded)\n    {\n        return;\n    }\n\n    var gl = this.gl;\n\n    gl.activeTexture(gl['TEXTURE' + this.textureCount]);\n    gl.bindTexture(gl.TEXTURE_2D, uniform.value.baseTexture._glTextures[gl.id]);\n\n    //  Extended texture data\n    if (uniform.textureData)\n    {\n        var data = uniform.textureData;\n\n        // GLTexture = mag linear, min linear_mipmap_linear, wrap repeat + gl.generateMipmap(gl.TEXTURE_2D);\n        // GLTextureLinear = mag/min linear, wrap clamp\n        // GLTextureNearestRepeat = mag/min NEAREST, wrap repeat\n        // GLTextureNearest = mag/min nearest, wrap clamp\n        // AudioTexture = whatever + luminance + width 512, height 2, border 0\n        // KeyTexture = whatever + luminance + width 256, height 2, border 0\n\n        //  magFilter can be: gl.LINEAR, gl.LINEAR_MIPMAP_LINEAR or gl.NEAREST\n        //  wrapS/T can be: gl.CLAMP_TO_EDGE or gl.REPEAT\n\n        var magFilter = (data.magFilter) ? data.magFilter : gl.LINEAR;\n        var minFilter = (data.minFilter) ? data.minFilter : gl.LINEAR;\n        var wrapS = (data.wrapS) ? data.wrapS : gl.CLAMP_TO_EDGE;\n        var wrapT = (data.wrapT) ? data.wrapT : gl.CLAMP_TO_EDGE;\n        var format = (data.luminance) ? gl.LUMINANCE : gl.RGBA;\n\n        if (data.repeat)\n        {\n            wrapS = gl.REPEAT;\n            wrapT = gl.REPEAT;\n        }\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, !!data.flipY);\n\n        if (data.width)\n        {\n            var width = (data.width) ? data.width : 512;\n            var height = (data.height) ? data.height : 2;\n            var border = (data.border) ? data.border : 0;\n\n            // void texImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, ArrayBufferView? pixels);\n            gl.texImage2D(gl.TEXTURE_2D, 0, format, width, height, border, format, gl.UNSIGNED_BYTE, null);\n        }\n        else\n        {\n            //  void texImage2D(GLenum target, GLint level, GLenum internalformat, GLenum format, GLenum type, ImageData? pixels);\n            gl.texImage2D(gl.TEXTURE_2D, 0, format, gl.RGBA, gl.UNSIGNED_BYTE, uniform.value.baseTexture.source);\n        }\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n    }\n\n    gl.uniform1i(uniform.uniformLocation, this.textureCount);\n\n    uniform._init = true;\n\n    this.textureCount++;\n\n};\n\n/**\n* Updates the shader uniform values.\n*\n* @method syncUniforms\n*/\nPIXI.PixiShader.prototype.syncUniforms = function()\n{\n    this.textureCount = 1;\n    var uniform;\n    var gl = this.gl;\n\n    //  This would probably be faster in an array and it would guarantee key order\n    for (var key in this.uniforms)\n    {\n        uniform = this.uniforms[key];\n\n        if (uniform.glValueLength === 1)\n        {\n            if (uniform.glMatrix === true)\n            {\n                uniform.glFunc.call(gl, uniform.uniformLocation, uniform.transpose, uniform.value);\n            }\n            else\n            {\n                uniform.glFunc.call(gl, uniform.uniformLocation, uniform.value);\n            }\n        }\n        else if (uniform.glValueLength === 2)\n        {\n            uniform.glFunc.call(gl, uniform.uniformLocation, uniform.value.x, uniform.value.y);\n        }\n        else if (uniform.glValueLength === 3)\n        {\n            uniform.glFunc.call(gl, uniform.uniformLocation, uniform.value.x, uniform.value.y, uniform.value.z);\n        }\n        else if (uniform.glValueLength === 4)\n        {\n            uniform.glFunc.call(gl, uniform.uniformLocation, uniform.value.x, uniform.value.y, uniform.value.z, uniform.value.w);\n        }\n        else if (uniform.type === 'sampler2D')\n        {\n            if (uniform._init)\n            {\n                gl.activeTexture(gl['TEXTURE' + this.textureCount]);\n\n                if(uniform.value.baseTexture._dirty[gl.id])\n                {\n                    PIXI.instances[gl.id].updateTexture(uniform.value.baseTexture);\n                }\n                else\n                {\n                    // bind the current texture\n                    gl.bindTexture(gl.TEXTURE_2D, uniform.value.baseTexture._glTextures[gl.id]);\n                }\n\n             //   gl.bindTexture(gl.TEXTURE_2D, uniform.value.baseTexture._glTextures[gl.id] || PIXI.createWebGLTexture( uniform.value.baseTexture, gl));\n                gl.uniform1i(uniform.uniformLocation, this.textureCount);\n                this.textureCount++;\n            }\n            else\n            {\n                this.initSampler2D(uniform);\n            }\n        }\n    }\n\n};\n\n/**\n* Destroys the shader.\n*\n* @method destroy\n*/\nPIXI.PixiShader.prototype.destroy = function()\n{\n    this.gl.deleteProgram( this.program );\n    this.uniforms = null;\n    this.gl = null;\n\n    this.attributes = null;\n};\n\n/**\n* The Default Vertex shader source.\n*\n* @property defaultVertexSrc\n* @type String\n*/\nPIXI.PixiShader.defaultVertexSrc = [\n    'attribute vec2 aVertexPosition;',\n    'attribute vec2 aTextureCoord;',\n    'attribute vec4 aColor;',\n\n    'uniform vec2 projectionVector;',\n    'uniform vec2 offsetVector;',\n\n    'varying vec2 vTextureCoord;',\n    'varying vec4 vColor;',\n\n    'const vec2 center = vec2(-1.0, 1.0);',\n\n    'void main(void) {',\n    '   gl_Position = vec4( ((aVertexPosition + offsetVector) / projectionVector) + center , 0.0, 1.0);',\n    '   vTextureCoord = aTextureCoord;',\n    '   vColor = vec4(aColor.rgb * aColor.a, aColor.a);',\n    '}'\n];\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n* @class PixiFastShader\n* @constructor\n* @param gl {WebGLContext} the current WebGL drawing context\n*/\nPIXI.PixiFastShader = function(gl)\n{\n    /**\n     * @property _UID\n     * @type Number\n     * @private\n     */\n    this._UID = PIXI._UID++;\n    \n    /**\n     * @property gl\n     * @type WebGLContext\n     */\n    this.gl = gl;\n\n    /**\n     * The WebGL program.\n     * @property program\n     * @type Any\n     */\n    this.program = null;\n\n    /**\n     * The fragment shader.\n     * @property fragmentSrc\n     * @type Array\n     */\n    this.fragmentSrc = [\n        'precision lowp float;',\n        'varying vec2 vTextureCoord;',\n        'varying float vColor;',\n        'uniform sampler2D uSampler;',\n        'void main(void) {',\n        '   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;',\n        '}'\n    ];\n\n    /**\n     * The vertex shader.\n     * @property vertexSrc\n     * @type Array\n     */\n    this.vertexSrc = [\n        'attribute vec2 aVertexPosition;',\n        'attribute vec2 aPositionCoord;',\n        'attribute vec2 aScale;',\n        'attribute float aRotation;',\n        'attribute vec2 aTextureCoord;',\n        'attribute float aColor;',\n\n        'uniform vec2 projectionVector;',\n        'uniform vec2 offsetVector;',\n        'uniform mat3 uMatrix;',\n\n        'varying vec2 vTextureCoord;',\n        'varying float vColor;',\n\n        'const vec2 center = vec2(-1.0, 1.0);',\n\n        'void main(void) {',\n        '   vec2 v;',\n        '   vec2 sv = aVertexPosition * aScale;',\n        '   v.x = (sv.x) * cos(aRotation) - (sv.y) * sin(aRotation);',\n        '   v.y = (sv.x) * sin(aRotation) + (sv.y) * cos(aRotation);',\n        '   v = ( uMatrix * vec3(v + aPositionCoord , 1.0) ).xy ;',\n        '   gl_Position = vec4( ( v / projectionVector) + center , 0.0, 1.0);',\n        '   vTextureCoord = aTextureCoord;',\n      //  '   vec3 color = mod(vec3(aColor.y/65536.0, aColor.y/256.0, aColor.y), 256.0) / 256.0;',\n        '   vColor = aColor;',\n        '}'\n    ];\n\n    /**\n     * A local texture counter for multi-texture shaders.\n     * @property textureCount\n     * @type Number\n     */\n    this.textureCount = 0;\n    \n    this.init();\n};\n\nPIXI.PixiFastShader.prototype.constructor = PIXI.PixiFastShader;\n\n/**\n* Initialises the shader.\n* \n* @method init\n*/\nPIXI.PixiFastShader.prototype.init = function()\n{\n    var gl = this.gl;\n\n    var program = PIXI.compileProgram(gl, this.vertexSrc, this.fragmentSrc);\n    \n    gl.useProgram(program);\n\n    // get and store the uniforms for the shader\n    this.uSampler = gl.getUniformLocation(program, 'uSampler');\n\n    this.projectionVector = gl.getUniformLocation(program, 'projectionVector');\n    this.offsetVector = gl.getUniformLocation(program, 'offsetVector');\n    this.dimensions = gl.getUniformLocation(program, 'dimensions');\n    this.uMatrix = gl.getUniformLocation(program, 'uMatrix');\n\n    // get and store the attributes\n    this.aVertexPosition = gl.getAttribLocation(program, 'aVertexPosition');\n    this.aPositionCoord = gl.getAttribLocation(program, 'aPositionCoord');\n\n    this.aScale = gl.getAttribLocation(program, 'aScale');\n    this.aRotation = gl.getAttribLocation(program, 'aRotation');\n\n    this.aTextureCoord = gl.getAttribLocation(program, 'aTextureCoord');\n    this.colorAttribute = gl.getAttribLocation(program, 'aColor');\n   \n    // Begin worst hack eva //\n\n    // WHY??? ONLY on my chrome pixel the line above returns -1 when using filters?\n    // maybe its somthing to do with the current state of the gl context.\n    // Im convinced this is a bug in the chrome browser as there is NO reason why this should be returning -1 especially as it only manifests on my chrome pixel\n    // If theres any webGL people that know why could happen please help :)\n    if(this.colorAttribute === -1)\n    {\n        this.colorAttribute = 2;\n    }\n\n    this.attributes = [this.aVertexPosition, this.aPositionCoord,  this.aScale, this.aRotation, this.aTextureCoord, this.colorAttribute];\n    \n    // End worst hack eva //\n\n    this.program = program;\n};\n\n/**\n* Destroys the shader.\n* \n* @method destroy\n*/\nPIXI.PixiFastShader.prototype.destroy = function()\n{\n    this.gl.deleteProgram( this.program );\n    this.uniforms = null;\n    this.gl = null;\n\n    this.attributes = null;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n* @class StripShader\n* @constructor\n* @param gl {WebGLContext} the current WebGL drawing context\n*/\nPIXI.StripShader = function(gl)\n{\n    /**\n     * @property _UID\n     * @type Number\n     * @private\n     */\n    this._UID = PIXI._UID++;\n    \n    /**\n     * @property gl\n     * @type WebGLContext\n     */\n    this.gl = gl;\n\n    /**\n     * The WebGL program.\n     * @property program\n     * @type Any\n     */\n    this.program = null;\n\n    /**\n     * The fragment shader.\n     * @property fragmentSrc\n     * @type Array\n     */\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n     //   'varying float vColor;',\n        'uniform float alpha;',\n        'uniform sampler2D uSampler;',\n\n        'void main(void) {',\n        '   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * alpha;',\n      //  '   gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);',//gl_FragColor * alpha;',\n        '}'\n    ];\n\n    /**\n     * The vertex shader.\n     * @property vertexSrc\n     * @type Array\n     */\n    this.vertexSrc  = [\n        'attribute vec2 aVertexPosition;',\n        'attribute vec2 aTextureCoord;',\n        'uniform mat3 translationMatrix;',\n        'uniform vec2 projectionVector;',\n        'uniform vec2 offsetVector;',\n      //  'uniform float alpha;',\n       // 'uniform vec3 tint;',\n        'varying vec2 vTextureCoord;',\n      //  'varying vec4 vColor;',\n\n        'void main(void) {',\n        '   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);',\n        '   v -= offsetVector.xyx;',\n        '   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);',\n        '   vTextureCoord = aTextureCoord;',\n       // '   vColor = aColor * vec4(tint * alpha, alpha);',\n        '}'\n    ];\n\n    this.init();\n};\n\nPIXI.StripShader.prototype.constructor = PIXI.StripShader;\n\n/**\n* Initialises the shader.\n* \n* @method init\n*/\nPIXI.StripShader.prototype.init = function()\n{\n    var gl = this.gl;\n\n    var program = PIXI.compileProgram(gl, this.vertexSrc, this.fragmentSrc);\n    gl.useProgram(program);\n\n    // get and store the uniforms for the shader\n    this.uSampler = gl.getUniformLocation(program, 'uSampler');\n    this.projectionVector = gl.getUniformLocation(program, 'projectionVector');\n    this.offsetVector = gl.getUniformLocation(program, 'offsetVector');\n    this.colorAttribute = gl.getAttribLocation(program, 'aColor');\n    //this.dimensions = gl.getUniformLocation(this.program, 'dimensions');\n\n    // get and store the attributes\n    this.aVertexPosition = gl.getAttribLocation(program, 'aVertexPosition');\n    this.aTextureCoord = gl.getAttribLocation(program, 'aTextureCoord');\n\n    this.attributes = [this.aVertexPosition, this.aTextureCoord];\n\n    this.translationMatrix = gl.getUniformLocation(program, 'translationMatrix');\n    this.alpha = gl.getUniformLocation(program, 'alpha');\n\n    this.program = program;\n};\n\n/**\n* Destroys the shader.\n* \n* @method destroy\n*/\nPIXI.StripShader.prototype.destroy = function()\n{\n    this.gl.deleteProgram( this.program );\n    this.uniforms = null;\n    this.gl = null;\n\n    this.attribute = null;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n* @class PrimitiveShader\n* @constructor\n* @param gl {WebGLContext} the current WebGL drawing context\n*/\nPIXI.PrimitiveShader = function(gl)\n{\n    /**\n     * @property _UID\n     * @type Number\n     * @private\n     */\n    this._UID = PIXI._UID++;\n \n    /**\n     * @property gl\n     * @type WebGLContext\n     */\n    this.gl = gl;\n\n    /**\n     * The WebGL program.\n     * @property program\n     * @type Any\n     */\n    this.program = null;\n\n    /**\n     * The fragment shader.\n     * @property fragmentSrc\n     * @type Array\n     */\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec4 vColor;',\n\n        'void main(void) {',\n        '   gl_FragColor = vColor;',\n        '}'\n    ];\n\n    /**\n     * The vertex shader.\n     * @property vertexSrc\n     * @type Array\n     */\n    this.vertexSrc  = [\n        'attribute vec2 aVertexPosition;',\n        'attribute vec4 aColor;',\n        'uniform mat3 translationMatrix;',\n        'uniform vec2 projectionVector;',\n        'uniform vec2 offsetVector;',\n        'uniform float alpha;',\n        'uniform float flipY;',\n        'uniform vec3 tint;',\n        'varying vec4 vColor;',\n\n        'void main(void) {',\n        '   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);',\n        '   v -= offsetVector.xyx;',\n        '   gl_Position = vec4( v.x / projectionVector.x -1.0, (v.y / projectionVector.y * -flipY) + flipY , 0.0, 1.0);',\n        '   vColor = aColor * vec4(tint * alpha, alpha);',\n        '}'\n    ];\n\n    this.init();\n};\n\nPIXI.PrimitiveShader.prototype.constructor = PIXI.PrimitiveShader;\n\n/**\n* Initialises the shader.\n* \n* @method init\n*/\nPIXI.PrimitiveShader.prototype.init = function()\n{\n    var gl = this.gl;\n\n    var program = PIXI.compileProgram(gl, this.vertexSrc, this.fragmentSrc);\n    gl.useProgram(program);\n\n    // get and store the uniforms for the shader\n    this.projectionVector = gl.getUniformLocation(program, 'projectionVector');\n    this.offsetVector = gl.getUniformLocation(program, 'offsetVector');\n    this.tintColor = gl.getUniformLocation(program, 'tint');\n    this.flipY = gl.getUniformLocation(program, 'flipY');\n\n    // get and store the attributes\n    this.aVertexPosition = gl.getAttribLocation(program, 'aVertexPosition');\n    this.colorAttribute = gl.getAttribLocation(program, 'aColor');\n\n    this.attributes = [this.aVertexPosition, this.colorAttribute];\n\n    this.translationMatrix = gl.getUniformLocation(program, 'translationMatrix');\n    this.alpha = gl.getUniformLocation(program, 'alpha');\n\n    this.program = program;\n};\n\n/**\n* Destroys the shader.\n* \n* @method destroy\n*/\nPIXI.PrimitiveShader.prototype.destroy = function()\n{\n    this.gl.deleteProgram( this.program );\n    this.uniforms = null;\n    this.gl = null;\n\n    this.attributes = null;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n* @class ComplexPrimitiveShader\n* @constructor\n* @param gl {WebGLContext} the current WebGL drawing context\n*/\nPIXI.ComplexPrimitiveShader = function(gl)\n{\n    /**\n     * @property _UID\n     * @type Number\n     * @private\n     */\n    this._UID = PIXI._UID++;\n\n    /**\n     * @property gl\n     * @type WebGLContext\n     */\n    this.gl = gl;\n\n    /**\n     * The WebGL program.\n     * @property program\n     * @type Any\n     */\n    this.program = null;\n\n    /**\n     * The fragment shader.\n     * @property fragmentSrc\n     * @type Array\n     */\n    this.fragmentSrc = [\n\n        'precision mediump float;',\n\n        'varying vec4 vColor;',\n\n        'void main(void) {',\n        '   gl_FragColor = vColor;',\n        '}'\n    ];\n\n    /**\n     * The vertex shader.\n     * @property vertexSrc\n     * @type Array\n     */\n    this.vertexSrc  = [\n        'attribute vec2 aVertexPosition;',\n        //'attribute vec4 aColor;',\n        'uniform mat3 translationMatrix;',\n        'uniform vec2 projectionVector;',\n        'uniform vec2 offsetVector;',\n        \n        'uniform vec3 tint;',\n        'uniform float alpha;',\n        'uniform vec3 color;',\n        'uniform float flipY;',\n        'varying vec4 vColor;',\n\n        'void main(void) {',\n        '   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);',\n        '   v -= offsetVector.xyx;',\n        '   gl_Position = vec4( v.x / projectionVector.x -1.0, (v.y / projectionVector.y * -flipY) + flipY , 0.0, 1.0);',\n        '   vColor = vec4(color * alpha * tint, alpha);',//\" * vec4(tint * alpha, alpha);',\n        '}'\n    ];\n\n    this.init();\n};\n\nPIXI.ComplexPrimitiveShader.prototype.constructor = PIXI.ComplexPrimitiveShader;\n\n/**\n* Initialises the shader.\n* \n* @method init\n*/\nPIXI.ComplexPrimitiveShader.prototype.init = function()\n{\n    var gl = this.gl;\n\n    var program = PIXI.compileProgram(gl, this.vertexSrc, this.fragmentSrc);\n    gl.useProgram(program);\n\n    // get and store the uniforms for the shader\n    this.projectionVector = gl.getUniformLocation(program, 'projectionVector');\n    this.offsetVector = gl.getUniformLocation(program, 'offsetVector');\n    this.tintColor = gl.getUniformLocation(program, 'tint');\n    this.color = gl.getUniformLocation(program, 'color');\n    this.flipY = gl.getUniformLocation(program, 'flipY');\n\n    // get and store the attributes\n    this.aVertexPosition = gl.getAttribLocation(program, 'aVertexPosition');\n   // this.colorAttribute = gl.getAttribLocation(program, 'aColor');\n\n    this.attributes = [this.aVertexPosition, this.colorAttribute];\n\n    this.translationMatrix = gl.getUniformLocation(program, 'translationMatrix');\n    this.alpha = gl.getUniformLocation(program, 'alpha');\n\n    this.program = program;\n};\n\n/**\n* Destroys the shader.\n* \n* @method destroy\n*/\nPIXI.ComplexPrimitiveShader.prototype.destroy = function()\n{\n    this.gl.deleteProgram( this.program );\n    this.uniforms = null;\n    this.gl = null;\n\n    this.attribute = null;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * A set of functions used by the webGL renderer to draw the primitive graphics data\n *\n * @class WebGLGraphics\n * @private\n * @static\n */\nPIXI.WebGLGraphics = function()\n{\n};\n\n/**\n * Renders the graphics object\n *\n * @static\n * @private\n * @method renderGraphics\n * @param graphics {Graphics}\n * @param renderSession {Object}\n */\nPIXI.WebGLGraphics.renderGraphics = function(graphics, renderSession)//projection, offset)\n{\n    var gl = renderSession.gl;\n    var projection = renderSession.projection,\n        offset = renderSession.offset,\n        shader = renderSession.shaderManager.primitiveShader,\n        webGLData;\n\n    if(graphics.dirty)\n    {\n        PIXI.WebGLGraphics.updateGraphics(graphics, gl);\n    }\n\n    var webGL = graphics._webGL[gl.id];\n\n    // This  could be speeded up for sure!\n\n    for (var i = 0; i < webGL.data.length; i++)\n    {\n        if(webGL.data[i].mode === 1)\n        {\n            webGLData = webGL.data[i];\n\n            renderSession.stencilManager.pushStencil(graphics, webGLData, renderSession);\n\n            // render quad..\n            gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_SHORT, ( webGLData.indices.length - 4 ) * 2 );\n            \n            renderSession.stencilManager.popStencil(graphics, webGLData, renderSession);\n        }\n        else\n        {\n            webGLData = webGL.data[i];\n           \n\n            renderSession.shaderManager.setShader( shader );//activatePrimitiveShader();\n            shader = renderSession.shaderManager.primitiveShader;\n            gl.uniformMatrix3fv(shader.translationMatrix, false, graphics.worldTransform.toArray(true));\n            \n            gl.uniform1f(shader.flipY, 1);\n            \n            gl.uniform2f(shader.projectionVector, projection.x, -projection.y);\n            gl.uniform2f(shader.offsetVector, -offset.x, -offset.y);\n\n            gl.uniform3fv(shader.tintColor, PIXI.hex2rgb(graphics.tint));\n\n            gl.uniform1f(shader.alpha, graphics.worldAlpha);\n            \n\n            gl.bindBuffer(gl.ARRAY_BUFFER, webGLData.buffer);\n\n            gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 6, 0);\n            gl.vertexAttribPointer(shader.colorAttribute, 4, gl.FLOAT, false,4 * 6, 2 * 4);\n\n            // set the index buffer!\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, webGLData.indexBuffer);\n            gl.drawElements(gl.TRIANGLE_STRIP,  webGLData.indices.length, gl.UNSIGNED_SHORT, 0 );\n        }\n    }\n};\n\n/**\n * Updates the graphics object\n *\n * @static\n * @private\n * @method updateGraphics\n * @param graphicsData {Graphics} The graphics object to update\n * @param gl {WebGLContext} the current WebGL drawing context\n */\nPIXI.WebGLGraphics.updateGraphics = function(graphics, gl)\n{\n    // get the contexts graphics object\n    var webGL = graphics._webGL[gl.id];\n    // if the graphics object does not exist in the webGL context time to create it!\n    if(!webGL)webGL = graphics._webGL[gl.id] = {lastIndex:0, data:[], gl:gl};\n\n    // flag the graphics as not dirty as we are about to update it...\n    graphics.dirty = false;\n\n    var i;\n\n    // if the user cleared the graphics object we will need to clear every object\n    if(graphics.clearDirty)\n    {\n        graphics.clearDirty = false;\n\n        // lop through and return all the webGLDatas to the object pool so than can be reused later on\n        for (i = 0; i < webGL.data.length; i++)\n        {\n            var graphicsData = webGL.data[i];\n            graphicsData.reset();\n            PIXI.WebGLGraphics.graphicsDataPool.push( graphicsData );\n        }\n\n        // clear the array and reset the index.. \n        webGL.data = [];\n        webGL.lastIndex = 0;\n    }\n    \n    var webGLData;\n    \n    // loop through the graphics datas and construct each one..\n    // if the object is a complex fill then the new stencil buffer technique will be used\n    // other wise graphics objects will be pushed into a batch..\n    for (i = webGL.lastIndex; i < graphics.graphicsData.length; i++)\n    {\n        var data = graphics.graphicsData[i];\n\n        if(data.type === PIXI.Graphics.POLY)\n        {\n            // need to add the points the the graphics object..\n            data.points = data.shape.points.slice();\n            if(data.shape.closed)\n            {\n                // close the poly if the value is true!\n                if(data.points[0] !== data.points[data.points.length-2] || data.points[1] !== data.points[data.points.length-1])\n                {\n                    data.points.push(data.points[0], data.points[1]);\n                }\n            }\n\n            // MAKE SURE WE HAVE THE CORRECT TYPE..\n            if(data.fill)\n            {\n                if(data.points.length >= 6)\n                {\n                    if(data.points.length < 6 * 2)\n                    {\n                        webGLData = PIXI.WebGLGraphics.switchMode(webGL, 0);\n                        \n                        var canDrawUsingSimple = PIXI.WebGLGraphics.buildPoly(data, webGLData);\n                   //     console.log(canDrawUsingSimple);\n\n                        if(!canDrawUsingSimple)\n                        {\n                        //    console.log(\"<>>>\")\n                            webGLData = PIXI.WebGLGraphics.switchMode(webGL, 1);\n                            PIXI.WebGLGraphics.buildComplexPoly(data, webGLData);\n                        }\n                        \n                    }\n                    else\n                    {\n                        webGLData = PIXI.WebGLGraphics.switchMode(webGL, 1);\n                        PIXI.WebGLGraphics.buildComplexPoly(data, webGLData);\n                    }\n                }\n            }\n\n            if(data.lineWidth > 0)\n            {\n                webGLData = PIXI.WebGLGraphics.switchMode(webGL, 0);\n                PIXI.WebGLGraphics.buildLine(data, webGLData);\n\n            }\n        }\n        else\n        {\n            webGLData = PIXI.WebGLGraphics.switchMode(webGL, 0);\n            \n            if(data.type === PIXI.Graphics.RECT)\n            {\n                PIXI.WebGLGraphics.buildRectangle(data, webGLData);\n            }\n            else if(data.type === PIXI.Graphics.CIRC || data.type === PIXI.Graphics.ELIP)\n            {\n                PIXI.WebGLGraphics.buildCircle(data, webGLData);\n            }\n            else if(data.type === PIXI.Graphics.RREC)\n            {\n                PIXI.WebGLGraphics.buildRoundedRectangle(data, webGLData);\n            }\n        }\n\n        webGL.lastIndex++;\n    }\n\n    // upload all the dirty data...\n    for (i = 0; i < webGL.data.length; i++)\n    {\n        webGLData = webGL.data[i];\n        if(webGLData.dirty)webGLData.upload();\n    }\n};\n\n/**\n * @static\n * @private\n * @method switchMode\n * @param webGL {WebGLContext}\n * @param type {Number}\n */\nPIXI.WebGLGraphics.switchMode = function(webGL, type)\n{\n    var webGLData;\n\n    if(!webGL.data.length)\n    {\n        webGLData = PIXI.WebGLGraphics.graphicsDataPool.pop() || new PIXI.WebGLGraphicsData(webGL.gl);\n        webGLData.mode = type;\n        webGL.data.push(webGLData);\n    }\n    else\n    {\n        webGLData = webGL.data[webGL.data.length-1];\n\n        if(webGLData.mode !== type || type === 1)\n        {\n            webGLData = PIXI.WebGLGraphics.graphicsDataPool.pop() || new PIXI.WebGLGraphicsData(webGL.gl);\n            webGLData.mode = type;\n            webGL.data.push(webGLData);\n        }\n    }\n\n    webGLData.dirty = true;\n\n    return webGLData;\n};\n\n/**\n * Builds a rectangle to draw\n *\n * @static\n * @private\n * @method buildRectangle\n * @param graphicsData {Graphics} The graphics object containing all the necessary properties\n * @param webGLData {Object}\n */\nPIXI.WebGLGraphics.buildRectangle = function(graphicsData, webGLData)\n{\n    // --- //\n    // need to convert points to a nice regular data\n    //\n    var rectData = graphicsData.shape;\n    var x = rectData.x;\n    var y = rectData.y;\n    var width = rectData.width;\n    var height = rectData.height;\n\n    if(graphicsData.fill)\n    {\n        var color = PIXI.hex2rgb(graphicsData.fillColor);\n        var alpha = graphicsData.fillAlpha;\n\n        var r = color[0] * alpha;\n        var g = color[1] * alpha;\n        var b = color[2] * alpha;\n\n        var verts = webGLData.points;\n        var indices = webGLData.indices;\n\n        var vertPos = verts.length/6;\n\n        // start\n        verts.push(x, y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x + width, y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x , y + height);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x + width, y + height);\n        verts.push(r, g, b, alpha);\n\n        // insert 2 dead triangles..\n        indices.push(vertPos, vertPos, vertPos+1, vertPos+2, vertPos+3, vertPos+3);\n    }\n\n    if(graphicsData.lineWidth)\n    {\n        var tempPoints = graphicsData.points;\n\n        graphicsData.points = [x, y,\n                  x + width, y,\n                  x + width, y + height,\n                  x, y + height,\n                  x, y];\n\n\n        PIXI.WebGLGraphics.buildLine(graphicsData, webGLData);\n\n        graphicsData.points = tempPoints;\n    }\n};\n\n/**\n * Builds a rounded rectangle to draw\n *\n * @static\n * @private\n * @method buildRoundedRectangle\n * @param graphicsData {Graphics} The graphics object containing all the necessary properties\n * @param webGLData {Object}\n */\nPIXI.WebGLGraphics.buildRoundedRectangle = function(graphicsData, webGLData)\n{\n    var rrectData = graphicsData.shape;\n    var x = rrectData.x;\n    var y = rrectData.y;\n    var width = rrectData.width;\n    var height = rrectData.height;\n\n    var radius = rrectData.radius;\n\n    var recPoints = [];\n    recPoints.push(x, y + radius);\n    recPoints = recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x, y + height - radius, x, y + height, x + radius, y + height));\n    recPoints = recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x + width - radius, y + height, x + width, y + height, x + width, y + height - radius));\n    recPoints = recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x + width, y + radius, x + width, y, x + width - radius, y));\n    recPoints = recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x + radius, y, x, y, x, y + radius));\n\n    if (graphicsData.fill) {\n        var color = PIXI.hex2rgb(graphicsData.fillColor);\n        var alpha = graphicsData.fillAlpha;\n\n        var r = color[0] * alpha;\n        var g = color[1] * alpha;\n        var b = color[2] * alpha;\n\n        var verts = webGLData.points;\n        var indices = webGLData.indices;\n\n        var vecPos = verts.length/6;\n\n        var triangles = PIXI.PolyK.Triangulate(recPoints);\n\n        // \n        \n        var i = 0;\n        for (i = 0; i < triangles.length; i+=3)\n        {\n            indices.push(triangles[i] + vecPos);\n            indices.push(triangles[i] + vecPos);\n            indices.push(triangles[i+1] + vecPos);\n            indices.push(triangles[i+2] + vecPos);\n            indices.push(triangles[i+2] + vecPos);\n        }\n\n\n        for (i = 0; i < recPoints.length; i++)\n        {\n            verts.push(recPoints[i], recPoints[++i], r, g, b, alpha);\n        }\n    }\n\n    if (graphicsData.lineWidth) {\n        var tempPoints = graphicsData.points;\n\n        graphicsData.points = recPoints;\n\n        PIXI.WebGLGraphics.buildLine(graphicsData, webGLData);\n\n        graphicsData.points = tempPoints;\n    }\n};\n\n/**\n * Calculate the points for a quadratic bezier curve. (helper function..)\n * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n *\n * @static\n * @private\n * @method quadraticBezierCurve\n * @param fromX {Number} Origin point x\n * @param fromY {Number} Origin point x\n * @param cpX {Number} Control point x\n * @param cpY {Number} Control point y\n * @param toX {Number} Destination point x\n * @param toY {Number} Destination point y\n * @return {Array(Number)}\n */\nPIXI.WebGLGraphics.quadraticBezierCurve = function(fromX, fromY, cpX, cpY, toX, toY) {\n\n    var xa,\n        ya,\n        xb,\n        yb,\n        x,\n        y,\n        n = 20,\n        points = [];\n\n    function getPt(n1 , n2, perc) {\n        var diff = n2 - n1;\n\n        return n1 + ( diff * perc );\n    }\n\n    var j = 0;\n    for (var i = 0; i <= n; i++ )\n    {\n        j = i / n;\n\n        // The Green Line\n        xa = getPt( fromX , cpX , j );\n        ya = getPt( fromY , cpY , j );\n        xb = getPt( cpX , toX , j );\n        yb = getPt( cpY , toY , j );\n\n        // The Black Dot\n        x = getPt( xa , xb , j );\n        y = getPt( ya , yb , j );\n\n        points.push(x, y);\n    }\n    return points;\n};\n\n/**\n * Builds a circle to draw\n *\n * @static\n * @private\n * @method buildCircle\n * @param graphicsData {Graphics} The graphics object to draw\n * @param webGLData {Object}\n */\nPIXI.WebGLGraphics.buildCircle = function(graphicsData, webGLData)\n{\n    // need to convert points to a nice regular data\n    var circleData = graphicsData.shape;\n    var x = circleData.x;\n    var y = circleData.y;\n    var width;\n    var height;\n    \n    // TODO - bit hacky??\n    if(graphicsData.type === PIXI.Graphics.CIRC)\n    {\n        width = circleData.radius;\n        height = circleData.radius;\n    }\n    else\n    {\n        width = circleData.width;\n        height = circleData.height;\n    }\n\n    var totalSegs = 40;\n    var seg = (Math.PI * 2) / totalSegs ;\n\n    var i = 0;\n\n    if(graphicsData.fill)\n    {\n        var color = PIXI.hex2rgb(graphicsData.fillColor);\n        var alpha = graphicsData.fillAlpha;\n\n        var r = color[0] * alpha;\n        var g = color[1] * alpha;\n        var b = color[2] * alpha;\n\n        var verts = webGLData.points;\n        var indices = webGLData.indices;\n\n        var vecPos = verts.length/6;\n\n        indices.push(vecPos);\n\n        for (i = 0; i < totalSegs + 1 ; i++)\n        {\n            verts.push(x,y, r, g, b, alpha);\n\n            verts.push(x + Math.sin(seg * i) * width,\n                       y + Math.cos(seg * i) * height,\n                       r, g, b, alpha);\n\n            indices.push(vecPos++, vecPos++);\n        }\n\n        indices.push(vecPos-1);\n    }\n\n    if(graphicsData.lineWidth)\n    {\n        var tempPoints = graphicsData.points;\n\n        graphicsData.points = [];\n\n        for (i = 0; i < totalSegs + 1; i++)\n        {\n            graphicsData.points.push(x + Math.sin(seg * i) * width,\n                                     y + Math.cos(seg * i) * height);\n        }\n\n        PIXI.WebGLGraphics.buildLine(graphicsData, webGLData);\n\n        graphicsData.points = tempPoints;\n    }\n};\n\n/**\n * Builds a line to draw\n *\n * @static\n * @private\n * @method buildLine\n * @param graphicsData {Graphics} The graphics object containing all the necessary properties\n * @param webGLData {Object}\n */\nPIXI.WebGLGraphics.buildLine = function(graphicsData, webGLData)\n{\n    // TODO OPTIMISE!\n    var i = 0;\n    var points = graphicsData.points;\n    if(points.length === 0)return;\n\n    // if the line width is an odd number add 0.5 to align to a whole pixel\n    if(graphicsData.lineWidth%2)\n    {\n        for (i = 0; i < points.length; i++) {\n            points[i] += 0.5;\n        }\n    }\n\n    // get first and last point.. figure out the middle!\n    var firstPoint = new PIXI.Point( points[0], points[1] );\n    var lastPoint = new PIXI.Point( points[points.length - 2], points[points.length - 1] );\n\n    // if the first point is the last point - gonna have issues :)\n    if(firstPoint.x === lastPoint.x && firstPoint.y === lastPoint.y)\n    {\n        // need to clone as we are going to slightly modify the shape..\n        points = points.slice();\n\n        points.pop();\n        points.pop();\n\n        lastPoint = new PIXI.Point( points[points.length - 2], points[points.length - 1] );\n\n        var midPointX = lastPoint.x + (firstPoint.x - lastPoint.x) *0.5;\n        var midPointY = lastPoint.y + (firstPoint.y - lastPoint.y) *0.5;\n\n        points.unshift(midPointX, midPointY);\n        points.push(midPointX, midPointY);\n    }\n\n    var verts = webGLData.points;\n    var indices = webGLData.indices;\n    var length = points.length / 2;\n    var indexCount = points.length;\n    var indexStart = verts.length/6;\n\n    // DRAW the Line\n    var width = graphicsData.lineWidth / 2;\n\n    // sort color\n    var color = PIXI.hex2rgb(graphicsData.lineColor);\n    var alpha = graphicsData.lineAlpha;\n    var r = color[0] * alpha;\n    var g = color[1] * alpha;\n    var b = color[2] * alpha;\n\n    var px, py, p1x, p1y, p2x, p2y, p3x, p3y;\n    var perpx, perpy, perp2x, perp2y, perp3x, perp3y;\n    var a1, b1, c1, a2, b2, c2;\n    var denom, pdist, dist;\n\n    p1x = points[0];\n    p1y = points[1];\n\n    p2x = points[2];\n    p2y = points[3];\n\n    perpx = -(p1y - p2y);\n    perpy =  p1x - p2x;\n\n    dist = Math.sqrt(perpx*perpx + perpy*perpy);\n\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    // start\n    verts.push(p1x - perpx , p1y - perpy,\n                r, g, b, alpha);\n\n    verts.push(p1x + perpx , p1y + perpy,\n                r, g, b, alpha);\n\n    for (i = 1; i < length-1; i++)\n    {\n        p1x = points[(i-1)*2];\n        p1y = points[(i-1)*2 + 1];\n\n        p2x = points[(i)*2];\n        p2y = points[(i)*2 + 1];\n\n        p3x = points[(i+1)*2];\n        p3y = points[(i+1)*2 + 1];\n\n        perpx = -(p1y - p2y);\n        perpy = p1x - p2x;\n\n        dist = Math.sqrt(perpx*perpx + perpy*perpy);\n        perpx /= dist;\n        perpy /= dist;\n        perpx *= width;\n        perpy *= width;\n\n        perp2x = -(p2y - p3y);\n        perp2y = p2x - p3x;\n\n        dist = Math.sqrt(perp2x*perp2x + perp2y*perp2y);\n        perp2x /= dist;\n        perp2y /= dist;\n        perp2x *= width;\n        perp2y *= width;\n\n        a1 = (-perpy + p1y) - (-perpy + p2y);\n        b1 = (-perpx + p2x) - (-perpx + p1x);\n        c1 = (-perpx + p1x) * (-perpy + p2y) - (-perpx + p2x) * (-perpy + p1y);\n        a2 = (-perp2y + p3y) - (-perp2y + p2y);\n        b2 = (-perp2x + p2x) - (-perp2x + p3x);\n        c2 = (-perp2x + p3x) * (-perp2y + p2y) - (-perp2x + p2x) * (-perp2y + p3y);\n\n        denom = a1*b2 - a2*b1;\n\n        if(Math.abs(denom) < 0.1 )\n        {\n\n            denom+=10.1;\n            verts.push(p2x - perpx , p2y - perpy,\n                r, g, b, alpha);\n\n            verts.push(p2x + perpx , p2y + perpy,\n                r, g, b, alpha);\n\n            continue;\n        }\n\n        px = (b1*c2 - b2*c1)/denom;\n        py = (a2*c1 - a1*c2)/denom;\n\n\n        pdist = (px -p2x) * (px -p2x) + (py -p2y) + (py -p2y);\n\n\n        if(pdist > 140 * 140)\n        {\n            perp3x = perpx - perp2x;\n            perp3y = perpy - perp2y;\n\n            dist = Math.sqrt(perp3x*perp3x + perp3y*perp3y);\n            perp3x /= dist;\n            perp3y /= dist;\n            perp3x *= width;\n            perp3y *= width;\n\n            verts.push(p2x - perp3x, p2y -perp3y);\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x + perp3x, p2y +perp3y);\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x - perp3x, p2y -perp3y);\n            verts.push(r, g, b, alpha);\n\n            indexCount++;\n        }\n        else\n        {\n\n            verts.push(px , py);\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x - (px-p2x), p2y - (py - p2y));\n            verts.push(r, g, b, alpha);\n        }\n    }\n\n    p1x = points[(length-2)*2];\n    p1y = points[(length-2)*2 + 1];\n\n    p2x = points[(length-1)*2];\n    p2y = points[(length-1)*2 + 1];\n\n    perpx = -(p1y - p2y);\n    perpy = p1x - p2x;\n\n    dist = Math.sqrt(perpx*perpx + perpy*perpy);\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    verts.push(p2x - perpx , p2y - perpy);\n    verts.push(r, g, b, alpha);\n\n    verts.push(p2x + perpx , p2y + perpy);\n    verts.push(r, g, b, alpha);\n\n    indices.push(indexStart);\n\n    for (i = 0; i < indexCount; i++)\n    {\n        indices.push(indexStart++);\n    }\n\n    indices.push(indexStart-1);\n};\n\n/**\n * Builds a complex polygon to draw\n *\n * @static\n * @private\n * @method buildComplexPoly\n * @param graphicsData {Graphics} The graphics object containing all the necessary properties\n * @param webGLData {Object}\n */\nPIXI.WebGLGraphics.buildComplexPoly = function(graphicsData, webGLData)\n{\n    //TODO - no need to copy this as it gets turned into a FLoat32Array anyways..\n    var points = graphicsData.points.slice();\n    if(points.length < 6)return;\n\n    // get first and last point.. figure out the middle!\n    var indices = webGLData.indices;\n    webGLData.points = points;\n    webGLData.alpha = graphicsData.fillAlpha;\n    webGLData.color = PIXI.hex2rgb(graphicsData.fillColor);\n\n    /*\n        calclate the bounds..\n    */\n    var minX = Infinity;\n    var maxX = -Infinity;\n\n    var minY = Infinity;\n    var maxY = -Infinity;\n\n    var x,y;\n\n    // get size..\n    for (var i = 0; i < points.length; i+=2)\n    {\n        x = points[i];\n        y = points[i+1];\n\n        minX = x < minX ? x : minX;\n        maxX = x > maxX ? x : maxX;\n\n        minY = y < minY ? y : minY;\n        maxY = y > maxY ? y : maxY;\n    }\n\n    // add a quad to the end cos there is no point making another buffer!\n    points.push(minX, minY,\n                maxX, minY,\n                maxX, maxY,\n                minX, maxY);\n\n    // push a quad onto the end.. \n    \n    //TODO - this aint needed!\n    var length = points.length / 2;\n    for (i = 0; i < length; i++)\n    {\n        indices.push( i );\n    }\n\n};\n\n/**\n * Builds a polygon to draw\n *\n * @static\n * @private\n * @method buildPoly\n * @param graphicsData {Graphics} The graphics object containing all the necessary properties\n * @param webGLData {Object}\n */\nPIXI.WebGLGraphics.buildPoly = function(graphicsData, webGLData)\n{\n    var points = graphicsData.points;\n\n    if(points.length < 6)return;\n    // get first and last point.. figure out the middle!\n    var verts = webGLData.points;\n    var indices = webGLData.indices;\n\n    var length = points.length / 2;\n\n    // sort color\n    var color = PIXI.hex2rgb(graphicsData.fillColor);\n    var alpha = graphicsData.fillAlpha;\n    var r = color[0] * alpha;\n    var g = color[1] * alpha;\n    var b = color[2] * alpha;\n\n    var triangles = PIXI.PolyK.Triangulate(points);\n\n    if(!triangles)return false;\n\n    var vertPos = verts.length / 6;\n\n    var i = 0;\n\n    for (i = 0; i < triangles.length; i+=3)\n    {\n        indices.push(triangles[i] + vertPos);\n        indices.push(triangles[i] + vertPos);\n        indices.push(triangles[i+1] + vertPos);\n        indices.push(triangles[i+2] +vertPos);\n        indices.push(triangles[i+2] + vertPos);\n    }\n\n    for (i = 0; i < length; i++)\n    {\n        verts.push(points[i * 2], points[i * 2 + 1],\n                   r, g, b, alpha);\n    }\n\n    return true;\n};\n\nPIXI.WebGLGraphics.graphicsDataPool = [];\n\n/**\n * @class WebGLGraphicsData\n * @private\n * @static\n */\nPIXI.WebGLGraphicsData = function(gl)\n{\n    this.gl = gl;\n\n    //TODO does this need to be split before uploding??\n    this.color = [0,0,0]; // color split!\n    this.points = [];\n    this.indices = [];\n    this.buffer = gl.createBuffer();\n    this.indexBuffer = gl.createBuffer();\n    this.mode = 1;\n    this.alpha = 1;\n    this.dirty = true;\n};\n\n/**\n * @method reset\n */\nPIXI.WebGLGraphicsData.prototype.reset = function()\n{\n    this.points = [];\n    this.indices = [];\n};\n\n/**\n * @method upload\n */\nPIXI.WebGLGraphicsData.prototype.upload = function()\n{\n    var gl = this.gl;\n\n//    this.lastIndex = graphics.graphicsData.length;\n    this.glPoints = new PIXI.Float32Array(this.points);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.glPoints, gl.STATIC_DRAW);\n\n    this.glIndicies = new PIXI.Uint16Array(this.indices);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.glIndicies, gl.STATIC_DRAW);\n\n    this.dirty = false;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\nPIXI.glContexts = []; // this is where we store the webGL contexts for easy access.\nPIXI.instances = [];\n\n/**\n * The WebGLRenderer draws the stage and all its content onto a webGL enabled canvas. This renderer\n * should be used for browsers that support webGL. This Render works by automatically managing webGLBatchs.\n * So no need for Sprite Batches or Sprite Clouds.\n * Don't forget to add the view to your DOM or you will not see anything :)\n *\n * @class WebGLRenderer\n * @constructor\n * @param [width=0] {Number} the width of the canvas view\n * @param [height=0] {Number} the height of the canvas view\n * @param [options] {Object} The optional renderer parameters\n * @param [options.view] {HTMLCanvasElement} the canvas to use as a view, optional\n * @param [options.transparent=false] {Boolean} If the render view is transparent, default false\n * @param [options.autoResize=false] {Boolean} If the render view is automatically resized, default false\n * @param [options.antialias=false] {Boolean} sets antialias (only applicable in chrome at the moment)\n * @param [options.preserveDrawingBuffer=false] {Boolean} enables drawing buffer preservation, enable this if you need to call toDataUrl on the webgl context\n * @param [options.resolution=1] {Number} the resolution of the renderer retina would be 2\n */\nPIXI.WebGLRenderer = function(width, height, options)\n{\n    if(options)\n    {\n        for (var i in PIXI.defaultRenderOptions)\n        {\n            if (typeof options[i] === 'undefined') options[i] = PIXI.defaultRenderOptions[i];\n        }\n    }\n    else\n    {\n        options = PIXI.defaultRenderOptions;\n    }\n\n    if(!PIXI.defaultRenderer)\n    {\n        PIXI.sayHello('webGL');\n        PIXI.defaultRenderer = this;\n    }\n\n    /**\n     * @property type\n     * @type Number\n     */\n    this.type = PIXI.WEBGL_RENDERER;\n\n    /**\n     * The resolution of the renderer\n     *\n     * @property resolution\n     * @type Number\n     * @default 1\n     */\n    this.resolution = options.resolution;\n\n    // do a catch.. only 1 webGL renderer..\n\n    /**\n     * Whether the render view is transparent\n     *\n     * @property transparent\n     * @type Boolean\n     */\n    this.transparent = options.transparent;\n\n    /**\n     * Whether the render view should be resized automatically\n     *\n     * @property autoResize\n     * @type Boolean\n     */\n    this.autoResize = options.autoResize || false;\n\n    /**\n     * The value of the preserveDrawingBuffer flag affects whether or not the contents of the stencil buffer is retained after rendering.\n     *\n     * @property preserveDrawingBuffer\n     * @type Boolean\n     */\n    this.preserveDrawingBuffer = options.preserveDrawingBuffer;\n\n    /**\n     * This sets if the WebGLRenderer will clear the context texture or not before the new render pass. If true:\n     * If the Stage is NOT transparent, Pixi will clear to alpha (0, 0, 0, 0).\n     * If the Stage is transparent, Pixi will clear to the target Stage's background color.\n     * Disable this by setting this to false. For example: if your game has a canvas filling background image, you often don't need this set.\n     *\n     * @property clearBeforeRender\n     * @type Boolean\n     * @default\n     */\n    this.clearBeforeRender = options.clearBeforeRender;\n\n    /**\n     * The width of the canvas view\n     *\n     * @property width\n     * @type Number\n     * @default 800\n     */\n    this.width = width || 800;\n\n    /**\n     * The height of the canvas view\n     *\n     * @property height\n     * @type Number\n     * @default 600\n     */\n    this.height = height || 600;\n\n    /**\n     * The canvas element that everything is drawn to\n     *\n     * @property view\n     * @type HTMLCanvasElement\n     */\n    this.view = options.view || document.createElement( 'canvas' );\n\n    // deal with losing context..\n\n    /**\n     * @property contextLostBound\n     * @type Function\n     */\n    this.contextLostBound = this.handleContextLost.bind(this);\n\n    /**\n     * @property contextRestoredBound\n     * @type Function\n     */\n    this.contextRestoredBound = this.handleContextRestored.bind(this);\n\n    this.view.addEventListener('webglcontextlost', this.contextLostBound, false);\n    this.view.addEventListener('webglcontextrestored', this.contextRestoredBound, false);\n\n    /**\n     * @property _contextOptions\n     * @type Object\n     * @private\n     */\n    this._contextOptions = {\n        alpha: this.transparent,\n        antialias: options.antialias, // SPEED UP??\n        premultipliedAlpha:this.transparent && this.transparent !== 'notMultiplied',\n        stencil:true,\n        preserveDrawingBuffer: options.preserveDrawingBuffer\n    };\n\n    /**\n     * @property projection\n     * @type Point\n     */\n    this.projection = new PIXI.Point();\n\n    /**\n     * @property offset\n     * @type Point\n     */\n    this.offset = new PIXI.Point(0, 0);\n\n    // time to create the render managers! each one focuses on managing a state in webGL\n\n    /**\n     * Deals with managing the shader programs and their attribs\n     * @property shaderManager\n     * @type WebGLShaderManager\n     */\n    this.shaderManager = new PIXI.WebGLShaderManager();\n\n    /**\n     * Manages the rendering of sprites\n     * @property spriteBatch\n     * @type WebGLSpriteBatch\n     */\n    this.spriteBatch = new PIXI.WebGLSpriteBatch();\n\n    /**\n     * Manages the masks using the stencil buffer\n     * @property maskManager\n     * @type WebGLMaskManager\n     */\n    this.maskManager = new PIXI.WebGLMaskManager();\n\n    /**\n     * Manages the filters\n     * @property filterManager\n     * @type WebGLFilterManager\n     */\n    this.filterManager = new PIXI.WebGLFilterManager();\n\n    /**\n     * Manages the stencil buffer\n     * @property stencilManager\n     * @type WebGLStencilManager\n     */\n    this.stencilManager = new PIXI.WebGLStencilManager();\n\n    /**\n     * Manages the blendModes\n     * @property blendModeManager\n     * @type WebGLBlendModeManager\n     */\n    this.blendModeManager = new PIXI.WebGLBlendModeManager();\n\n    /**\n     * TODO remove\n     * @property renderSession\n     * @type Object\n     */\n    this.renderSession = {};\n    this.renderSession.gl = this.gl;\n    this.renderSession.drawCount = 0;\n    this.renderSession.shaderManager = this.shaderManager;\n    this.renderSession.maskManager = this.maskManager;\n    this.renderSession.filterManager = this.filterManager;\n    this.renderSession.blendModeManager = this.blendModeManager;\n    this.renderSession.spriteBatch = this.spriteBatch;\n    this.renderSession.stencilManager = this.stencilManager;\n    this.renderSession.renderer = this;\n    this.renderSession.resolution = this.resolution;\n\n    // time init the context..\n    this.initContext();\n\n    // map some webGL blend modes..\n    this.mapBlendModes();\n};\n\n// constructor\nPIXI.WebGLRenderer.prototype.constructor = PIXI.WebGLRenderer;\n\n/**\n* @method initContext\n*/\nPIXI.WebGLRenderer.prototype.initContext = function()\n{\n    var gl = this.view.getContext('webgl', this._contextOptions) || this.view.getContext('experimental-webgl', this._contextOptions);\n    this.gl = gl;\n\n    if (!gl) {\n        // fail, not able to get a context\n        throw new Error('This browser does not support webGL. Try using the canvas renderer');\n    }\n\n    this.glContextId = gl.id = PIXI.WebGLRenderer.glContextId ++;\n\n    PIXI.glContexts[this.glContextId] = gl;\n\n    PIXI.instances[this.glContextId] = this;\n\n    // set up the default pixi settings..\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.CULL_FACE);\n    gl.enable(gl.BLEND);\n\n    // need to set the context for all the managers...\n    this.shaderManager.setContext(gl);\n    this.spriteBatch.setContext(gl);\n    this.maskManager.setContext(gl);\n    this.filterManager.setContext(gl);\n    this.blendModeManager.setContext(gl);\n    this.stencilManager.setContext(gl);\n\n    this.renderSession.gl = this.gl;\n\n    // now resize and we are good to go!\n    this.resize(this.width, this.height);\n};\n\n/**\n * Renders the stage to its webGL view\n *\n * @method render\n * @param stage {Stage} the Stage element to be rendered\n */\nPIXI.WebGLRenderer.prototype.render = function(stage)\n{\n    // no point rendering if our context has been blown up!\n    if(this.contextLost)return;\n\n    // if rendering a new stage clear the batches..\n    if(this.__stage !== stage)\n    {\n        if(stage.interactive)stage.interactionManager.removeEvents();\n\n        // TODO make this work\n        // dont think this is needed any more?\n        this.__stage = stage;\n    }\n\n    // update the scene graph\n    stage.updateTransform();\n\n    var gl = this.gl;\n\n    // interaction\n    if(stage._interactive)\n    {\n        //need to add some events!\n        if(!stage._interactiveEventsAdded)\n        {\n            stage._interactiveEventsAdded = true;\n            stage.interactionManager.setTarget(this);\n        }\n    }\n    else\n    {\n        if(stage._interactiveEventsAdded)\n        {\n            stage._interactiveEventsAdded = false;\n            stage.interactionManager.setTarget(this);\n        }\n    }\n\n    // -- Does this need to be set every frame? -- //\n    gl.viewport(0, 0, this.width, this.height);\n\n    // make sure we are bound to the main frame buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    if (this.clearBeforeRender)\n        {\n        if(this.transparent)\n        {\n            gl.clearColor(0, 0, 0, 0);\n        }\n        else\n        {\n            gl.clearColor(stage.backgroundColorSplit[0],stage.backgroundColorSplit[1],stage.backgroundColorSplit[2], 1);\n        }\n\n        gl.clear (gl.COLOR_BUFFER_BIT);\n    }\n\n    this.renderDisplayObject( stage, this.projection );\n};\n\n/**\n * Renders a Display Object.\n *\n * @method renderDisplayObject\n * @param displayObject {DisplayObject} The DisplayObject to render\n * @param projection {Point} The projection\n * @param buffer {Array} a standard WebGL buffer\n */\nPIXI.WebGLRenderer.prototype.renderDisplayObject = function(displayObject, projection, buffer)\n{\n    this.renderSession.blendModeManager.setBlendMode(PIXI.blendModes.NORMAL);\n\n    // reset the render session data..\n    this.renderSession.drawCount = 0;\n\n    // make sure to flip the Y if using a render texture..\n    this.renderSession.flipY = buffer ? -1 : 1;\n\n    // set the default projection\n    this.renderSession.projection = projection;\n\n    //set the default offset\n    this.renderSession.offset = this.offset;\n\n    // start the sprite batch\n    this.spriteBatch.begin(this.renderSession);\n\n    // start the filter manager\n    this.filterManager.begin(this.renderSession, buffer);\n\n    // render the scene!\n    displayObject._renderWebGL(this.renderSession);\n\n    // finish the sprite batch\n    this.spriteBatch.end();\n};\n\n/**\n * Resizes the webGL view to the specified width and height.\n *\n * @method resize\n * @param width {Number} the new width of the webGL view\n * @param height {Number} the new height of the webGL view\n */\nPIXI.WebGLRenderer.prototype.resize = function(width, height)\n{\n    this.width = width * this.resolution;\n    this.height = height * this.resolution;\n\n    this.view.width = this.width;\n    this.view.height = this.height;\n\n    if (this.autoResize) {\n        this.view.style.width = this.width / this.resolution + 'px';\n        this.view.style.height = this.height / this.resolution + 'px';\n    }\n\n    this.gl.viewport(0, 0, this.width, this.height);\n\n    this.projection.x =  this.width / 2 / this.resolution;\n    this.projection.y =  -this.height / 2 / this.resolution;\n};\n\n/**\n * Updates and Creates a WebGL texture for the renderers context.\n *\n * @method updateTexture\n * @param texture {Texture} the texture to update\n */\nPIXI.WebGLRenderer.prototype.updateTexture = function(texture)\n{\n    if(!texture.hasLoaded )return;\n\n    var gl = this.gl;\n\n    if(!texture._glTextures[gl.id])texture._glTextures[gl.id] = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, texture._glTextures[gl.id]);\n\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultipliedAlpha);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, texture.source);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, texture.scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR : gl.NEAREST);\n    \n\n    if(texture.mipmap && PIXI.isPowerOfTwo(texture.width, texture.height))\n    {\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, texture.scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR_MIPMAP_LINEAR : gl.NEAREST_MIPMAP_NEAREST);\n        gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    else\n    {\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, texture.scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR : gl.NEAREST);\n    }\n\n    // reguler...\n    if(!texture._powerOf2)\n    {\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    }\n    else\n    {\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    }\n\n    texture._dirty[gl.id] = false;\n\n    return  texture._glTextures[gl.id];\n};\n\n/**\n * Handles a lost webgl context\n *\n * @method handleContextLost\n * @param event {Event}\n * @private\n */\nPIXI.WebGLRenderer.prototype.handleContextLost = function(event)\n{\n    event.preventDefault();\n    this.contextLost = true;\n};\n\n/**\n * Handles a restored webgl context\n *\n * @method handleContextRestored\n * @param event {Event}\n * @private\n */\nPIXI.WebGLRenderer.prototype.handleContextRestored = function()\n{\n    this.initContext();\n\n    // empty all the ol gl textures as they are useless now\n    for(var key in PIXI.TextureCache)\n    {\n        var texture = PIXI.TextureCache[key].baseTexture;\n        texture._glTextures = [];\n    }\n\n    this.contextLost = false;\n};\n\n/**\n * Removes everything from the renderer (event listeners, spritebatch, etc...)\n *\n * @method destroy\n */\nPIXI.WebGLRenderer.prototype.destroy = function()\n{\n    // remove listeners\n    this.view.removeEventListener('webglcontextlost', this.contextLostBound);\n    this.view.removeEventListener('webglcontextrestored', this.contextRestoredBound);\n\n    PIXI.glContexts[this.glContextId] = null;\n\n    this.projection = null;\n    this.offset = null;\n\n    // time to create the render managers! each one focuses on managine a state in webGL\n    this.shaderManager.destroy();\n    this.spriteBatch.destroy();\n    this.maskManager.destroy();\n    this.filterManager.destroy();\n\n    this.shaderManager = null;\n    this.spriteBatch = null;\n    this.maskManager = null;\n    this.filterManager = null;\n\n    this.gl = null;\n    this.renderSession = null;\n};\n\n/**\n * Maps Pixi blend modes to WebGL blend modes.\n *\n * @method mapBlendModes\n */\nPIXI.WebGLRenderer.prototype.mapBlendModes = function()\n{\n    var gl = this.gl;\n\n    if(!PIXI.blendModesWebGL)\n    {\n        PIXI.blendModesWebGL = [];\n\n        PIXI.blendModesWebGL[PIXI.blendModes.NORMAL]        = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.ADD]           = [gl.SRC_ALPHA, gl.DST_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.MULTIPLY]      = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.SCREEN]        = [gl.SRC_ALPHA, gl.ONE];\n        PIXI.blendModesWebGL[PIXI.blendModes.OVERLAY]       = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.DARKEN]        = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.LIGHTEN]       = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.COLOR_DODGE]   = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.COLOR_BURN]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.HARD_LIGHT]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.SOFT_LIGHT]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.DIFFERENCE]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.EXCLUSION]     = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.HUE]           = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.SATURATION]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.COLOR]         = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n        PIXI.blendModesWebGL[PIXI.blendModes.LUMINOSITY]    = [gl.ONE,       gl.ONE_MINUS_SRC_ALPHA];\n    }\n};\n\nPIXI.WebGLRenderer.glContextId = 0;\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n* @class WebGLBlendModeManager\n* @constructor\n* @param gl {WebGLContext} the current WebGL drawing context\n*/\nPIXI.WebGLBlendModeManager = function()\n{\n    /**\n     * @property currentBlendMode\n     * @type Number\n     */\n    this.currentBlendMode = 99999;\n};\n\nPIXI.WebGLBlendModeManager.prototype.constructor = PIXI.WebGLBlendModeManager;\n\n/**\n * Sets the WebGL Context.\n *\n * @method setContext\n * @param gl {WebGLContext} the current WebGL drawing context\n */\nPIXI.WebGLBlendModeManager.prototype.setContext = function(gl)\n{\n    this.gl = gl;\n};\n\n/**\n* Sets-up the given blendMode from WebGL's point of view.\n* \n* @method setBlendMode \n* @param blendMode {Number} the blendMode, should be a Pixi const, such as PIXI.BlendModes.ADD\n*/\nPIXI.WebGLBlendModeManager.prototype.setBlendMode = function(blendMode)\n{\n    if(this.currentBlendMode === blendMode)return false;\n\n    this.currentBlendMode = blendMode;\n    \n    var blendModeWebGL = PIXI.blendModesWebGL[this.currentBlendMode];\n    this.gl.blendFunc(blendModeWebGL[0], blendModeWebGL[1]);\n    \n    return true;\n};\n\n/**\n* Destroys this object.\n* \n* @method destroy\n*/\nPIXI.WebGLBlendModeManager.prototype.destroy = function()\n{\n    this.gl = null;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n* @class WebGLMaskManager\n* @constructor\n* @private\n*/\nPIXI.WebGLMaskManager = function()\n{\n};\n\nPIXI.WebGLMaskManager.prototype.constructor = PIXI.WebGLMaskManager;\n\n/**\n* Sets the drawing context to the one given in parameter.\n* \n* @method setContext \n* @param gl {WebGLContext} the current WebGL drawing context\n*/\nPIXI.WebGLMaskManager.prototype.setContext = function(gl)\n{\n    this.gl = gl;\n};\n\n/**\n* Applies the Mask and adds it to the current filter stack.\n* \n* @method pushMask\n* @param maskData {Array}\n* @param renderSession {Object}\n*/\nPIXI.WebGLMaskManager.prototype.pushMask = function(maskData, renderSession)\n{\n    var gl = renderSession.gl;\n\n    if(maskData.dirty)\n    {\n        PIXI.WebGLGraphics.updateGraphics(maskData, gl);\n    }\n\n    if(!maskData._webGL[gl.id].data.length)return;\n\n    renderSession.stencilManager.pushStencil(maskData, maskData._webGL[gl.id].data[0], renderSession);\n};\n\n/**\n* Removes the last filter from the filter stack and doesn't return it.\n* \n* @method popMask\n* @param maskData {Array}\n* @param renderSession {Object} an object containing all the useful parameters\n*/\nPIXI.WebGLMaskManager.prototype.popMask = function(maskData, renderSession)\n{\n    var gl = this.gl;\n    renderSession.stencilManager.popStencil(maskData, maskData._webGL[gl.id].data[0], renderSession);\n};\n\n/**\n* Destroys the mask stack.\n* \n* @method destroy\n*/\nPIXI.WebGLMaskManager.prototype.destroy = function()\n{\n    this.gl = null;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n* @class WebGLStencilManager\n* @constructor\n* @private\n*/\nPIXI.WebGLStencilManager = function()\n{\n    this.stencilStack = [];\n    this.reverse = true;\n    this.count = 0;\n};\n\n/**\n* Sets the drawing context to the one given in parameter.\n* \n* @method setContext \n* @param gl {WebGLContext} the current WebGL drawing context\n*/\nPIXI.WebGLStencilManager.prototype.setContext = function(gl)\n{\n    this.gl = gl;\n};\n\n/**\n* Applies the Mask and adds it to the current filter stack.\n* \n* @method pushMask\n* @param graphics {Graphics}\n* @param webGLData {Array}\n* @param renderSession {Object}\n*/\nPIXI.WebGLStencilManager.prototype.pushStencil = function(graphics, webGLData, renderSession)\n{\n    var gl = this.gl;\n    this.bindGraphics(graphics, webGLData, renderSession);\n\n    if(this.stencilStack.length === 0)\n    {\n        gl.enable(gl.STENCIL_TEST);\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        this.reverse = true;\n        this.count = 0;\n    }\n\n    this.stencilStack.push(webGLData);\n\n    var level = this.count;\n\n    gl.colorMask(false, false, false, false);\n\n    gl.stencilFunc(gl.ALWAYS,0,0xFF);\n    gl.stencilOp(gl.KEEP,gl.KEEP,gl.INVERT);\n\n    // draw the triangle strip!\n\n    if(webGLData.mode === 1)\n    {\n        gl.drawElements(gl.TRIANGLE_FAN,  webGLData.indices.length - 4, gl.UNSIGNED_SHORT, 0 );\n       \n        if(this.reverse)\n        {\n            gl.stencilFunc(gl.EQUAL, 0xFF - level, 0xFF);\n            gl.stencilOp(gl.KEEP,gl.KEEP,gl.DECR);\n        }\n        else\n        {\n            gl.stencilFunc(gl.EQUAL,level, 0xFF);\n            gl.stencilOp(gl.KEEP,gl.KEEP,gl.INCR);\n        }\n\n        // draw a quad to increment..\n        gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_SHORT, ( webGLData.indices.length - 4 ) * 2 );\n               \n        if(this.reverse)\n        {\n            gl.stencilFunc(gl.EQUAL,0xFF-(level+1), 0xFF);\n        }\n        else\n        {\n            gl.stencilFunc(gl.EQUAL,level+1, 0xFF);\n        }\n\n        this.reverse = !this.reverse;\n    }\n    else\n    {\n        if(!this.reverse)\n        {\n            gl.stencilFunc(gl.EQUAL, 0xFF - level, 0xFF);\n            gl.stencilOp(gl.KEEP,gl.KEEP,gl.DECR);\n        }\n        else\n        {\n            gl.stencilFunc(gl.EQUAL,level, 0xFF);\n            gl.stencilOp(gl.KEEP,gl.KEEP,gl.INCR);\n        }\n\n        gl.drawElements(gl.TRIANGLE_STRIP,  webGLData.indices.length, gl.UNSIGNED_SHORT, 0 );\n\n        if(!this.reverse)\n        {\n            gl.stencilFunc(gl.EQUAL,0xFF-(level+1), 0xFF);\n        }\n        else\n        {\n            gl.stencilFunc(gl.EQUAL,level+1, 0xFF);\n        }\n    }\n\n    gl.colorMask(true, true, true, true);\n    gl.stencilOp(gl.KEEP,gl.KEEP,gl.KEEP);\n\n    this.count++;\n};\n\n/**\n * TODO this does not belong here!\n * \n * @method bindGraphics\n * @param graphics {Graphics}\n * @param webGLData {Array}\n * @param renderSession {Object}\n */\nPIXI.WebGLStencilManager.prototype.bindGraphics = function(graphics, webGLData, renderSession)\n{\n    //if(this._currentGraphics === graphics)return;\n    this._currentGraphics = graphics;\n\n    var gl = this.gl;\n\n     // bind the graphics object..\n    var projection = renderSession.projection,\n        offset = renderSession.offset,\n        shader;// = renderSession.shaderManager.primitiveShader;\n\n    if(webGLData.mode === 1)\n    {\n        shader = renderSession.shaderManager.complexPrimitiveShader;\n\n        renderSession.shaderManager.setShader( shader );\n\n        gl.uniform1f(shader.flipY, renderSession.flipY);\n       \n        gl.uniformMatrix3fv(shader.translationMatrix, false, graphics.worldTransform.toArray(true));\n\n        gl.uniform2f(shader.projectionVector, projection.x, -projection.y);\n        gl.uniform2f(shader.offsetVector, -offset.x, -offset.y);\n\n        gl.uniform3fv(shader.tintColor, PIXI.hex2rgb(graphics.tint));\n        gl.uniform3fv(shader.color, webGLData.color);\n\n        gl.uniform1f(shader.alpha, graphics.worldAlpha * webGLData.alpha);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, webGLData.buffer);\n\n        gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 2, 0);\n\n\n        // now do the rest..\n        // set the index buffer!\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, webGLData.indexBuffer);\n    }\n    else\n    {\n        //renderSession.shaderManager.activatePrimitiveShader();\n        shader = renderSession.shaderManager.primitiveShader;\n        renderSession.shaderManager.setShader( shader );\n\n        gl.uniformMatrix3fv(shader.translationMatrix, false, graphics.worldTransform.toArray(true));\n\n        gl.uniform1f(shader.flipY, renderSession.flipY);\n        gl.uniform2f(shader.projectionVector, projection.x, -projection.y);\n        gl.uniform2f(shader.offsetVector, -offset.x, -offset.y);\n\n        gl.uniform3fv(shader.tintColor, PIXI.hex2rgb(graphics.tint));\n\n        gl.uniform1f(shader.alpha, graphics.worldAlpha);\n        \n        gl.bindBuffer(gl.ARRAY_BUFFER, webGLData.buffer);\n\n        gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 6, 0);\n        gl.vertexAttribPointer(shader.colorAttribute, 4, gl.FLOAT, false,4 * 6, 2 * 4);\n\n        // set the index buffer!\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, webGLData.indexBuffer);\n    }\n};\n\n/**\n * @method popStencil\n * @param graphics {Graphics}\n * @param webGLData {Array}\n * @param renderSession {Object}\n */\nPIXI.WebGLStencilManager.prototype.popStencil = function(graphics, webGLData, renderSession)\n{\n\tvar gl = this.gl;\n    this.stencilStack.pop();\n   \n    this.count--;\n\n    if(this.stencilStack.length === 0)\n    {\n        // the stack is empty!\n        gl.disable(gl.STENCIL_TEST);\n\n    }\n    else\n    {\n\n        var level = this.count;\n\n        this.bindGraphics(graphics, webGLData, renderSession);\n\n        gl.colorMask(false, false, false, false);\n    \n        if(webGLData.mode === 1)\n        {\n            this.reverse = !this.reverse;\n\n            if(this.reverse)\n            {\n                gl.stencilFunc(gl.EQUAL, 0xFF - (level+1), 0xFF);\n                gl.stencilOp(gl.KEEP,gl.KEEP,gl.INCR);\n            }\n            else\n            {\n                gl.stencilFunc(gl.EQUAL,level+1, 0xFF);\n                gl.stencilOp(gl.KEEP,gl.KEEP,gl.DECR);\n            }\n\n            // draw a quad to increment..\n            gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_SHORT, ( webGLData.indices.length - 4 ) * 2 );\n            \n            gl.stencilFunc(gl.ALWAYS,0,0xFF);\n            gl.stencilOp(gl.KEEP,gl.KEEP,gl.INVERT);\n\n            // draw the triangle strip!\n            gl.drawElements(gl.TRIANGLE_FAN,  webGLData.indices.length - 4, gl.UNSIGNED_SHORT, 0 );\n           \n            if(!this.reverse)\n            {\n                gl.stencilFunc(gl.EQUAL,0xFF-(level), 0xFF);\n            }\n            else\n            {\n                gl.stencilFunc(gl.EQUAL,level, 0xFF);\n            }\n\n        }\n        else\n        {\n          //  console.log(\"<<>>\")\n            if(!this.reverse)\n            {\n                gl.stencilFunc(gl.EQUAL, 0xFF - (level+1), 0xFF);\n                gl.stencilOp(gl.KEEP,gl.KEEP,gl.INCR);\n            }\n            else\n            {\n                gl.stencilFunc(gl.EQUAL,level+1, 0xFF);\n                gl.stencilOp(gl.KEEP,gl.KEEP,gl.DECR);\n            }\n\n            gl.drawElements(gl.TRIANGLE_STRIP,  webGLData.indices.length, gl.UNSIGNED_SHORT, 0 );\n\n            if(!this.reverse)\n            {\n                gl.stencilFunc(gl.EQUAL,0xFF-(level), 0xFF);\n            }\n            else\n            {\n                gl.stencilFunc(gl.EQUAL,level, 0xFF);\n            }\n        }\n\n        gl.colorMask(true, true, true, true);\n        gl.stencilOp(gl.KEEP,gl.KEEP,gl.KEEP);\n\n\n    }\n};\n\n/**\n* Destroys the mask stack.\n* \n* @method destroy\n*/\nPIXI.WebGLStencilManager.prototype.destroy = function()\n{\n    this.stencilStack = null;\n    this.gl = null;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n* @class WebGLShaderManager\n* @constructor\n* @private\n*/\nPIXI.WebGLShaderManager = function()\n{\n    /**\n     * @property maxAttibs\n     * @type Number\n     */\n    this.maxAttibs = 10;\n\n    /**\n     * @property attribState\n     * @type Array\n     */\n    this.attribState = [];\n\n    /**\n     * @property tempAttribState\n     * @type Array\n     */\n    this.tempAttribState = [];\n\n    for (var i = 0; i < this.maxAttibs; i++)\n    {\n        this.attribState[i] = false;\n    }\n\n    /**\n     * @property stack\n     * @type Array\n     */\n    this.stack = [];\n\n};\n\nPIXI.WebGLShaderManager.prototype.constructor = PIXI.WebGLShaderManager;\n\n/**\n* Initialises the context and the properties.\n* \n* @method setContext \n* @param gl {WebGLContext} the current WebGL drawing context\n*/\nPIXI.WebGLShaderManager.prototype.setContext = function(gl)\n{\n    this.gl = gl;\n    \n    // the next one is used for rendering primitives\n    this.primitiveShader = new PIXI.PrimitiveShader(gl);\n\n    // the next one is used for rendering triangle strips\n    this.complexPrimitiveShader = new PIXI.ComplexPrimitiveShader(gl);\n\n    // this shader is used for the default sprite rendering\n    this.defaultShader = new PIXI.PixiShader(gl);\n\n    // this shader is used for the fast sprite rendering\n    this.fastShader = new PIXI.PixiFastShader(gl);\n\n    // the next one is used for rendering triangle strips\n    this.stripShader = new PIXI.StripShader(gl);\n    this.setShader(this.defaultShader);\n};\n\n/**\n* Takes the attributes given in parameters.\n* \n* @method setAttribs\n* @param attribs {Array} attribs \n*/\nPIXI.WebGLShaderManager.prototype.setAttribs = function(attribs)\n{\n    // reset temp state\n    var i;\n\n    for (i = 0; i < this.tempAttribState.length; i++)\n    {\n        this.tempAttribState[i] = false;\n    }\n\n    // set the new attribs\n    for (i = 0; i < attribs.length; i++)\n    {\n        var attribId = attribs[i];\n        this.tempAttribState[attribId] = true;\n    }\n\n    var gl = this.gl;\n\n    for (i = 0; i < this.attribState.length; i++)\n    {\n        if(this.attribState[i] !== this.tempAttribState[i])\n        {\n            this.attribState[i] = this.tempAttribState[i];\n\n            if(this.tempAttribState[i])\n            {\n                gl.enableVertexAttribArray(i);\n            }\n            else\n            {\n                gl.disableVertexAttribArray(i);\n            }\n        }\n    }\n};\n\n/**\n* Sets the current shader.\n* \n* @method setShader\n* @param shader {Any}\n*/\nPIXI.WebGLShaderManager.prototype.setShader = function(shader)\n{\n    if(this._currentId === shader._UID)return false;\n    \n    this._currentId = shader._UID;\n\n    this.currentShader = shader;\n\n    this.gl.useProgram(shader.program);\n    this.setAttribs(shader.attributes);\n\n    return true;\n};\n\n/**\n* Destroys this object.\n* \n* @method destroy\n*/\nPIXI.WebGLShaderManager.prototype.destroy = function()\n{\n    this.attribState = null;\n\n    this.tempAttribState = null;\n\n    this.primitiveShader.destroy();\n\n    this.complexPrimitiveShader.destroy();\n\n    this.defaultShader.destroy();\n\n    this.fastShader.destroy();\n\n    this.stripShader.destroy();\n\n    this.gl = null;\n};\n\r\n/**\n * @author Mat Groves\n * \n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they now share 4 bytes on the vertex buffer\n * \n * Heavily inspired by LibGDX's WebGLSpriteBatch:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/WebGLSpriteBatch.java\n */\n\n /**\n *\n * @class WebGLSpriteBatch\n * @private\n * @constructor\n */\nPIXI.WebGLSpriteBatch = function()\n{\n    /**\n     * @property vertSize\n     * @type Number\n     */\n    this.vertSize = 5;\n\n    /**\n     * The number of images in the SpriteBatch before it flushes\n     * @property size\n     * @type Number\n     */\n    this.size = 2000;//Math.pow(2, 16) /  this.vertSize;\n\n    //the total number of bytes in our batch\n    var numVerts = this.size * 4 * 4 * this.vertSize;\n    //the total number of indices in our batch\n    var numIndices = this.size * 6;\n\n    /**\n    * Holds the vertices\n    *\n    * @property vertices\n    * @type ArrayBuffer\n    */\n    this.vertices = new PIXI.ArrayBuffer(numVerts);\n\n    /**\n    * View on the vertices as a Float32Array\n    *\n    * @property positions\n    * @type Float32Array\n    */\n    this.positions = new PIXI.Float32Array(this.vertices);\n\n    /**\n    * View on the vertices as a Uint32Array\n    *\n    * @property colors\n    * @type Uint32Array\n    */\n    this.colors = new PIXI.Uint32Array(this.vertices);\n\n    /**\n     * Holds the indices\n     *\n     * @property indices\n     * @type Uint16Array\n     */\n    this.indices = new PIXI.Uint16Array(numIndices);\n    \n    /**\n     * @property lastIndexCount\n     * @type Number\n     */\n    this.lastIndexCount = 0;\n\n    for (var i=0, j=0; i < numIndices; i += 6, j += 4)\n    {\n        this.indices[i + 0] = j + 0;\n        this.indices[i + 1] = j + 1;\n        this.indices[i + 2] = j + 2;\n        this.indices[i + 3] = j + 0;\n        this.indices[i + 4] = j + 2;\n        this.indices[i + 5] = j + 3;\n    }\n\n    /**\n     * @property drawing\n     * @type Boolean\n     */\n    this.drawing = false;\n\n    /**\n     * @property currentBatchSize\n     * @type Number\n     */\n    this.currentBatchSize = 0;\n\n    /**\n     * @property currentBaseTexture\n     * @type BaseTexture\n     */\n    this.currentBaseTexture = null;\n\n    /**\n     * @property dirty\n     * @type Boolean\n     */\n    this.dirty = true;\n\n    /**\n     * @property textures\n     * @type Array\n     */\n    this.textures = [];\n\n    /**\n     * @property blendModes\n     * @type Array\n     */\n    this.blendModes = [];\n\n    /**\n     * @property shaders\n     * @type Array\n     */\n    this.shaders = [];\n\n    /**\n     * @property sprites\n     * @type Array\n     */\n    this.sprites = [];\n\n    /**\n     * @property defaultShader\n     * @type AbstractFilter\n     */\n    this.defaultShader = new PIXI.AbstractFilter([\n        'precision lowp float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform sampler2D uSampler;',\n        'void main(void) {',\n        '   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;',\n        '}'\n    ]);\n};\n\n/**\n* @method setContext\n* @param gl {WebGLContext} the current WebGL drawing context\n*/\nPIXI.WebGLSpriteBatch.prototype.setContext = function(gl)\n{\n    this.gl = gl;\n\n    // create a couple of buffers\n    this.vertexBuffer = gl.createBuffer();\n    this.indexBuffer = gl.createBuffer();\n\n    // 65535 is max index, so 65535 / 6 = 10922.\n\n    //upload the index data\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertices, gl.DYNAMIC_DRAW);\n\n    this.currentBlendMode = 99999;\n\n    var shader = new PIXI.PixiShader(gl);\n\n    shader.fragmentSrc = this.defaultShader.fragmentSrc;\n    shader.uniforms = {};\n    shader.init();\n\n    this.defaultShader.shaders[gl.id] = shader;\n};\n\n/**\n* @method begin\n* @param renderSession {Object} The RenderSession object\n*/\nPIXI.WebGLSpriteBatch.prototype.begin = function(renderSession)\n{\n    this.renderSession = renderSession;\n    this.shader = this.renderSession.shaderManager.defaultShader;\n\n    this.start();\n};\n\n/**\n* @method end\n*/\nPIXI.WebGLSpriteBatch.prototype.end = function()\n{\n    this.flush();\n};\n\n/**\n* @method render\n* @param sprite {Sprite} the sprite to render when using this spritebatch\n*/\nPIXI.WebGLSpriteBatch.prototype.render = function(sprite)\n{\n    var texture = sprite.texture;\n\n   //TODO set blend modes.. \n    // check texture..\n    if(this.currentBatchSize >= this.size)\n    {\n        this.flush();\n        this.currentBaseTexture = texture.baseTexture;\n    }\n\n    // get the uvs for the texture\n    var uvs = texture._uvs;\n    // if the uvs have not updated then no point rendering just yet!\n    if(!uvs)return;\n\n    // TODO trim??\n    var aX = sprite.anchor.x;\n    var aY = sprite.anchor.y;\n\n    var w0, w1, h0, h1;\n        \n    if (texture.trim)\n    {\n        // if the sprite is trimmed then we need to add the extra space before transforming the sprite coords..\n        var trim = texture.trim;\n\n        w1 = trim.x - aX * trim.width;\n        w0 = w1 + texture.crop.width;\n\n        h1 = trim.y - aY * trim.height;\n        h0 = h1 + texture.crop.height;\n\n    }\n    else\n    {\n        w0 = (texture.frame.width ) * (1-aX);\n        w1 = (texture.frame.width ) * -aX;\n\n        h0 = texture.frame.height * (1-aY);\n        h1 = texture.frame.height * -aY;\n    }\n\n    var index = this.currentBatchSize * 4 * this.vertSize;\n    \n    var resolution = texture.baseTexture.resolution;\n\n    var worldTransform = sprite.worldTransform;\n\n    var a = worldTransform.a / resolution;\n    var b = worldTransform.b / resolution;\n    var c = worldTransform.c / resolution;\n    var d = worldTransform.d / resolution;\n    var tx = worldTransform.tx;\n    var ty = worldTransform.ty;\n\n    var colors = this.colors;\n    var positions = this.positions;\n\n    if(this.renderSession.roundPixels)\n    {\n        // xy\n        positions[index] = a * w1 + c * h1 + tx | 0;\n        positions[index+1] = d * h1 + b * w1 + ty | 0;\n\n        // xy\n        positions[index+5] = a * w0 + c * h1 + tx | 0;\n        positions[index+6] = d * h1 + b * w0 + ty | 0;\n\n         // xy\n        positions[index+10] = a * w0 + c * h0 + tx | 0;\n        positions[index+11] = d * h0 + b * w0 + ty | 0;\n\n        // xy\n        positions[index+15] = a * w1 + c * h0 + tx | 0;\n        positions[index+16] = d * h0 + b * w1 + ty | 0;\n    }\n    else\n    {\n        // xy\n        positions[index] = a * w1 + c * h1 + tx;\n        positions[index+1] = d * h1 + b * w1 + ty;\n\n        // xy\n        positions[index+5] = a * w0 + c * h1 + tx;\n        positions[index+6] = d * h1 + b * w0 + ty;\n\n         // xy\n        positions[index+10] = a * w0 + c * h0 + tx;\n        positions[index+11] = d * h0 + b * w0 + ty;\n\n        // xy\n        positions[index+15] = a * w1 + c * h0 + tx;\n        positions[index+16] = d * h0 + b * w1 + ty;\n    }\n    \n    // uv\n    positions[index+2] = uvs.x0;\n    positions[index+3] = uvs.y0;\n\n    // uv\n    positions[index+7] = uvs.x1;\n    positions[index+8] = uvs.y1;\n\n     // uv\n    positions[index+12] = uvs.x2;\n    positions[index+13] = uvs.y2;\n\n    // uv\n    positions[index+17] = uvs.x3;\n    positions[index+18] = uvs.y3;\n\n    // color and alpha\n    var tint = sprite.tint;\n    colors[index+4] = colors[index+9] = colors[index+14] = colors[index+19] = (tint >> 16) + (tint & 0xff00) + ((tint & 0xff) << 16) + (sprite.worldAlpha * 255 << 24);\n\n    // increment the batchsize\n    this.sprites[this.currentBatchSize++] = sprite;\n\n\n};\n\n/**\n* Renders a TilingSprite using the spriteBatch.\n* \n* @method renderTilingSprite\n* @param sprite {TilingSprite} the tilingSprite to render\n*/\nPIXI.WebGLSpriteBatch.prototype.renderTilingSprite = function(tilingSprite)\n{\n    var texture = tilingSprite.tilingTexture;\n\n    // check texture..\n    if(this.currentBatchSize >= this.size)\n    {\n        //return;\n        this.flush();\n        this.currentBaseTexture = texture.baseTexture;\n    }\n\n     // set the textures uvs temporarily\n    // TODO create a separate texture so that we can tile part of a texture\n\n    if(!tilingSprite._uvs)tilingSprite._uvs = new PIXI.TextureUvs();\n\n    var uvs = tilingSprite._uvs;\n\n    tilingSprite.tilePosition.x %= texture.baseTexture.width * tilingSprite.tileScaleOffset.x;\n    tilingSprite.tilePosition.y %= texture.baseTexture.height * tilingSprite.tileScaleOffset.y;\n\n    var offsetX =  tilingSprite.tilePosition.x/(texture.baseTexture.width*tilingSprite.tileScaleOffset.x);\n    var offsetY =  tilingSprite.tilePosition.y/(texture.baseTexture.height*tilingSprite.tileScaleOffset.y);\n\n    var scaleX =  (tilingSprite.width / texture.baseTexture.width)  / (tilingSprite.tileScale.x * tilingSprite.tileScaleOffset.x);\n    var scaleY =  (tilingSprite.height / texture.baseTexture.height) / (tilingSprite.tileScale.y * tilingSprite.tileScaleOffset.y);\n\n    uvs.x0 = 0 - offsetX;\n    uvs.y0 = 0 - offsetY;\n\n    uvs.x1 = (1 * scaleX) - offsetX;\n    uvs.y1 = 0 - offsetY;\n\n    uvs.x2 = (1 * scaleX) - offsetX;\n    uvs.y2 = (1 * scaleY) - offsetY;\n\n    uvs.x3 = 0 - offsetX;\n    uvs.y3 = (1 * scaleY) - offsetY;\n\n    // get the tilingSprites current alpha and tint and combining them into a single color\n    var tint = tilingSprite.tint;\n    var color = (tint >> 16) + (tint & 0xff00) + ((tint & 0xff) << 16) + (tilingSprite.alpha * 255 << 24);\n\n    var positions = this.positions;\n    var colors = this.colors;\n\n    var width = tilingSprite.width;\n    var height = tilingSprite.height;\n\n    // TODO trim??\n    var aX = tilingSprite.anchor.x;\n    var aY = tilingSprite.anchor.y;\n    var w0 = width * (1-aX);\n    var w1 = width * -aX;\n\n    var h0 = height * (1-aY);\n    var h1 = height * -aY;\n\n    var index = this.currentBatchSize * 4 * this.vertSize;\n\n    var resolution = texture.baseTexture.resolution;\n\n    var worldTransform = tilingSprite.worldTransform;\n\n    var a = worldTransform.a / resolution;//[0];\n    var b = worldTransform.b / resolution;//[3];\n    var c = worldTransform.c / resolution;//[1];\n    var d = worldTransform.d / resolution;//[4];\n    var tx = worldTransform.tx;//[2];\n    var ty = worldTransform.ty;//[5];\n\n    // xy\n    positions[index++] = a * w1 + c * h1 + tx;\n    positions[index++] = d * h1 + b * w1 + ty;\n    // uv\n    positions[index++] = uvs.x0;\n    positions[index++] = uvs.y0;\n    // color\n    colors[index++] = color;\n\n    // xy\n    positions[index++] = (a * w0 + c * h1 + tx);\n    positions[index++] = d * h1 + b * w0 + ty;\n    // uv\n    positions[index++] = uvs.x1;\n    positions[index++] = uvs.y1;\n    // color\n    colors[index++] = color;\n    \n    // xy\n    positions[index++] = a * w0 + c * h0 + tx;\n    positions[index++] = d * h0 + b * w0 + ty;\n    // uv\n    positions[index++] = uvs.x2;\n    positions[index++] = uvs.y2;\n    // color\n    colors[index++] = color;\n\n    // xy\n    positions[index++] = a * w1 + c * h0 + tx;\n    positions[index++] = d * h0 + b * w1 + ty;\n    // uv\n    positions[index++] = uvs.x3;\n    positions[index++] = uvs.y3;\n    // color\n    colors[index++] = color;\n\n    // increment the batchsize\n    this.sprites[this.currentBatchSize++] = tilingSprite;\n};\n\n/**\n* Renders the content and empties the current batch.\n*\n* @method flush\n*/\nPIXI.WebGLSpriteBatch.prototype.flush = function()\n{\n    // If the batch is length 0 then return as there is nothing to draw\n    if (this.currentBatchSize===0)return;\n\n    var gl = this.gl;\n    var shader;\n\n    if(this.dirty)\n    {\n        this.dirty = false;\n        // bind the main texture\n        gl.activeTexture(gl.TEXTURE0);\n\n        // bind the buffers\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\n        shader =  this.defaultShader.shaders[gl.id];\n\n        // this is the same for each shader?\n        var stride =  this.vertSize * 4;\n        gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, stride, 0);\n        gl.vertexAttribPointer(shader.aTextureCoord, 2, gl.FLOAT, false, stride, 2 * 4);\n\n        // color attributes will be interpreted as unsigned bytes and normalized\n        gl.vertexAttribPointer(shader.colorAttribute, 4, gl.UNSIGNED_BYTE, true, stride, 4 * 4);\n    }\n\n    // upload the verts to the buffer  \n    if(this.currentBatchSize > ( this.size * 0.5 ) )\n    {\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertices);\n    }\n    else\n    {\n        var view = this.positions.subarray(0, this.currentBatchSize * 4 * this.vertSize);\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n    }\n\n    var nextTexture, nextBlendMode, nextShader;\n    var batchSize = 0;\n    var start = 0;\n\n    var currentBaseTexture = null;\n    var currentBlendMode = this.renderSession.blendModeManager.currentBlendMode;\n    var currentShader = null;\n\n    var blendSwap = false;\n    var shaderSwap = false;\n    var sprite;\n\n    for (var i = 0, j = this.currentBatchSize; i < j; i++) {\n        \n        sprite = this.sprites[i];\n\n        nextTexture = sprite.texture.baseTexture;\n        nextBlendMode = sprite.blendMode;\n        nextShader = sprite.shader || this.defaultShader;\n\n        blendSwap = currentBlendMode !== nextBlendMode;\n        shaderSwap = currentShader !== nextShader; // should I use _UIDS???\n\n        if(currentBaseTexture !== nextTexture || blendSwap || shaderSwap)\n        {\n            this.renderBatch(currentBaseTexture, batchSize, start);\n\n            start = i;\n            batchSize = 0;\n            currentBaseTexture = nextTexture;\n\n            if( blendSwap )\n            {\n                currentBlendMode = nextBlendMode;\n                this.renderSession.blendModeManager.setBlendMode( currentBlendMode );\n            }\n\n            if( shaderSwap )\n            {\n                currentShader = nextShader;\n                \n                shader = currentShader.shaders[gl.id];\n\n                if(!shader)\n                {\n                    shader = new PIXI.PixiShader(gl);\n\n                    shader.fragmentSrc =currentShader.fragmentSrc;\n                    shader.uniforms =currentShader.uniforms;\n                    shader.init();\n\n                    currentShader.shaders[gl.id] = shader;\n                }\n\n                // set shader function???\n                this.renderSession.shaderManager.setShader(shader);\n\n                if(shader.dirty)shader.syncUniforms();\n                \n                // both thease only need to be set if they are changing..\n                // set the projection\n                var projection = this.renderSession.projection;\n                gl.uniform2f(shader.projectionVector, projection.x, projection.y);\n\n                // TODO - this is temprorary!\n                var offsetVector = this.renderSession.offset;\n                gl.uniform2f(shader.offsetVector, offsetVector.x, offsetVector.y);\n\n                // set the pointers\n            }\n        }\n\n        batchSize++;\n    }\n\n    this.renderBatch(currentBaseTexture, batchSize, start);\n\n    // then reset the batch!\n    this.currentBatchSize = 0;\n};\n\n/**\n* @method renderBatch\n* @param texture {Texture}\n* @param size {Number}\n* @param startIndex {Number}\n*/\nPIXI.WebGLSpriteBatch.prototype.renderBatch = function(texture, size, startIndex)\n{\n    if(size === 0)return;\n\n    var gl = this.gl;\n\n    // check if a texture is dirty..\n    if(texture._dirty[gl.id])\n    {\n        this.renderSession.renderer.updateTexture(texture);\n    }\n    else\n    {\n        // bind the current texture\n        gl.bindTexture(gl.TEXTURE_2D, texture._glTextures[gl.id]);\n    }\n\n    // now draw those suckas!\n    gl.drawElements(gl.TRIANGLES, size * 6, gl.UNSIGNED_SHORT, startIndex * 6 * 2);\n    \n    // increment the draw count\n    this.renderSession.drawCount++;\n};\n\n/**\n* @method stop\n*/\nPIXI.WebGLSpriteBatch.prototype.stop = function()\n{\n    this.flush();\n    this.dirty = true;\n};\n\n/**\n* @method start\n*/\nPIXI.WebGLSpriteBatch.prototype.start = function()\n{\n    this.dirty = true;\n};\n\n/**\n* Destroys the SpriteBatch.\n* \n* @method destroy\n*/\nPIXI.WebGLSpriteBatch.prototype.destroy = function()\n{\n    this.vertices = null;\n    this.indices = null;\n    \n    this.gl.deleteBuffer( this.vertexBuffer );\n    this.gl.deleteBuffer( this.indexBuffer );\n    \n    this.currentBaseTexture = null;\n    \n    this.gl = null;\n};\r\n/**\n * @author Mat Groves\n * \n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n *\n * Heavily inspired by LibGDX's WebGLSpriteBatch:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/WebGLSpriteBatch.java\n */\n\n/**\n* @class WebGLFastSpriteBatch\n* @constructor\n*/\nPIXI.WebGLFastSpriteBatch = function(gl)\n{\n    /**\n     * @property vertSize\n     * @type Number\n     */\n    this.vertSize = 10;\n\n    /**\n     * @property maxSize\n     * @type Number\n     */\n    this.maxSize = 6000;//Math.pow(2, 16) /  this.vertSize;\n\n    /**\n     * @property size\n     * @type Number\n     */\n    this.size = this.maxSize;\n\n    //the total number of floats in our batch\n    var numVerts = this.size * 4 *  this.vertSize;\n\n    //the total number of indices in our batch\n    var numIndices = this.maxSize * 6;\n\n    /**\n     * Vertex data\n     * @property vertices\n     * @type Float32Array\n     */\n    this.vertices = new PIXI.Float32Array(numVerts);\n\n    /**\n     * Index data\n     * @property indices\n     * @type Uint16Array\n     */\n    this.indices = new PIXI.Uint16Array(numIndices);\n    \n    /**\n     * @property vertexBuffer\n     * @type Object\n     */\n    this.vertexBuffer = null;\n\n    /**\n     * @property indexBuffer\n     * @type Object\n     */\n    this.indexBuffer = null;\n\n    /**\n     * @property lastIndexCount\n     * @type Number\n     */\n    this.lastIndexCount = 0;\n\n    for (var i=0, j=0; i < numIndices; i += 6, j += 4)\n    {\n        this.indices[i + 0] = j + 0;\n        this.indices[i + 1] = j + 1;\n        this.indices[i + 2] = j + 2;\n        this.indices[i + 3] = j + 0;\n        this.indices[i + 4] = j + 2;\n        this.indices[i + 5] = j + 3;\n    }\n\n    /**\n     * @property drawing\n     * @type Boolean\n     */\n    this.drawing = false;\n\n    /**\n     * @property currentBatchSize\n     * @type Number\n     */\n    this.currentBatchSize = 0;\n\n    /**\n     * @property currentBaseTexture\n     * @type BaseTexture\n     */\n    this.currentBaseTexture = null;\n   \n    /**\n     * @property currentBlendMode\n     * @type Number\n     */\n    this.currentBlendMode = 0;\n\n    /**\n     * @property renderSession\n     * @type Object\n     */\n    this.renderSession = null;\n    \n    /**\n     * @property shader\n     * @type Object\n     */\n    this.shader = null;\n\n    /**\n     * @property matrix\n     * @type Matrix\n     */\n    this.matrix = null;\n\n    this.setContext(gl);\n};\n\nPIXI.WebGLFastSpriteBatch.prototype.constructor = PIXI.WebGLFastSpriteBatch;\n\n/**\n * Sets the WebGL Context.\n *\n * @method setContext\n * @param gl {WebGLContext} the current WebGL drawing context\n */\nPIXI.WebGLFastSpriteBatch.prototype.setContext = function(gl)\n{\n    this.gl = gl;\n\n    // create a couple of buffers\n    this.vertexBuffer = gl.createBuffer();\n    this.indexBuffer = gl.createBuffer();\n\n    // 65535 is max index, so 65535 / 6 = 10922.\n\n    //upload the index data\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertices, gl.DYNAMIC_DRAW);\n};\n\n/**\n * @method begin\n * @param spriteBatch {WebGLSpriteBatch}\n * @param renderSession {Object}\n */\nPIXI.WebGLFastSpriteBatch.prototype.begin = function(spriteBatch, renderSession)\n{\n    this.renderSession = renderSession;\n    this.shader = this.renderSession.shaderManager.fastShader;\n\n    this.matrix = spriteBatch.worldTransform.toArray(true);\n\n    this.start();\n};\n\n/**\n * @method end\n */\nPIXI.WebGLFastSpriteBatch.prototype.end = function()\n{\n    this.flush();\n};\n\n/**\n * @method render\n * @param spriteBatch {WebGLSpriteBatch}\n */\nPIXI.WebGLFastSpriteBatch.prototype.render = function(spriteBatch)\n{\n    var children = spriteBatch.children;\n    var sprite = children[0];\n\n    // if the uvs have not updated then no point rendering just yet!\n    \n    // check texture.\n    if(!sprite.texture._uvs)return;\n   \n    this.currentBaseTexture = sprite.texture.baseTexture;\n    \n    // check blend mode\n    if(sprite.blendMode !== this.renderSession.blendModeManager.currentBlendMode)\n    {\n        this.flush();\n        this.renderSession.blendModeManager.setBlendMode(sprite.blendMode);\n    }\n    \n    for(var i=0,j= children.length; i<j; i++)\n    {\n        this.renderSprite(children[i]);\n    }\n\n    this.flush();\n};\n\n/**\n * @method renderSprite\n * @param sprite {Sprite}\n */\nPIXI.WebGLFastSpriteBatch.prototype.renderSprite = function(sprite)\n{\n    //sprite = children[i];\n    if(!sprite.visible)return;\n    \n    // TODO trim??\n    if(sprite.texture.baseTexture !== this.currentBaseTexture)\n    {\n        this.flush();\n        this.currentBaseTexture = sprite.texture.baseTexture;\n        \n        if(!sprite.texture._uvs)return;\n    }\n\n    var uvs, vertices = this.vertices, width, height, w0, w1, h0, h1, index;\n\n    uvs = sprite.texture._uvs;\n\n    width = sprite.texture.frame.width;\n    height = sprite.texture.frame.height;\n\n    if (sprite.texture.trim)\n    {\n        // if the sprite is trimmed then we need to add the extra space before transforming the sprite coords..\n        var trim = sprite.texture.trim;\n\n        w1 = trim.x - sprite.anchor.x * trim.width;\n        w0 = w1 + sprite.texture.crop.width;\n\n        h1 = trim.y - sprite.anchor.y * trim.height;\n        h0 = h1 + sprite.texture.crop.height;\n    }\n    else\n    {\n        w0 = (sprite.texture.frame.width ) * (1-sprite.anchor.x);\n        w1 = (sprite.texture.frame.width ) * -sprite.anchor.x;\n\n        h0 = sprite.texture.frame.height * (1-sprite.anchor.y);\n        h1 = sprite.texture.frame.height * -sprite.anchor.y;\n    }\n\n    index = this.currentBatchSize * 4 * this.vertSize;\n\n    // xy\n    vertices[index++] = w1;\n    vertices[index++] = h1;\n\n    vertices[index++] = sprite.position.x;\n    vertices[index++] = sprite.position.y;\n\n    //scale\n    vertices[index++] = sprite.scale.x;\n    vertices[index++] = sprite.scale.y;\n\n    //rotation\n    vertices[index++] = sprite.rotation;\n\n    // uv\n    vertices[index++] = uvs.x0;\n    vertices[index++] = uvs.y1;\n    // color\n    vertices[index++] = sprite.alpha;\n \n\n    // xy\n    vertices[index++] = w0;\n    vertices[index++] = h1;\n\n    vertices[index++] = sprite.position.x;\n    vertices[index++] = sprite.position.y;\n\n    //scale\n    vertices[index++] = sprite.scale.x;\n    vertices[index++] = sprite.scale.y;\n\n     //rotation\n    vertices[index++] = sprite.rotation;\n\n    // uv\n    vertices[index++] = uvs.x1;\n    vertices[index++] = uvs.y1;\n    // color\n    vertices[index++] = sprite.alpha;\n  \n\n    // xy\n    vertices[index++] = w0;\n    vertices[index++] = h0;\n\n    vertices[index++] = sprite.position.x;\n    vertices[index++] = sprite.position.y;\n\n    //scale\n    vertices[index++] = sprite.scale.x;\n    vertices[index++] = sprite.scale.y;\n\n     //rotation\n    vertices[index++] = sprite.rotation;\n\n    // uv\n    vertices[index++] = uvs.x2;\n    vertices[index++] = uvs.y2;\n    // color\n    vertices[index++] = sprite.alpha;\n \n\n\n\n    // xy\n    vertices[index++] = w1;\n    vertices[index++] = h0;\n\n    vertices[index++] = sprite.position.x;\n    vertices[index++] = sprite.position.y;\n\n    //scale\n    vertices[index++] = sprite.scale.x;\n    vertices[index++] = sprite.scale.y;\n\n     //rotation\n    vertices[index++] = sprite.rotation;\n\n    // uv\n    vertices[index++] = uvs.x3;\n    vertices[index++] = uvs.y3;\n    // color\n    vertices[index++] = sprite.alpha;\n\n    // increment the batchs\n    this.currentBatchSize++;\n\n    if(this.currentBatchSize >= this.size)\n    {\n        this.flush();\n    }\n};\n\n/**\n * @method flush\n */\nPIXI.WebGLFastSpriteBatch.prototype.flush = function()\n{\n    // If the batch is length 0 then return as there is nothing to draw\n    if (this.currentBatchSize===0)return;\n\n    var gl = this.gl;\n    \n    // bind the current texture\n\n    if(!this.currentBaseTexture._glTextures[gl.id])this.renderSession.renderer.updateTexture(this.currentBaseTexture, gl);\n\n    gl.bindTexture(gl.TEXTURE_2D, this.currentBaseTexture._glTextures[gl.id]);\n\n    // upload the verts to the buffer\n   \n    if(this.currentBatchSize > ( this.size * 0.5 ) )\n    {\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertices);\n    }\n    else\n    {\n        var view = this.vertices.subarray(0, this.currentBatchSize * 4 * this.vertSize);\n\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n    }\n    \n    // now draw those suckas!\n    gl.drawElements(gl.TRIANGLES, this.currentBatchSize * 6, gl.UNSIGNED_SHORT, 0);\n   \n    // then reset the batch!\n    this.currentBatchSize = 0;\n\n    // increment the draw count\n    this.renderSession.drawCount++;\n};\n\n\n/**\n * @method stop\n */\nPIXI.WebGLFastSpriteBatch.prototype.stop = function()\n{\n    this.flush();\n};\n\n/**\n * @method start\n */\nPIXI.WebGLFastSpriteBatch.prototype.start = function()\n{\n    var gl = this.gl;\n\n    // bind the main texture\n    gl.activeTexture(gl.TEXTURE0);\n\n    // bind the buffers\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\n    // set the projection\n    var projection = this.renderSession.projection;\n    gl.uniform2f(this.shader.projectionVector, projection.x, projection.y);\n\n    // set the matrix\n    gl.uniformMatrix3fv(this.shader.uMatrix, false, this.matrix);\n\n    // set the pointers\n    var stride =  this.vertSize * 4;\n\n    gl.vertexAttribPointer(this.shader.aVertexPosition, 2, gl.FLOAT, false, stride, 0);\n    gl.vertexAttribPointer(this.shader.aPositionCoord, 2, gl.FLOAT, false, stride, 2 * 4);\n    gl.vertexAttribPointer(this.shader.aScale, 2, gl.FLOAT, false, stride, 4 * 4);\n    gl.vertexAttribPointer(this.shader.aRotation, 1, gl.FLOAT, false, stride, 6 * 4);\n    gl.vertexAttribPointer(this.shader.aTextureCoord, 2, gl.FLOAT, false, stride, 7 * 4);\n    gl.vertexAttribPointer(this.shader.colorAttribute, 1, gl.FLOAT, false, stride, 9 * 4);\n    \n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n* @class WebGLFilterManager\n* @constructor\n*/\nPIXI.WebGLFilterManager = function()\n{\n    /**\n     * @property filterStack\n     * @type Array\n     */\n    this.filterStack = [];\n    \n    /**\n     * @property offsetX\n     * @type Number\n     */\n    this.offsetX = 0;\n\n    /**\n     * @property offsetY\n     * @type Number\n     */\n    this.offsetY = 0;\n};\n\nPIXI.WebGLFilterManager.prototype.constructor = PIXI.WebGLFilterManager;\n\n/**\n* Initialises the context and the properties.\n* \n* @method setContext \n* @param gl {WebGLContext} the current WebGL drawing context\n*/\nPIXI.WebGLFilterManager.prototype.setContext = function(gl)\n{\n    this.gl = gl;\n    this.texturePool = [];\n\n    this.initShaderBuffers();\n};\n\n/**\n* @method begin\n* @param renderSession {RenderSession} \n* @param buffer {ArrayBuffer} \n*/\nPIXI.WebGLFilterManager.prototype.begin = function(renderSession, buffer)\n{\n    this.renderSession = renderSession;\n    this.defaultShader = renderSession.shaderManager.defaultShader;\n\n    var projection = this.renderSession.projection;\n    this.width = projection.x * 2;\n    this.height = -projection.y * 2;\n    this.buffer = buffer;\n};\n\n/**\n* Applies the filter and adds it to the current filter stack.\n* \n* @method pushFilter\n* @param filterBlock {Object} the filter that will be pushed to the current filter stack\n*/\nPIXI.WebGLFilterManager.prototype.pushFilter = function(filterBlock)\n{\n    var gl = this.gl;\n\n    var projection = this.renderSession.projection;\n    var offset = this.renderSession.offset;\n\n    filterBlock._filterArea = filterBlock.target.filterArea || filterBlock.target.getBounds();\n\n    // filter program\n    // OPTIMISATION - the first filter is free if its a simple color change?\n    this.filterStack.push(filterBlock);\n\n    var filter = filterBlock.filterPasses[0];\n\n    this.offsetX += filterBlock._filterArea.x;\n    this.offsetY += filterBlock._filterArea.y;\n\n    var texture = this.texturePool.pop();\n    if(!texture)\n    {\n        texture = new PIXI.FilterTexture(this.gl, this.width, this.height);\n    }\n    else\n    {\n        texture.resize(this.width, this.height);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D,  texture.texture);\n\n    var filterArea = filterBlock._filterArea;// filterBlock.target.getBounds();///filterBlock.target.filterArea;\n\n    var padding = filter.padding;\n    filterArea.x -= padding;\n    filterArea.y -= padding;\n    filterArea.width += padding * 2;\n    filterArea.height += padding * 2;\n\n    // cap filter to screen size..\n    if(filterArea.x < 0)filterArea.x = 0;\n    if(filterArea.width > this.width)filterArea.width = this.width;\n    if(filterArea.y < 0)filterArea.y = 0;\n    if(filterArea.height > this.height)filterArea.height = this.height;\n\n    //gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,  filterArea.width, filterArea.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, texture.frameBuffer);\n\n    // set view port\n    gl.viewport(0, 0, filterArea.width, filterArea.height);\n\n    projection.x = filterArea.width/2;\n    projection.y = -filterArea.height/2;\n\n    offset.x = -filterArea.x;\n    offset.y = -filterArea.y;\n\n    // update projection\n    // now restore the regular shader..\n    // this.renderSession.shaderManager.setShader(this.defaultShader);\n    //gl.uniform2f(this.defaultShader.projectionVector, filterArea.width/2, -filterArea.height/2);\n    //gl.uniform2f(this.defaultShader.offsetVector, -filterArea.x, -filterArea.y);\n\n    gl.colorMask(true, true, true, true);\n    gl.clearColor(0,0,0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    filterBlock._glFilterTexture = texture;\n\n};\n\n/**\n* Removes the last filter from the filter stack and doesn't return it.\n* \n* @method popFilter\n*/\nPIXI.WebGLFilterManager.prototype.popFilter = function()\n{\n    var gl = this.gl;\n    var filterBlock = this.filterStack.pop();\n    var filterArea = filterBlock._filterArea;\n    var texture = filterBlock._glFilterTexture;\n    var projection = this.renderSession.projection;\n    var offset = this.renderSession.offset;\n\n    if(filterBlock.filterPasses.length > 1)\n    {\n        gl.viewport(0, 0, filterArea.width, filterArea.height);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\n        this.vertexArray[0] = 0;\n        this.vertexArray[1] = filterArea.height;\n\n        this.vertexArray[2] = filterArea.width;\n        this.vertexArray[3] = filterArea.height;\n\n        this.vertexArray[4] = 0;\n        this.vertexArray[5] = 0;\n\n        this.vertexArray[6] = filterArea.width;\n        this.vertexArray[7] = 0;\n\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertexArray);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);\n        // now set the uvs..\n        this.uvArray[2] = filterArea.width/this.width;\n        this.uvArray[5] = filterArea.height/this.height;\n        this.uvArray[6] = filterArea.width/this.width;\n        this.uvArray[7] = filterArea.height/this.height;\n\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.uvArray);\n\n        var inputTexture = texture;\n        var outputTexture = this.texturePool.pop();\n        if(!outputTexture)outputTexture = new PIXI.FilterTexture(this.gl, this.width, this.height);\n        outputTexture.resize(this.width, this.height);\n\n        // need to clear this FBO as it may have some left over elements from a previous filter.\n        gl.bindFramebuffer(gl.FRAMEBUFFER, outputTexture.frameBuffer );\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        gl.disable(gl.BLEND);\n\n        for (var i = 0; i < filterBlock.filterPasses.length-1; i++)\n        {\n            var filterPass = filterBlock.filterPasses[i];\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, outputTexture.frameBuffer );\n\n            // set texture\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n            // draw texture..\n            //filterPass.applyFilterPass(filterArea.width, filterArea.height);\n            this.applyFilterPass(filterPass, filterArea, filterArea.width, filterArea.height);\n\n            // swap the textures..\n            var temp = inputTexture;\n            inputTexture = outputTexture;\n            outputTexture = temp;\n        }\n\n        gl.enable(gl.BLEND);\n\n        texture = inputTexture;\n        this.texturePool.push(outputTexture);\n    }\n\n    var filter = filterBlock.filterPasses[filterBlock.filterPasses.length-1];\n\n    this.offsetX -= filterArea.x;\n    this.offsetY -= filterArea.y;\n\n    var sizeX = this.width;\n    var sizeY = this.height;\n\n    var offsetX = 0;\n    var offsetY = 0;\n\n    var buffer = this.buffer;\n\n    // time to render the filters texture to the previous scene\n    if(this.filterStack.length === 0)\n    {\n        gl.colorMask(true, true, true, true);//this.transparent);\n    }\n    else\n    {\n        var currentFilter = this.filterStack[this.filterStack.length-1];\n        filterArea = currentFilter._filterArea;\n\n        sizeX = filterArea.width;\n        sizeY = filterArea.height;\n\n        offsetX = filterArea.x;\n        offsetY = filterArea.y;\n\n        buffer =  currentFilter._glFilterTexture.frameBuffer;\n    }\n\n    // TODO need to remove these global elements..\n    projection.x = sizeX/2;\n    projection.y = -sizeY/2;\n\n    offset.x = offsetX;\n    offset.y = offsetY;\n\n    filterArea = filterBlock._filterArea;\n\n    var x = filterArea.x-offsetX;\n    var y = filterArea.y-offsetY;\n\n    // update the buffers..\n    // make sure to flip the y!\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\n    this.vertexArray[0] = x;\n    this.vertexArray[1] = y + filterArea.height;\n\n    this.vertexArray[2] = x + filterArea.width;\n    this.vertexArray[3] = y + filterArea.height;\n\n    this.vertexArray[4] = x;\n    this.vertexArray[5] = y;\n\n    this.vertexArray[6] = x + filterArea.width;\n    this.vertexArray[7] = y;\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertexArray);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);\n\n    this.uvArray[2] = filterArea.width/this.width;\n    this.uvArray[5] = filterArea.height/this.height;\n    this.uvArray[6] = filterArea.width/this.width;\n    this.uvArray[7] = filterArea.height/this.height;\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.uvArray);\n\n    gl.viewport(0, 0, sizeX * this.renderSession.resolution, sizeY * this.renderSession.resolution);\n\n    // bind the buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, buffer );\n\n    // set the blend mode! \n    //gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA)\n\n    // set texture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, texture.texture);\n\n    // apply!\n    this.applyFilterPass(filter, filterArea, sizeX, sizeY);\n\n    // now restore the regular shader.. should happen automatically now..\n    // this.renderSession.shaderManager.setShader(this.defaultShader);\n    // gl.uniform2f(this.defaultShader.projectionVector, sizeX/2, -sizeY/2);\n    // gl.uniform2f(this.defaultShader.offsetVector, -offsetX, -offsetY);\n\n    // return the texture to the pool\n    this.texturePool.push(texture);\n    filterBlock._glFilterTexture = null;\n};\n\n\n/**\n* Applies the filter to the specified area.\n* \n* @method applyFilterPass\n* @param filter {AbstractFilter} the filter that needs to be applied\n* @param filterArea {Texture} TODO - might need an update\n* @param width {Number} the horizontal range of the filter\n* @param height {Number} the vertical range of the filter\n*/\nPIXI.WebGLFilterManager.prototype.applyFilterPass = function(filter, filterArea, width, height)\n{\n    // use program\n    var gl = this.gl;\n    var shader = filter.shaders[gl.id];\n\n    if(!shader)\n    {\n        shader = new PIXI.PixiShader(gl);\n\n        shader.fragmentSrc = filter.fragmentSrc;\n        shader.uniforms = filter.uniforms;\n        shader.init();\n\n        filter.shaders[gl.id] = shader;\n    }\n\n    // set the shader\n    this.renderSession.shaderManager.setShader(shader);\n\n//    gl.useProgram(shader.program);\n\n    gl.uniform2f(shader.projectionVector, width/2, -height/2);\n    gl.uniform2f(shader.offsetVector, 0,0);\n\n    if(filter.uniforms.dimensions)\n    {\n        filter.uniforms.dimensions.value[0] = this.width;//width;\n        filter.uniforms.dimensions.value[1] = this.height;//height;\n        filter.uniforms.dimensions.value[2] = this.vertexArray[0];\n        filter.uniforms.dimensions.value[3] = this.vertexArray[5];//filterArea.height;\n    }\n\n    shader.syncUniforms();\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);\n    gl.vertexAttribPointer(shader.aTextureCoord, 2, gl.FLOAT, false, 0, 0);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n    gl.vertexAttribPointer(shader.colorAttribute, 2, gl.FLOAT, false, 0, 0);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\n    // draw the filter...\n    gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n    this.renderSession.drawCount++;\n};\n\n/**\n* Initialises the shader buffers.\n* \n* @method initShaderBuffers\n*/\nPIXI.WebGLFilterManager.prototype.initShaderBuffers = function()\n{\n    var gl = this.gl;\n\n    // create some buffers\n    this.vertexBuffer = gl.createBuffer();\n    this.uvBuffer = gl.createBuffer();\n    this.colorBuffer = gl.createBuffer();\n    this.indexBuffer = gl.createBuffer();\n\n    // bind and upload the vertexs..\n    // keep a reference to the vertexFloatData..\n    this.vertexArray = new PIXI.Float32Array([0.0, 0.0,\n                                         1.0, 0.0,\n                                         0.0, 1.0,\n                                         1.0, 1.0]);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertexArray, gl.STATIC_DRAW);\n\n    // bind and upload the uv buffer\n    this.uvArray = new PIXI.Float32Array([0.0, 0.0,\n                                     1.0, 0.0,\n                                     0.0, 1.0,\n                                     1.0, 1.0]);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.uvArray, gl.STATIC_DRAW);\n\n    this.colorArray = new PIXI.Float32Array([1.0, 0xFFFFFF,\n                                        1.0, 0xFFFFFF,\n                                        1.0, 0xFFFFFF,\n                                        1.0, 0xFFFFFF]);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.colorArray, gl.STATIC_DRAW);\n\n    // bind and upload the index\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 1, 2, 1, 3, 2]), gl.STATIC_DRAW);\n\n};\n\n/**\n* Destroys the filter and removes it from the filter stack.\n* \n* @method destroy\n*/\nPIXI.WebGLFilterManager.prototype.destroy = function()\n{\n    var gl = this.gl;\n\n    this.filterStack = null;\n    \n    this.offsetX = 0;\n    this.offsetY = 0;\n\n    // destroy textures\n    for (var i = 0; i < this.texturePool.length; i++) {\n        this.texturePool[i].destroy();\n    }\n    \n    this.texturePool = null;\n\n    //destroy buffers..\n    gl.deleteBuffer(this.vertexBuffer);\n    gl.deleteBuffer(this.uvBuffer);\n    gl.deleteBuffer(this.colorBuffer);\n    gl.deleteBuffer(this.indexBuffer);\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n* @class FilterTexture\n* @constructor\n* @param gl {WebGLContext} the current WebGL drawing context\n* @param width {Number} the horizontal range of the filter\n* @param height {Number} the vertical range of the filter\n* @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n*/\nPIXI.FilterTexture = function(gl, width, height, scaleMode)\n{\n    /**\n     * @property gl\n     * @type WebGLContext\n     */\n    this.gl = gl;\n\n    // next time to create a frame buffer and texture\n\n    /**\n     * @property frameBuffer\n     * @type Any\n     */\n    this.frameBuffer = gl.createFramebuffer();\n\n    /**\n     * @property texture\n     * @type Any\n     */\n    this.texture = gl.createTexture();\n\n    /**\n     * @property scaleMode\n     * @type Number\n     */\n    scaleMode = scaleMode || PIXI.scaleModes.DEFAULT;\n\n    gl.bindTexture(gl.TEXTURE_2D,  this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR : gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR : gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer );\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer );\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\n\n    // required for masking a mask??\n    this.renderBuffer = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.renderBuffer);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, this.renderBuffer);\n  \n    this.resize(width, height);\n};\n\nPIXI.FilterTexture.prototype.constructor = PIXI.FilterTexture;\n\n/**\n* Clears the filter texture.\n* \n* @method clear\n*/\nPIXI.FilterTexture.prototype.clear = function()\n{\n    var gl = this.gl;\n    \n    gl.clearColor(0,0,0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n};\n\n/**\n * Resizes the texture to the specified width and height\n *\n * @method resize\n * @param width {Number} the new width of the texture\n * @param height {Number} the new height of the texture\n */\nPIXI.FilterTexture.prototype.resize = function(width, height)\n{\n    if(this.width === width && this.height === height) return;\n\n    this.width = width;\n    this.height = height;\n\n    var gl = this.gl;\n\n    gl.bindTexture(gl.TEXTURE_2D,  this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,  width , height , 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    // update the stencil buffer width and height\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.renderBuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, width , height );\n};\n\n/**\n* Destroys the filter texture.\n* \n* @method destroy\n*/\nPIXI.FilterTexture.prototype.destroy = function()\n{\n    var gl = this.gl;\n    gl.deleteFramebuffer( this.frameBuffer );\n    gl.deleteTexture( this.texture );\n\n    this.frameBuffer = null;\n    this.texture = null;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * Creates a Canvas element of the given size.\n *\n * @class CanvasBuffer\n * @constructor\n * @param width {Number} the width for the newly created canvas\n * @param height {Number} the height for the newly created canvas\n */\nPIXI.CanvasBuffer = function(width, height)\n{\n    /**\n     * The width of the Canvas in pixels.\n     *\n     * @property width\n     * @type Number\n     */\n    this.width = width;\n\n    /**\n     * The height of the Canvas in pixels.\n     *\n     * @property height\n     * @type Number\n     */\n    this.height = height;\n\n    /**\n     * The Canvas object that belongs to this CanvasBuffer.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     */\n    this.canvas = document.createElement(\"canvas\");\n\n    /**\n     * A CanvasRenderingContext2D object representing a two-dimensional rendering context.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n    this.context = this.canvas.getContext(\"2d\");\n\n    this.canvas.width = width;\n    this.canvas.height = height;\n};\n\nPIXI.CanvasBuffer.prototype.constructor = PIXI.CanvasBuffer;\n\n/**\n * Clears the canvas that was created by the CanvasBuffer class.\n *\n * @method clear\n * @private\n */\nPIXI.CanvasBuffer.prototype.clear = function()\n{\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n    this.context.clearRect(0,0, this.width, this.height);\n};\n\n/**\n * Resizes the canvas to the specified width and height.\n *\n * @method resize\n * @param width {Number} the new width of the canvas\n * @param height {Number} the new height of the canvas\n */\nPIXI.CanvasBuffer.prototype.resize = function(width, height)\n{\n    this.width = this.canvas.width = width;\n    this.height = this.canvas.height = height;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * A set of functions used to handle masking.\n *\n * @class CanvasMaskManager\n * @constructor\n */\nPIXI.CanvasMaskManager = function()\n{\n};\n\nPIXI.CanvasMaskManager.prototype.constructor = PIXI.CanvasMaskManager;\n\n/**\n * This method adds it to the current stack of masks.\n *\n * @method pushMask\n * @param maskData {Object} the maskData that will be pushed\n * @param renderSession {Object} The renderSession whose context will be used for this mask manager.\n */\nPIXI.CanvasMaskManager.prototype.pushMask = function(maskData, renderSession)\n{\n\tvar context = renderSession.context;\n\n    context.save();\n    \n    var cacheAlpha = maskData.alpha;\n    var transform = maskData.worldTransform;\n\n    var resolution = renderSession.resolution;\n\n    context.setTransform(transform.a * resolution,\n                         transform.b * resolution,\n                         transform.c * resolution,\n                         transform.d * resolution,\n                         transform.tx * resolution,\n                         transform.ty * resolution);\n\n    PIXI.CanvasGraphics.renderGraphicsMask(maskData, context);\n\n    context.clip();\n\n    maskData.worldAlpha = cacheAlpha;\n};\n\n/**\n * Restores the current drawing context to the state it was before the mask was applied.\n *\n * @method popMask\n * @param renderSession {Object} The renderSession whose context will be used for this mask manager.\n */\nPIXI.CanvasMaskManager.prototype.popMask = function(renderSession)\n{\n    renderSession.context.restore();\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * Utility methods for Sprite/Texture tinting.\n *\n * @class CanvasTinter\n * @static\n */\nPIXI.CanvasTinter = function()\n{\n};\n\n/**\n * Basically this method just needs a sprite and a color and tints the sprite with the given color.\n * \n * @method getTintedTexture \n * @static\n * @param sprite {Sprite} the sprite to tint\n * @param color {Number} the color to use to tint the sprite with\n * @return {HTMLCanvasElement} The tinted canvas\n */\nPIXI.CanvasTinter.getTintedTexture = function(sprite, color)\n{\n    var texture = sprite.texture;\n\n    color = PIXI.CanvasTinter.roundColor(color);\n\n    var stringColor = \"#\" + (\"00000\" + ( color | 0).toString(16)).substr(-6);\n   \n    texture.tintCache = texture.tintCache || {};\n\n    if(texture.tintCache[stringColor]) return texture.tintCache[stringColor];\n\n     // clone texture..\n    var canvas = PIXI.CanvasTinter.canvas || document.createElement(\"canvas\");\n    \n    //PIXI.CanvasTinter.tintWithPerPixel(texture, stringColor, canvas);\n    PIXI.CanvasTinter.tintMethod(texture, color, canvas);\n\n    if(PIXI.CanvasTinter.convertTintToImage)\n    {\n        // is this better?\n        var tintImage = new Image();\n        tintImage.src = canvas.toDataURL();\n\n        texture.tintCache[stringColor] = tintImage;\n    }\n    else\n    {\n        texture.tintCache[stringColor] = canvas;\n        // if we are not converting the texture to an image then we need to lose the reference to the canvas\n        PIXI.CanvasTinter.canvas = null;\n    }\n\n    return canvas;\n};\n\n/**\n * Tint a texture using the \"multiply\" operation.\n * \n * @method tintWithMultiply\n * @static\n * @param texture {Texture} the texture to tint\n * @param color {Number} the color to use to tint the sprite with\n * @param canvas {HTMLCanvasElement} the current canvas\n */\nPIXI.CanvasTinter.tintWithMultiply = function(texture, color, canvas)\n{\n    var context = canvas.getContext( \"2d\" );\n\n    var crop = texture.crop;\n\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n\n    context.fillStyle = \"#\" + (\"00000\" + ( color | 0).toString(16)).substr(-6);\n    \n    context.fillRect(0, 0, crop.width, crop.height);\n    \n    context.globalCompositeOperation = \"multiply\";\n\n    context.drawImage(texture.baseTexture.source,\n                           crop.x,\n                           crop.y,\n                           crop.width,\n                           crop.height,\n                           0,\n                           0,\n                           crop.width,\n                           crop.height);\n\n    context.globalCompositeOperation = \"destination-atop\";\n\n    context.drawImage(texture.baseTexture.source,\n                           crop.x,\n                           crop.y,\n                           crop.width,\n                           crop.height,\n                           0,\n                           0,\n                           crop.width,\n                           crop.height);\n};\n\n/**\n * Tint a texture using the \"overlay\" operation.\n * \n * @method tintWithOverlay\n * @static\n * @param texture {Texture} the texture to tint\n * @param color {Number} the color to use to tint the sprite with\n * @param canvas {HTMLCanvasElement} the current canvas\n */\nPIXI.CanvasTinter.tintWithOverlay = function(texture, color, canvas)\n{\n    var context = canvas.getContext( \"2d\" );\n\n    var crop = texture.crop;\n\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    \n    context.globalCompositeOperation = \"copy\";\n    context.fillStyle = \"#\" + (\"00000\" + ( color | 0).toString(16)).substr(-6);\n    context.fillRect(0, 0, crop.width, crop.height);\n\n    context.globalCompositeOperation = \"destination-atop\";\n    context.drawImage(texture.baseTexture.source,\n                           crop.x,\n                           crop.y,\n                           crop.width,\n                           crop.height,\n                           0,\n                           0,\n                           crop.width,\n                           crop.height);\n    \n    //context.globalCompositeOperation = \"copy\";\n};\n\n/**\n * Tint a texture pixel per pixel.\n * \n * @method tintPerPixel\n * @static\n * @param texture {Texture} the texture to tint\n * @param color {Number} the color to use to tint the sprite with\n * @param canvas {HTMLCanvasElement} the current canvas\n */\nPIXI.CanvasTinter.tintWithPerPixel = function(texture, color, canvas)\n{\n    var context = canvas.getContext( \"2d\" );\n\n    var crop = texture.crop;\n\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n  \n    context.globalCompositeOperation = \"copy\";\n    context.drawImage(texture.baseTexture.source,\n                           crop.x,\n                           crop.y,\n                           crop.width,\n                           crop.height,\n                           0,\n                           0,\n                           crop.width,\n                           crop.height);\n\n    var rgbValues = PIXI.hex2rgb(color);\n    var r = rgbValues[0], g = rgbValues[1], b = rgbValues[2];\n\n    var pixelData = context.getImageData(0, 0, crop.width, crop.height);\n\n    var pixels = pixelData.data;\n\n    for (var i = 0; i < pixels.length; i += 4)\n    {\n        pixels[i+0] *= r;\n        pixels[i+1] *= g;\n        pixels[i+2] *= b;\n    }\n\n    context.putImageData(pixelData, 0, 0);\n};\n\n/**\n * Rounds the specified color according to the PIXI.CanvasTinter.cacheStepsPerColorChannel.\n * \n * @method roundColor\n * @static\n * @param color {number} the color to round, should be a hex color\n */\nPIXI.CanvasTinter.roundColor = function(color)\n{\n    var step = PIXI.CanvasTinter.cacheStepsPerColorChannel;\n\n    var rgbValues = PIXI.hex2rgb(color);\n\n    rgbValues[0] = Math.min(255, (rgbValues[0] / step) * step);\n    rgbValues[1] = Math.min(255, (rgbValues[1] / step) * step);\n    rgbValues[2] = Math.min(255, (rgbValues[2] / step) * step);\n\n    return PIXI.rgb2hex(rgbValues);\n};\n\n/**\n * Number of steps which will be used as a cap when rounding colors.\n *\n * @property cacheStepsPerColorChannel \n * @type Number\n * @static\n */\nPIXI.CanvasTinter.cacheStepsPerColorChannel = 8;\n\n/**\n * Tint cache boolean flag.\n *\n * @property convertTintToImage\n * @type Boolean\n * @static\n */\nPIXI.CanvasTinter.convertTintToImage = false;\n\n/**\n * Whether or not the Canvas BlendModes are supported, consequently the ability to tint using the multiply method.\n *\n * @property canUseMultiply\n * @type Boolean\n * @static\n */\nPIXI.CanvasTinter.canUseMultiply = PIXI.canUseNewCanvasBlendModes();\n\n/**\n * The tinting method that will be used.\n * \n * @method tintMethod\n * @static\n */\nPIXI.CanvasTinter.tintMethod = PIXI.CanvasTinter.canUseMultiply ? PIXI.CanvasTinter.tintWithMultiply :  PIXI.CanvasTinter.tintWithPerPixel;\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The CanvasRenderer draws the Stage and all its content onto a 2d canvas. This renderer should be used for browsers that do not support webGL.\n * Don't forget to add the CanvasRenderer.view to your DOM or you will not see anything :)\n *\n * @class CanvasRenderer\n * @constructor\n * @param [width=800] {Number} the width of the canvas view\n * @param [height=600] {Number} the height of the canvas view\n * @param [options] {Object} The optional renderer parameters\n * @param [options.view] {HTMLCanvasElement} the canvas to use as a view, optional\n * @param [options.transparent=false] {Boolean} If the render view is transparent, default false\n * @param [options.autoResize=false] {Boolean} If the render view is automatically resized, default false\n * @param [options.resolution=1] {Number} the resolution of the renderer retina would be 2\n * @param [options.clearBeforeRender=true] {Boolean} This sets if the CanvasRenderer will clear the canvas or not before the new render pass.\n */\nPIXI.CanvasRenderer = function(width, height, options)\n{\n    if(options)\n    {\n        for (var i in PIXI.defaultRenderOptions)\n        {\n            if (typeof options[i] === \"undefined\") options[i] = PIXI.defaultRenderOptions[i];\n        }\n    }\n    else\n    {\n        options = PIXI.defaultRenderOptions;\n    }\n\n    if(!PIXI.defaultRenderer)\n    {\n        PIXI.sayHello(\"Canvas\");\n        PIXI.defaultRenderer = this;\n    }\n\n    /**\n     * The renderer type.\n     *\n     * @property type\n     * @type Number\n     */\n    this.type = PIXI.CANVAS_RENDERER;\n\n    /**\n     * The resolution of the canvas.\n     *\n     * @property resolution\n     * @type Number\n     */\n    this.resolution = options.resolution;\n\n    /**\n     * This sets if the CanvasRenderer will clear the canvas or not before the new render pass.\n     * If the Stage is NOT transparent Pixi will use a canvas sized fillRect operation every frame to set the canvas background color.\n     * If the Stage is transparent Pixi will use clearRect to clear the canvas every frame.\n     * Disable this by setting this to false. For example if your game has a canvas filling background image you often don't need this set.\n     *\n     * @property clearBeforeRender\n     * @type Boolean\n     * @default\n     */\n    this.clearBeforeRender = options.clearBeforeRender;\n\n    /**\n     * Whether the render view is transparent\n     *\n     * @property transparent\n     * @type Boolean\n     */\n    this.transparent = options.transparent;\n\n    /**\n     * Whether the render view should be resized automatically\n     *\n     * @property autoResize\n     * @type Boolean\n     */\n    this.autoResize = options.autoResize || false;\n\n\n    /**\n     * The width of the canvas view\n     *\n     * @property width\n     * @type Number\n     * @default 800\n     */\n    this.width = width || 800;\n\n    /**\n     * The height of the canvas view\n     *\n     * @property height\n     * @type Number\n     * @default 600\n     */\n    this.height = height || 600;\n\n    this.width *= this.resolution;\n    this.height *= this.resolution;\n\n    /**\n     * The canvas element that everything is drawn to.\n     *\n     * @property view\n     * @type HTMLCanvasElement\n     */\n    this.view = options.view || document.createElement( \"canvas\" );\n\n    /**\n     * The canvas 2d context that everything is drawn with\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n    this.context = this.view.getContext( \"2d\", { alpha: this.transparent } );\n\n    /**\n     * Boolean flag controlling canvas refresh.\n     *\n     * @property refresh\n     * @type Boolean\n     */\n    this.refresh = true;\n\n    this.view.width = this.width * this.resolution;\n    this.view.height = this.height * this.resolution;\n\n    /**\n     * Internal var.\n     *\n     * @property count\n     * @type Number\n     */\n    this.count = 0;\n\n    /**\n     * Instance of a PIXI.CanvasMaskManager, handles masking when using the canvas renderer\n     * @property maskManager\n     * @type CanvasMaskManager\n     */\n    this.maskManager = new PIXI.CanvasMaskManager();\n\n    /**\n     * The render session is just a bunch of parameter used for rendering\n     * @property renderSession\n     * @type Object\n     */\n    this.renderSession = {\n        context: this.context,\n        maskManager: this.maskManager,\n        scaleMode: null,\n        smoothProperty: null,\n        /**\n         * If true Pixi will Math.floor() x/y values when rendering, stopping pixel interpolation.\n         * Handy for crisp pixel art and speed on legacy devices.\n         *\n         */\n        roundPixels: false\n    };\n\n    this.mapBlendModes();\n    \n    this.resize(width, height);\n\n    if(\"imageSmoothingEnabled\" in this.context)\n        this.renderSession.smoothProperty = \"imageSmoothingEnabled\";\n    else if(\"webkitImageSmoothingEnabled\" in this.context)\n        this.renderSession.smoothProperty = \"webkitImageSmoothingEnabled\";\n    else if(\"mozImageSmoothingEnabled\" in this.context)\n        this.renderSession.smoothProperty = \"mozImageSmoothingEnabled\";\n    else if(\"oImageSmoothingEnabled\" in this.context)\n        this.renderSession.smoothProperty = \"oImageSmoothingEnabled\";\n    else if (\"msImageSmoothingEnabled\" in this.context)\n        this.renderSession.smoothProperty = \"msImageSmoothingEnabled\";\n};\n\n// constructor\nPIXI.CanvasRenderer.prototype.constructor = PIXI.CanvasRenderer;\n\n/**\n * Renders the Stage to this canvas view\n *\n * @method render\n * @param stage {Stage} the Stage element to be rendered\n */\nPIXI.CanvasRenderer.prototype.render = function(stage)\n{\n    stage.updateTransform();\n\n    this.context.setTransform(1,0,0,1,0,0);\n\n    this.context.globalAlpha = 1;\n\n    this.renderSession.currentBlendMode = PIXI.blendModes.NORMAL;\n    this.context.globalCompositeOperation = PIXI.blendModesCanvas[PIXI.blendModes.NORMAL];\n\n    if (navigator.isCocoonJS && this.view.screencanvas) {\n        this.context.fillStyle = \"black\";\n        this.context.clear();\n    }\n    \n    if (this.clearBeforeRender)\n    {\n        if (this.transparent)\n        {\n            this.context.clearRect(0, 0, this.width, this.height);\n        }\n        else\n        {\n            this.context.fillStyle = stage.backgroundColorString;\n            this.context.fillRect(0, 0, this.width , this.height);\n        }\n    }\n    \n    this.renderDisplayObject(stage);\n\n    // run interaction!\n    if(stage.interactive)\n    {\n        //need to add some events!\n        if(!stage._interactiveEventsAdded)\n        {\n            stage._interactiveEventsAdded = true;\n            stage.interactionManager.setTarget(this);\n        }\n    }\n};\n\n/**\n * Removes everything from the renderer and optionally removes the Canvas DOM element.\n *\n * @method destroy\n * @param [removeView=true] {boolean} Removes the Canvas element from the DOM.\n */\nPIXI.CanvasRenderer.prototype.destroy = function(removeView)\n{\n    if (typeof removeView === \"undefined\") { removeView = true; }\n\n    if (removeView && this.view.parent)\n    {\n        this.view.parent.removeChild(this.view);\n    }\n\n    this.view = null;\n    this.context = null;\n    this.maskManager = null;\n    this.renderSession = null;\n\n};\n\n/**\n * Resizes the canvas view to the specified width and height\n *\n * @method resize\n * @param width {Number} the new width of the canvas view\n * @param height {Number} the new height of the canvas view\n */\nPIXI.CanvasRenderer.prototype.resize = function(width, height)\n{\n    this.width = width * this.resolution;\n    this.height = height * this.resolution;\n\n    this.view.width = this.width;\n    this.view.height = this.height;\n\n    if (this.autoResize) {\n        this.view.style.width = this.width / this.resolution + \"px\";\n        this.view.style.height = this.height / this.resolution + \"px\";\n    }\n};\n\n/**\n * Renders a display object\n *\n * @method renderDisplayObject\n * @param displayObject {DisplayObject} The displayObject to render\n * @param context {CanvasRenderingContext2D} the context 2d method of the canvas\n * @private\n */\nPIXI.CanvasRenderer.prototype.renderDisplayObject = function(displayObject, context)\n{\n    this.renderSession.context = context || this.context;\n    this.renderSession.resolution = this.resolution;\n    displayObject._renderCanvas(this.renderSession);\n};\n\n/**\n * Maps Pixi blend modes to canvas blend modes.\n *\n * @method mapBlendModes\n * @private\n */\nPIXI.CanvasRenderer.prototype.mapBlendModes = function()\n{\n    if(!PIXI.blendModesCanvas)\n    {\n        PIXI.blendModesCanvas = [];\n\n        if(PIXI.canUseNewCanvasBlendModes())\n        {\n            PIXI.blendModesCanvas[PIXI.blendModes.NORMAL]   = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.ADD]      = \"lighter\"; //IS THIS OK???\n            PIXI.blendModesCanvas[PIXI.blendModes.MULTIPLY] = \"multiply\";\n            PIXI.blendModesCanvas[PIXI.blendModes.SCREEN]   = \"screen\";\n            PIXI.blendModesCanvas[PIXI.blendModes.OVERLAY]  = \"overlay\";\n            PIXI.blendModesCanvas[PIXI.blendModes.DARKEN]   = \"darken\";\n            PIXI.blendModesCanvas[PIXI.blendModes.LIGHTEN]  = \"lighten\";\n            PIXI.blendModesCanvas[PIXI.blendModes.COLOR_DODGE] = \"color-dodge\";\n            PIXI.blendModesCanvas[PIXI.blendModes.COLOR_BURN] = \"color-burn\";\n            PIXI.blendModesCanvas[PIXI.blendModes.HARD_LIGHT] = \"hard-light\";\n            PIXI.blendModesCanvas[PIXI.blendModes.SOFT_LIGHT] = \"soft-light\";\n            PIXI.blendModesCanvas[PIXI.blendModes.DIFFERENCE] = \"difference\";\n            PIXI.blendModesCanvas[PIXI.blendModes.EXCLUSION] = \"exclusion\";\n            PIXI.blendModesCanvas[PIXI.blendModes.HUE]       = \"hue\";\n            PIXI.blendModesCanvas[PIXI.blendModes.SATURATION] = \"saturation\";\n            PIXI.blendModesCanvas[PIXI.blendModes.COLOR]      = \"color\";\n            PIXI.blendModesCanvas[PIXI.blendModes.LUMINOSITY] = \"luminosity\";\n        }\n        else\n        {\n            // this means that the browser does not support the cool new blend modes in canvas \"cough\" ie \"cough\"\n            PIXI.blendModesCanvas[PIXI.blendModes.NORMAL]   = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.ADD]      = \"lighter\"; //IS THIS OK???\n            PIXI.blendModesCanvas[PIXI.blendModes.MULTIPLY] = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.SCREEN]   = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.OVERLAY]  = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.DARKEN]   = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.LIGHTEN]  = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.COLOR_DODGE] = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.COLOR_BURN] = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.HARD_LIGHT] = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.SOFT_LIGHT] = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.DIFFERENCE] = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.EXCLUSION] = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.HUE]       = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.SATURATION] = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.COLOR]      = \"source-over\";\n            PIXI.blendModesCanvas[PIXI.blendModes.LUMINOSITY] = \"source-over\";\n        }\n    }\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n\n/**\n * A set of functions used by the canvas renderer to draw the primitive graphics data.\n *\n * @class CanvasGraphics\n * @static\n */\nPIXI.CanvasGraphics = function()\n{\n};\n\n/*\n * Renders a PIXI.Graphics object to a canvas.\n *\n * @method renderGraphics\n * @static\n * @param graphics {Graphics} the actual graphics object to render\n * @param context {CanvasRenderingContext2D} the 2d drawing method of the canvas\n */\nPIXI.CanvasGraphics.renderGraphics = function(graphics, context)\n{\n    var worldAlpha = graphics.worldAlpha;\n\n    if(graphics.dirty)\n    {\n        this.updateGraphicsTint(graphics);\n        graphics.dirty = false;\n    }\n    \n\n    for (var i = 0; i < graphics.graphicsData.length; i++)\n    {\n        var data = graphics.graphicsData[i];\n        var shape = data.shape;\n\n        var fillColor = data._fillTint;\n        var lineColor = data._lineTint;\n\n        context.lineWidth = data.lineWidth;\n\n        if(data.type === PIXI.Graphics.POLY)\n        {\n            context.beginPath();\n\n            var points = shape.points;\n\n            context.moveTo(points[0], points[1]);\n\n            for (var j=1; j < points.length/2; j++)\n            {\n                context.lineTo(points[j * 2], points[j * 2 + 1]);\n            }\n\n            if(shape.closed)\n            {\n                context.lineTo(points[0], points[1]);\n            }\n\n            // if the first and last point are the same close the path - much neater :)\n            if(points[0] === points[points.length-2] && points[1] === points[points.length-1])\n            {\n                context.closePath();\n            }\n\n            if(data.fill)\n            {\n                context.globalAlpha = data.fillAlpha * worldAlpha;\n                context.fillStyle = '#' + ('00000' + ( fillColor | 0).toString(16)).substr(-6);\n                context.fill();\n            }\n            if(data.lineWidth)\n            {\n                context.globalAlpha = data.lineAlpha * worldAlpha;\n                context.strokeStyle = '#' + ('00000' + ( lineColor | 0).toString(16)).substr(-6);\n                context.stroke();\n            }\n        }\n        else if(data.type === PIXI.Graphics.RECT)\n        {\n\n            if(data.fillColor || data.fillColor === 0)\n            {\n                context.globalAlpha = data.fillAlpha * worldAlpha;\n                context.fillStyle = '#' + ('00000' + ( fillColor | 0).toString(16)).substr(-6);\n                context.fillRect(shape.x, shape.y, shape.width, shape.height);\n\n            }\n            if(data.lineWidth)\n            {\n                context.globalAlpha = data.lineAlpha * worldAlpha;\n                context.strokeStyle = '#' + ('00000' + ( lineColor | 0).toString(16)).substr(-6);\n                context.strokeRect(shape.x, shape.y, shape.width, shape.height);\n            }\n        }\n        else if(data.type === PIXI.Graphics.CIRC)\n        {\n            // TODO - need to be Undefined!\n            context.beginPath();\n            context.arc(shape.x, shape.y, shape.radius,0,2*Math.PI);\n            context.closePath();\n\n            if(data.fill)\n            {\n                context.globalAlpha = data.fillAlpha * worldAlpha;\n                context.fillStyle = '#' + ('00000' + ( fillColor | 0).toString(16)).substr(-6);\n                context.fill();\n            }\n            if(data.lineWidth)\n            {\n                context.globalAlpha = data.lineAlpha * worldAlpha;\n                context.strokeStyle = '#' + ('00000' + ( lineColor | 0).toString(16)).substr(-6);\n                context.stroke();\n            }\n        }\n        else if(data.type === PIXI.Graphics.ELIP)\n        {\n            // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n            var w = shape.width * 2;\n            var h = shape.height * 2;\n\n            var x = shape.x - w/2;\n            var y = shape.y - h/2;\n\n            context.beginPath();\n\n            var kappa = 0.5522848,\n                ox = (w / 2) * kappa, // control point offset horizontal\n                oy = (h / 2) * kappa, // control point offset vertical\n                xe = x + w,           // x-end\n                ye = y + h,           // y-end\n                xm = x + w / 2,       // x-middle\n                ym = y + h / 2;       // y-middle\n\n            context.moveTo(x, ym);\n            context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n            context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n            context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n            context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\n            context.closePath();\n\n            if(data.fill)\n            {\n                context.globalAlpha = data.fillAlpha * worldAlpha;\n                context.fillStyle = '#' + ('00000' + ( fillColor | 0).toString(16)).substr(-6);\n                context.fill();\n            }\n            if(data.lineWidth)\n            {\n                context.globalAlpha = data.lineAlpha * worldAlpha;\n                context.strokeStyle = '#' + ('00000' + ( lineColor | 0).toString(16)).substr(-6);\n                context.stroke();\n            }\n        }\n        else if (data.type === PIXI.Graphics.RREC)\n        {\n            var rx = shape.x;\n            var ry = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var radius = shape.radius;\n\n            var maxRadius = Math.min(width, height) / 2 | 0;\n            radius = radius > maxRadius ? maxRadius : radius;\n\n            context.beginPath();\n            context.moveTo(rx, ry + radius);\n            context.lineTo(rx, ry + height - radius);\n            context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n            context.lineTo(rx + width - radius, ry + height);\n            context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\n            context.lineTo(rx + width, ry + radius);\n            context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n            context.lineTo(rx + radius, ry);\n            context.quadraticCurveTo(rx, ry, rx, ry + radius);\n            context.closePath();\n\n            if(data.fillColor || data.fillColor === 0)\n            {\n                context.globalAlpha = data.fillAlpha * worldAlpha;\n                context.fillStyle = '#' + ('00000' + ( fillColor | 0).toString(16)).substr(-6);\n                context.fill();\n\n            }\n            if(data.lineWidth)\n            {\n                context.globalAlpha = data.lineAlpha * worldAlpha;\n                context.strokeStyle = '#' + ('00000' + ( lineColor | 0).toString(16)).substr(-6);\n                context.stroke();\n            }\n        }\n    }\n};\n\n/*\n * Renders a graphics mask\n *\n * @static\n * @private\n * @method renderGraphicsMask\n * @param graphics {Graphics} the graphics which will be used as a mask\n * @param context {CanvasRenderingContext2D} the context 2d method of the canvas\n */\nPIXI.CanvasGraphics.renderGraphicsMask = function(graphics, context)\n{\n    var len = graphics.graphicsData.length;\n\n    if(len === 0) return;\n\n    if(len > 1)\n    {\n        len = 1;\n        window.console.log('Pixi.js warning: masks in canvas can only mask using the first path in the graphics object');\n    }\n\n    for (var i = 0; i < 1; i++)\n    {\n        var data = graphics.graphicsData[i];\n        var shape = data.shape;\n\n        if(data.type === PIXI.Graphics.POLY)\n        {\n            context.beginPath();\n        \n            var points = shape.points;\n        \n            context.moveTo(points[0], points[1]);\n\n            for (var j=1; j < points.length/2; j++)\n            {\n                context.lineTo(points[j * 2], points[j * 2 + 1]);\n            }\n\n            // if the first and last point are the same close the path - much neater :)\n            if(points[0] === points[points.length-2] && points[1] === points[points.length-1])\n            {\n                context.closePath();\n            }\n\n        }\n        else if(data.type === PIXI.Graphics.RECT)\n        {\n            context.beginPath();\n            context.rect(shape.x, shape.y, shape.width, shape.height);\n            context.closePath();\n        }\n        else if(data.type === PIXI.Graphics.CIRC)\n        {\n            // TODO - need to be Undefined!\n            context.beginPath();\n            context.arc(shape.x, shape.y, shape.radius,0,2*Math.PI);\n            context.closePath();\n        }\n        else if(data.type === PIXI.Graphics.ELIP)\n        {\n\n            // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n            var w = shape.width * 2;\n            var h = shape.height * 2;\n\n            var x = shape.x - w/2;\n            var y = shape.y - h/2;\n\n            context.beginPath();\n\n            var kappa = 0.5522848,\n                ox = (w / 2) * kappa, // control point offset horizontal\n                oy = (h / 2) * kappa, // control point offset vertical\n                xe = x + w,           // x-end\n                ye = y + h,           // y-end\n                xm = x + w / 2,       // x-middle\n                ym = y + h / 2;       // y-middle\n\n            context.moveTo(x, ym);\n            context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n            context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n            context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n            context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n            context.closePath();\n        }\n        else if (data.type === PIXI.Graphics.RREC)\n        {\n        \n            var pts = shape.points;\n            var rx = pts[0];\n            var ry = pts[1];\n            var width = pts[2];\n            var height = pts[3];\n            var radius = pts[4];\n\n            var maxRadius = Math.min(width, height) / 2 | 0;\n            radius = radius > maxRadius ? maxRadius : radius;\n\n            context.beginPath();\n            context.moveTo(rx, ry + radius);\n            context.lineTo(rx, ry + height - radius);\n            context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n            context.lineTo(rx + width - radius, ry + height);\n            context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\n            context.lineTo(rx + width, ry + radius);\n            context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n            context.lineTo(rx + radius, ry);\n            context.quadraticCurveTo(rx, ry, rx, ry + radius);\n            context.closePath();\n        }\n    }\n};\n\nPIXI.CanvasGraphics.updateGraphicsTint = function(graphics)\n{\n    if(graphics.tint === 0xFFFFFF)return;\n\n    var tintR = (graphics.tint >> 16 & 0xFF) / 255;\n    var tintG = (graphics.tint >> 8 & 0xFF) / 255;\n    var tintB = (graphics.tint & 0xFF)/ 255;\n\n    for (var i = 0; i < graphics.graphicsData.length; i++)\n    {\n        var data = graphics.graphicsData[i];\n\n        var fillColor = data.fillColor | 0;\n        var lineColor = data.lineColor | 0;\n\n        /*\n        var colorR = (fillColor >> 16 & 0xFF) / 255;\n        var colorG = (fillColor >> 8 & 0xFF) / 255;\n        var colorB = (fillColor & 0xFF) / 255; \n\n        colorR *= tintR;\n        colorG *= tintG;\n        colorB *= tintB;\n\n        fillColor = ((colorR*255 << 16) + (colorG*255 << 8) + colorB*255);\n\n        colorR = (lineColor >> 16 & 0xFF) / 255;\n        colorG = (lineColor >> 8 & 0xFF) / 255;\n        colorB = (lineColor & 0xFF) / 255; \n\n        colorR *= tintR;\n        colorG *= tintG;\n        colorB *= tintB;\n\n        lineColor = ((colorR*255 << 16) + (colorG*255 << 8) + colorB*255);   \n        */\n        \n        // super inline cos im an optimization NAZI :)\n        data._fillTint = (((fillColor >> 16 & 0xFF) / 255 * tintR*255 << 16) + ((fillColor >> 8 & 0xFF) / 255 * tintG*255 << 8) +  (fillColor & 0xFF) / 255 * tintB*255);\n        data._lineTint = (((lineColor >> 16 & 0xFF) / 255 * tintR*255 << 16) + ((lineColor >> 8 & 0xFF) / 255 * tintG*255 << 8) +  (lineColor & 0xFF) / 255 * tintB*255);\n\n    }\n};\n\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The Graphics class contains methods used to draw primitive shapes such as lines, circles and rectangles to the display, and color and fill them.\n * \n * @class Graphics\n * @extends DisplayObjectContainer\n * @constructor\n */\nPIXI.Graphics = function()\n{\n    PIXI.DisplayObjectContainer.call( this );\n\n    this.renderable = true;\n\n    /**\n     * The alpha value used when filling the Graphics object.\n     *\n     * @property fillAlpha\n     * @type Number\n     */\n    this.fillAlpha = 1;\n\n    /**\n     * The width (thickness) of any lines drawn.\n     *\n     * @property lineWidth\n     * @type Number\n     */\n    this.lineWidth = 0;\n\n    /**\n     * The color of any lines drawn.\n     *\n     * @property lineColor\n     * @type String\n     * @default 0\n     */\n    this.lineColor = 0;\n\n    /**\n     * Graphics data\n     *\n     * @property graphicsData\n     * @type Array\n     * @private\n     */\n    this.graphicsData = [];\n\n    /**\n     * The tint applied to the graphic shape. This is a hex value. Apply a value of 0xFFFFFF to reset the tint.\n     *\n     * @property tint\n     * @type Number\n     * @default 0xFFFFFF\n     */\n    this.tint = 0xFFFFFF;\n\n    /**\n     * The blend mode to be applied to the graphic shape. Apply a value of PIXI.blendModes.NORMAL to reset the blend mode.\n     *\n     * @property blendMode\n     * @type Number\n     * @default PIXI.blendModes.NORMAL;\n     */\n    this.blendMode = PIXI.blendModes.NORMAL;\n    \n    /**\n     * Current path\n     *\n     * @property currentPath\n     * @type Object\n     * @private\n     */\n    this.currentPath = null;\n    \n    /**\n     * Array containing some WebGL-related properties used by the WebGL renderer.\n     *\n     * @property _webGL\n     * @type Array\n     * @private\n     */\n    this._webGL = [];\n\n    /**\n     * Whether this shape is being used as a mask.\n     *\n     * @property isMask\n     * @type Boolean\n     */\n    this.isMask = false;\n\n    /**\n     * The bounds' padding used for bounds calculation.\n     *\n     * @property boundsPadding\n     * @type Number\n     */\n    this.boundsPadding = 0;\n\n    this._localBounds = new PIXI.Rectangle(0,0,1,1);\n\n    /**\n     * Used to detect if the graphics object has changed. If this is set to true then the graphics object will be recalculated.\n     * \n     * @property dirty\n     * @type Boolean\n     * @private\n     */\n    this.dirty = true;\n\n    /**\n     * Used to detect if the webgl graphics object has changed. If this is set to true then the graphics object will be recalculated.\n     * \n     * @property webGLDirty\n     * @type Boolean\n     * @private\n     */\n    this.webGLDirty = false;\n\n    /**\n     * Used to detect if the cached sprite object needs to be updated.\n     * \n     * @property cachedSpriteDirty\n     * @type Boolean\n     * @private\n     */\n    this.cachedSpriteDirty = false;\n\n};\n\n// constructor\nPIXI.Graphics.prototype = Object.create( PIXI.DisplayObjectContainer.prototype );\nPIXI.Graphics.prototype.constructor = PIXI.Graphics;\n\n/**\n * When cacheAsBitmap is set to true the graphics object will be rendered as if it was a sprite.\n * This is useful if your graphics element does not change often, as it will speed up the rendering of the object in exchange for taking up texture memory.\n * It is also useful if you need the graphics object to be anti-aliased, because it will be rendered using canvas.\n * This is not recommended if you are constantly redrawing the graphics element.\n *\n * @property cacheAsBitmap\n * @type Boolean\n * @default false\n * @private\n */\nObject.defineProperty(PIXI.Graphics.prototype, \"cacheAsBitmap\", {\n    get: function() {\n        return  this._cacheAsBitmap;\n    },\n    set: function(value) {\n        this._cacheAsBitmap = value;\n\n        if(this._cacheAsBitmap)\n        {\n\n            this._generateCachedSprite();\n        }\n        else\n        {\n            this.destroyCachedSprite();\n            this.dirty = true;\n        }\n\n    }\n});\n\n/**\n * Specifies the line style used for subsequent calls to Graphics methods such as the lineTo() method or the drawCircle() method.\n *\n * @method lineStyle\n * @param lineWidth {Number} width of the line to draw, will update the objects stored style\n * @param color {Number} color of the line to draw, will update the objects stored style\n * @param alpha {Number} alpha of the line to draw, will update the objects stored style\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.lineStyle = function(lineWidth, color, alpha)\n{\n    this.lineWidth = lineWidth || 0;\n    this.lineColor = color || 0;\n    this.lineAlpha = (arguments.length < 3) ? 1 : alpha;\n\n    if(this.currentPath)\n    {\n        if(this.currentPath.shape.points.length)\n        {\n            // halfway through a line? start a new one!\n            this.drawShape( new PIXI.Polygon( this.currentPath.shape.points.slice(-2) ));\n            return this;\n        }\n\n        // otherwise its empty so lets just set the line properties\n        this.currentPath.lineWidth = this.lineWidth;\n        this.currentPath.lineColor = this.lineColor;\n        this.currentPath.lineAlpha = this.lineAlpha;\n        \n    }\n\n    return this;\n};\n\n/**\n * Moves the current drawing position to x, y.\n *\n * @method moveTo\n * @param x {Number} the X coordinate to move to\n * @param y {Number} the Y coordinate to move to\n * @return {Graphics}\n  */\nPIXI.Graphics.prototype.moveTo = function(x, y)\n{\n    this.drawShape(new PIXI.Polygon([x,y]));\n\n    return this;\n};\n\n/**\n * Draws a line using the current line style from the current drawing position to (x, y);\n * The current drawing position is then set to (x, y).\n *\n * @method lineTo\n * @param x {Number} the X coordinate to draw to\n * @param y {Number} the Y coordinate to draw to\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.lineTo = function(x, y)\n{\n    this.currentPath.shape.points.push(x, y);\n    this.dirty = true;\n\n    return this;\n};\n\n/**\n * Calculate the points for a quadratic bezier curve and then draws it.\n * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n *\n * @method quadraticCurveTo\n * @param cpX {Number} Control point x\n * @param cpY {Number} Control point y\n * @param toX {Number} Destination point x\n * @param toY {Number} Destination point y\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.quadraticCurveTo = function(cpX, cpY, toX, toY)\n{\n    if( this.currentPath )\n    {\n        if(this.currentPath.shape.points.length === 0)this.currentPath.shape.points = [0,0];\n    }\n    else\n    {\n        this.moveTo(0,0);\n    }\n\n    var xa,\n    ya,\n    n = 20,\n    points = this.currentPath.shape.points;\n    if(points.length === 0)this.moveTo(0, 0);\n    \n\n    var fromX = points[points.length-2];\n    var fromY = points[points.length-1];\n\n    var j = 0;\n    for (var i = 1; i <= n; i++ )\n    {\n        j = i / n;\n\n        xa = fromX + ( (cpX - fromX) * j );\n        ya = fromY + ( (cpY - fromY) * j );\n\n        points.push( xa + ( ((cpX + ( (toX - cpX) * j )) - xa) * j ),\n                     ya + ( ((cpY + ( (toY - cpY) * j )) - ya) * j ) );\n    }\n\n\n    this.dirty = true;\n\n    return this;\n};\n\n/**\n * Calculate the points for a bezier curve and then draws it.\n *\n * @method bezierCurveTo\n * @param cpX {Number} Control point x\n * @param cpY {Number} Control point y\n * @param cpX2 {Number} Second Control point x\n * @param cpY2 {Number} Second Control point y\n * @param toX {Number} Destination point x\n * @param toY {Number} Destination point y\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.bezierCurveTo = function(cpX, cpY, cpX2, cpY2, toX, toY)\n{\n    if( this.currentPath )\n    {\n        if(this.currentPath.shape.points.length === 0)this.currentPath.shape.points = [0,0];\n    }\n    else\n    {\n        this.moveTo(0,0);\n    }\n\n    var n = 20,\n    dt,\n    dt2,\n    dt3,\n    t2,\n    t3,\n    points = this.currentPath.shape.points;\n\n    var fromX = points[points.length-2];\n    var fromY = points[points.length-1];\n    \n    var j = 0;\n\n    for (var i=1; i<=n; i++)\n    {\n        j = i / n;\n\n        dt = (1 - j);\n        dt2 = dt * dt;\n        dt3 = dt2 * dt;\n\n        t2 = j * j;\n        t3 = t2 * j;\n        \n        points.push( dt3 * fromX + 3 * dt2 * j * cpX + 3 * dt * t2 * cpX2 + t3 * toX,\n                     dt3 * fromY + 3 * dt2 * j * cpY + 3 * dt * t2 * cpY2 + t3 * toY);\n    }\n    \n    this.dirty = true;\n\n    return this;\n};\n\n/*\n * The arcTo() method creates an arc/curve between two tangents on the canvas.\n * \n * \"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!\n *\n * @method arcTo\n * @param x1 {Number} The x-coordinate of the beginning of the arc\n * @param y1 {Number} The y-coordinate of the beginning of the arc\n * @param x2 {Number} The x-coordinate of the end of the arc\n * @param y2 {Number} The y-coordinate of the end of the arc\n * @param radius {Number} The radius of the arc\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.arcTo = function(x1, y1, x2, y2, radius)\n{\n    if( this.currentPath )\n    {\n        if(this.currentPath.shape.points.length === 0)\n        {\n            this.currentPath.shape.points.push(x1, y1);\n        }\n    }\n    else\n    {\n        this.moveTo(x1, y1);\n    }\n\n    var points = this.currentPath.shape.points;\n    var fromX = points[points.length-2];\n    var fromY = points[points.length-1];\n    var a1 = fromY - y1;\n    var b1 = fromX - x1;\n    var a2 = y2   - y1;\n    var b2 = x2   - x1;\n    var mm = Math.abs(a1 * b2 - b1 * a2);\n\n\n    if (mm < 1.0e-8 || radius === 0)\n    {\n        if( points[points.length-2] !== x1 || points[points.length-1] !== y1)\n        {\n            //console.log(\">>\")\n            points.push(x1, y1);\n        }\n    }\n    else\n    {\n        var dd = a1 * a1 + b1 * b1;\n        var cc = a2 * a2 + b2 * b2;\n        var tt = a1 * a2 + b1 * b2;\n        var k1 = radius * Math.sqrt(dd) / mm;\n        var k2 = radius * Math.sqrt(cc) / mm;\n        var j1 = k1 * tt / dd;\n        var j2 = k2 * tt / cc;\n        var cx = k1 * b2 + k2 * b1;\n        var cy = k1 * a2 + k2 * a1;\n        var px = b1 * (k2 + j1);\n        var py = a1 * (k2 + j1);\n        var qx = b2 * (k1 + j2);\n        var qy = a2 * (k1 + j2);\n        var startAngle = Math.atan2(py - cy, px - cx);\n        var endAngle   = Math.atan2(qy - cy, qx - cx);\n\n        this.arc(cx + x1, cy + y1, radius, startAngle, endAngle, b1 * a2 > b2 * a1);\n    }\n\n    this.dirty = true;\n\n    return this;\n};\n\n/**\n * The arc method creates an arc/curve (used to create circles, or parts of circles).\n *\n * @method arc\n * @param cx {Number} The x-coordinate of the center of the circle\n * @param cy {Number} The y-coordinate of the center of the circle\n * @param radius {Number} The radius of the circle\n * @param startAngle {Number} The starting angle, in radians (0 is at the 3 o'clock position of the arc's circle)\n * @param endAngle {Number} The ending angle, in radians\n * @param anticlockwise {Boolean} Optional. Specifies whether the drawing should be counterclockwise or clockwise. False is default, and indicates clockwise, while true indicates counter-clockwise.\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.arc = function(cx, cy, radius, startAngle, endAngle, anticlockwise)\n{\n    var startX = cx + Math.cos(startAngle) * radius;\n    var startY = cy + Math.sin(startAngle) * radius;\n    var points;\n\n    if( this.currentPath )\n    {\n        points = this.currentPath.shape.points;\n\n        if(points.length === 0)\n        {\n            points.push(startX, startY);\n        }\n        else if( points[points.length-2] !== startX || points[points.length-1] !== startY)\n        {\n            points.push(startX, startY);\n        }\n    }\n    else\n    {\n        this.moveTo(startX, startY);\n        points = this.currentPath.shape.points;\n    }\n    \n    if (startAngle === endAngle)return this;\n\n    if( !anticlockwise && endAngle <= startAngle )\n    {\n        endAngle += Math.PI * 2;\n    }\n    else if( anticlockwise && startAngle <= endAngle )\n    {\n        startAngle += Math.PI * 2;\n    }\n\n    var sweep = anticlockwise ? (startAngle - endAngle) *-1 : (endAngle - startAngle);\n    var segs =  ( Math.abs(sweep)/ (Math.PI * 2) ) * 40;\n\n    if( sweep === 0 ) return this;\n\n    var theta = sweep/(segs*2);\n    var theta2 = theta*2;\n\n    var cTheta = Math.cos(theta);\n    var sTheta = Math.sin(theta);\n    \n    var segMinus = segs - 1;\n\n    var remainder = ( segMinus % 1 ) / segMinus;\n\n    for(var i=0; i<=segMinus; i++)\n    {\n        var real =  i + remainder * i;\n\n    \n        var angle = ((theta) + startAngle + (theta2 * real));\n\n        var c = Math.cos(angle);\n        var s = -Math.sin(angle);\n\n        points.push(( (cTheta *  c) + (sTheta * s) ) * radius + cx,\n                    ( (cTheta * -s) + (sTheta * c) ) * radius + cy);\n    }\n\n    this.dirty = true;\n\n    return this;\n};\n\n/**\n * Specifies a simple one-color fill that subsequent calls to other Graphics methods\n * (such as lineTo() or drawCircle()) use when drawing.\n *\n * @method beginFill\n * @param color {Number} the color of the fill\n * @param alpha {Number} the alpha of the fill\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.beginFill = function(color, alpha)\n{\n    this.filling = true;\n    this.fillColor = color || 0;\n    this.fillAlpha = (alpha === undefined) ? 1 : alpha;\n\n    if(this.currentPath)\n    {\n        if(this.currentPath.shape.points.length <= 2)\n        {\n            this.currentPath.fill = this.filling;\n            this.currentPath.fillColor = this.fillColor;\n            this.currentPath.fillAlpha = this.fillAlpha;\n        }\n    }\n    return this;\n};\n\n/**\n * Applies a fill to the lines and shapes that were added since the last call to the beginFill() method.\n *\n * @method endFill\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.endFill = function()\n{\n    this.filling = false;\n    this.fillColor = null;\n    this.fillAlpha = 1;\n\n    return this;\n};\n\n/**\n * Draws a rectangle.\n * \n * @method drawRect\n *\n * @param x {Number} The X coord of the top-left of the rectangle\n * @param y {Number} The Y coord of the top-left of the rectangle\n * @param width {Number} The width of the rectangle\n * @param height {Number} The height of the rectangle\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.drawRect = function( x, y, width, height )\n{\n    this.drawShape(new PIXI.Rectangle(x,y, width, height));\n\n    return this;\n};\n\n/**\n * Draws a rounded rectangle.\n * \n * @method drawRoundedRect\n *\n * @param x {Number} The X coord of the top-left of the rectangle\n * @param y {Number} The Y coord of the top-left of the rectangle\n * @param width {Number} The width of the rectangle\n * @param height {Number} The height of the rectangle\n * @param radius {Number} Radius of the rectangle corners\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.drawRoundedRect = function( x, y, width, height, radius )\n{\n    this.drawShape(new PIXI.RoundedRectangle(x, y, width, height, radius));\n\n    return this;\n};\n\n/**\n * Draws a circle.\n *\n * @method drawCircle\n * @param x {Number} The X coordinate of the center of the circle\n * @param y {Number} The Y coordinate of the center of the circle\n * @param radius {Number} The radius of the circle\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.drawCircle = function(x, y, radius)\n{\n    this.drawShape(new PIXI.Circle(x,y, radius));\n\n    return this;\n};\n\n/**\n * Draws an ellipse.\n *\n * @method drawEllipse\n * @param x {Number} The X coordinate of the center of the ellipse\n * @param y {Number} The Y coordinate of the center of the ellipse\n * @param width {Number} The half width of the ellipse\n * @param height {Number} The half height of the ellipse\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.drawEllipse = function(x, y, width, height)\n{\n    this.drawShape(new PIXI.Ellipse(x, y, width, height));\n\n    return this;\n};\n\n/**\n * Draws a polygon using the given path.\n *\n * @method drawPolygon\n * @param path {Array} The path data used to construct the polygon.\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.drawPolygon = function(path)\n{\n    if(!(path instanceof Array))path = Array.prototype.slice.call(arguments);\n    this.drawShape(new PIXI.Polygon(path));\n    return this;\n};\n\n/**\n * Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.\n *\n * @method clear\n * @return {Graphics}\n */\nPIXI.Graphics.prototype.clear = function()\n{\n    this.lineWidth = 0;\n    this.filling = false;\n\n    this.dirty = true;\n    this.clearDirty = true;\n    this.graphicsData = [];\n\n    return this;\n};\n\n/**\n * Useful function that returns a texture of the graphics object that can then be used to create sprites\n * This can be quite useful if your geometry is complicated and needs to be reused multiple times.\n *\n * @method generateTexture\n * @param resolution {Number} The resolution of the texture being generated\n * @param scaleMode {Number} Should be one of the PIXI.scaleMode consts\n * @return {Texture} a texture of the graphics object\n */\nPIXI.Graphics.prototype.generateTexture = function(resolution, scaleMode)\n{\n    resolution = resolution || 1;\n\n    var bounds = this.getBounds();\n   \n    var canvasBuffer = new PIXI.CanvasBuffer(bounds.width * resolution, bounds.height * resolution);\n    \n    var texture = PIXI.Texture.fromCanvas(canvasBuffer.canvas, scaleMode);\n    texture.baseTexture.resolution = resolution;\n\n    canvasBuffer.context.scale(resolution, resolution);\n\n    canvasBuffer.context.translate(-bounds.x,-bounds.y);\n    \n    PIXI.CanvasGraphics.renderGraphics(this, canvasBuffer.context);\n\n    return texture;\n};\n\n/**\n* Renders the object using the WebGL renderer\n*\n* @method _renderWebGL\n* @param renderSession {RenderSession} \n* @private\n*/\nPIXI.Graphics.prototype._renderWebGL = function(renderSession)\n{\n    // if the sprite is not visible or the alpha is 0 then no need to render this element\n    if(this.visible === false || this.alpha === 0 || this.isMask === true)return;\n\n    if(this._cacheAsBitmap)\n    {\n\n        if(this.dirty || this.cachedSpriteDirty)\n        {\n\n            this._generateCachedSprite();\n   \n            // we will also need to update the texture on the gpu too!\n            this.updateCachedSpriteTexture();\n\n            this.cachedSpriteDirty = false;\n            this.dirty = false;\n        }\n\n        this._cachedSprite.worldAlpha = this.worldAlpha;\n        PIXI.Sprite.prototype._renderWebGL.call(this._cachedSprite, renderSession);\n\n        return;\n    }\n    else\n    {\n        renderSession.spriteBatch.stop();\n        renderSession.blendModeManager.setBlendMode(this.blendMode);\n\n        if(this._mask)renderSession.maskManager.pushMask(this._mask, renderSession);\n        if(this._filters)renderSession.filterManager.pushFilter(this._filterBlock);\n      \n        // check blend mode\n        if(this.blendMode !== renderSession.spriteBatch.currentBlendMode)\n        {\n            renderSession.spriteBatch.currentBlendMode = this.blendMode;\n            var blendModeWebGL = PIXI.blendModesWebGL[renderSession.spriteBatch.currentBlendMode];\n            renderSession.spriteBatch.gl.blendFunc(blendModeWebGL[0], blendModeWebGL[1]);\n        }\n        \n        // check if the webgl graphic needs to be updated\n        if(this.webGLDirty)\n        {\n            this.dirty = true;\n            this.webGLDirty = false;\n        }\n        \n        PIXI.WebGLGraphics.renderGraphics(this, renderSession);\n        \n        // only render if it has children!\n        if(this.children.length)\n        {\n            renderSession.spriteBatch.start();\n\n             // simple render children!\n            for(var i=0, j=this.children.length; i<j; i++)\n            {\n                this.children[i]._renderWebGL(renderSession);\n            }\n\n            renderSession.spriteBatch.stop();\n        }\n\n        if(this._filters)renderSession.filterManager.popFilter();\n        if(this._mask)renderSession.maskManager.popMask(this.mask, renderSession);\n          \n        renderSession.drawCount++;\n\n        renderSession.spriteBatch.start();\n    }\n};\n\n/**\n* Renders the object using the Canvas renderer\n*\n* @method _renderCanvas\n* @param renderSession {RenderSession} \n* @private\n*/\nPIXI.Graphics.prototype._renderCanvas = function(renderSession)\n{\n    // if the sprite is not visible or the alpha is 0 then no need to render this element\n    if(this.visible === false || this.alpha === 0 || this.isMask === true)return;\n    \n    if(this._cacheAsBitmap)\n    {\n        if(this.dirty || this.cachedSpriteDirty)\n        {\n            this._generateCachedSprite();\n   \n            // we will also need to update the texture\n            this.updateCachedSpriteTexture();\n\n            this.cachedSpriteDirty = false;\n            this.dirty = false;\n        }\n\n        this._cachedSprite.alpha = this.alpha;\n        PIXI.Sprite.prototype._renderCanvas.call(this._cachedSprite, renderSession);\n\n        return;\n    }\n    else\n    {\n        var context = renderSession.context;\n        var transform = this.worldTransform;\n        \n        if(this.blendMode !== renderSession.currentBlendMode)\n        {\n            renderSession.currentBlendMode = this.blendMode;\n            context.globalCompositeOperation = PIXI.blendModesCanvas[renderSession.currentBlendMode];\n        }\n\n        if(this._mask)\n        {\n            renderSession.maskManager.pushMask(this._mask, renderSession);\n        }\n\n        var resolution = renderSession.resolution;\n        context.setTransform(transform.a * resolution,\n                             transform.b * resolution,\n                             transform.c * resolution,\n                             transform.d * resolution,\n                             transform.tx * resolution,\n                             transform.ty * resolution);\n\n        PIXI.CanvasGraphics.renderGraphics(this, context);\n\n         // simple render children!\n        for(var i=0, j=this.children.length; i<j; i++)\n        {\n            this.children[i]._renderCanvas(renderSession);\n        }\n\n        if(this._mask)\n        {\n            renderSession.maskManager.popMask(renderSession);\n        }\n    }\n};\n\n/**\n * Retrieves the bounds of the graphic shape as a rectangle object\n *\n * @method getBounds\n * @return {Rectangle} the rectangular bounding area\n */\nPIXI.Graphics.prototype.getBounds = function( matrix )\n{\n    // return an empty object if the item is a mask!\n    if(this.isMask)return PIXI.EmptyRectangle;\n\n    if(this.dirty)\n    {\n        this.updateLocalBounds();\n        this.webGLDirty = true;\n        this.cachedSpriteDirty = true;\n        this.dirty = false;\n    }\n\n    var bounds = this._localBounds;\n\n    var w0 = bounds.x;\n    var w1 = bounds.width + bounds.x;\n\n    var h0 = bounds.y;\n    var h1 = bounds.height + bounds.y;\n\n    var worldTransform = matrix || this.worldTransform;\n\n    var a = worldTransform.a;\n    var b = worldTransform.b;\n    var c = worldTransform.c;\n    var d = worldTransform.d;\n    var tx = worldTransform.tx;\n    var ty = worldTransform.ty;\n\n    var x1 = a * w1 + c * h1 + tx;\n    var y1 = d * h1 + b * w1 + ty;\n\n    var x2 = a * w0 + c * h1 + tx;\n    var y2 = d * h1 + b * w0 + ty;\n\n    var x3 = a * w0 + c * h0 + tx;\n    var y3 = d * h0 + b * w0 + ty;\n\n    var x4 =  a * w1 + c * h0 + tx;\n    var y4 =  d * h0 + b * w1 + ty;\n\n    var maxX = x1;\n    var maxY = y1;\n\n    var minX = x1;\n    var minY = y1;\n\n    minX = x2 < minX ? x2 : minX;\n    minX = x3 < minX ? x3 : minX;\n    minX = x4 < minX ? x4 : minX;\n\n    minY = y2 < minY ? y2 : minY;\n    minY = y3 < minY ? y3 : minY;\n    minY = y4 < minY ? y4 : minY;\n\n    maxX = x2 > maxX ? x2 : maxX;\n    maxX = x3 > maxX ? x3 : maxX;\n    maxX = x4 > maxX ? x4 : maxX;\n\n    maxY = y2 > maxY ? y2 : maxY;\n    maxY = y3 > maxY ? y3 : maxY;\n    maxY = y4 > maxY ? y4 : maxY;\n\n    this._bounds.x = minX;\n    this._bounds.width = maxX - minX;\n\n    this._bounds.y = minY;\n    this._bounds.height = maxY - minY;\n\n    return  this._bounds;\n};\n\n/**\n * Update the bounds of the object\n *\n * @method updateLocalBounds\n */\nPIXI.Graphics.prototype.updateLocalBounds = function()\n{\n    var minX = Infinity;\n    var maxX = -Infinity;\n\n    var minY = Infinity;\n    var maxY = -Infinity;\n\n    if(this.graphicsData.length)\n    {\n        var shape, points, x, y, w, h;\n\n        for (var i = 0; i < this.graphicsData.length; i++) {\n            var data = this.graphicsData[i];\n            var type = data.type;\n            var lineWidth = data.lineWidth;\n            shape = data.shape;\n           \n\n            if(type === PIXI.Graphics.RECT || type === PIXI.Graphics.RREC)\n            {\n                x = shape.x - lineWidth/2;\n                y = shape.y - lineWidth/2;\n                w = shape.width + lineWidth;\n                h = shape.height + lineWidth;\n\n                minX = x < minX ? x : minX;\n                maxX = x + w > maxX ? x + w : maxX;\n\n                minY = y < minY ? y : minY;\n                maxY = y + h > maxY ? y + h : maxY;\n            }\n            else if(type === PIXI.Graphics.CIRC)\n            {\n                x = shape.x;\n                y = shape.y;\n                w = shape.radius + lineWidth/2;\n                h = shape.radius + lineWidth/2;\n\n                minX = x - w < minX ? x - w : minX;\n                maxX = x + w > maxX ? x + w : maxX;\n\n                minY = y - h < minY ? y - h : minY;\n                maxY = y + h > maxY ? y + h : maxY;\n            }\n            else if(type === PIXI.Graphics.ELIP)\n            {\n                x = shape.x;\n                y = shape.y;\n                w = shape.width + lineWidth/2;\n                h = shape.height + lineWidth/2;\n\n                minX = x - w < minX ? x - w : minX;\n                maxX = x + w > maxX ? x + w : maxX;\n\n                minY = y - h < minY ? y - h : minY;\n                maxY = y + h > maxY ? y + h : maxY;\n            }\n            else\n            {\n                // POLY\n                points = shape.points;\n                \n                for (var j = 0; j < points.length; j+=2)\n                {\n\n                    x = points[j];\n                    y = points[j+1];\n                    minX = x-lineWidth < minX ? x-lineWidth : minX;\n                    maxX = x+lineWidth > maxX ? x+lineWidth : maxX;\n\n                    minY = y-lineWidth < minY ? y-lineWidth : minY;\n                    maxY = y+lineWidth > maxY ? y+lineWidth : maxY;\n                }\n            }\n        }\n    }\n    else\n    {\n        minX = 0;\n        maxX = 0;\n        minY = 0;\n        maxY = 0;\n    }\n\n    var padding = this.boundsPadding;\n    \n    this._localBounds.x = minX - padding;\n    this._localBounds.width = (maxX - minX) + padding * 2;\n\n    this._localBounds.y = minY - padding;\n    this._localBounds.height = (maxY - minY) + padding * 2;\n};\n\n/**\n * Generates the cached sprite when the sprite has cacheAsBitmap = true\n *\n * @method _generateCachedSprite\n * @private\n */\nPIXI.Graphics.prototype._generateCachedSprite = function()\n{\n    var bounds = this.getLocalBounds();\n\n    if(!this._cachedSprite)\n    {\n        var canvasBuffer = new PIXI.CanvasBuffer(bounds.width, bounds.height);\n        var texture = PIXI.Texture.fromCanvas(canvasBuffer.canvas);\n        \n        this._cachedSprite = new PIXI.Sprite(texture);\n        this._cachedSprite.buffer = canvasBuffer;\n\n        this._cachedSprite.worldTransform = this.worldTransform;\n    }\n    else\n    {\n        this._cachedSprite.buffer.resize(bounds.width, bounds.height);\n    }\n\n    // leverage the anchor to account for the offset of the element\n    this._cachedSprite.anchor.x = -( bounds.x / bounds.width );\n    this._cachedSprite.anchor.y = -( bounds.y / bounds.height );\n\n   // this._cachedSprite.buffer.context.save();\n    this._cachedSprite.buffer.context.translate(-bounds.x,-bounds.y);\n    \n    // make sure we set the alpha of the graphics to 1 for the render.. \n    this.worldAlpha = 1;\n\n    // now render the graphic..\n    PIXI.CanvasGraphics.renderGraphics(this, this._cachedSprite.buffer.context);\n    this._cachedSprite.alpha = this.alpha;\n};\n\n/**\n * Updates texture size based on canvas size\n *\n * @method updateCachedSpriteTexture\n * @private\n */\nPIXI.Graphics.prototype.updateCachedSpriteTexture = function()\n{\n    var cachedSprite = this._cachedSprite;\n    var texture = cachedSprite.texture;\n    var canvas = cachedSprite.buffer.canvas;\n\n    texture.baseTexture.width = canvas.width;\n    texture.baseTexture.height = canvas.height;\n    texture.crop.width = texture.frame.width = canvas.width;\n    texture.crop.height = texture.frame.height = canvas.height;\n\n    cachedSprite._width = canvas.width;\n    cachedSprite._height = canvas.height;\n\n    // update the dirty base textures\n    texture.baseTexture.dirty();\n};\n\n/**\n * Destroys a previous cached sprite.\n *\n * @method destroyCachedSprite\n */\nPIXI.Graphics.prototype.destroyCachedSprite = function()\n{\n    this._cachedSprite.texture.destroy(true);\n\n    // let the gc collect the unused sprite\n    // TODO could be object pooled!\n    this._cachedSprite = null;\n};\n\n/**\n * Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.\n *\n * @method drawShape\n * @param {Circle|Rectangle|Ellipse|Line|Polygon} shape The Shape object to draw.\n * @return {GraphicsData} The generated GraphicsData object.\n */\nPIXI.Graphics.prototype.drawShape = function(shape)\n{\n    if(this.currentPath)\n    {\n        // check current path!\n        if(this.currentPath.shape.points.length <= 2)this.graphicsData.pop();\n    }\n\n    this.currentPath = null;\n\n    var data = new PIXI.GraphicsData(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.filling, shape);\n    \n    this.graphicsData.push(data);\n    \n    if(data.type === PIXI.Graphics.POLY)\n    {\n        data.shape.closed = this.filling;\n        this.currentPath = data;\n    }\n\n    this.dirty = true;\n\n    return data;\n};\n\n/**\n * A GraphicsData object.\n * \n * @class GraphicsData\n * @constructor\n */\nPIXI.GraphicsData = function(lineWidth, lineColor, lineAlpha, fillColor, fillAlpha, fill, shape)\n{\n    this.lineWidth = lineWidth;\n    this.lineColor = lineColor;\n    this.lineAlpha = lineAlpha;\n    this._lineTint = lineColor;\n\n    this.fillColor = fillColor;\n    this.fillAlpha = fillAlpha;\n    this._fillTint = fillColor;\n    this.fill = fill;\n\n    this.shape = shape;\n    this.type = shape.type;\n};\n\n// SOME TYPES:\nPIXI.Graphics.POLY = 0;\nPIXI.Graphics.RECT = 1;\nPIXI.Graphics.CIRC = 2;\nPIXI.Graphics.ELIP = 3;\nPIXI.Graphics.RREC = 4;\n\nPIXI.Polygon.prototype.type = PIXI.Graphics.POLY;\nPIXI.Rectangle.prototype.type = PIXI.Graphics.RECT;\nPIXI.Circle.prototype.type = PIXI.Graphics.CIRC;\nPIXI.Ellipse.prototype.type = PIXI.Graphics.ELIP;\nPIXI.RoundedRectangle.prototype.type = PIXI.Graphics.RREC;\n\n\r\n/**\n * @author Mat Groves http://matgroves.com/\n */\n\n /**\n *\n * @class Strip\n * @extends DisplayObjectContainer\n * @constructor\n * @param texture {Texture} The texture to use\n * @param width {Number} the width\n * @param height {Number} the height\n *\n */\nPIXI.Strip = function(texture)\n{\n    PIXI.DisplayObjectContainer.call( this );\n\n\n    /**\n     * The texture of the strip\n     *\n     * @property texture\n     * @type Texture\n     */\n    this.texture = texture;\n\n    // set up the main bits..\n    this.uvs = new PIXI.Float32Array([0, 1,\n                                      1, 1,\n                                      1, 0,\n                                      0, 1]);\n\n    this.vertices = new PIXI.Float32Array([0, 0,\n                                            100, 0,\n                                            100, 100,\n                                            0, 100]);\n\n    this.colors = new PIXI.Float32Array([1, 1, 1, 1]);\n\n    this.indices = new PIXI.Uint16Array([0, 1, 2, 3]);\n\n    /**\n     * Whether the strip is dirty or not\n     *\n     * @property dirty\n     * @type Boolean\n     */\n    this.dirty = true;\n\n    /**\n     * The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.\n     *\n     * @property blendMode\n     * @type Number\n     * @default PIXI.blendModes.NORMAL;\n     */\n    this.blendMode = PIXI.blendModes.NORMAL;\n\n    /**\n     * Triangles in canvas mode are automatically antialiased, use this value to force triangles to overlap a bit with each other.\n     *\n     * @property canvasPadding\n     * @type Number\n     */\n    this.canvasPadding = 0;\n\n    this.drawMode = PIXI.Strip.DrawModes.TRIANGLE_STRIP;\n\n};\n\n// constructor\nPIXI.Strip.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);\nPIXI.Strip.prototype.constructor = PIXI.Strip;\n\nPIXI.Strip.prototype._renderWebGL = function(renderSession)\n{\n    // if the sprite is not visible or the alpha is 0 then no need to render this element\n    if(!this.visible || this.alpha <= 0)return;\n    // render triangle strip..\n\n    renderSession.spriteBatch.stop();\n\n    // init! init!\n    if(!this._vertexBuffer)this._initWebGL(renderSession);\n\n    renderSession.shaderManager.setShader(renderSession.shaderManager.stripShader);\n\n    this._renderStrip(renderSession);\n\n    ///renderSession.shaderManager.activateDefaultShader();\n\n    renderSession.spriteBatch.start();\n\n    //TODO check culling\n};\n\nPIXI.Strip.prototype._initWebGL = function(renderSession)\n{\n    // build the strip!\n    var gl = renderSession.gl;\n\n    this._vertexBuffer = gl.createBuffer();\n    this._indexBuffer = gl.createBuffer();\n    this._uvBuffer = gl.createBuffer();\n    this._colorBuffer = gl.createBuffer();\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertices, gl.DYNAMIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER,  this.uvs, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._colorBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.colors, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);\n};\n\nPIXI.Strip.prototype._renderStrip = function(renderSession)\n{\n    var gl = renderSession.gl;\n    var projection = renderSession.projection,\n        offset = renderSession.offset,\n        shader = renderSession.shaderManager.stripShader;\n\n    var drawMode = this.drawMode === PIXI.Strip.DrawModes.TRIANGLE_STRIP ? gl.TRIANGLE_STRIP : gl.TRIANGLES;\n\n    // gl.uniformMatrix4fv(shaderProgram.mvMatrixUniform, false, mat4Real);\n\n    renderSession.blendModeManager.setBlendMode(this.blendMode);\n\n\n    // set uniforms\n    gl.uniformMatrix3fv(shader.translationMatrix, false, this.worldTransform.toArray(true));\n    gl.uniform2f(shader.projectionVector, projection.x, -projection.y);\n    gl.uniform2f(shader.offsetVector, -offset.x, -offset.y);\n    gl.uniform1f(shader.alpha, this.worldAlpha);\n\n    if(!this.dirty)\n    {\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertices);\n        gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\n\n        // update the uvs\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);\n        gl.vertexAttribPointer(shader.aTextureCoord, 2, gl.FLOAT, false, 0, 0);\n\n        gl.activeTexture(gl.TEXTURE0);\n\n        // check if a texture is dirty..\n        if(this.texture.baseTexture._dirty[gl.id])\n        {\n            renderSession.renderer.updateTexture(this.texture.baseTexture);\n        }\n        else\n        {\n            // bind the current texture\n            gl.bindTexture(gl.TEXTURE_2D, this.texture.baseTexture._glTextures[gl.id]);\n        }\n\n        // dont need to upload!\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\n\n\n    }\n    else\n    {\n\n        this.dirty = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, this.vertices, gl.STATIC_DRAW);\n        gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\n\n        // update the uvs\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, this.uvs, gl.STATIC_DRAW);\n        gl.vertexAttribPointer(shader.aTextureCoord, 2, gl.FLOAT, false, 0, 0);\n\n        gl.activeTexture(gl.TEXTURE0);\n\n        // check if a texture is dirty..\n        if(this.texture.baseTexture._dirty[gl.id])\n        {\n            renderSession.renderer.updateTexture(this.texture.baseTexture);\n        }\n        else\n        {\n            gl.bindTexture(gl.TEXTURE_2D, this.texture.baseTexture._glTextures[gl.id]);\n        }\n\n        // dont need to upload!\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);\n\n    }\n    //console.log(gl.TRIANGLE_STRIP)\n    //\n    //\n    gl.drawElements(drawMode, this.indices.length, gl.UNSIGNED_SHORT, 0);\n\n\n};\n\n\n\nPIXI.Strip.prototype._renderCanvas = function(renderSession)\n{\n    var context = renderSession.context;\n\n    var transform = this.worldTransform;\n\n    if (renderSession.roundPixels)\n    {\n        context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx | 0, transform.ty | 0);\n    }\n    else\n    {\n        context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n    }\n\n    if (this.drawMode === PIXI.Strip.DrawModes.TRIANGLE_STRIP)\n    {\n        this._renderCanvasTriangleStrip(context);\n    }\n    else\n    {\n        this._renderCanvasTriangles(context);\n    }\n};\n\nPIXI.Strip.prototype._renderCanvasTriangleStrip = function(context)\n{\n    // draw triangles!!\n    var vertices = this.vertices;\n    var uvs = this.uvs;\n\n    var length = vertices.length / 2;\n    this.count++;\n\n    for (var i = 0; i < length - 2; i++) {\n        // draw some triangles!\n        var index = i * 2;\n        this._renderCanvasDrawTriangle(context, vertices, uvs, index, (index + 2), (index + 4));\n    }\n};\n\nPIXI.Strip.prototype._renderCanvasTriangles = function(context)\n{\n    // draw triangles!!\n    var vertices = this.vertices;\n    var uvs = this.uvs;\n    var indices = this.indices;\n\n    var length = indices.length;\n    this.count++;\n\n    for (var i = 0; i < length; i += 3) {\n        // draw some triangles!\n        var index0 = indices[i] * 2, index1 = indices[i + 1] * 2, index2 = indices[i + 2] * 2;\n        this._renderCanvasDrawTriangle(context, vertices, uvs, index0, index1, index2);\n    }\n};\n\nPIXI.Strip.prototype._renderCanvasDrawTriangle = function(context, vertices, uvs, index0, index1, index2)\n{\n    var textureSource = this.texture.baseTexture.source;\n    var textureWidth = this.texture.width;\n    var textureHeight = this.texture.height;\n\n    var x0 = vertices[index0], x1 = vertices[index1], x2 = vertices[index2];\n    var y0 = vertices[index0 + 1], y1 = vertices[index1 + 1], y2 = vertices[index2 + 1];\n\n    var u0 = uvs[index0] * textureWidth, u1 = uvs[index1] * textureWidth, u2 = uvs[index2] * textureWidth;\n    var v0 = uvs[index0 + 1] * textureHeight, v1 = uvs[index1 + 1] * textureHeight, v2 = uvs[index2 + 1] * textureHeight;\n\n    if (this.canvasPadding > 0) {\n        var paddingX = this.canvasPadding / this.worldTransform.a;\n        var paddingY = this.canvasPadding / this.worldTransform.d;\n        var centerX = (x0 + x1 + x2) / 3;\n        var centerY = (y0 + y1 + y2) / 3;\n\n        var normX = x0 - centerX;\n        var normY = y0 - centerY;\n\n        var dist = Math.sqrt(normX * normX + normY * normY);\n        x0 = centerX + (normX / dist) * (dist + paddingX);\n        y0 = centerY + (normY / dist) * (dist + paddingY);\n\n        //\n\n        normX = x1 - centerX;\n        normY = y1 - centerY;\n\n        dist = Math.sqrt(normX * normX + normY * normY);\n        x1 = centerX + (normX / dist) * (dist + paddingX);\n        y1 = centerY + (normY / dist) * (dist + paddingY);\n\n        normX = x2 - centerX;\n        normY = y2 - centerY;\n\n        dist = Math.sqrt(normX * normX + normY * normY);\n        x2 = centerX + (normX / dist) * (dist + paddingX);\n        y2 = centerY + (normY / dist) * (dist + paddingY);\n    }\n\n    context.save();\n    context.beginPath();\n\n\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n\n    context.closePath();\n\n    context.clip();\n\n    // Compute matrix transform\n    var delta =  (u0 * v1)      + (v0 * u2)      + (u1 * v2)      - (v1 * u2)      - (v0 * u1)      - (u0 * v2);\n    var deltaA = (x0 * v1)      + (v0 * x2)      + (x1 * v2)      - (v1 * x2)      - (v0 * x1)      - (x0 * v2);\n    var deltaB = (u0 * x1)      + (x0 * u2)      + (u1 * x2)      - (x1 * u2)      - (x0 * u1)      - (u0 * x2);\n    var deltaC = (u0 * v1 * x2) + (v0 * x1 * u2) + (x0 * u1 * v2) - (x0 * v1 * u2) - (v0 * u1 * x2) - (u0 * x1 * v2);\n    var deltaD = (y0 * v1)      + (v0 * y2)      + (y1 * v2)      - (v1 * y2)      - (v0 * y1)      - (y0 * v2);\n    var deltaE = (u0 * y1)      + (y0 * u2)      + (u1 * y2)      - (y1 * u2)      - (y0 * u1)      - (u0 * y2);\n    var deltaF = (u0 * v1 * y2) + (v0 * y1 * u2) + (y0 * u1 * v2) - (y0 * v1 * u2) - (v0 * u1 * y2) - (u0 * y1 * v2);\n\n    context.transform(deltaA / delta, deltaD / delta,\n        deltaB / delta, deltaE / delta,\n        deltaC / delta, deltaF / delta);\n\n    context.drawImage(textureSource, 0, 0);\n    context.restore();\n};\n\n\n\n/**\n * Renders a flat strip\n *\n * @method renderStripFlat\n * @param strip {Strip} The Strip to render\n * @private\n */\nPIXI.Strip.prototype.renderStripFlat = function(strip)\n{\n    var context = this.context;\n    var vertices = strip.vertices;\n\n    var length = vertices.length/2;\n    this.count++;\n\n    context.beginPath();\n    for (var i=1; i < length-2; i++)\n    {\n        // draw some triangles!\n        var index = i*2;\n\n        var x0 = vertices[index],   x1 = vertices[index+2], x2 = vertices[index+4];\n        var y0 = vertices[index+1], y1 = vertices[index+3], y2 = vertices[index+5];\n\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n        context.lineTo(x2, y2);\n    }\n\n    context.fillStyle = '#FF0000';\n    context.fill();\n    context.closePath();\n};\n\n/*\nPIXI.Strip.prototype.setTexture = function(texture)\n{\n    //TODO SET THE TEXTURES\n    //TODO VISIBILITY\n\n    // stop current texture\n    this.texture = texture;\n    this.width   = texture.frame.width;\n    this.height  = texture.frame.height;\n    this.updateFrame = true;\n};\n*/\n\n/**\n * When the texture is updated, this event will fire to update the scale and frame\n *\n * @method onTextureUpdate\n * @param event\n * @private\n */\n\nPIXI.Strip.prototype.onTextureUpdate = function()\n{\n    this.updateFrame = true;\n};\n\n/**\n * Returns the bounds of the mesh as a rectangle. The bounds calculation takes the worldTransform into account.\n *\n * @method getBounds\n * @param matrix {Matrix} the transformation matrix of the sprite\n * @return {Rectangle} the framing rectangle\n */\nPIXI.Strip.prototype.getBounds = function(matrix)\n{\n    var worldTransform = matrix || this.worldTransform;\n\n    var a = worldTransform.a;\n    var b = worldTransform.b;\n    var c = worldTransform.c;\n    var d = worldTransform.d;\n    var tx = worldTransform.tx;\n    var ty = worldTransform.ty;\n\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n\n    var minX = Infinity;\n    var minY = Infinity;\n\n    var vertices = this.vertices;\n    for (var i = 0, n = vertices.length; i < n; i += 2)\n    {\n        var rawX = vertices[i], rawY = vertices[i + 1];\n        var x = (a * rawX) + (c * rawY) + tx;\n        var y = (d * rawY) + (b * rawX) + ty;\n\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n    }\n\n    if (minX === -Infinity || maxY === Infinity)\n    {\n        return PIXI.EmptyRectangle;\n    }\n\n    var bounds = this._bounds;\n\n    bounds.x = minX;\n    bounds.width = maxX - minX;\n\n    bounds.y = minY;\n    bounds.height = maxY - minY;\n\n    // store a reference so that if this function gets called again in the render cycle we do not have to recalculate\n    this._currentBounds = bounds;\n\n    return bounds;\n};\n\n/**\n * Different drawing buffer modes supported\n *\n * @property\n * @type {{TRIANGLE_STRIP: number, TRIANGLES: number}}\n * @static\n */\nPIXI.Strip.DrawModes = {\n    TRIANGLE_STRIP: 0,\n    TRIANGLES: 1\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n * @copyright Mat Groves, Rovanion Luckey\n */\n\n/**\n *\n * @class Rope\n * @constructor\n * @extends Strip\n * @param {Texture} texture - The texture to use on the rope.\n * @param {Array} points - An array of {PIXI.Point}.\n *\n */\nPIXI.Rope = function(texture, points)\n{\n    PIXI.Strip.call( this, texture );\n    this.points = points;\n\n    this.vertices = new PIXI.Float32Array(points.length * 4);\n    this.uvs = new PIXI.Float32Array(points.length * 4);\n    this.colors = new PIXI.Float32Array(points.length * 2);\n    this.indices = new PIXI.Uint16Array(points.length * 2);\n\n\n    this.refresh();\n};\n\n\n// constructor\nPIXI.Rope.prototype = Object.create( PIXI.Strip.prototype );\nPIXI.Rope.prototype.constructor = PIXI.Rope;\n\n/*\n * Refreshes\n *\n * @method refresh\n */\nPIXI.Rope.prototype.refresh = function()\n{\n    var points = this.points;\n    if(points.length < 1) return;\n\n    var uvs = this.uvs;\n\n    var lastPoint = points[0];\n    var indices = this.indices;\n    var colors = this.colors;\n\n    this.count-=0.2;\n\n    uvs[0] = 0;\n    uvs[1] = 0;\n    uvs[2] = 0;\n    uvs[3] = 1;\n\n    colors[0] = 1;\n    colors[1] = 1;\n\n    indices[0] = 0;\n    indices[1] = 1;\n\n    var total = points.length,\n        point, index, amount;\n\n    for (var i = 1; i < total; i++)\n    {\n        point = points[i];\n        index = i * 4;\n        // time to do some smart drawing!\n        amount = i / (total-1);\n\n        if(i%2)\n        {\n            uvs[index] = amount;\n            uvs[index+1] = 0;\n\n            uvs[index+2] = amount;\n            uvs[index+3] = 1;\n        }\n        else\n        {\n            uvs[index] = amount;\n            uvs[index+1] = 0;\n\n            uvs[index+2] = amount;\n            uvs[index+3] = 1;\n        }\n\n        index = i * 2;\n        colors[index] = 1;\n        colors[index+1] = 1;\n\n        index = i * 2;\n        indices[index] = index;\n        indices[index + 1] = index + 1;\n\n        lastPoint = point;\n    }\n};\n\n/*\n * Updates the object transform for rendering\n *\n * @method updateTransform\n * @private\n */\nPIXI.Rope.prototype.updateTransform = function()\n{\n\n    var points = this.points;\n    if(points.length < 1)return;\n\n    var lastPoint = points[0];\n    var nextPoint;\n    var perp = {x:0, y:0};\n\n    this.count-=0.2;\n\n    var vertices = this.vertices;\n    var total = points.length,\n        point, index, ratio, perpLength, num;\n\n    for (var i = 0; i < total; i++)\n    {\n        point = points[i];\n        index = i * 4;\n\n        if(i < points.length-1)\n        {\n            nextPoint = points[i+1];\n        }\n        else\n        {\n            nextPoint = point;\n        }\n\n        perp.y = -(nextPoint.x - lastPoint.x);\n        perp.x = nextPoint.y - lastPoint.y;\n\n        ratio = (1 - (i / (total-1))) * 10;\n\n        if(ratio > 1) ratio = 1;\n\n        perpLength = Math.sqrt(perp.x * perp.x + perp.y * perp.y);\n        num = this.texture.height / 2; //(20 + Math.abs(Math.sin((i + this.count) * 0.3) * 50) )* ratio;\n        perp.x /= perpLength;\n        perp.y /= perpLength;\n\n        perp.x *= num;\n        perp.y *= num;\n\n        vertices[index] = point.x + perp.x;\n        vertices[index+1] = point.y + perp.y;\n        vertices[index+2] = point.x - perp.x;\n        vertices[index+3] = point.y - perp.y;\n\n        lastPoint = point;\n    }\n\n    PIXI.DisplayObjectContainer.prototype.updateTransform.call( this );\n};\n/*\n * Sets the texture that the Rope will use\n *\n * @method setTexture\n * @param texture {Texture} the texture that will be used\n */\nPIXI.Rope.prototype.setTexture = function(texture)\n{\n    // stop current texture\n    this.texture = texture;\n    //this.updateFrame = true;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/\n */\n\n/**\n * A tiling sprite is a fast way of rendering a tiling image\n *\n * @class TilingSprite\n * @extends Sprite\n * @constructor\n * @param texture {Texture} the texture of the tiling sprite\n * @param width {Number}  the width of the tiling sprite\n * @param height {Number} the height of the tiling sprite\n */\nPIXI.TilingSprite = function(texture, width, height)\n{\n    PIXI.Sprite.call( this, texture);\n\n    /**\n     * The with of the tiling sprite\n     *\n     * @property width\n     * @type Number\n     */\n    this._width = width || 100;\n\n    /**\n     * The height of the tiling sprite\n     *\n     * @property height\n     * @type Number\n     */\n    this._height = height || 100;\n\n    /**\n     * The scaling of the image that is being tiled\n     *\n     * @property tileScale\n     * @type Point\n     */\n    this.tileScale = new PIXI.Point(1,1);\n\n    /**\n     * A point that represents the scale of the texture object\n     *\n     * @property tileScaleOffset\n     * @type Point\n     */\n    this.tileScaleOffset = new PIXI.Point(1,1);\n\n    /**\n     * The offset position of the image that is being tiled\n     *\n     * @property tilePosition\n     * @type Point\n     */\n    this.tilePosition = new PIXI.Point(0,0);\n\n    /**\n     * Whether this sprite is renderable or not\n     *\n     * @property renderable\n     * @type Boolean\n     * @default true\n     */\n    this.renderable = true;\n\n    /**\n     * The tint applied to the sprite. This is a hex value\n     *\n     * @property tint\n     * @type Number\n     * @default 0xFFFFFF\n     */\n    this.tint = 0xFFFFFF;\n\n    /**\n     * The blend mode to be applied to the sprite\n     *\n     * @property blendMode\n     * @type Number\n     * @default PIXI.blendModes.NORMAL;\n     */\n    this.blendMode = PIXI.blendModes.NORMAL;\n\n\n\n};\n\n// constructor\nPIXI.TilingSprite.prototype = Object.create(PIXI.Sprite.prototype);\nPIXI.TilingSprite.prototype.constructor = PIXI.TilingSprite;\n\n\n/**\n * The width of the sprite, setting this will actually modify the scale to achieve the value set\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(PIXI.TilingSprite.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(value) {\n\n        this._width = value;\n    }\n});\n\n/**\n * The height of the TilingSprite, setting this will actually modify the scale to achieve the value set\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(PIXI.TilingSprite.prototype, 'height', {\n    get: function() {\n        return  this._height;\n    },\n    set: function(value) {\n        this._height = value;\n    }\n});\n\nPIXI.TilingSprite.prototype.setTexture = function(texture)\n{\n    if (this.texture === texture) return;\n\n    this.texture = texture;\n\n    this.refreshTexture = true;\n\n    this.cachedTint = 0xFFFFFF;\n};\n\n/**\n* Renders the object using the WebGL renderer\n*\n* @method _renderWebGL\n* @param renderSession {RenderSession}\n* @private\n*/\nPIXI.TilingSprite.prototype._renderWebGL = function(renderSession)\n{\n    if (this.visible === false || this.alpha === 0) return;\n    var i,j;\n\n    if (this._mask)\n    {\n        renderSession.spriteBatch.stop();\n        renderSession.maskManager.pushMask(this.mask, renderSession);\n        renderSession.spriteBatch.start();\n    }\n\n    if (this._filters)\n    {\n        renderSession.spriteBatch.flush();\n        renderSession.filterManager.pushFilter(this._filterBlock);\n    }\n\n\n\n    if (!this.tilingTexture || this.refreshTexture)\n    {\n        this.generateTilingTexture(true);\n\n        if (this.tilingTexture && this.tilingTexture.needsUpdate)\n        {\n            //TODO - tweaking\n            renderSession.renderer.updateTexture(this.tilingTexture.baseTexture);\n            this.tilingTexture.needsUpdate = false;\n           // this.tilingTexture._uvs = null;\n        }\n    }\n    else\n    {\n        renderSession.spriteBatch.renderTilingSprite(this);\n    }\n    // simple render children!\n    for (i=0,j=this.children.length; i<j; i++)\n    {\n        this.children[i]._renderWebGL(renderSession);\n    }\n\n    renderSession.spriteBatch.stop();\n\n    if (this._filters) renderSession.filterManager.popFilter();\n    if (this._mask) renderSession.maskManager.popMask(this._mask, renderSession);\n\n    renderSession.spriteBatch.start();\n};\n\n/**\n* Renders the object using the Canvas renderer\n*\n* @method _renderCanvas\n* @param renderSession {RenderSession}\n* @private\n*/\nPIXI.TilingSprite.prototype._renderCanvas = function(renderSession)\n{\n    if (this.visible === false || this.alpha === 0)return;\n\n    var context = renderSession.context;\n\n    if (this._mask)\n    {\n        renderSession.maskManager.pushMask(this._mask, renderSession);\n    }\n\n    context.globalAlpha = this.worldAlpha;\n\n    var transform = this.worldTransform;\n\n    var i,j;\n\n    var resolution = renderSession.resolution;\n\n    context.setTransform(transform.a * resolution,\n                         transform.b * resolution,\n                         transform.c * resolution,\n                         transform.d * resolution,\n                         transform.tx * resolution,\n                         transform.ty * resolution);\n\n    if (!this.__tilePattern ||  this.refreshTexture)\n    {\n        this.generateTilingTexture(false);\n\n        if (this.tilingTexture)\n        {\n            this.__tilePattern = context.createPattern(this.tilingTexture.baseTexture.source, 'repeat');\n        }\n        else\n        {\n            return;\n        }\n    }\n\n    // check blend mode\n    if (this.blendMode !== renderSession.currentBlendMode)\n    {\n        renderSession.currentBlendMode = this.blendMode;\n        context.globalCompositeOperation = PIXI.blendModesCanvas[renderSession.currentBlendMode];\n    }\n\n    var tilePosition = this.tilePosition;\n    var tileScale = this.tileScale;\n\n    tilePosition.x %= this.tilingTexture.baseTexture.width;\n    tilePosition.y %= this.tilingTexture.baseTexture.height;\n\n    // offset - make sure to account for the anchor point..\n    context.scale(tileScale.x,tileScale.y);\n    context.translate(tilePosition.x + (this.anchor.x * -this._width), tilePosition.y + (this.anchor.y * -this._height));\n\n    context.fillStyle = this.__tilePattern;\n\n    context.fillRect(-tilePosition.x,\n                    -tilePosition.y,\n                    this._width / tileScale.x,\n                    this._height / tileScale.y);\n\n    context.scale(1 / tileScale.x, 1 / tileScale.y);\n    context.translate(-tilePosition.x + (this.anchor.x * this._width), -tilePosition.y + (this.anchor.y * this._height));\n\n    if (this._mask)\n    {\n        renderSession.maskManager.popMask(renderSession);\n    }\n\n    for (i=0,j=this.children.length; i<j; i++)\n    {\n        this.children[i]._renderCanvas(renderSession);\n    }\n};\n\n\n/**\n* Returns the framing rectangle of the sprite as a PIXI.Rectangle object\n*\n* @method getBounds\n* @return {Rectangle} the framing rectangle\n*/\nPIXI.TilingSprite.prototype.getBounds = function()\n{\n    var width = this._width;\n    var height = this._height;\n\n    var w0 = width * (1-this.anchor.x);\n    var w1 = width * -this.anchor.x;\n\n    var h0 = height * (1-this.anchor.y);\n    var h1 = height * -this.anchor.y;\n\n    var worldTransform = this.worldTransform;\n\n    var a = worldTransform.a;\n    var b = worldTransform.b;\n    var c = worldTransform.c;\n    var d = worldTransform.d;\n    var tx = worldTransform.tx;\n    var ty = worldTransform.ty;\n\n    var x1 = a * w1 + c * h1 + tx;\n    var y1 = d * h1 + b * w1 + ty;\n\n    var x2 = a * w0 + c * h1 + tx;\n    var y2 = d * h1 + b * w0 + ty;\n\n    var x3 = a * w0 + c * h0 + tx;\n    var y3 = d * h0 + b * w0 + ty;\n\n    var x4 =  a * w1 + c * h0 + tx;\n    var y4 =  d * h0 + b * w1 + ty;\n\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n\n    var minX = Infinity;\n    var minY = Infinity;\n\n    minX = x1 < minX ? x1 : minX;\n    minX = x2 < minX ? x2 : minX;\n    minX = x3 < minX ? x3 : minX;\n    minX = x4 < minX ? x4 : minX;\n\n    minY = y1 < minY ? y1 : minY;\n    minY = y2 < minY ? y2 : minY;\n    minY = y3 < minY ? y3 : minY;\n    minY = y4 < minY ? y4 : minY;\n\n    maxX = x1 > maxX ? x1 : maxX;\n    maxX = x2 > maxX ? x2 : maxX;\n    maxX = x3 > maxX ? x3 : maxX;\n    maxX = x4 > maxX ? x4 : maxX;\n\n    maxY = y1 > maxY ? y1 : maxY;\n    maxY = y2 > maxY ? y2 : maxY;\n    maxY = y3 > maxY ? y3 : maxY;\n    maxY = y4 > maxY ? y4 : maxY;\n\n    var bounds = this._bounds;\n\n    bounds.x = minX;\n    bounds.width = maxX - minX;\n\n    bounds.y = minY;\n    bounds.height = maxY - minY;\n\n    // store a reference so that if this function gets called again in the render cycle we do not have to recalculate\n    this._currentBounds = bounds;\n\n    return bounds;\n};\n\n\n\n/**\n * When the texture is updated, this event will fire to update the scale and frame\n *\n * @method onTextureUpdate\n * @param event\n * @private\n */\nPIXI.TilingSprite.prototype.onTextureUpdate = function()\n{\n   // overriding the sprite version of this!\n};\n\n\n/**\n*\n* @method generateTilingTexture\n*\n* @param forcePowerOfTwo {Boolean} Whether we want to force the texture to be a power of two\n*/\nPIXI.TilingSprite.prototype.generateTilingTexture = function(forcePowerOfTwo)\n{\n    if (!this.texture.baseTexture.hasLoaded) return;\n\n    var texture = this.originalTexture || this.texture;\n    var frame = texture.frame;\n    var targetWidth, targetHeight;\n\n    //  Check that the frame is the same size as the base texture.\n    var isFrame = frame.width !== texture.baseTexture.width || frame.height !== texture.baseTexture.height;\n\n    var newTextureRequired = false;\n\n    if (!forcePowerOfTwo)\n    {\n        if (isFrame)\n        {\n            if (texture.trim)\n            {\n                targetWidth = texture.trim.width;\n                targetHeight = texture.trim.height;\n            }\n            else\n            {\n                targetWidth = frame.width;\n                targetHeight = frame.height;\n            }\n\n            newTextureRequired = true;\n        }\n    }\n    else\n    {\n        targetWidth = PIXI.getNextPowerOfTwo(frame.width);\n        targetHeight = PIXI.getNextPowerOfTwo(frame.height);\n\n        //  If the BaseTexture dimensions don't match the texture frame then we need a new texture anyway because it's part of a texture atlas\n        if (frame.width !== targetWidth || frame.height !== targetHeight || texture.baseTexture.width !== targetWidth || texture.baseTexture.height || targetHeight) newTextureRequired = true;\n    }\n\n    if (newTextureRequired)\n    {\n        var canvasBuffer;\n\n        if (this.tilingTexture && this.tilingTexture.isTiling)\n        {\n            canvasBuffer = this.tilingTexture.canvasBuffer;\n            canvasBuffer.resize(targetWidth, targetHeight);\n            this.tilingTexture.baseTexture.width = targetWidth;\n            this.tilingTexture.baseTexture.height = targetHeight;\n            this.tilingTexture.needsUpdate = true;\n        }\n        else\n        {\n            canvasBuffer = new PIXI.CanvasBuffer(targetWidth, targetHeight);\n\n            this.tilingTexture = PIXI.Texture.fromCanvas(canvasBuffer.canvas);\n            this.tilingTexture.canvasBuffer = canvasBuffer;\n            this.tilingTexture.isTiling = true;\n        }\n\n        canvasBuffer.context.drawImage(texture.baseTexture.source,\n                               texture.crop.x,\n                               texture.crop.y,\n                               texture.crop.width,\n                               texture.crop.height,\n                               0,\n                               0,\n                               targetWidth,\n                               targetHeight);\n\n        this.tileScaleOffset.x = frame.width / targetWidth;\n        this.tileScaleOffset.y = frame.height / targetHeight;\n    }\n    else\n    {\n        //  TODO - switching?\n        if (this.tilingTexture && this.tilingTexture.isTiling)\n        {\n            // destroy the tiling texture!\n            // TODO could store this somewhere?\n            this.tilingTexture.destroy(true);\n        }\n\n        this.tileScaleOffset.x = 1;\n        this.tileScaleOffset.y = 1;\n        this.tilingTexture = texture;\n    }\n\n    this.refreshTexture = false;\n\n    this.originalTexture = this.texture;\n    this.texture = this.tilingTexture;\n\n    this.tilingTexture.baseTexture._powerOf2 = true;\n};\n\nPIXI.TilingSprite.prototype.destroy = function () {\n    PIXI.Sprite.prototype.destroy.call(this);\n\n    this.tileScale = null;\n    this.tileScaleOffset = null;\n    this.tilePosition = null;\n\n    this.tilingTexture.destroy(true);\n    this.tilingTexture = null;\n};\n\r\n/******************************************************************************\n * Spine Runtimes Software License\n * Version 2.1\n *\n * Copyright (c) 2013, Esoteric Software\n * All rights reserved.\n *\n * You are granted a perpetual, non-exclusive, non-sublicensable and\n * non-transferable license to install, execute and perform the Spine Runtimes\n * Software (the \"Software\") solely for internal use. Without the written\n * permission of Esoteric Software (typically granted by licensing Spine), you\n * may not (a) modify, translate, adapt or otherwise create derivative works,\n * improvements of the Software or develop new applications using the Software\n * or (b) remove, delete, alter or obscure any trademarks or any copyright,\n * trademark, patent or other intellectual property or proprietary rights\n * notices on or in the Software, including any copy thereof. Redistributions\n * in binary or source form must include this license and terms.\n *\n * THIS SOFTWARE IS PROVIDED BY ESOTERIC SOFTWARE \"AS IS\" AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n * EVENT SHALL ESOTERIC SOFTARE BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n\nvar spine = {\n\tradDeg: 180 / Math.PI,\n\tdegRad: Math.PI / 180,\n\ttemp: [],\n    Float32Array: (typeof(Float32Array) === 'undefined') ? Array : Float32Array,\n    Uint16Array: (typeof(Uint16Array) === 'undefined') ? Array : Uint16Array\n};\n\nspine.BoneData = function (name, parent) {\n\tthis.name = name;\n\tthis.parent = parent;\n};\nspine.BoneData.prototype = {\n\tlength: 0,\n\tx: 0, y: 0,\n\trotation: 0,\n\tscaleX: 1, scaleY: 1,\n\tinheritScale: true,\n\tinheritRotation: true,\n\tflipX: false, flipY: false\n};\n\nspine.SlotData = function (name, boneData) {\n\tthis.name = name;\n\tthis.boneData = boneData;\n};\nspine.SlotData.prototype = {\n\tr: 1, g: 1, b: 1, a: 1,\n\tattachmentName: null,\n\tadditiveBlending: false\n};\n\nspine.IkConstraintData = function (name) {\n\tthis.name = name;\n\tthis.bones = [];\n};\nspine.IkConstraintData.prototype = {\n\ttarget: null,\n\tbendDirection: 1,\n\tmix: 1\n};\n\nspine.Bone = function (boneData, skeleton, parent) {\n\tthis.data = boneData;\n\tthis.skeleton = skeleton;\n\tthis.parent = parent;\n\tthis.setToSetupPose();\n};\nspine.Bone.yDown = false;\nspine.Bone.prototype = {\n\tx: 0, y: 0,\n\trotation: 0, rotationIK: 0,\n\tscaleX: 1, scaleY: 1,\n\tflipX: false, flipY: false,\n\tm00: 0, m01: 0, worldX: 0, // a b x\n\tm10: 0, m11: 0, worldY: 0, // c d y\n\tworldRotation: 0,\n\tworldScaleX: 1, worldScaleY: 1,\n\tworldFlipX: false, worldFlipY: false,\n\tupdateWorldTransform: function () {\n\t\tvar parent = this.parent;\n\t\tif (parent) {\n\t\t\tthis.worldX = this.x * parent.m00 + this.y * parent.m01 + parent.worldX;\n\t\t\tthis.worldY = this.x * parent.m10 + this.y * parent.m11 + parent.worldY;\n\t\t\tif (this.data.inheritScale) {\n\t\t\t\tthis.worldScaleX = parent.worldScaleX * this.scaleX;\n\t\t\t\tthis.worldScaleY = parent.worldScaleY * this.scaleY;\n\t\t\t} else {\n\t\t\t\tthis.worldScaleX = this.scaleX;\n\t\t\t\tthis.worldScaleY = this.scaleY;\n\t\t\t}\n\t\t\tthis.worldRotation = this.data.inheritRotation ? (parent.worldRotation + this.rotationIK) : this.rotationIK;\n\t\t\tthis.worldFlipX = parent.worldFlipX != this.flipX;\n\t\t\tthis.worldFlipY = parent.worldFlipY != this.flipY;\n\t\t} else {\n\t\t\tvar skeletonFlipX = this.skeleton.flipX, skeletonFlipY = this.skeleton.flipY;\n\t\t\tthis.worldX = skeletonFlipX ? -this.x : this.x;\n\t\t\tthis.worldY = (skeletonFlipY != spine.Bone.yDown) ? -this.y : this.y;\n\t\t\tthis.worldScaleX = this.scaleX;\n\t\t\tthis.worldScaleY = this.scaleY;\n\t\t\tthis.worldRotation = this.rotationIK;\n\t\t\tthis.worldFlipX = skeletonFlipX != this.flipX;\n\t\t\tthis.worldFlipY = skeletonFlipY != this.flipY;\n\t\t}\n\t\tvar radians = this.worldRotation * spine.degRad;\n\t\tvar cos = Math.cos(radians);\n\t\tvar sin = Math.sin(radians);\n\t\tif (this.worldFlipX) {\n\t\t\tthis.m00 = -cos * this.worldScaleX;\n\t\t\tthis.m01 = sin * this.worldScaleY;\n\t\t} else {\n\t\t\tthis.m00 = cos * this.worldScaleX;\n\t\t\tthis.m01 = -sin * this.worldScaleY;\n\t\t}\n\t\tif (this.worldFlipY != spine.Bone.yDown) {\n\t\t\tthis.m10 = -sin * this.worldScaleX;\n\t\t\tthis.m11 = -cos * this.worldScaleY;\n\t\t} else {\n\t\t\tthis.m10 = sin * this.worldScaleX;\n\t\t\tthis.m11 = cos * this.worldScaleY;\n\t\t}\n\t},\n\tsetToSetupPose: function () {\n\t\tvar data = this.data;\n\t\tthis.x = data.x;\n\t\tthis.y = data.y;\n\t\tthis.rotation = data.rotation;\n\t\tthis.rotationIK = this.rotation;\n\t\tthis.scaleX = data.scaleX;\n\t\tthis.scaleY = data.scaleY;\n\t\tthis.flipX = data.flipX;\n\t\tthis.flipY = data.flipY;\n\t},\n\tworldToLocal: function (world) {\n\t\tvar dx = world[0] - this.worldX, dy = world[1] - this.worldY;\n\t\tvar m00 = this.m00, m10 = this.m10, m01 = this.m01, m11 = this.m11;\n\t\tif (this.worldFlipX != (this.worldFlipY != spine.Bone.yDown)) {\n\t\t\tm00 = -m00;\n\t\t\tm11 = -m11;\n\t\t}\n\t\tvar invDet = 1 / (m00 * m11 - m01 * m10);\n\t\tworld[0] = dx * m00 * invDet - dy * m01 * invDet;\n\t\tworld[1] = dy * m11 * invDet - dx * m10 * invDet;\n\t},\n\tlocalToWorld: function (local) {\n\t\tvar localX = local[0], localY = local[1];\n\t\tlocal[0] = localX * this.m00 + localY * this.m01 + this.worldX;\n\t\tlocal[1] = localX * this.m10 + localY * this.m11 + this.worldY;\n\t}\n};\n\nspine.Slot = function (slotData, bone) {\n\tthis.data = slotData;\n\tthis.bone = bone;\n\tthis.setToSetupPose();\n};\nspine.Slot.prototype = {\n\tr: 1, g: 1, b: 1, a: 1,\n\t_attachmentTime: 0,\n\tattachment: null,\n\tattachmentVertices: [],\n\tsetAttachment: function (attachment) {\n\t\tthis.attachment = attachment;\n\t\tthis._attachmentTime = this.bone.skeleton.time;\n\t\tthis.attachmentVertices.length = 0;\n\t},\n\tsetAttachmentTime: function (time) {\n\t\tthis._attachmentTime = this.bone.skeleton.time - time;\n\t},\n\tgetAttachmentTime: function () {\n\t\treturn this.bone.skeleton.time - this._attachmentTime;\n\t},\n\tsetToSetupPose: function () {\n\t\tvar data = this.data;\n\t\tthis.r = data.r;\n\t\tthis.g = data.g;\n\t\tthis.b = data.b;\n\t\tthis.a = data.a;\n\n\t\tvar slotDatas = this.bone.skeleton.data.slots;\n\t\tfor (var i = 0, n = slotDatas.length; i < n; i++) {\n\t\t\tif (slotDatas[i] == data) {\n\t\t\t\tthis.setAttachment(!data.attachmentName ? null : this.bone.skeleton.getAttachmentBySlotIndex(i, data.attachmentName));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\nspine.IkConstraint = function (data, skeleton) {\n\tthis.data = data;\n\tthis.mix = data.mix;\n\tthis.bendDirection = data.bendDirection;\n\n\tthis.bones = [];\n\tfor (var i = 0, n = data.bones.length; i < n; i++)\n\t\tthis.bones.push(skeleton.findBone(data.bones[i].name));\n\tthis.target = skeleton.findBone(data.target.name);\n};\nspine.IkConstraint.prototype = {\n\tapply: function () {\n\t\tvar target = this.target;\n\t\tvar bones = this.bones;\n\t\tswitch (bones.length) {\n\t\tcase 1:\n\t\t\tspine.IkConstraint.apply1(bones[0], target.worldX, target.worldY, this.mix);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tspine.IkConstraint.apply2(bones[0], bones[1], target.worldX, target.worldY, this.bendDirection, this.mix);\n\t\t\tbreak;\n\t\t}\n\t}\n};\n/** Adjusts the bone rotation so the tip is as close to the target position as possible. The target is specified in the world\n * coordinate system. */\nspine.IkConstraint.apply1 = function (bone, targetX, targetY, alpha) {\n\tvar parentRotation = (!bone.data.inheritRotation || !bone.parent) ? 0 : bone.parent.worldRotation;\n\tvar rotation = bone.rotation;\n\tvar rotationIK = Math.atan2(targetY - bone.worldY, targetX - bone.worldX) * spine.radDeg - parentRotation;\n\tbone.rotationIK = rotation + (rotationIK - rotation) * alpha;\n};\n/** Adjusts the parent and child bone rotations so the tip of the child is as close to the target position as possible. The\n * target is specified in the world coordinate system.\n * @param child Any descendant bone of the parent. */\nspine.IkConstraint.apply2 = function (parent, child, targetX, targetY, bendDirection, alpha) {\n\tvar childRotation = child.rotation, parentRotation = parent.rotation;\n\tif (!alpha) {\n\t\tchild.rotationIK = childRotation;\n\t\tparent.rotationIK = parentRotation;\n\t\treturn;\n\t}\n\tvar positionX, positionY, tempPosition = spine.temp;\n\tvar parentParent = parent.parent;\n\tif (parentParent) {\n\t\ttempPosition[0] = targetX;\n\t\ttempPosition[1] = targetY;\n\t\tparentParent.worldToLocal(tempPosition);\n\t\ttargetX = (tempPosition[0] - parent.x) * parentParent.worldScaleX;\n\t\ttargetY = (tempPosition[1] - parent.y) * parentParent.worldScaleY;\n\t} else {\n\t\ttargetX -= parent.x;\n\t\ttargetY -= parent.y;\n\t}\n\tif (child.parent == parent) {\n\t\tpositionX = child.x;\n\t\tpositionY = child.y;\n\t} else {\n\t\ttempPosition[0] = child.x;\n\t\ttempPosition[1] = child.y;\n\t\tchild.parent.localToWorld(tempPosition);\n\t\tparent.worldToLocal(tempPosition);\n\t\tpositionX = tempPosition[0];\n\t\tpositionY = tempPosition[1];\n\t}\n\tvar childX = positionX * parent.worldScaleX, childY = positionY * parent.worldScaleY;\n\tvar offset = Math.atan2(childY, childX);\n\tvar len1 = Math.sqrt(childX * childX + childY * childY), len2 = child.data.length * child.worldScaleX;\n\t// Based on code by Ryan Juckett with permission: Copyright (c) 2008-2009 Ryan Juckett, http://www.ryanjuckett.com/\n\tvar cosDenom = 2 * len1 * len2;\n\tif (cosDenom < 0.0001) {\n\t\tchild.rotationIK = childRotation + (Math.atan2(targetY, targetX) * spine.radDeg - parentRotation - childRotation) * alpha;\n\t\treturn;\n\t}\n\tvar cos = (targetX * targetX + targetY * targetY - len1 * len1 - len2 * len2) / cosDenom;\n\tif (cos < -1)\n\t\tcos = -1;\n\telse if (cos > 1)\n\t\tcos = 1;\n\tvar childAngle = Math.acos(cos) * bendDirection;\n\tvar adjacent = len1 + len2 * cos, opposite = len2 * Math.sin(childAngle);\n\tvar parentAngle = Math.atan2(targetY * adjacent - targetX * opposite, targetX * adjacent + targetY * opposite);\n\tvar rotation = (parentAngle - offset) * spine.radDeg - parentRotation;\n\tif (rotation > 180)\n\t\trotation -= 360;\n\telse if (rotation < -180) //\n\t\trotation += 360;\n\tparent.rotationIK = parentRotation + rotation * alpha;\n\trotation = (childAngle + offset) * spine.radDeg - childRotation;\n\tif (rotation > 180)\n\t\trotation -= 360;\n\telse if (rotation < -180) //\n\t\trotation += 360;\n\tchild.rotationIK = childRotation + (rotation + parent.worldRotation - child.parent.worldRotation) * alpha;\n};\n\nspine.Skin = function (name) {\n\tthis.name = name;\n\tthis.attachments = {};\n};\nspine.Skin.prototype = {\n\taddAttachment: function (slotIndex, name, attachment) {\n\t\tthis.attachments[slotIndex + \":\" + name] = attachment;\n\t},\n\tgetAttachment: function (slotIndex, name) {\n\t\treturn this.attachments[slotIndex + \":\" + name];\n\t},\n\t_attachAll: function (skeleton, oldSkin) {\n\t\tfor (var key in oldSkin.attachments) {\n\t\t\tvar colon = key.indexOf(\":\");\n\t\t\tvar slotIndex = parseInt(key.substring(0, colon));\n\t\t\tvar name = key.substring(colon + 1);\n\t\t\tvar slot = skeleton.slots[slotIndex];\n\t\t\tif (slot.attachment && slot.attachment.name == name) {\n\t\t\t\tvar attachment = this.getAttachment(slotIndex, name);\n\t\t\t\tif (attachment) slot.setAttachment(attachment);\n\t\t\t}\n\t\t}\n\t}\n};\n\nspine.Animation = function (name, timelines, duration) {\n\tthis.name = name;\n\tthis.timelines = timelines;\n\tthis.duration = duration;\n};\nspine.Animation.prototype = {\n\tapply: function (skeleton, lastTime, time, loop, events) {\n\t\tif (loop && this.duration != 0) {\n\t\t\ttime %= this.duration;\n\t\t\tlastTime %= this.duration;\n\t\t}\n\t\tvar timelines = this.timelines;\n\t\tfor (var i = 0, n = timelines.length; i < n; i++)\n\t\t\ttimelines[i].apply(skeleton, lastTime, time, events, 1);\n\t},\n\tmix: function (skeleton, lastTime, time, loop, events, alpha) {\n\t\tif (loop && this.duration != 0) {\n\t\t\ttime %= this.duration;\n\t\t\tlastTime %= this.duration;\n\t\t}\n\t\tvar timelines = this.timelines;\n\t\tfor (var i = 0, n = timelines.length; i < n; i++)\n\t\t\ttimelines[i].apply(skeleton, lastTime, time, events, alpha);\n\t}\n};\nspine.Animation.binarySearch = function (values, target, step) {\n\tvar low = 0;\n\tvar high = Math.floor(values.length / step) - 2;\n\tif (!high) return step;\n\tvar current = high >>> 1;\n\twhile (true) {\n\t\tif (values[(current + 1) * step] <= target)\n\t\t\tlow = current + 1;\n\t\telse\n\t\t\thigh = current;\n\t\tif (low == high) return (low + 1) * step;\n\t\tcurrent = (low + high) >>> 1;\n\t}\n};\nspine.Animation.binarySearch1 = function (values, target) {\n\tvar low = 0;\n\tvar high = values.length - 2;\n\tif (!high) return 1;\n\tvar current = high >>> 1;\n\twhile (true) {\n\t\tif (values[current + 1] <= target)\n\t\t\tlow = current + 1;\n\t\telse\n\t\t\thigh = current;\n\t\tif (low == high) return low + 1;\n\t\tcurrent = (low + high) >>> 1;\n\t}\n};\nspine.Animation.linearSearch = function (values, target, step) {\n\tfor (var i = 0, last = values.length - step; i <= last; i += step)\n\t\tif (values[i] > target) return i;\n\treturn -1;\n};\n\nspine.Curves = function (frameCount) {\n\tthis.curves = []; // type, x, y, ...\n\t//this.curves.length = (frameCount - 1) * 19/*BEZIER_SIZE*/;\n};\nspine.Curves.prototype = {\n\tsetLinear: function (frameIndex) {\n\t\tthis.curves[frameIndex * 19/*BEZIER_SIZE*/] = 0/*LINEAR*/;\n\t},\n\tsetStepped: function (frameIndex) {\n\t\tthis.curves[frameIndex * 19/*BEZIER_SIZE*/] = 1/*STEPPED*/;\n\t},\n\t/** Sets the control handle positions for an interpolation bezier curve used to transition from this keyframe to the next.\n\t * cx1 and cx2 are from 0 to 1, representing the percent of time between the two keyframes. cy1 and cy2 are the percent of\n\t * the difference between the keyframe's values. */\n\tsetCurve: function (frameIndex, cx1, cy1, cx2, cy2) {\n\t\tvar subdiv1 = 1 / 10/*BEZIER_SEGMENTS*/, subdiv2 = subdiv1 * subdiv1, subdiv3 = subdiv2 * subdiv1;\n\t\tvar pre1 = 3 * subdiv1, pre2 = 3 * subdiv2, pre4 = 6 * subdiv2, pre5 = 6 * subdiv3;\n\t\tvar tmp1x = -cx1 * 2 + cx2, tmp1y = -cy1 * 2 + cy2, tmp2x = (cx1 - cx2) * 3 + 1, tmp2y = (cy1 - cy2) * 3 + 1;\n\t\tvar dfx = cx1 * pre1 + tmp1x * pre2 + tmp2x * subdiv3, dfy = cy1 * pre1 + tmp1y * pre2 + tmp2y * subdiv3;\n\t\tvar ddfx = tmp1x * pre4 + tmp2x * pre5, ddfy = tmp1y * pre4 + tmp2y * pre5;\n\t\tvar dddfx = tmp2x * pre5, dddfy = tmp2y * pre5;\n\n\t\tvar i = frameIndex * 19/*BEZIER_SIZE*/;\n\t\tvar curves = this.curves;\n\t\tcurves[i++] = 2/*BEZIER*/;\n\n\t\tvar x = dfx, y = dfy;\n\t\tfor (var n = i + 19/*BEZIER_SIZE*/ - 1; i < n; i += 2) {\n\t\t\tcurves[i] = x;\n\t\t\tcurves[i + 1] = y;\n\t\t\tdfx += ddfx;\n\t\t\tdfy += ddfy;\n\t\t\tddfx += dddfx;\n\t\t\tddfy += dddfy;\n\t\t\tx += dfx;\n\t\t\ty += dfy;\n\t\t}\n\t},\n\tgetCurvePercent: function (frameIndex, percent) {\n\t\tpercent = percent < 0 ? 0 : (percent > 1 ? 1 : percent);\n\t\tvar curves = this.curves;\n\t\tvar i = frameIndex * 19/*BEZIER_SIZE*/;\n\t\tvar type = curves[i];\n\t\tif (type === 0/*LINEAR*/) return percent;\n\t\tif (type == 1/*STEPPED*/) return 0;\n\t\ti++;\n\t\tvar x = 0;\n\t\tfor (var start = i, n = i + 19/*BEZIER_SIZE*/ - 1; i < n; i += 2) {\n\t\t\tx = curves[i];\n\t\t\tif (x >= percent) {\n\t\t\t\tvar prevX, prevY;\n\t\t\t\tif (i == start) {\n\t\t\t\t\tprevX = 0;\n\t\t\t\t\tprevY = 0;\n\t\t\t\t} else {\n\t\t\t\t\tprevX = curves[i - 2];\n\t\t\t\t\tprevY = curves[i - 1];\n\t\t\t\t}\n\t\t\t\treturn prevY + (curves[i + 1] - prevY) * (percent - prevX) / (x - prevX);\n\t\t\t}\n\t\t}\n\t\tvar y = curves[i - 1];\n\t\treturn y + (1 - y) * (percent - x) / (1 - x); // Last point is 1,1.\n\t}\n};\n\nspine.RotateTimeline = function (frameCount) {\n\tthis.curves = new spine.Curves(frameCount);\n\tthis.frames = []; // time, angle, ...\n\tthis.frames.length = frameCount * 2;\n};\nspine.RotateTimeline.prototype = {\n\tboneIndex: 0,\n\tgetFrameCount: function () {\n\t\treturn this.frames.length / 2;\n\t},\n\tsetFrame: function (frameIndex, time, angle) {\n\t\tframeIndex *= 2;\n\t\tthis.frames[frameIndex] = time;\n\t\tthis.frames[frameIndex + 1] = angle;\n\t},\n\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\tvar frames = this.frames;\n\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\tvar bone = skeleton.bones[this.boneIndex];\n\n\t\tif (time >= frames[frames.length - 2]) { // Time is after last frame.\n\t\t\tvar amount = bone.data.rotation + frames[frames.length - 1] - bone.rotation;\n\t\t\twhile (amount > 180)\n\t\t\t\tamount -= 360;\n\t\t\twhile (amount < -180)\n\t\t\t\tamount += 360;\n\t\t\tbone.rotation += amount * alpha;\n\t\t\treturn;\n\t\t}\n\n\t\t// Interpolate between the previous frame and the current frame.\n\t\tvar frameIndex = spine.Animation.binarySearch(frames, time, 2);\n\t\tvar prevFrameValue = frames[frameIndex - 1];\n\t\tvar frameTime = frames[frameIndex];\n\t\tvar percent = 1 - (time - frameTime) / (frames[frameIndex - 2/*PREV_FRAME_TIME*/] - frameTime);\n\t\tpercent = this.curves.getCurvePercent(frameIndex / 2 - 1, percent);\n\n\t\tvar amount = frames[frameIndex + 1/*FRAME_VALUE*/] - prevFrameValue;\n\t\twhile (amount > 180)\n\t\t\tamount -= 360;\n\t\twhile (amount < -180)\n\t\t\tamount += 360;\n\t\tamount = bone.data.rotation + (prevFrameValue + amount * percent) - bone.rotation;\n\t\twhile (amount > 180)\n\t\t\tamount -= 360;\n\t\twhile (amount < -180)\n\t\t\tamount += 360;\n\t\tbone.rotation += amount * alpha;\n\t}\n};\n\nspine.TranslateTimeline = function (frameCount) {\n\tthis.curves = new spine.Curves(frameCount);\n\tthis.frames = []; // time, x, y, ...\n\tthis.frames.length = frameCount * 3;\n};\nspine.TranslateTimeline.prototype = {\n\tboneIndex: 0,\n\tgetFrameCount: function () {\n\t\treturn this.frames.length / 3;\n\t},\n\tsetFrame: function (frameIndex, time, x, y) {\n\t\tframeIndex *= 3;\n\t\tthis.frames[frameIndex] = time;\n\t\tthis.frames[frameIndex + 1] = x;\n\t\tthis.frames[frameIndex + 2] = y;\n\t},\n\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\tvar frames = this.frames;\n\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\tvar bone = skeleton.bones[this.boneIndex];\n\n\t\tif (time >= frames[frames.length - 3]) { // Time is after last frame.\n\t\t\tbone.x += (bone.data.x + frames[frames.length - 2] - bone.x) * alpha;\n\t\t\tbone.y += (bone.data.y + frames[frames.length - 1] - bone.y) * alpha;\n\t\t\treturn;\n\t\t}\n\n\t\t// Interpolate between the previous frame and the current frame.\n\t\tvar frameIndex = spine.Animation.binarySearch(frames, time, 3);\n\t\tvar prevFrameX = frames[frameIndex - 2];\n\t\tvar prevFrameY = frames[frameIndex - 1];\n\t\tvar frameTime = frames[frameIndex];\n\t\tvar percent = 1 - (time - frameTime) / (frames[frameIndex + -3/*PREV_FRAME_TIME*/] - frameTime);\n\t\tpercent = this.curves.getCurvePercent(frameIndex / 3 - 1, percent);\n\n\t\tbone.x += (bone.data.x + prevFrameX + (frames[frameIndex + 1/*FRAME_X*/] - prevFrameX) * percent - bone.x) * alpha;\n\t\tbone.y += (bone.data.y + prevFrameY + (frames[frameIndex + 2/*FRAME_Y*/] - prevFrameY) * percent - bone.y) * alpha;\n\t}\n};\n\nspine.ScaleTimeline = function (frameCount) {\n\tthis.curves = new spine.Curves(frameCount);\n\tthis.frames = []; // time, x, y, ...\n\tthis.frames.length = frameCount * 3;\n};\nspine.ScaleTimeline.prototype = {\n\tboneIndex: 0,\n\tgetFrameCount: function () {\n\t\treturn this.frames.length / 3;\n\t},\n\tsetFrame: function (frameIndex, time, x, y) {\n\t\tframeIndex *= 3;\n\t\tthis.frames[frameIndex] = time;\n\t\tthis.frames[frameIndex + 1] = x;\n\t\tthis.frames[frameIndex + 2] = y;\n\t},\n\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\tvar frames = this.frames;\n\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\tvar bone = skeleton.bones[this.boneIndex];\n\n\t\tif (time >= frames[frames.length - 3]) { // Time is after last frame.\n\t\t\tbone.scaleX += (bone.data.scaleX * frames[frames.length - 2] - bone.scaleX) * alpha;\n\t\t\tbone.scaleY += (bone.data.scaleY * frames[frames.length - 1] - bone.scaleY) * alpha;\n\t\t\treturn;\n\t\t}\n\n\t\t// Interpolate between the previous frame and the current frame.\n\t\tvar frameIndex = spine.Animation.binarySearch(frames, time, 3);\n\t\tvar prevFrameX = frames[frameIndex - 2];\n\t\tvar prevFrameY = frames[frameIndex - 1];\n\t\tvar frameTime = frames[frameIndex];\n\t\tvar percent = 1 - (time - frameTime) / (frames[frameIndex + -3/*PREV_FRAME_TIME*/] - frameTime);\n\t\tpercent = this.curves.getCurvePercent(frameIndex / 3 - 1, percent);\n\n\t\tbone.scaleX += (bone.data.scaleX * (prevFrameX + (frames[frameIndex + 1/*FRAME_X*/] - prevFrameX) * percent) - bone.scaleX) * alpha;\n\t\tbone.scaleY += (bone.data.scaleY * (prevFrameY + (frames[frameIndex + 2/*FRAME_Y*/] - prevFrameY) * percent) - bone.scaleY) * alpha;\n\t}\n};\n\nspine.ColorTimeline = function (frameCount) {\n\tthis.curves = new spine.Curves(frameCount);\n\tthis.frames = []; // time, r, g, b, a, ...\n\tthis.frames.length = frameCount * 5;\n};\nspine.ColorTimeline.prototype = {\n\tslotIndex: 0,\n\tgetFrameCount: function () {\n\t\treturn this.frames.length / 5;\n\t},\n\tsetFrame: function (frameIndex, time, r, g, b, a) {\n\t\tframeIndex *= 5;\n\t\tthis.frames[frameIndex] = time;\n\t\tthis.frames[frameIndex + 1] = r;\n\t\tthis.frames[frameIndex + 2] = g;\n\t\tthis.frames[frameIndex + 3] = b;\n\t\tthis.frames[frameIndex + 4] = a;\n\t},\n\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\tvar frames = this.frames;\n\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\tvar r, g, b, a;\n\t\tif (time >= frames[frames.length - 5]) {\n\t\t\t// Time is after last frame.\n\t\t\tvar i = frames.length - 1;\n\t\t\tr = frames[i - 3];\n\t\t\tg = frames[i - 2];\n\t\t\tb = frames[i - 1];\n\t\t\ta = frames[i];\n\t\t} else {\n\t\t\t// Interpolate between the previous frame and the current frame.\n\t\t\tvar frameIndex = spine.Animation.binarySearch(frames, time, 5);\n\t\t\tvar prevFrameR = frames[frameIndex - 4];\n\t\t\tvar prevFrameG = frames[frameIndex - 3];\n\t\t\tvar prevFrameB = frames[frameIndex - 2];\n\t\t\tvar prevFrameA = frames[frameIndex - 1];\n\t\t\tvar frameTime = frames[frameIndex];\n\t\t\tvar percent = 1 - (time - frameTime) / (frames[frameIndex - 5/*PREV_FRAME_TIME*/] - frameTime);\n\t\t\tpercent = this.curves.getCurvePercent(frameIndex / 5 - 1, percent);\n\n\t\t\tr = prevFrameR + (frames[frameIndex + 1/*FRAME_R*/] - prevFrameR) * percent;\n\t\t\tg = prevFrameG + (frames[frameIndex + 2/*FRAME_G*/] - prevFrameG) * percent;\n\t\t\tb = prevFrameB + (frames[frameIndex + 3/*FRAME_B*/] - prevFrameB) * percent;\n\t\t\ta = prevFrameA + (frames[frameIndex + 4/*FRAME_A*/] - prevFrameA) * percent;\n\t\t}\n\t\tvar slot = skeleton.slots[this.slotIndex];\n\t\tif (alpha < 1) {\n\t\t\tslot.r += (r - slot.r) * alpha;\n\t\t\tslot.g += (g - slot.g) * alpha;\n\t\t\tslot.b += (b - slot.b) * alpha;\n\t\t\tslot.a += (a - slot.a) * alpha;\n\t\t} else {\n\t\t\tslot.r = r;\n\t\t\tslot.g = g;\n\t\t\tslot.b = b;\n\t\t\tslot.a = a;\n\t\t}\n\t}\n};\n\nspine.AttachmentTimeline = function (frameCount) {\n\tthis.curves = new spine.Curves(frameCount);\n\tthis.frames = []; // time, ...\n\tthis.frames.length = frameCount;\n\tthis.attachmentNames = [];\n\tthis.attachmentNames.length = frameCount;\n};\nspine.AttachmentTimeline.prototype = {\n\tslotIndex: 0,\n\tgetFrameCount: function () {\n\t\treturn this.frames.length;\n\t},\n\tsetFrame: function (frameIndex, time, attachmentName) {\n\t\tthis.frames[frameIndex] = time;\n\t\tthis.attachmentNames[frameIndex] = attachmentName;\n\t},\n\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\tvar frames = this.frames;\n\t\tif (time < frames[0]) {\n\t\t\tif (lastTime > time) this.apply(skeleton, lastTime, Number.MAX_VALUE, null, 0);\n\t\t\treturn;\n\t\t} else if (lastTime > time) //\n\t\t\tlastTime = -1;\n\n\t\tvar frameIndex = time >= frames[frames.length - 1] ? frames.length - 1 : spine.Animation.binarySearch1(frames, time) - 1;\n\t\tif (frames[frameIndex] < lastTime) return;\n\n\t\tvar attachmentName = this.attachmentNames[frameIndex];\n\t\tskeleton.slots[this.slotIndex].setAttachment(\n\t\t\t!attachmentName ? null : skeleton.getAttachmentBySlotIndex(this.slotIndex, attachmentName));\n\t}\n};\n\nspine.EventTimeline = function (frameCount) {\n\tthis.frames = []; // time, ...\n\tthis.frames.length = frameCount;\n\tthis.events = [];\n\tthis.events.length = frameCount;\n};\nspine.EventTimeline.prototype = {\n\tgetFrameCount: function () {\n\t\treturn this.frames.length;\n\t},\n\tsetFrame: function (frameIndex, time, event) {\n\t\tthis.frames[frameIndex] = time;\n\t\tthis.events[frameIndex] = event;\n\t},\n\t/** Fires events for frames > lastTime and <= time. */\n\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\tif (!firedEvents) return;\n\n\t\tvar frames = this.frames;\n\t\tvar frameCount = frames.length;\n\n\t\tif (lastTime > time) { // Fire events after last time for looped animations.\n\t\t\tthis.apply(skeleton, lastTime, Number.MAX_VALUE, firedEvents, alpha);\n\t\t\tlastTime = -1;\n\t\t} else if (lastTime >= frames[frameCount - 1]) // Last time is after last frame.\n\t\t\treturn;\n\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\tvar frameIndex;\n\t\tif (lastTime < frames[0])\n\t\t\tframeIndex = 0;\n\t\telse {\n\t\t\tframeIndex = spine.Animation.binarySearch1(frames, lastTime);\n\t\t\tvar frame = frames[frameIndex];\n\t\t\twhile (frameIndex > 0) { // Fire multiple events with the same frame.\n\t\t\t\tif (frames[frameIndex - 1] != frame) break;\n\t\t\t\tframeIndex--;\n\t\t\t}\n\t\t}\n\t\tvar events = this.events;\n\t\tfor (; frameIndex < frameCount && time >= frames[frameIndex]; frameIndex++)\n\t\t\tfiredEvents.push(events[frameIndex]);\n\t}\n};\n\nspine.DrawOrderTimeline = function (frameCount) {\n\tthis.frames = []; // time, ...\n\tthis.frames.length = frameCount;\n\tthis.drawOrders = [];\n\tthis.drawOrders.length = frameCount;\n};\nspine.DrawOrderTimeline.prototype = {\n\tgetFrameCount: function () {\n\t\treturn this.frames.length;\n\t},\n\tsetFrame: function (frameIndex, time, drawOrder) {\n\t\tthis.frames[frameIndex] = time;\n\t\tthis.drawOrders[frameIndex] = drawOrder;\n\t},\n\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\tvar frames = this.frames;\n\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\tvar frameIndex;\n\t\tif (time >= frames[frames.length - 1]) // Time is after last frame.\n\t\t\tframeIndex = frames.length - 1;\n\t\telse\n\t\t\tframeIndex = spine.Animation.binarySearch1(frames, time) - 1;\n\n\t\tvar drawOrder = skeleton.drawOrder;\n\t\tvar slots = skeleton.slots;\n\t\tvar drawOrderToSetupIndex = this.drawOrders[frameIndex];\n\t\tif (!drawOrderToSetupIndex) {\n\t\t\tfor (var i = 0, n = slots.length; i < n; i++)\n\t\t\t\tdrawOrder[i] = slots[i];\n\t\t} else {\n\t\t\tfor (var i = 0, n = drawOrderToSetupIndex.length; i < n; i++)\n\t\t\t\tdrawOrder[i] = skeleton.slots[drawOrderToSetupIndex[i]];\n\t\t}\n\n\t}\n};\n\nspine.FfdTimeline = function (frameCount) {\n\tthis.curves = new spine.Curves(frameCount);\n\tthis.frames = [];\n\tthis.frames.length = frameCount;\n\tthis.frameVertices = [];\n\tthis.frameVertices.length = frameCount;\n};\nspine.FfdTimeline.prototype = {\n\tslotIndex: 0,\n\tattachment: 0,\n\tgetFrameCount: function () {\n\t\treturn this.frames.length;\n\t},\n\tsetFrame: function (frameIndex, time, vertices) {\n\t\tthis.frames[frameIndex] = time;\n\t\tthis.frameVertices[frameIndex] = vertices;\n\t},\n\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\tvar slot = skeleton.slots[this.slotIndex];\n\t\tif (slot.attachment != this.attachment) return;\n\n\t\tvar frames = this.frames;\n\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\tvar frameVertices = this.frameVertices;\n\t\tvar vertexCount = frameVertices[0].length;\n\n\t\tvar vertices = slot.attachmentVertices;\n\t\tif (vertices.length != vertexCount) alpha = 1;\n\t\tvertices.length = vertexCount;\n\n\t\tif (time >= frames[frames.length - 1]) { // Time is after last frame.\n\t\t\tvar lastVertices = frameVertices[frames.length - 1];\n\t\t\tif (alpha < 1) {\n\t\t\t\tfor (var i = 0; i < vertexCount; i++)\n\t\t\t\t\tvertices[i] += (lastVertices[i] - vertices[i]) * alpha;\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < vertexCount; i++)\n\t\t\t\t\tvertices[i] = lastVertices[i];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Interpolate between the previous frame and the current frame.\n\t\tvar frameIndex = spine.Animation.binarySearch1(frames, time);\n\t\tvar frameTime = frames[frameIndex];\n\t\tvar percent = 1 - (time - frameTime) / (frames[frameIndex - 1] - frameTime);\n\t\tpercent = this.curves.getCurvePercent(frameIndex - 1, percent < 0 ? 0 : (percent > 1 ? 1 : percent));\n\n\t\tvar prevVertices = frameVertices[frameIndex - 1];\n\t\tvar nextVertices = frameVertices[frameIndex];\n\n\t\tif (alpha < 1) {\n\t\t\tfor (var i = 0; i < vertexCount; i++) {\n\t\t\t\tvar prev = prevVertices[i];\n\t\t\t\tvertices[i] += (prev + (nextVertices[i] - prev) * percent - vertices[i]) * alpha;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = 0; i < vertexCount; i++) {\n\t\t\t\tvar prev = prevVertices[i];\n\t\t\t\tvertices[i] = prev + (nextVertices[i] - prev) * percent;\n\t\t\t}\n\t\t}\n\t}\n};\n\nspine.IkConstraintTimeline = function (frameCount) {\n\tthis.curves = new spine.Curves(frameCount);\n\tthis.frames = []; // time, mix, bendDirection, ...\n\tthis.frames.length = frameCount * 3;\n};\nspine.IkConstraintTimeline.prototype = {\n\tikConstraintIndex: 0,\n\tgetFrameCount: function () {\n\t\treturn this.frames.length / 3;\n\t},\n\tsetFrame: function (frameIndex, time, mix, bendDirection) {\n\t\tframeIndex *= 3;\n\t\tthis.frames[frameIndex] = time;\n\t\tthis.frames[frameIndex + 1] = mix;\n\t\tthis.frames[frameIndex + 2] = bendDirection;\n\t},\n\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\tvar frames = this.frames;\n\t\tif (time < frames[0]) return; // Time is before first frame.\n\n\t\tvar ikConstraint = skeleton.ikConstraints[this.ikConstraintIndex];\n\n\t\tif (time >= frames[frames.length - 3]) { // Time is after last frame.\n\t\t\tikConstraint.mix += (frames[frames.length - 2] - ikConstraint.mix) * alpha;\n\t\t\tikConstraint.bendDirection = frames[frames.length - 1];\n\t\t\treturn;\n\t\t}\n\n\t\t// Interpolate between the previous frame and the current frame.\n\t\tvar frameIndex = spine.Animation.binarySearch(frames, time, 3);\n\t\tvar prevFrameMix = frames[frameIndex + -2/*PREV_FRAME_MIX*/];\n\t\tvar frameTime = frames[frameIndex];\n\t\tvar percent = 1 - (time - frameTime) / (frames[frameIndex + -3/*PREV_FRAME_TIME*/] - frameTime);\n\t\tpercent = this.curves.getCurvePercent(frameIndex / 3 - 1, percent);\n\n\t\tvar mix = prevFrameMix + (frames[frameIndex + 1/*FRAME_MIX*/] - prevFrameMix) * percent;\n\t\tikConstraint.mix += (mix - ikConstraint.mix) * alpha;\n\t\tikConstraint.bendDirection = frames[frameIndex + -1/*PREV_FRAME_BEND_DIRECTION*/];\n\t}\n};\n\nspine.FlipXTimeline = function (frameCount) {\n\tthis.curves = new spine.Curves(frameCount);\n\tthis.frames = []; // time, flip, ...\n\tthis.frames.length = frameCount * 2;\n};\nspine.FlipXTimeline.prototype = {\n\tboneIndex: 0,\n\tgetFrameCount: function () {\n\t\treturn this.frames.length / 2;\n\t},\n\tsetFrame: function (frameIndex, time, flip) {\n\t\tframeIndex *= 2;\n\t\tthis.frames[frameIndex] = time;\n\t\tthis.frames[frameIndex + 1] = flip ? 1 : 0;\n\t},\n\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\tvar frames = this.frames;\n\t\tif (time < frames[0]) {\n\t\t\tif (lastTime > time) this.apply(skeleton, lastTime, Number.MAX_VALUE, null, 0);\n\t\t\treturn;\n\t\t} else if (lastTime > time) //\n\t\t\tlastTime = -1;\n\t\tvar frameIndex = (time >= frames[frames.length - 2] ? frames.length : spine.Animation.binarySearch(frames, time, 2)) - 2;\n\t\tif (frames[frameIndex] < lastTime) return;\n\t\tskeleton.bones[boneIndex].flipX = frames[frameIndex + 1] != 0;\n\t}\n};\n\nspine.FlipYTimeline = function (frameCount) {\n\tthis.curves = new spine.Curves(frameCount);\n\tthis.frames = []; // time, flip, ...\n\tthis.frames.length = frameCount * 2;\n};\nspine.FlipYTimeline.prototype = {\n\tboneIndex: 0,\n\tgetFrameCount: function () {\n\t\treturn this.frames.length / 2;\n\t},\n\tsetFrame: function (frameIndex, time, flip) {\n\t\tframeIndex *= 2;\n\t\tthis.frames[frameIndex] = time;\n\t\tthis.frames[frameIndex + 1] = flip ? 1 : 0;\n\t},\n\tapply: function (skeleton, lastTime, time, firedEvents, alpha) {\n\t\tvar frames = this.frames;\n\t\tif (time < frames[0]) {\n\t\t\tif (lastTime > time) this.apply(skeleton, lastTime, Number.MAX_VALUE, null, 0);\n\t\t\treturn;\n\t\t} else if (lastTime > time) //\n\t\t\tlastTime = -1;\n\t\tvar frameIndex = (time >= frames[frames.length - 2] ? frames.length : spine.Animation.binarySearch(frames, time, 2)) - 2;\n\t\tif (frames[frameIndex] < lastTime) return;\n\t\tskeleton.bones[boneIndex].flipY = frames[frameIndex + 1] != 0;\n\t}\n};\n\nspine.SkeletonData = function () {\n\tthis.bones = [];\n\tthis.slots = [];\n\tthis.skins = [];\n\tthis.events = [];\n\tthis.animations = [];\n\tthis.ikConstraints = [];\n};\nspine.SkeletonData.prototype = {\n\tname: null,\n\tdefaultSkin: null,\n\twidth: 0, height: 0,\n\tversion: null, hash: null,\n\t/** @return May be null. */\n\tfindBone: function (boneName) {\n\t\tvar bones = this.bones;\n\t\tfor (var i = 0, n = bones.length; i < n; i++)\n\t\t\tif (bones[i].name == boneName) return bones[i];\n\t\treturn null;\n\t},\n\t/** @return -1 if the bone was not found. */\n\tfindBoneIndex: function (boneName) {\n\t\tvar bones = this.bones;\n\t\tfor (var i = 0, n = bones.length; i < n; i++)\n\t\t\tif (bones[i].name == boneName) return i;\n\t\treturn -1;\n\t},\n\t/** @return May be null. */\n\tfindSlot: function (slotName) {\n\t\tvar slots = this.slots;\n\t\tfor (var i = 0, n = slots.length; i < n; i++) {\n\t\t\tif (slots[i].name == slotName) return slot[i];\n\t\t}\n\t\treturn null;\n\t},\n\t/** @return -1 if the bone was not found. */\n\tfindSlotIndex: function (slotName) {\n\t\tvar slots = this.slots;\n\t\tfor (var i = 0, n = slots.length; i < n; i++)\n\t\t\tif (slots[i].name == slotName) return i;\n\t\treturn -1;\n\t},\n\t/** @return May be null. */\n\tfindSkin: function (skinName) {\n\t\tvar skins = this.skins;\n\t\tfor (var i = 0, n = skins.length; i < n; i++)\n\t\t\tif (skins[i].name == skinName) return skins[i];\n\t\treturn null;\n\t},\n\t/** @return May be null. */\n\tfindEvent: function (eventName) {\n\t\tvar events = this.events;\n\t\tfor (var i = 0, n = events.length; i < n; i++)\n\t\t\tif (events[i].name == eventName) return events[i];\n\t\treturn null;\n\t},\n\t/** @return May be null. */\n\tfindAnimation: function (animationName) {\n\t\tvar animations = this.animations;\n\t\tfor (var i = 0, n = animations.length; i < n; i++)\n\t\t\tif (animations[i].name == animationName) return animations[i];\n\t\treturn null;\n\t},\n\t/** @return May be null. */\n\tfindIkConstraint: function (ikConstraintName) {\n\t\tvar ikConstraints = this.ikConstraints;\n\t\tfor (var i = 0, n = ikConstraints.length; i < n; i++)\n\t\t\tif (ikConstraints[i].name == ikConstraintName) return ikConstraints[i];\n\t\treturn null;\n\t}\n};\n\nspine.Skeleton = function (skeletonData) {\n\tthis.data = skeletonData;\n\n\tthis.bones = [];\n\tfor (var i = 0, n = skeletonData.bones.length; i < n; i++) {\n\t\tvar boneData = skeletonData.bones[i];\n\t\tvar parent = !boneData.parent ? null : this.bones[skeletonData.bones.indexOf(boneData.parent)];\n\t\tthis.bones.push(new spine.Bone(boneData, this, parent));\n\t}\n\n\tthis.slots = [];\n\tthis.drawOrder = [];\n\tfor (var i = 0, n = skeletonData.slots.length; i < n; i++) {\n\t\tvar slotData = skeletonData.slots[i];\n\t\tvar bone = this.bones[skeletonData.bones.indexOf(slotData.boneData)];\n\t\tvar slot = new spine.Slot(slotData, bone);\n\t\tthis.slots.push(slot);\n\t\tthis.drawOrder.push(slot);\n\t}\n\n\tthis.ikConstraints = [];\n\tfor (var i = 0, n = skeletonData.ikConstraints.length; i < n; i++)\n\t\tthis.ikConstraints.push(new spine.IkConstraint(skeletonData.ikConstraints[i], this));\n\n\tthis.boneCache = [];\n\tthis.updateCache();\n};\nspine.Skeleton.prototype = {\n\tx: 0, y: 0,\n\tskin: null,\n\tr: 1, g: 1, b: 1, a: 1,\n\ttime: 0,\n\tflipX: false, flipY: false,\n\t/** Caches information about bones and IK constraints. Must be called if bones or IK constraints are added or removed. */\n\tupdateCache: function () {\n\t\tvar ikConstraints = this.ikConstraints;\n\t\tvar ikConstraintsCount = ikConstraints.length;\n\n\t\tvar arrayCount = ikConstraintsCount + 1;\n\t\tvar boneCache = this.boneCache;\n\t\tif (boneCache.length > arrayCount) boneCache.length = arrayCount;\n\t\tfor (var i = 0, n = boneCache.length; i < n; i++)\n\t\t\tboneCache[i].length = 0;\n\t\twhile (boneCache.length < arrayCount)\n\t\t\tboneCache[boneCache.length] = [];\n\n\t\tvar nonIkBones = boneCache[0];\n\t\tvar bones = this.bones;\n\n\t\touter:\n\t\tfor (var i = 0, n = bones.length; i < n; i++) {\n\t\t\tvar bone = bones[i];\n\t\t\tvar current = bone;\n\t\t\tdo {\n\t\t\t\tfor (var ii = 0; ii < ikConstraintsCount; ii++) {\n\t\t\t\t\tvar ikConstraint = ikConstraints[ii];\n\t\t\t\t\tvar parent = ikConstraint.bones[0];\n\t\t\t\t\tvar child= ikConstraint.bones[ikConstraint.bones.length - 1];\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (current == child) {\n\t\t\t\t\t\t\tboneCache[ii].push(bone);\n\t\t\t\t\t\t\tboneCache[ii + 1].push(bone);\n\t\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (child == parent) break;\n\t\t\t\t\t\tchild = child.parent;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcurrent = current.parent;\n\t\t\t} while (current);\n\t\t\tnonIkBones[nonIkBones.length] = bone;\n\t\t}\n\t},\n\t/** Updates the world transform for each bone. */\n\tupdateWorldTransform: function () {\n\t\tvar bones = this.bones;\n\t\tfor (var i = 0, n = bones.length; i < n; i++) {\n\t\t\tvar bone = bones[i];\n\t\t\tbone.rotationIK = bone.rotation;\n\t\t}\n\t\tvar i = 0, last = this.boneCache.length - 1;\n\t\twhile (true) {\n\t\t\tvar cacheBones = this.boneCache[i];\n\t\t\tfor (var ii = 0, nn = cacheBones.length; ii < nn; ii++)\n\t\t\t\tcacheBones[ii].updateWorldTransform();\n\t\t\tif (i == last) break;\n\t\t\tthis.ikConstraints[i].apply();\n\t\t\ti++;\n\t\t}\n\t},\n\t/** Sets the bones and slots to their setup pose values. */\n\tsetToSetupPose: function () {\n\t\tthis.setBonesToSetupPose();\n\t\tthis.setSlotsToSetupPose();\n\t},\n\tsetBonesToSetupPose: function () {\n\t\tvar bones = this.bones;\n\t\tfor (var i = 0, n = bones.length; i < n; i++)\n\t\t\tbones[i].setToSetupPose();\n\n\t\tvar ikConstraints = this.ikConstraints;\n\t\tfor (var i = 0, n = ikConstraints.length; i < n; i++) {\n\t\t\tvar ikConstraint = ikConstraints[i];\n\t\t\tikConstraint.bendDirection = ikConstraint.data.bendDirection;\n\t\t\tikConstraint.mix = ikConstraint.data.mix;\n\t\t}\n\t},\n\tsetSlotsToSetupPose: function () {\n\t\tvar slots = this.slots;\n\t\tvar drawOrder = this.drawOrder;\n\t\tfor (var i = 0, n = slots.length; i < n; i++) {\n\t\t\tdrawOrder[i] = slots[i];\n\t\t\tslots[i].setToSetupPose(i);\n\t\t}\n\t},\n\t/** @return May return null. */\n\tgetRootBone: function () {\n\t\treturn this.bones.length ? this.bones[0] : null;\n\t},\n\t/** @return May be null. */\n\tfindBone: function (boneName) {\n\t\tvar bones = this.bones;\n\t\tfor (var i = 0, n = bones.length; i < n; i++)\n\t\t\tif (bones[i].data.name == boneName) return bones[i];\n\t\treturn null;\n\t},\n\t/** @return -1 if the bone was not found. */\n\tfindBoneIndex: function (boneName) {\n\t\tvar bones = this.bones;\n\t\tfor (var i = 0, n = bones.length; i < n; i++)\n\t\t\tif (bones[i].data.name == boneName) return i;\n\t\treturn -1;\n\t},\n\t/** @return May be null. */\n\tfindSlot: function (slotName) {\n\t\tvar slots = this.slots;\n\t\tfor (var i = 0, n = slots.length; i < n; i++)\n\t\t\tif (slots[i].data.name == slotName) return slots[i];\n\t\treturn null;\n\t},\n\t/** @return -1 if the bone was not found. */\n\tfindSlotIndex: function (slotName) {\n\t\tvar slots = this.slots;\n\t\tfor (var i = 0, n = slots.length; i < n; i++)\n\t\t\tif (slots[i].data.name == slotName) return i;\n\t\treturn -1;\n\t},\n\tsetSkinByName: function (skinName) {\n\t\tvar skin = this.data.findSkin(skinName);\n\t\tif (!skin) throw \"Skin not found: \" + skinName;\n\t\tthis.setSkin(skin);\n\t},\n\t/** Sets the skin used to look up attachments before looking in the {@link SkeletonData#getDefaultSkin() default skin}.\n\t * Attachments from the new skin are attached if the corresponding attachment from the old skin was attached. If there was\n\t * no old skin, each slot's setup mode attachment is attached from the new skin.\n\t * @param newSkin May be null. */\n\tsetSkin: function (newSkin) {\n\t\tif (newSkin) {\n\t\t\tif (this.skin)\n\t\t\t\tnewSkin._attachAll(this, this.skin);\n\t\t\telse {\n\t\t\t\tvar slots = this.slots;\n\t\t\t\tfor (var i = 0, n = slots.length; i < n; i++) {\n\t\t\t\t\tvar slot = slots[i];\n\t\t\t\t\tvar name = slot.data.attachmentName;\n\t\t\t\t\tif (name) {\n\t\t\t\t\t\tvar attachment = newSkin.getAttachment(i, name);\n\t\t\t\t\t\tif (attachment) slot.setAttachment(attachment);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.skin = newSkin;\n\t},\n\t/** @return May be null. */\n\tgetAttachmentBySlotName: function (slotName, attachmentName) {\n\t\treturn this.getAttachmentBySlotIndex(this.data.findSlotIndex(slotName), attachmentName);\n\t},\n\t/** @return May be null. */\n\tgetAttachmentBySlotIndex: function (slotIndex, attachmentName) {\n\t\tif (this.skin) {\n\t\t\tvar attachment = this.skin.getAttachment(slotIndex, attachmentName);\n\t\t\tif (attachment) return attachment;\n\t\t}\n\t\tif (this.data.defaultSkin) return this.data.defaultSkin.getAttachment(slotIndex, attachmentName);\n\t\treturn null;\n\t},\n\t/** @param attachmentName May be null. */\n\tsetAttachment: function (slotName, attachmentName) {\n\t\tvar slots = this.slots;\n\t\tfor (var i = 0, n = slots.length; i < n; i++) {\n\t\t\tvar slot = slots[i];\n\t\t\tif (slot.data.name == slotName) {\n\t\t\t\tvar attachment = null;\n\t\t\t\tif (attachmentName) {\n\t\t\t\t\tattachment = this.getAttachmentBySlotIndex(i, attachmentName);\n\t\t\t\t\tif (!attachment) throw \"Attachment not found: \" + attachmentName + \", for slot: \" + slotName;\n\t\t\t\t}\n\t\t\t\tslot.setAttachment(attachment);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthrow \"Slot not found: \" + slotName;\n\t},\n\t/** @return May be null. */\n\tfindIkConstraint: function (ikConstraintName) {\n\t\tvar ikConstraints = this.ikConstraints;\n\t\tfor (var i = 0, n = ikConstraints.length; i < n; i++)\n\t\t\tif (ikConstraints[i].data.name == ikConstraintName) return ikConstraints[i];\n\t\treturn null;\n\t},\n\tupdate: function (delta) {\n\t\tthis.time += delta;\n\t}\n};\n\nspine.EventData = function (name) {\n\tthis.name = name;\n};\nspine.EventData.prototype = {\n\tintValue: 0,\n\tfloatValue: 0,\n\tstringValue: null\n};\n\nspine.Event = function (data) {\n\tthis.data = data;\n};\nspine.Event.prototype = {\n\tintValue: 0,\n\tfloatValue: 0,\n\tstringValue: null\n};\n\nspine.AttachmentType = {\n\tregion: 0,\n\tboundingbox: 1,\n\tmesh: 2,\n\tskinnedmesh: 3\n};\n\nspine.RegionAttachment = function (name) {\n\tthis.name = name;\n\tthis.offset = [];\n\tthis.offset.length = 8;\n\tthis.uvs = [];\n\tthis.uvs.length = 8;\n};\nspine.RegionAttachment.prototype = {\n\ttype: spine.AttachmentType.region,\n\tx: 0, y: 0,\n\trotation: 0,\n\tscaleX: 1, scaleY: 1,\n\twidth: 0, height: 0,\n\tr: 1, g: 1, b: 1, a: 1,\n\tpath: null,\n\trendererObject: null,\n\tregionOffsetX: 0, regionOffsetY: 0,\n\tregionWidth: 0, regionHeight: 0,\n\tregionOriginalWidth: 0, regionOriginalHeight: 0,\n\tsetUVs: function (u, v, u2, v2, rotate) {\n\t\tvar uvs = this.uvs;\n\t\tif (rotate) {\n\t\t\tuvs[2/*X2*/] = u;\n\t\t\tuvs[3/*Y2*/] = v2;\n\t\t\tuvs[4/*X3*/] = u;\n\t\t\tuvs[5/*Y3*/] = v;\n\t\t\tuvs[6/*X4*/] = u2;\n\t\t\tuvs[7/*Y4*/] = v;\n\t\t\tuvs[0/*X1*/] = u2;\n\t\t\tuvs[1/*Y1*/] = v2;\n\t\t} else {\n\t\t\tuvs[0/*X1*/] = u;\n\t\t\tuvs[1/*Y1*/] = v2;\n\t\t\tuvs[2/*X2*/] = u;\n\t\t\tuvs[3/*Y2*/] = v;\n\t\t\tuvs[4/*X3*/] = u2;\n\t\t\tuvs[5/*Y3*/] = v;\n\t\t\tuvs[6/*X4*/] = u2;\n\t\t\tuvs[7/*Y4*/] = v2;\n\t\t}\n\t},\n\tupdateOffset: function () {\n\t\tvar regionScaleX = this.width / this.regionOriginalWidth * this.scaleX;\n\t\tvar regionScaleY = this.height / this.regionOriginalHeight * this.scaleY;\n\t\tvar localX = -this.width / 2 * this.scaleX + this.regionOffsetX * regionScaleX;\n\t\tvar localY = -this.height / 2 * this.scaleY + this.regionOffsetY * regionScaleY;\n\t\tvar localX2 = localX + this.regionWidth * regionScaleX;\n\t\tvar localY2 = localY + this.regionHeight * regionScaleY;\n\t\tvar radians = this.rotation * spine.degRad;\n\t\tvar cos = Math.cos(radians);\n\t\tvar sin = Math.sin(radians);\n\t\tvar localXCos = localX * cos + this.x;\n\t\tvar localXSin = localX * sin;\n\t\tvar localYCos = localY * cos + this.y;\n\t\tvar localYSin = localY * sin;\n\t\tvar localX2Cos = localX2 * cos + this.x;\n\t\tvar localX2Sin = localX2 * sin;\n\t\tvar localY2Cos = localY2 * cos + this.y;\n\t\tvar localY2Sin = localY2 * sin;\n\t\tvar offset = this.offset;\n\t\toffset[0/*X1*/] = localXCos - localYSin;\n\t\toffset[1/*Y1*/] = localYCos + localXSin;\n\t\toffset[2/*X2*/] = localXCos - localY2Sin;\n\t\toffset[3/*Y2*/] = localY2Cos + localXSin;\n\t\toffset[4/*X3*/] = localX2Cos - localY2Sin;\n\t\toffset[5/*Y3*/] = localY2Cos + localX2Sin;\n\t\toffset[6/*X4*/] = localX2Cos - localYSin;\n\t\toffset[7/*Y4*/] = localYCos + localX2Sin;\n\t},\n\tcomputeVertices: function (x, y, bone, vertices) {\n\t\tx += bone.worldX;\n\t\ty += bone.worldY;\n\t\tvar m00 = bone.m00, m01 = bone.m01, m10 = bone.m10, m11 = bone.m11;\n\t\tvar offset = this.offset;\n\t\tvertices[0/*X1*/] = offset[0/*X1*/] * m00 + offset[1/*Y1*/] * m01 + x;\n\t\tvertices[1/*Y1*/] = offset[0/*X1*/] * m10 + offset[1/*Y1*/] * m11 + y;\n\t\tvertices[2/*X2*/] = offset[2/*X2*/] * m00 + offset[3/*Y2*/] * m01 + x;\n\t\tvertices[3/*Y2*/] = offset[2/*X2*/] * m10 + offset[3/*Y2*/] * m11 + y;\n\t\tvertices[4/*X3*/] = offset[4/*X3*/] * m00 + offset[5/*X3*/] * m01 + x;\n\t\tvertices[5/*X3*/] = offset[4/*X3*/] * m10 + offset[5/*X3*/] * m11 + y;\n\t\tvertices[6/*X4*/] = offset[6/*X4*/] * m00 + offset[7/*Y4*/] * m01 + x;\n\t\tvertices[7/*Y4*/] = offset[6/*X4*/] * m10 + offset[7/*Y4*/] * m11 + y;\n\t}\n};\n\nspine.MeshAttachment = function (name) {\n\tthis.name = name;\n};\nspine.MeshAttachment.prototype = {\n\ttype: spine.AttachmentType.mesh,\n\tvertices: null,\n\tuvs: null,\n\tregionUVs: null,\n\ttriangles: null,\n\thullLength: 0,\n\tr: 1, g: 1, b: 1, a: 1,\n\tpath: null,\n\trendererObject: null,\n\tregionU: 0, regionV: 0, regionU2: 0, regionV2: 0, regionRotate: false,\n\tregionOffsetX: 0, regionOffsetY: 0,\n\tregionWidth: 0, regionHeight: 0,\n\tregionOriginalWidth: 0, regionOriginalHeight: 0,\n\tedges: null,\n\twidth: 0, height: 0,\n\tupdateUVs: function () {\n\t\tvar width = this.regionU2 - this.regionU, height = this.regionV2 - this.regionV;\n\t\tvar n = this.regionUVs.length;\n\t\tif (!this.uvs || this.uvs.length != n) {\n            this.uvs = new spine.Float32Array(n);\n\t\t}\n\t\tif (this.regionRotate) {\n\t\t\tfor (var i = 0; i < n; i += 2) {\n                this.uvs[i] = this.regionU + this.regionUVs[i + 1] * width;\n                this.uvs[i + 1] = this.regionV + height - this.regionUVs[i] * height;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = 0; i < n; i += 2) {\n                this.uvs[i] = this.regionU + this.regionUVs[i] * width;\n                this.uvs[i + 1] = this.regionV + this.regionUVs[i + 1] * height;\n\t\t\t}\n\t\t}\n\t},\n\tcomputeWorldVertices: function (x, y, slot, worldVertices) {\n\t\tvar bone = slot.bone;\n\t\tx += bone.worldX;\n\t\ty += bone.worldY;\n\t\tvar m00 = bone.m00, m01 = bone.m01, m10 = bone.m10, m11 = bone.m11;\n\t\tvar vertices = this.vertices;\n\t\tvar verticesCount = vertices.length;\n\t\tif (slot.attachmentVertices.length == verticesCount) vertices = slot.attachmentVertices;\n\t\tfor (var i = 0; i < verticesCount; i += 2) {\n\t\t\tvar vx = vertices[i];\n\t\t\tvar vy = vertices[i + 1];\n\t\t\tworldVertices[i] = vx * m00 + vy * m01 + x;\n\t\t\tworldVertices[i + 1] = vx * m10 + vy * m11 + y;\n\t\t}\n\t}\n};\n\nspine.SkinnedMeshAttachment = function (name) {\n\tthis.name = name;\n};\nspine.SkinnedMeshAttachment.prototype = {\n\ttype: spine.AttachmentType.skinnedmesh,\n\tbones: null,\n\tweights: null,\n\tuvs: null,\n\tregionUVs: null,\n\ttriangles: null,\n\thullLength: 0,\n\tr: 1, g: 1, b: 1, a: 1,\n\tpath: null,\n\trendererObject: null,\n\tregionU: 0, regionV: 0, regionU2: 0, regionV2: 0, regionRotate: false,\n\tregionOffsetX: 0, regionOffsetY: 0,\n\tregionWidth: 0, regionHeight: 0,\n\tregionOriginalWidth: 0, regionOriginalHeight: 0,\n\tedges: null,\n\twidth: 0, height: 0,\n\tupdateUVs: function (u, v, u2, v2, rotate) {\n\t\tvar width = this.regionU2 - this.regionU, height = this.regionV2 - this.regionV;\n\t\tvar n = this.regionUVs.length;\n\t\tif (!this.uvs || this.uvs.length != n) {\n            this.uvs = new spine.Float32Array(n);\n\t\t}\n\t\tif (this.regionRotate) {\n\t\t\tfor (var i = 0; i < n; i += 2) {\n                this.uvs[i] = this.regionU + this.regionUVs[i + 1] * width;\n                this.uvs[i + 1] = this.regionV + height - this.regionUVs[i] * height;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = 0; i < n; i += 2) {\n                this.uvs[i] = this.regionU + this.regionUVs[i] * width;\n                this.uvs[i + 1] = this.regionV + this.regionUVs[i + 1] * height;\n\t\t\t}\n\t\t}\n\t},\n\tcomputeWorldVertices: function (x, y, slot, worldVertices) {\n\t\tvar skeletonBones = slot.bone.skeleton.bones;\n\t\tvar weights = this.weights;\n\t\tvar bones = this.bones;\n\n\t\tvar w = 0, v = 0, b = 0, f = 0, n = bones.length, nn;\n\t\tvar wx, wy, bone, vx, vy, weight;\n\t\tif (!slot.attachmentVertices.length) {\n\t\t\tfor (; v < n; w += 2) {\n\t\t\t\twx = 0;\n\t\t\t\twy = 0;\n\t\t\t\tnn = bones[v++] + v;\n\t\t\t\tfor (; v < nn; v++, b += 3) {\n\t\t\t\t\tbone = skeletonBones[bones[v]];\n\t\t\t\t\tvx = weights[b];\n\t\t\t\t\tvy = weights[b + 1];\n\t\t\t\t\tweight = weights[b + 2];\n\t\t\t\t\twx += (vx * bone.m00 + vy * bone.m01 + bone.worldX) * weight;\n\t\t\t\t\twy += (vx * bone.m10 + vy * bone.m11 + bone.worldY) * weight;\n\t\t\t\t}\n\t\t\t\tworldVertices[w] = wx + x;\n\t\t\t\tworldVertices[w + 1] = wy + y;\n\t\t\t}\n\t\t} else {\n\t\t\tvar ffd = slot.attachmentVertices;\n\t\t\tfor (; v < n; w += 2) {\n\t\t\t\twx = 0;\n\t\t\t\twy = 0;\n\t\t\t\tnn = bones[v++] + v;\n\t\t\t\tfor (; v < nn; v++, b += 3, f += 2) {\n\t\t\t\t\tbone = skeletonBones[bones[v]];\n\t\t\t\t\tvx = weights[b] + ffd[f];\n\t\t\t\t\tvy = weights[b + 1] + ffd[f + 1];\n\t\t\t\t\tweight = weights[b + 2];\n\t\t\t\t\twx += (vx * bone.m00 + vy * bone.m01 + bone.worldX) * weight;\n\t\t\t\t\twy += (vx * bone.m10 + vy * bone.m11 + bone.worldY) * weight;\n\t\t\t\t}\n\t\t\t\tworldVertices[w] = wx + x;\n\t\t\t\tworldVertices[w + 1] = wy + y;\n\t\t\t}\n\t\t}\n\t}\n};\n\nspine.BoundingBoxAttachment = function (name) {\n\tthis.name = name;\n\tthis.vertices = [];\n};\nspine.BoundingBoxAttachment.prototype = {\n\ttype: spine.AttachmentType.boundingbox,\n\tcomputeWorldVertices: function (x, y, bone, worldVertices) {\n\t\tx += bone.worldX;\n\t\ty += bone.worldY;\n\t\tvar m00 = bone.m00, m01 = bone.m01, m10 = bone.m10, m11 = bone.m11;\n\t\tvar vertices = this.vertices;\n\t\tfor (var i = 0, n = vertices.length; i < n; i += 2) {\n\t\t\tvar px = vertices[i];\n\t\t\tvar py = vertices[i + 1];\n\t\t\tworldVertices[i] = px * m00 + py * m01 + x;\n\t\t\tworldVertices[i + 1] = px * m10 + py * m11 + y;\n\t\t}\n\t}\n};\n\nspine.AnimationStateData = function (skeletonData) {\n\tthis.skeletonData = skeletonData;\n\tthis.animationToMixTime = {};\n};\nspine.AnimationStateData.prototype = {\n\tdefaultMix: 0,\n\tsetMixByName: function (fromName, toName, duration) {\n\t\tvar from = this.skeletonData.findAnimation(fromName);\n\t\tif (!from) throw \"Animation not found: \" + fromName;\n\t\tvar to = this.skeletonData.findAnimation(toName);\n\t\tif (!to) throw \"Animation not found: \" + toName;\n\t\tthis.setMix(from, to, duration);\n\t},\n\tsetMix: function (from, to, duration) {\n\t\tthis.animationToMixTime[from.name + \":\" + to.name] = duration;\n\t},\n\tgetMix: function (from, to) {\n\t\tvar key = from.name + \":\" + to.name;\n\t\treturn this.animationToMixTime.hasOwnProperty(key) ? this.animationToMixTime[key] : this.defaultMix;\n\t}\n};\n\nspine.TrackEntry = function () {};\nspine.TrackEntry.prototype = {\n\tnext: null, previous: null,\n\tanimation: null,\n\tloop: false,\n\tdelay: 0, time: 0, lastTime: -1, endTime: 0,\n\ttimeScale: 1,\n\tmixTime: 0, mixDuration: 0, mix: 1,\n\tonStart: null, onEnd: null, onComplete: null, onEvent: null\n};\n\nspine.AnimationState = function (stateData) {\n\tthis.data = stateData;\n\tthis.tracks = [];\n\tthis.events = [];\n};\nspine.AnimationState.prototype = {\n\tonStart: null,\n\tonEnd: null,\n\tonComplete: null,\n\tonEvent: null,\n\ttimeScale: 1,\n\tupdate: function (delta) {\n\t\tdelta *= this.timeScale;\n\t\tfor (var i = 0; i < this.tracks.length; i++) {\n\t\t\tvar current = this.tracks[i];\n\t\t\tif (!current) continue;\n\n\t\t\tcurrent.time += delta * current.timeScale;\n\t\t\tif (current.previous) {\n\t\t\t\tvar previousDelta = delta * current.previous.timeScale;\n\t\t\t\tcurrent.previous.time += previousDelta;\n\t\t\t\tcurrent.mixTime += previousDelta;\n\t\t\t}\n\n\t\t\tvar next = current.next;\n\t\t\tif (next) {\n\t\t\t\tnext.time = current.lastTime - next.delay;\n\t\t\t\tif (next.time >= 0) this.setCurrent(i, next);\n\t\t\t} else {\n\t\t\t\t// End non-looping animation when it reaches its end time and there is no next entry.\n\t\t\t\tif (!current.loop && current.lastTime >= current.endTime) this.clearTrack(i);\n\t\t\t}\n\t\t}\n\t},\n\tapply: function (skeleton) {\n\t\tfor (var i = 0; i < this.tracks.length; i++) {\n\t\t\tvar current = this.tracks[i];\n\t\t\tif (!current) continue;\n\n\t\t\tthis.events.length = 0;\n\n\t\t\tvar time = current.time;\n\t\t\tvar lastTime = current.lastTime;\n\t\t\tvar endTime = current.endTime;\n\t\t\tvar loop = current.loop;\n\t\t\tif (!loop && time > endTime) time = endTime;\n\n\t\t\tvar previous = current.previous;\n\t\t\tif (!previous) {\n\t\t\t\tif (current.mix == 1)\n\t\t\t\t\tcurrent.animation.apply(skeleton, current.lastTime, time, loop, this.events);\n\t\t\t\telse\n\t\t\t\t\tcurrent.animation.mix(skeleton, current.lastTime, time, loop, this.events, current.mix);\n\t\t\t} else {\n\t\t\t\tvar previousTime = previous.time;\n\t\t\t\tif (!previous.loop && previousTime > previous.endTime) previousTime = previous.endTime;\n\t\t\t\tprevious.animation.apply(skeleton, previousTime, previousTime, previous.loop, null);\n\n\t\t\t\tvar alpha = current.mixTime / current.mixDuration * current.mix;\n\t\t\t\tif (alpha >= 1) {\n\t\t\t\t\talpha = 1;\n\t\t\t\t\tcurrent.previous = null;\n\t\t\t\t}\n\t\t\t\tcurrent.animation.mix(skeleton, current.lastTime, time, loop, this.events, alpha);\n\t\t\t}\n\n\t\t\tfor (var ii = 0, nn = this.events.length; ii < nn; ii++) {\n\t\t\t\tvar event = this.events[ii];\n\t\t\t\tif (current.onEvent) current.onEvent(i, event);\n\t\t\t\tif (this.onEvent) this.onEvent(i, event);\n\t\t\t}\n\n\t\t\t// Check if completed the animation or a loop iteration.\n\t\t\tif (loop ? (lastTime % endTime > time % endTime) : (lastTime < endTime && time >= endTime)) {\n\t\t\t\tvar count = Math.floor(time / endTime);\n\t\t\t\tif (current.onComplete) current.onComplete(i, count);\n\t\t\t\tif (this.onComplete) this.onComplete(i, count);\n\t\t\t}\n\n\t\t\tcurrent.lastTime = current.time;\n\t\t}\n\t},\n\tclearTracks: function () {\n\t\tfor (var i = 0, n = this.tracks.length; i < n; i++)\n\t\t\tthis.clearTrack(i);\n\t\tthis.tracks.length = 0;\n\t},\n\tclearTrack: function (trackIndex) {\n\t\tif (trackIndex >= this.tracks.length) return;\n\t\tvar current = this.tracks[trackIndex];\n\t\tif (!current) return;\n\n\t\tif (current.onEnd) current.onEnd(trackIndex);\n\t\tif (this.onEnd) this.onEnd(trackIndex);\n\n\t\tthis.tracks[trackIndex] = null;\n\t},\n\t_expandToIndex: function (index) {\n\t\tif (index < this.tracks.length) return this.tracks[index];\n\t\twhile (index >= this.tracks.length)\n\t\t\tthis.tracks.push(null);\n\t\treturn null;\n\t},\n\tsetCurrent: function (index, entry) {\n\t\tvar current = this._expandToIndex(index);\n\t\tif (current) {\n\t\t\tvar previous = current.previous;\n\t\t\tcurrent.previous = null;\n\n\t\t\tif (current.onEnd) current.onEnd(index);\n\t\t\tif (this.onEnd) this.onEnd(index);\n\n\t\t\tentry.mixDuration = this.data.getMix(current.animation, entry.animation);\n\t\t\tif (entry.mixDuration > 0) {\n\t\t\t\tentry.mixTime = 0;\n\t\t\t\t// If a mix is in progress, mix from the closest animation.\n\t\t\t\tif (previous && current.mixTime / current.mixDuration < 0.5)\n\t\t\t\t\tentry.previous = previous;\n\t\t\t\telse\n\t\t\t\t\tentry.previous = current;\n\t\t\t}\n\t\t}\n\n\t\tthis.tracks[index] = entry;\n\n\t\tif (entry.onStart) entry.onStart(index);\n\t\tif (this.onStart) this.onStart(index);\n\t},\n\tsetAnimationByName: function (trackIndex, animationName, loop) {\n\t\tvar animation = this.data.skeletonData.findAnimation(animationName);\n\t\tif (!animation) throw \"Animation not found: \" + animationName;\n\t\treturn this.setAnimation(trackIndex, animation, loop);\n\t},\n\t/** Set the current animation. Any queued animations are cleared. */\n\tsetAnimation: function (trackIndex, animation, loop) {\n\t\tvar entry = new spine.TrackEntry();\n\t\tentry.animation = animation;\n\t\tentry.loop = loop;\n\t\tentry.endTime = animation.duration;\n\t\tthis.setCurrent(trackIndex, entry);\n\t\treturn entry;\n\t},\n\taddAnimationByName: function (trackIndex, animationName, loop, delay) {\n\t\tvar animation = this.data.skeletonData.findAnimation(animationName);\n\t\tif (!animation) throw \"Animation not found: \" + animationName;\n\t\treturn this.addAnimation(trackIndex, animation, loop, delay);\n\t},\n\t/** Adds an animation to be played delay seconds after the current or last queued animation.\n\t * @param delay May be <= 0 to use duration of previous animation minus any mix duration plus the negative delay. */\n\taddAnimation: function (trackIndex, animation, loop, delay) {\n\t\tvar entry = new spine.TrackEntry();\n\t\tentry.animation = animation;\n\t\tentry.loop = loop;\n\t\tentry.endTime = animation.duration;\n\n\t\tvar last = this._expandToIndex(trackIndex);\n\t\tif (last) {\n\t\t\twhile (last.next)\n\t\t\t\tlast = last.next;\n\t\t\tlast.next = entry;\n\t\t} else\n\t\t\tthis.tracks[trackIndex] = entry;\n\n\t\tif (delay <= 0) {\n\t\t\tif (last)\n\t\t\t\tdelay += last.endTime - this.data.getMix(last.animation, animation);\n\t\t\telse\n\t\t\t\tdelay = 0;\n\t\t}\n\t\tentry.delay = delay;\n\n\t\treturn entry;\n\t},\n\t/** May be null. */\n\tgetCurrent: function (trackIndex) {\n\t\tif (trackIndex >= this.tracks.length) return null;\n\t\treturn this.tracks[trackIndex];\n\t}\n};\n\nspine.SkeletonJson = function (attachmentLoader) {\n\tthis.attachmentLoader = attachmentLoader;\n};\nspine.SkeletonJson.prototype = {\n\tscale: 1,\n\treadSkeletonData: function (root, name) {\n\t\tvar skeletonData = new spine.SkeletonData();\n\t\tskeletonData.name = name;\n\n\t\t// Skeleton.\n\t\tvar skeletonMap = root[\"skeleton\"];\n\t\tif (skeletonMap) {\n\t\t\tskeletonData.hash = skeletonMap[\"hash\"];\n\t\t\tskeletonData.version = skeletonMap[\"spine\"];\n\t\t\tskeletonData.width = skeletonMap[\"width\"] || 0;\n\t\t\tskeletonData.height = skeletonMap[\"height\"] || 0;\n\t\t}\n\n\t\t// Bones.\n\t\tvar bones = root[\"bones\"];\n\t\tfor (var i = 0, n = bones.length; i < n; i++) {\n\t\t\tvar boneMap = bones[i];\n\t\t\tvar parent = null;\n\t\t\tif (boneMap[\"parent\"]) {\n\t\t\t\tparent = skeletonData.findBone(boneMap[\"parent\"]);\n\t\t\t\tif (!parent) throw \"Parent bone not found: \" + boneMap[\"parent\"];\n\t\t\t}\n\t\t\tvar boneData = new spine.BoneData(boneMap[\"name\"], parent);\n\t\t\tboneData.length = (boneMap[\"length\"] || 0) * this.scale;\n\t\t\tboneData.x = (boneMap[\"x\"] || 0) * this.scale;\n\t\t\tboneData.y = (boneMap[\"y\"] || 0) * this.scale;\n\t\t\tboneData.rotation = (boneMap[\"rotation\"] || 0);\n\t\t\tboneData.scaleX = boneMap.hasOwnProperty(\"scaleX\") ? boneMap[\"scaleX\"] : 1;\n\t\t\tboneData.scaleY = boneMap.hasOwnProperty(\"scaleY\") ? boneMap[\"scaleY\"] : 1;\n\t\t\tboneData.inheritScale = boneMap.hasOwnProperty(\"inheritScale\") ? boneMap[\"inheritScale\"] : true;\n\t\t\tboneData.inheritRotation = boneMap.hasOwnProperty(\"inheritRotation\") ? boneMap[\"inheritRotation\"] : true;\n\t\t\tskeletonData.bones.push(boneData);\n\t\t}\n\n\t\t// IK constraints.\n\t\tvar ik = root[\"ik\"];\n\t\tif (ik) {\n\t\t\tfor (var i = 0, n = ik.length; i < n; i++) {\n\t\t\t\tvar ikMap = ik[i];\n\t\t\t\tvar ikConstraintData = new spine.IkConstraintData(ikMap[\"name\"]);\n\n\t\t\t\tvar bones = ikMap[\"bones\"];\n\t\t\t\tfor (var ii = 0, nn = bones.length; ii < nn; ii++) {\n\t\t\t\t\tvar bone = skeletonData.findBone(bones[ii]);\n\t\t\t\t\tif (!bone) throw \"IK bone not found: \" + bones[ii];\n\t\t\t\t\tikConstraintData.bones.push(bone);\n\t\t\t\t}\n\n\t\t\t\tikConstraintData.target = skeletonData.findBone(ikMap[\"target\"]);\n\t\t\t\tif (!ikConstraintData.target) throw \"Target bone not found: \" + ikMap[\"target\"];\n\n\t\t\t\tikConstraintData.bendDirection = (!ikMap.hasOwnProperty(\"bendPositive\") || ikMap[\"bendPositive\"]) ? 1 : -1;\n\t\t\t\tikConstraintData.mix = ikMap.hasOwnProperty(\"mix\") ? ikMap[\"mix\"] : 1;\n\n\t\t\t\tskeletonData.ikConstraints.push(ikConstraintData);\n\t\t\t}\n\t\t}\n\n\t\t// Slots.\n\t\tvar slots = root[\"slots\"];\n\t\tfor (var i = 0, n = slots.length; i < n; i++) {\n\t\t\tvar slotMap = slots[i];\n\t\t\tvar boneData = skeletonData.findBone(slotMap[\"bone\"]);\n\t\t\tif (!boneData) throw \"Slot bone not found: \" + slotMap[\"bone\"];\n\t\t\tvar slotData = new spine.SlotData(slotMap[\"name\"], boneData);\n\n\t\t\tvar color = slotMap[\"color\"];\n\t\t\tif (color) {\n\t\t\t\tslotData.r = this.toColor(color, 0);\n\t\t\t\tslotData.g = this.toColor(color, 1);\n\t\t\t\tslotData.b = this.toColor(color, 2);\n\t\t\t\tslotData.a = this.toColor(color, 3);\n\t\t\t}\n\n\t\t\tslotData.attachmentName = slotMap[\"attachment\"];\n\t\t\tslotData.additiveBlending = slotMap[\"additive\"] && slotMap[\"additive\"] == \"true\";\n\n\t\t\tskeletonData.slots.push(slotData);\n\t\t}\n\n\t\t// Skins.\n\t\tvar skins = root[\"skins\"];\n\t\tfor (var skinName in skins) {\n\t\t\tif (!skins.hasOwnProperty(skinName)) continue;\n\t\t\tvar skinMap = skins[skinName];\n\t\t\tvar skin = new spine.Skin(skinName);\n\t\t\tfor (var slotName in skinMap) {\n\t\t\t\tif (!skinMap.hasOwnProperty(slotName)) continue;\n\t\t\t\tvar slotIndex = skeletonData.findSlotIndex(slotName);\n\t\t\t\tvar slotEntry = skinMap[slotName];\n\t\t\t\tfor (var attachmentName in slotEntry) {\n\t\t\t\t\tif (!slotEntry.hasOwnProperty(attachmentName)) continue;\n\t\t\t\t\tvar attachment = this.readAttachment(skin, attachmentName, slotEntry[attachmentName]);\n\t\t\t\t\tif (attachment) skin.addAttachment(slotIndex, attachmentName, attachment);\n\t\t\t\t}\n\t\t\t}\n\t\t\tskeletonData.skins.push(skin);\n\t\t\tif (skin.name == \"default\") skeletonData.defaultSkin = skin;\n\t\t}\n\n\t\t// Events.\n\t\tvar events = root[\"events\"];\n\t\tfor (var eventName in events) {\n\t\t\tif (!events.hasOwnProperty(eventName)) continue;\n\t\t\tvar eventMap = events[eventName];\n\t\t\tvar eventData = new spine.EventData(eventName);\n\t\t\teventData.intValue = eventMap[\"int\"] || 0;\n\t\t\teventData.floatValue = eventMap[\"float\"] || 0;\n\t\t\teventData.stringValue = eventMap[\"string\"] || null;\n\t\t\tskeletonData.events.push(eventData);\n\t\t}\n\n\t\t// Animations.\n\t\tvar animations = root[\"animations\"];\n\t\tfor (var animationName in animations) {\n\t\t\tif (!animations.hasOwnProperty(animationName)) continue;\n\t\t\tthis.readAnimation(animationName, animations[animationName], skeletonData);\n\t\t}\n\n\t\treturn skeletonData;\n\t},\n\treadAttachment: function (skin, name, map) {\n\t\tname = map[\"name\"] || name;\n\n\t\tvar type = spine.AttachmentType[map[\"type\"] || \"region\"];\n\t\tvar path = map[\"path\"] || name;\n\n\t\tvar scale = this.scale;\n\t\tif (type == spine.AttachmentType.region) {\n\t\t\tvar region = this.attachmentLoader.newRegionAttachment(skin, name, path);\n\t\t\tif (!region) return null;\n\t\t\tregion.path = path;\n\t\t\tregion.x = (map[\"x\"] || 0) * scale;\n\t\t\tregion.y = (map[\"y\"] || 0) * scale;\n\t\t\tregion.scaleX = map.hasOwnProperty(\"scaleX\") ? map[\"scaleX\"] : 1;\n\t\t\tregion.scaleY = map.hasOwnProperty(\"scaleY\") ? map[\"scaleY\"] : 1;\n\t\t\tregion.rotation = map[\"rotation\"] || 0;\n\t\t\tregion.width = (map[\"width\"] || 0) * scale;\n\t\t\tregion.height = (map[\"height\"] || 0) * scale;\n\n\t\t\tvar color = map[\"color\"];\n\t\t\tif (color) {\n\t\t\t\tregion.r = this.toColor(color, 0);\n\t\t\t\tregion.g = this.toColor(color, 1);\n\t\t\t\tregion.b = this.toColor(color, 2);\n\t\t\t\tregion.a = this.toColor(color, 3);\n\t\t\t}\n\n\t\t\tregion.updateOffset();\n\t\t\treturn region;\n\t\t} else if (type == spine.AttachmentType.mesh) {\n\t\t\tvar mesh = this.attachmentLoader.newMeshAttachment(skin, name, path);\n\t\t\tif (!mesh) return null;\n\t\t\tmesh.path = path;\n\t\t\tmesh.vertices = this.getFloatArray(map, \"vertices\", scale);\n\t\t\tmesh.triangles = this.getIntArray(map, \"triangles\");\n\t\t\tmesh.regionUVs = this.getFloatArray(map, \"uvs\", 1);\n\t\t\tmesh.updateUVs();\n\n\t\t\tcolor = map[\"color\"];\n\t\t\tif (color) {\n\t\t\t\tmesh.r = this.toColor(color, 0);\n\t\t\t\tmesh.g = this.toColor(color, 1);\n\t\t\t\tmesh.b = this.toColor(color, 2);\n\t\t\t\tmesh.a = this.toColor(color, 3);\n\t\t\t}\n\n\t\t\tmesh.hullLength = (map[\"hull\"] || 0) * 2;\n\t\t\tif (map[\"edges\"]) mesh.edges = this.getIntArray(map, \"edges\");\n\t\t\tmesh.width = (map[\"width\"] || 0) * scale;\n\t\t\tmesh.height = (map[\"height\"] || 0) * scale;\n\t\t\treturn mesh;\n\t\t} else if (type == spine.AttachmentType.skinnedmesh) {\n\t\t\tvar mesh = this.attachmentLoader.newSkinnedMeshAttachment(skin, name, path);\n\t\t\tif (!mesh) return null;\n\t\t\tmesh.path = path;\n\n\t\t\tvar uvs = this.getFloatArray(map, \"uvs\", 1);\n\t\t\tvar vertices = this.getFloatArray(map, \"vertices\", 1);\n\t\t\tvar weights = [];\n\t\t\tvar bones = [];\n\t\t\tfor (var i = 0, n = vertices.length; i < n; ) {\n\t\t\t\tvar boneCount = vertices[i++] | 0;\n\t\t\t\tbones[bones.length] = boneCount;\n\t\t\t\tfor (var nn = i + boneCount * 4; i < nn; ) {\n\t\t\t\t\tbones[bones.length] = vertices[i];\n\t\t\t\t\tweights[weights.length] = vertices[i + 1] * scale;\n\t\t\t\t\tweights[weights.length] = vertices[i + 2] * scale;\n\t\t\t\t\tweights[weights.length] = vertices[i + 3];\n\t\t\t\t\ti += 4;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmesh.bones = bones;\n\t\t\tmesh.weights = weights;\n\t\t\tmesh.triangles = this.getIntArray(map, \"triangles\");\n\t\t\tmesh.regionUVs = uvs;\n\t\t\tmesh.updateUVs();\n\n\t\t\tcolor = map[\"color\"];\n\t\t\tif (color) {\n\t\t\t\tmesh.r = this.toColor(color, 0);\n\t\t\t\tmesh.g = this.toColor(color, 1);\n\t\t\t\tmesh.b = this.toColor(color, 2);\n\t\t\t\tmesh.a = this.toColor(color, 3);\n\t\t\t}\n\n\t\t\tmesh.hullLength = (map[\"hull\"] || 0) * 2;\n\t\t\tif (map[\"edges\"]) mesh.edges = this.getIntArray(map, \"edges\");\n\t\t\tmesh.width = (map[\"width\"] || 0) * scale;\n\t\t\tmesh.height = (map[\"height\"] || 0) * scale;\n\t\t\treturn mesh;\n\t\t} else if (type == spine.AttachmentType.boundingbox) {\n\t\t\tvar attachment = this.attachmentLoader.newBoundingBoxAttachment(skin, name);\n\t\t\tvar vertices = map[\"vertices\"];\n\t\t\tfor (var i = 0, n = vertices.length; i < n; i++)\n\t\t\t\tattachment.vertices.push(vertices[i] * scale);\n\t\t\treturn attachment;\n\t\t}\n\t\tthrow \"Unknown attachment type: \" + type;\n\t},\n\treadAnimation: function (name, map, skeletonData) {\n\t\tvar timelines = [];\n\t\tvar duration = 0;\n\n\t\tvar slots = map[\"slots\"];\n\t\tfor (var slotName in slots) {\n\t\t\tif (!slots.hasOwnProperty(slotName)) continue;\n\t\t\tvar slotMap = slots[slotName];\n\t\t\tvar slotIndex = skeletonData.findSlotIndex(slotName);\n\n\t\t\tfor (var timelineName in slotMap) {\n\t\t\t\tif (!slotMap.hasOwnProperty(timelineName)) continue;\n\t\t\t\tvar values = slotMap[timelineName];\n\t\t\t\tif (timelineName == \"color\") {\n\t\t\t\t\tvar timeline = new spine.ColorTimeline(values.length);\n\t\t\t\t\ttimeline.slotIndex = slotIndex;\n\n\t\t\t\t\tvar frameIndex = 0;\n\t\t\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\tvar valueMap = values[i];\n\t\t\t\t\t\tvar color = valueMap[\"color\"];\n\t\t\t\t\t\tvar r = this.toColor(color, 0);\n\t\t\t\t\t\tvar g = this.toColor(color, 1);\n\t\t\t\t\t\tvar b = this.toColor(color, 2);\n\t\t\t\t\t\tvar a = this.toColor(color, 3);\n\t\t\t\t\t\ttimeline.setFrame(frameIndex, valueMap[\"time\"], r, g, b, a);\n\t\t\t\t\t\tthis.readCurve(timeline, frameIndex, valueMap);\n\t\t\t\t\t\tframeIndex++;\n\t\t\t\t\t}\n\t\t\t\t\ttimelines.push(timeline);\n\t\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 5 - 5]);\n\n\t\t\t\t} else if (timelineName == \"attachment\") {\n\t\t\t\t\tvar timeline = new spine.AttachmentTimeline(values.length);\n\t\t\t\t\ttimeline.slotIndex = slotIndex;\n\n\t\t\t\t\tvar frameIndex = 0;\n\t\t\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\tvar valueMap = values[i];\n\t\t\t\t\t\ttimeline.setFrame(frameIndex++, valueMap[\"time\"], valueMap[\"name\"]);\n\t\t\t\t\t}\n\t\t\t\t\ttimelines.push(timeline);\n\t\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() - 1]);\n\n\t\t\t\t} else\n\t\t\t\t\tthrow \"Invalid timeline type for a slot: \" + timelineName + \" (\" + slotName + \")\";\n\t\t\t}\n\t\t}\n\n\t\tvar bones = map[\"bones\"];\n\t\tfor (var boneName in bones) {\n\t\t\tif (!bones.hasOwnProperty(boneName)) continue;\n\t\t\tvar boneIndex = skeletonData.findBoneIndex(boneName);\n\t\t\tif (boneIndex == -1) throw \"Bone not found: \" + boneName;\n\t\t\tvar boneMap = bones[boneName];\n\n\t\t\tfor (var timelineName in boneMap) {\n\t\t\t\tif (!boneMap.hasOwnProperty(timelineName)) continue;\n\t\t\t\tvar values = boneMap[timelineName];\n\t\t\t\tif (timelineName == \"rotate\") {\n\t\t\t\t\tvar timeline = new spine.RotateTimeline(values.length);\n\t\t\t\t\ttimeline.boneIndex = boneIndex;\n\n\t\t\t\t\tvar frameIndex = 0;\n\t\t\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\tvar valueMap = values[i];\n\t\t\t\t\t\ttimeline.setFrame(frameIndex, valueMap[\"time\"], valueMap[\"angle\"]);\n\t\t\t\t\t\tthis.readCurve(timeline, frameIndex, valueMap);\n\t\t\t\t\t\tframeIndex++;\n\t\t\t\t\t}\n\t\t\t\t\ttimelines.push(timeline);\n\t\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 2 - 2]);\n\n\t\t\t\t} else if (timelineName == \"translate\" || timelineName == \"scale\") {\n\t\t\t\t\tvar timeline;\n\t\t\t\t\tvar timelineScale = 1;\n\t\t\t\t\tif (timelineName == \"scale\")\n\t\t\t\t\t\ttimeline = new spine.ScaleTimeline(values.length);\n\t\t\t\t\telse {\n\t\t\t\t\t\ttimeline = new spine.TranslateTimeline(values.length);\n\t\t\t\t\t\ttimelineScale = this.scale;\n\t\t\t\t\t}\n\t\t\t\t\ttimeline.boneIndex = boneIndex;\n\n\t\t\t\t\tvar frameIndex = 0;\n\t\t\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\tvar valueMap = values[i];\n\t\t\t\t\t\tvar x = (valueMap[\"x\"] || 0) * timelineScale;\n\t\t\t\t\t\tvar y = (valueMap[\"y\"] || 0) * timelineScale;\n\t\t\t\t\t\ttimeline.setFrame(frameIndex, valueMap[\"time\"], x, y);\n\t\t\t\t\t\tthis.readCurve(timeline, frameIndex, valueMap);\n\t\t\t\t\t\tframeIndex++;\n\t\t\t\t\t}\n\t\t\t\t\ttimelines.push(timeline);\n\t\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 3 - 3]);\n\n\t\t\t\t} else if (timelineName == \"flipX\" || timelineName == \"flipY\") {\n\t\t\t\t\tvar x = timelineName == \"flipX\";\n\t\t\t\t\tvar timeline = x ? new spine.FlipXTimeline(values.length) : new spine.FlipYTimeline(values.length);\n\t\t\t\t\ttimeline.boneIndex = boneIndex;\n\n\t\t\t\t\tvar field = x ? \"x\" : \"y\";\n\t\t\t\t\tvar frameIndex = 0;\n\t\t\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\tvar valueMap = values[i];\n\t\t\t\t\t\ttimeline.setFrame(frameIndex, valueMap[\"time\"], valueMap[field] || false);\n\t\t\t\t\t\tframeIndex++;\n\t\t\t\t\t}\n\t\t\t\t\ttimelines.push(timeline);\n\t\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 2 - 2]);\n\t\t\t\t} else\n\t\t\t\t\tthrow \"Invalid timeline type for a bone: \" + timelineName + \" (\" + boneName + \")\";\n\t\t\t}\n\t\t}\n\n\t\tvar ikMap = map[\"ik\"];\n\t\tfor (var ikConstraintName in ikMap) {\n\t\t\tif (!ikMap.hasOwnProperty(ikConstraintName)) continue;\n\t\t\tvar ikConstraint = skeletonData.findIkConstraint(ikConstraintName);\n\t\t\tvar values = ikMap[ikConstraintName];\n\t\t\tvar timeline = new spine.IkConstraintTimeline(values.length);\n\t\t\ttimeline.ikConstraintIndex = skeletonData.ikConstraints.indexOf(ikConstraint);\n\t\t\tvar frameIndex = 0;\n\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\tvar valueMap = values[i];\n\t\t\t\tvar mix = valueMap.hasOwnProperty(\"mix\") ? valueMap[\"mix\"] : 1;\n\t\t\t\tvar bendDirection = (!valueMap.hasOwnProperty(\"bendPositive\") || valueMap[\"bendPositive\"]) ? 1 : -1;\n\t\t\t\ttimeline.setFrame(frameIndex, valueMap[\"time\"], mix, bendDirection);\n\t\t\t\tthis.readCurve(timeline, frameIndex, valueMap);\n\t\t\t\tframeIndex++;\n\t\t\t}\n\t\t\ttimelines.push(timeline);\n\t\t\tduration = Math.max(duration, timeline.frames[timeline.frameCount * 3 - 3]);\n\t\t}\n\n\t\tvar ffd = map[\"ffd\"];\n\t\tfor (var skinName in ffd) {\n\t\t\tvar skin = skeletonData.findSkin(skinName);\n\t\t\tvar slotMap = ffd[skinName];\n\t\t\tfor (slotName in slotMap) {\n\t\t\t\tvar slotIndex = skeletonData.findSlotIndex(slotName);\n\t\t\t\tvar meshMap = slotMap[slotName];\n\t\t\t\tfor (var meshName in meshMap) {\n\t\t\t\t\tvar values = meshMap[meshName];\n\t\t\t\t\tvar timeline = new spine.FfdTimeline(values.length);\n\t\t\t\t\tvar attachment = skin.getAttachment(slotIndex, meshName);\n\t\t\t\t\tif (!attachment) throw \"FFD attachment not found: \" + meshName;\n\t\t\t\t\ttimeline.slotIndex = slotIndex;\n\t\t\t\t\ttimeline.attachment = attachment;\n\n\t\t\t\t\tvar isMesh = attachment.type == spine.AttachmentType.mesh;\n\t\t\t\t\tvar vertexCount;\n\t\t\t\t\tif (isMesh)\n\t\t\t\t\t\tvertexCount = attachment.vertices.length;\n\t\t\t\t\telse\n\t\t\t\t\t\tvertexCount = attachment.weights.length / 3 * 2;\n\n\t\t\t\t\tvar frameIndex = 0;\n\t\t\t\t\tfor (var i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\tvar valueMap = values[i];\n\t\t\t\t\t\tvar vertices;\n\t\t\t\t\t\tif (!valueMap[\"vertices\"]) {\n\t\t\t\t\t\t\tif (isMesh)\n\t\t\t\t\t\t\t\tvertices = attachment.vertices;\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tvertices = [];\n\t\t\t\t\t\t\t\tvertices.length = vertexCount;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar verticesValue = valueMap[\"vertices\"];\n\t\t\t\t\t\t\tvar vertices = [];\n\t\t\t\t\t\t\tvertices.length = vertexCount;\n\t\t\t\t\t\t\tvar start = valueMap[\"offset\"] || 0;\n\t\t\t\t\t\t\tvar nn = verticesValue.length;\n\t\t\t\t\t\t\tif (this.scale == 1) {\n\t\t\t\t\t\t\t\tfor (var ii = 0; ii < nn; ii++)\n\t\t\t\t\t\t\t\t\tvertices[ii + start] = verticesValue[ii];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfor (var ii = 0; ii < nn; ii++)\n\t\t\t\t\t\t\t\t\tvertices[ii + start] = verticesValue[ii] * this.scale;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (isMesh) {\n\t\t\t\t\t\t\t\tvar meshVertices = attachment.vertices;\n\t\t\t\t\t\t\t\tfor (var ii = 0, nn = vertices.length; ii < nn; ii++)\n\t\t\t\t\t\t\t\t\tvertices[ii] += meshVertices[ii];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttimeline.setFrame(frameIndex, valueMap[\"time\"], vertices);\n\t\t\t\t\t\tthis.readCurve(timeline, frameIndex, valueMap);\n\t\t\t\t\t\tframeIndex++;\n\t\t\t\t\t}\n\t\t\t\t\ttimelines[timelines.length] = timeline;\n\t\t\t\t\tduration = Math.max(duration, timeline.frames[timeline.frameCount - 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar drawOrderValues = map[\"drawOrder\"];\n\t\tif (!drawOrderValues) drawOrderValues = map[\"draworder\"];\n\t\tif (drawOrderValues) {\n\t\t\tvar timeline = new spine.DrawOrderTimeline(drawOrderValues.length);\n\t\t\tvar slotCount = skeletonData.slots.length;\n\t\t\tvar frameIndex = 0;\n\t\t\tfor (var i = 0, n = drawOrderValues.length; i < n; i++) {\n\t\t\t\tvar drawOrderMap = drawOrderValues[i];\n\t\t\t\tvar drawOrder = null;\n\t\t\t\tif (drawOrderMap[\"offsets\"]) {\n\t\t\t\t\tdrawOrder = [];\n\t\t\t\t\tdrawOrder.length = slotCount;\n\t\t\t\t\tfor (var ii = slotCount - 1; ii >= 0; ii--)\n\t\t\t\t\t\tdrawOrder[ii] = -1;\n\t\t\t\t\tvar offsets = drawOrderMap[\"offsets\"];\n\t\t\t\t\tvar unchanged = [];\n\t\t\t\t\tunchanged.length = slotCount - offsets.length;\n\t\t\t\t\tvar originalIndex = 0, unchangedIndex = 0;\n\t\t\t\t\tfor (var ii = 0, nn = offsets.length; ii < nn; ii++) {\n\t\t\t\t\t\tvar offsetMap = offsets[ii];\n\t\t\t\t\t\tvar slotIndex = skeletonData.findSlotIndex(offsetMap[\"slot\"]);\n\t\t\t\t\t\tif (slotIndex == -1) throw \"Slot not found: \" + offsetMap[\"slot\"];\n\t\t\t\t\t\t// Collect unchanged items.\n\t\t\t\t\t\twhile (originalIndex != slotIndex)\n\t\t\t\t\t\t\tunchanged[unchangedIndex++] = originalIndex++;\n\t\t\t\t\t\t// Set changed items.\n\t\t\t\t\t\tdrawOrder[originalIndex + offsetMap[\"offset\"]] = originalIndex++;\n\t\t\t\t\t}\n\t\t\t\t\t// Collect remaining unchanged items.\n\t\t\t\t\twhile (originalIndex < slotCount)\n\t\t\t\t\t\tunchanged[unchangedIndex++] = originalIndex++;\n\t\t\t\t\t// Fill in unchanged items.\n\t\t\t\t\tfor (var ii = slotCount - 1; ii >= 0; ii--)\n\t\t\t\t\t\tif (drawOrder[ii] == -1) drawOrder[ii] = unchanged[--unchangedIndex];\n\t\t\t\t}\n\t\t\t\ttimeline.setFrame(frameIndex++, drawOrderMap[\"time\"], drawOrder);\n\t\t\t}\n\t\t\ttimelines.push(timeline);\n\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() - 1]);\n\t\t}\n\n\t\tvar events = map[\"events\"];\n\t\tif (events) {\n\t\t\tvar timeline = new spine.EventTimeline(events.length);\n\t\t\tvar frameIndex = 0;\n\t\t\tfor (var i = 0, n = events.length; i < n; i++) {\n\t\t\t\tvar eventMap = events[i];\n\t\t\t\tvar eventData = skeletonData.findEvent(eventMap[\"name\"]);\n\t\t\t\tif (!eventData) throw \"Event not found: \" + eventMap[\"name\"];\n\t\t\t\tvar event = new spine.Event(eventData);\n\t\t\t\tevent.intValue = eventMap.hasOwnProperty(\"int\") ? eventMap[\"int\"] : eventData.intValue;\n\t\t\t\tevent.floatValue = eventMap.hasOwnProperty(\"float\") ? eventMap[\"float\"] : eventData.floatValue;\n\t\t\t\tevent.stringValue = eventMap.hasOwnProperty(\"string\") ? eventMap[\"string\"] : eventData.stringValue;\n\t\t\t\ttimeline.setFrame(frameIndex++, eventMap[\"time\"], event);\n\t\t\t}\n\t\t\ttimelines.push(timeline);\n\t\t\tduration = Math.max(duration, timeline.frames[timeline.getFrameCount() - 1]);\n\t\t}\n\n\t\tskeletonData.animations.push(new spine.Animation(name, timelines, duration));\n\t},\n\treadCurve: function (timeline, frameIndex, valueMap) {\n\t\tvar curve = valueMap[\"curve\"];\n\t\tif (!curve)\n\t\t\ttimeline.curves.setLinear(frameIndex);\n\t\telse if (curve == \"stepped\")\n\t\t\ttimeline.curves.setStepped(frameIndex);\n\t\telse if (curve instanceof Array)\n\t\t\ttimeline.curves.setCurve(frameIndex, curve[0], curve[1], curve[2], curve[3]);\n\t},\n\ttoColor: function (hexString, colorIndex) {\n\t\tif (hexString.length != 8) throw \"Color hexidecimal length must be 8, recieved: \" + hexString;\n\t\treturn parseInt(hexString.substring(colorIndex * 2, (colorIndex * 2) + 2), 16) / 255;\n\t},\n\tgetFloatArray: function (map, name, scale) {\n\t\tvar list = map[name];\n\t\tvar values = new spine.Float32Array(list.length);\n\t\tvar i = 0, n = list.length;\n\t\tif (scale == 1) {\n\t\t\tfor (; i < n; i++)\n\t\t\t\tvalues[i] = list[i];\n\t\t} else {\n\t\t\tfor (; i < n; i++)\n\t\t\t\tvalues[i] = list[i] * scale;\n\t\t}\n\t\treturn values;\n\t},\n\tgetIntArray: function (map, name) {\n\t\tvar list = map[name];\n\t\tvar values = new spine.Uint16Array(list.length);\n\t\tfor (var i = 0, n = list.length; i < n; i++)\n\t\t\tvalues[i] = list[i] | 0;\n\t\treturn values;\n\t}\n};\n\nspine.Atlas = function (atlasText, textureLoader) {\n\tthis.textureLoader = textureLoader;\n\tthis.pages = [];\n\tthis.regions = [];\n\n\tvar reader = new spine.AtlasReader(atlasText);\n\tvar tuple = [];\n\ttuple.length = 4;\n\tvar page = null;\n\twhile (true) {\n\t\tvar line = reader.readLine();\n\t\tif (line === null) break;\n\t\tline = reader.trim(line);\n\t\tif (!line.length)\n\t\t\tpage = null;\n\t\telse if (!page) {\n\t\t\tpage = new spine.AtlasPage();\n\t\t\tpage.name = line;\n\n\t\t\tif (reader.readTuple(tuple) == 2) { // size is only optional for an atlas packed with an old TexturePacker.\n\t\t\t\tpage.width = parseInt(tuple[0]);\n\t\t\t\tpage.height = parseInt(tuple[1]);\n\t\t\t\treader.readTuple(tuple);\n\t\t\t}\n\t\t\tpage.format = spine.Atlas.Format[tuple[0]];\n\n\t\t\treader.readTuple(tuple);\n\t\t\tpage.minFilter = spine.Atlas.TextureFilter[tuple[0]];\n\t\t\tpage.magFilter = spine.Atlas.TextureFilter[tuple[1]];\n\n\t\t\tvar direction = reader.readValue();\n\t\t\tpage.uWrap = spine.Atlas.TextureWrap.clampToEdge;\n\t\t\tpage.vWrap = spine.Atlas.TextureWrap.clampToEdge;\n\t\t\tif (direction == \"x\")\n\t\t\t\tpage.uWrap = spine.Atlas.TextureWrap.repeat;\n\t\t\telse if (direction == \"y\")\n\t\t\t\tpage.vWrap = spine.Atlas.TextureWrap.repeat;\n\t\t\telse if (direction == \"xy\")\n\t\t\t\tpage.uWrap = page.vWrap = spine.Atlas.TextureWrap.repeat;\n\n\t\t\ttextureLoader.load(page, line, this);\n\n\t\t\tthis.pages.push(page);\n\n\t\t} else {\n\t\t\tvar region = new spine.AtlasRegion();\n\t\t\tregion.name = line;\n\t\t\tregion.page = page;\n\n\t\t\tregion.rotate = reader.readValue() == \"true\";\n\n\t\t\treader.readTuple(tuple);\n\t\t\tvar x = parseInt(tuple[0]);\n\t\t\tvar y = parseInt(tuple[1]);\n\n\t\t\treader.readTuple(tuple);\n\t\t\tvar width = parseInt(tuple[0]);\n\t\t\tvar height = parseInt(tuple[1]);\n\n\t\t\tregion.u = x / page.width;\n\t\t\tregion.v = y / page.height;\n\t\t\tif (region.rotate) {\n\t\t\t\tregion.u2 = (x + height) / page.width;\n\t\t\t\tregion.v2 = (y + width) / page.height;\n\t\t\t} else {\n\t\t\t\tregion.u2 = (x + width) / page.width;\n\t\t\t\tregion.v2 = (y + height) / page.height;\n\t\t\t}\n\t\t\tregion.x = x;\n\t\t\tregion.y = y;\n\t\t\tregion.width = Math.abs(width);\n\t\t\tregion.height = Math.abs(height);\n\n\t\t\tif (reader.readTuple(tuple) == 4) { // split is optional\n\t\t\t\tregion.splits = [parseInt(tuple[0]), parseInt(tuple[1]), parseInt(tuple[2]), parseInt(tuple[3])];\n\n\t\t\t\tif (reader.readTuple(tuple) == 4) { // pad is optional, but only present with splits\n\t\t\t\t\tregion.pads = [parseInt(tuple[0]), parseInt(tuple[1]), parseInt(tuple[2]), parseInt(tuple[3])];\n\n\t\t\t\t\treader.readTuple(tuple);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tregion.originalWidth = parseInt(tuple[0]);\n\t\t\tregion.originalHeight = parseInt(tuple[1]);\n\n\t\t\treader.readTuple(tuple);\n\t\t\tregion.offsetX = parseInt(tuple[0]);\n\t\t\tregion.offsetY = parseInt(tuple[1]);\n\n\t\t\tregion.index = parseInt(reader.readValue());\n\n\t\t\tthis.regions.push(region);\n\t\t}\n\t}\n};\nspine.Atlas.prototype = {\n\tfindRegion: function (name) {\n\t\tvar regions = this.regions;\n\t\tfor (var i = 0, n = regions.length; i < n; i++)\n\t\t\tif (regions[i].name == name) return regions[i];\n\t\treturn null;\n\t},\n\tdispose: function () {\n\t\tvar pages = this.pages;\n\t\tfor (var i = 0, n = pages.length; i < n; i++)\n\t\t\tthis.textureLoader.unload(pages[i].rendererObject);\n\t},\n\tupdateUVs: function (page) {\n\t\tvar regions = this.regions;\n\t\tfor (var i = 0, n = regions.length; i < n; i++) {\n\t\t\tvar region = regions[i];\n\t\t\tif (region.page != page) continue;\n\t\t\tregion.u = region.x / page.width;\n\t\t\tregion.v = region.y / page.height;\n\t\t\tif (region.rotate) {\n\t\t\t\tregion.u2 = (region.x + region.height) / page.width;\n\t\t\t\tregion.v2 = (region.y + region.width) / page.height;\n\t\t\t} else {\n\t\t\t\tregion.u2 = (region.x + region.width) / page.width;\n\t\t\t\tregion.v2 = (region.y + region.height) / page.height;\n\t\t\t}\n\t\t}\n\t}\n};\n\nspine.Atlas.Format = {\n\talpha: 0,\n\tintensity: 1,\n\tluminanceAlpha: 2,\n\trgb565: 3,\n\trgba4444: 4,\n\trgb888: 5,\n\trgba8888: 6\n};\n\nspine.Atlas.TextureFilter = {\n\tnearest: 0,\n\tlinear: 1,\n\tmipMap: 2,\n\tmipMapNearestNearest: 3,\n\tmipMapLinearNearest: 4,\n\tmipMapNearestLinear: 5,\n\tmipMapLinearLinear: 6\n};\n\nspine.Atlas.TextureWrap = {\n\tmirroredRepeat: 0,\n\tclampToEdge: 1,\n\trepeat: 2\n};\n\nspine.AtlasPage = function () {};\nspine.AtlasPage.prototype = {\n\tname: null,\n\tformat: null,\n\tminFilter: null,\n\tmagFilter: null,\n\tuWrap: null,\n\tvWrap: null,\n\trendererObject: null,\n\twidth: 0,\n\theight: 0\n};\n\nspine.AtlasRegion = function () {};\nspine.AtlasRegion.prototype = {\n\tpage: null,\n\tname: null,\n\tx: 0, y: 0,\n\twidth: 0, height: 0,\n\tu: 0, v: 0, u2: 0, v2: 0,\n\toffsetX: 0, offsetY: 0,\n\toriginalWidth: 0, originalHeight: 0,\n\tindex: 0,\n\trotate: false,\n\tsplits: null,\n\tpads: null\n};\n\nspine.AtlasReader = function (text) {\n\tthis.lines = text.split(/\\r\\n|\\r|\\n/);\n};\nspine.AtlasReader.prototype = {\n\tindex: 0,\n\ttrim: function (value) {\n\t\treturn value.replace(/^\\s+|\\s+$/g, \"\");\n\t},\n\treadLine: function () {\n\t\tif (this.index >= this.lines.length) return null;\n\t\treturn this.lines[this.index++];\n\t},\n\treadValue: function () {\n\t\tvar line = this.readLine();\n\t\tvar colon = line.indexOf(\":\");\n\t\tif (colon == -1) throw \"Invalid line: \" + line;\n\t\treturn this.trim(line.substring(colon + 1));\n\t},\n\t/** Returns the number of tuple values read (1, 2 or 4). */\n\treadTuple: function (tuple) {\n\t\tvar line = this.readLine();\n\t\tvar colon = line.indexOf(\":\");\n\t\tif (colon == -1) throw \"Invalid line: \" + line;\n\t\tvar i = 0, lastMatch = colon + 1;\n\t\tfor (; i < 3; i++) {\n\t\t\tvar comma = line.indexOf(\",\", lastMatch);\n\t\t\tif (comma == -1) break;\n\t\t\ttuple[i] = this.trim(line.substr(lastMatch, comma - lastMatch));\n\t\t\tlastMatch = comma + 1;\n\t\t}\n\t\ttuple[i] = this.trim(line.substring(lastMatch));\n\t\treturn i + 1;\n\t}\n};\n\nspine.AtlasAttachmentLoader = function (atlas) {\n\tthis.atlas = atlas;\n};\nspine.AtlasAttachmentLoader.prototype = {\n\tnewRegionAttachment: function (skin, name, path) {\n\t\tvar region = this.atlas.findRegion(path);\n\t\tif (!region) throw \"Region not found in atlas: \" + path + \" (region attachment: \" + name + \")\";\n\t\tvar attachment = new spine.RegionAttachment(name);\n\t\tattachment.rendererObject = region;\n\t\tattachment.setUVs(region.u, region.v, region.u2, region.v2, region.rotate);\n\t\tattachment.regionOffsetX = region.offsetX;\n\t\tattachment.regionOffsetY = region.offsetY;\n\t\tattachment.regionWidth = region.width;\n\t\tattachment.regionHeight = region.height;\n\t\tattachment.regionOriginalWidth = region.originalWidth;\n\t\tattachment.regionOriginalHeight = region.originalHeight;\n\t\treturn attachment;\n\t},\n\tnewMeshAttachment: function (skin, name, path) {\n\t\tvar region = this.atlas.findRegion(path);\n\t\tif (!region) throw \"Region not found in atlas: \" + path + \" (mesh attachment: \" + name + \")\";\n\t\tvar attachment = new spine.MeshAttachment(name);\n\t\tattachment.rendererObject = region;\n\t\tattachment.regionU = region.u;\n\t\tattachment.regionV = region.v;\n\t\tattachment.regionU2 = region.u2;\n\t\tattachment.regionV2 = region.v2;\n\t\tattachment.regionRotate = region.rotate;\n\t\tattachment.regionOffsetX = region.offsetX;\n\t\tattachment.regionOffsetY = region.offsetY;\n\t\tattachment.regionWidth = region.width;\n\t\tattachment.regionHeight = region.height;\n\t\tattachment.regionOriginalWidth = region.originalWidth;\n\t\tattachment.regionOriginalHeight = region.originalHeight;\n\t\treturn attachment;\n\t},\n\tnewSkinnedMeshAttachment: function (skin, name, path) {\n\t\tvar region = this.atlas.findRegion(path);\n\t\tif (!region) throw \"Region not found in atlas: \" + path + \" (skinned mesh attachment: \" + name + \")\";\n\t\tvar attachment = new spine.SkinnedMeshAttachment(name);\n\t\tattachment.rendererObject = region;\n\t\tattachment.regionU = region.u;\n\t\tattachment.regionV = region.v;\n\t\tattachment.regionU2 = region.u2;\n\t\tattachment.regionV2 = region.v2;\n\t\tattachment.regionRotate = region.rotate;\n\t\tattachment.regionOffsetX = region.offsetX;\n\t\tattachment.regionOffsetY = region.offsetY;\n\t\tattachment.regionWidth = region.width;\n\t\tattachment.regionHeight = region.height;\n\t\tattachment.regionOriginalWidth = region.originalWidth;\n\t\tattachment.regionOriginalHeight = region.originalHeight;\n\t\treturn attachment;\n\t},\n\tnewBoundingBoxAttachment: function (skin, name) {\n\t\treturn new spine.BoundingBoxAttachment(name);\n\t}\n};\n\nspine.SkeletonBounds = function () {\n\tthis.polygonPool = [];\n\tthis.polygons = [];\n\tthis.boundingBoxes = [];\n};\nspine.SkeletonBounds.prototype = {\n\tminX: 0, minY: 0, maxX: 0, maxY: 0,\n\tupdate: function (skeleton, updateAabb) {\n\t\tvar slots = skeleton.slots;\n\t\tvar slotCount = slots.length;\n\t\tvar x = skeleton.x, y = skeleton.y;\n\t\tvar boundingBoxes = this.boundingBoxes;\n\t\tvar polygonPool = this.polygonPool;\n\t\tvar polygons = this.polygons;\n\n\t\tboundingBoxes.length = 0;\n\t\tfor (var i = 0, n = polygons.length; i < n; i++)\n\t\t\tpolygonPool.push(polygons[i]);\n\t\tpolygons.length = 0;\n\n\t\tfor (var i = 0; i < slotCount; i++) {\n\t\t\tvar slot = slots[i];\n\t\t\tvar boundingBox = slot.attachment;\n\t\t\tif (boundingBox.type != spine.AttachmentType.boundingbox) continue;\n\t\t\tboundingBoxes.push(boundingBox);\n\n\t\t\tvar poolCount = polygonPool.length, polygon;\n\t\t\tif (poolCount > 0) {\n\t\t\t\tpolygon = polygonPool[poolCount - 1];\n\t\t\t\tpolygonPool.splice(poolCount - 1, 1);\n\t\t\t} else\n\t\t\t\tpolygon = [];\n\t\t\tpolygons.push(polygon);\n\n\t\t\tpolygon.length = boundingBox.vertices.length;\n\t\t\tboundingBox.computeWorldVertices(x, y, slot.bone, polygon);\n\t\t}\n\n\t\tif (updateAabb) this.aabbCompute();\n\t},\n\taabbCompute: function () {\n\t\tvar polygons = this.polygons;\n\t\tvar minX = Number.MAX_VALUE, minY = Number.MAX_VALUE, maxX = Number.MIN_VALUE, maxY = Number.MIN_VALUE;\n\t\tfor (var i = 0, n = polygons.length; i < n; i++) {\n\t\t\tvar vertices = polygons[i];\n\t\t\tfor (var ii = 0, nn = vertices.length; ii < nn; ii += 2) {\n\t\t\t\tvar x = vertices[ii];\n\t\t\t\tvar y = vertices[ii + 1];\n\t\t\t\tminX = Math.min(minX, x);\n\t\t\t\tminY = Math.min(minY, y);\n\t\t\t\tmaxX = Math.max(maxX, x);\n\t\t\t\tmaxY = Math.max(maxY, y);\n\t\t\t}\n\t\t}\n\t\tthis.minX = minX;\n\t\tthis.minY = minY;\n\t\tthis.maxX = maxX;\n\t\tthis.maxY = maxY;\n\t},\n\t/** Returns true if the axis aligned bounding box contains the point. */\n\taabbContainsPoint: function (x, y) {\n\t\treturn x >= this.minX && x <= this.maxX && y >= this.minY && y <= this.maxY;\n\t},\n\t/** Returns true if the axis aligned bounding box intersects the line segment. */\n\taabbIntersectsSegment: function (x1, y1, x2, y2) {\n\t\tvar minX = this.minX, minY = this.minY, maxX = this.maxX, maxY = this.maxY;\n\t\tif ((x1 <= minX && x2 <= minX) || (y1 <= minY && y2 <= minY) || (x1 >= maxX && x2 >= maxX) || (y1 >= maxY && y2 >= maxY))\n\t\t\treturn false;\n\t\tvar m = (y2 - y1) / (x2 - x1);\n\t\tvar y = m * (minX - x1) + y1;\n\t\tif (y > minY && y < maxY) return true;\n\t\ty = m * (maxX - x1) + y1;\n\t\tif (y > minY && y < maxY) return true;\n\t\tvar x = (minY - y1) / m + x1;\n\t\tif (x > minX && x < maxX) return true;\n\t\tx = (maxY - y1) / m + x1;\n\t\tif (x > minX && x < maxX) return true;\n\t\treturn false;\n\t},\n\t/** Returns true if the axis aligned bounding box intersects the axis aligned bounding box of the specified bounds. */\n\taabbIntersectsSkeleton: function (bounds) {\n\t\treturn this.minX < bounds.maxX && this.maxX > bounds.minX && this.minY < bounds.maxY && this.maxY > bounds.minY;\n\t},\n\t/** Returns the first bounding box attachment that contains the point, or null. When doing many checks, it is usually more\n\t * efficient to only call this method if {@link #aabbContainsPoint(float, float)} returns true. */\n\tcontainsPoint: function (x, y) {\n\t\tvar polygons = this.polygons;\n\t\tfor (var i = 0, n = polygons.length; i < n; i++)\n\t\t\tif (this.polygonContainsPoint(polygons[i], x, y)) return this.boundingBoxes[i];\n\t\treturn null;\n\t},\n\t/** Returns the first bounding box attachment that contains the line segment, or null. When doing many checks, it is usually\n\t * more efficient to only call this method if {@link #aabbIntersectsSegment(float, float, float, float)} returns true. */\n\tintersectsSegment: function (x1, y1, x2, y2) {\n\t\tvar polygons = this.polygons;\n\t\tfor (var i = 0, n = polygons.length; i < n; i++)\n\t\t\tif (polygons[i].intersectsSegment(x1, y1, x2, y2)) return this.boundingBoxes[i];\n\t\treturn null;\n\t},\n\t/** Returns true if the polygon contains the point. */\n\tpolygonContainsPoint: function (polygon, x, y) {\n\t\tvar nn = polygon.length;\n\t\tvar prevIndex = nn - 2;\n\t\tvar inside = false;\n\t\tfor (var ii = 0; ii < nn; ii += 2) {\n\t\t\tvar vertexY = polygon[ii + 1];\n\t\t\tvar prevY = polygon[prevIndex + 1];\n\t\t\tif ((vertexY < y && prevY >= y) || (prevY < y && vertexY >= y)) {\n\t\t\t\tvar vertexX = polygon[ii];\n\t\t\t\tif (vertexX + (y - vertexY) / (prevY - vertexY) * (polygon[prevIndex] - vertexX) < x) inside = !inside;\n\t\t\t}\n\t\t\tprevIndex = ii;\n\t\t}\n\t\treturn inside;\n\t},\n\t/** Returns true if the polygon contains the line segment. */\n\tpolygonIntersectsSegment: function (polygon, x1, y1, x2, y2) {\n\t\tvar nn = polygon.length;\n\t\tvar width12 = x1 - x2, height12 = y1 - y2;\n\t\tvar det1 = x1 * y2 - y1 * x2;\n\t\tvar x3 = polygon[nn - 2], y3 = polygon[nn - 1];\n\t\tfor (var ii = 0; ii < nn; ii += 2) {\n\t\t\tvar x4 = polygon[ii], y4 = polygon[ii + 1];\n\t\t\tvar det2 = x3 * y4 - y3 * x4;\n\t\t\tvar width34 = x3 - x4, height34 = y3 - y4;\n\t\t\tvar det3 = width12 * height34 - height12 * width34;\n\t\t\tvar x = (det1 * width34 - width12 * det2) / det3;\n\t\t\tif (((x >= x3 && x <= x4) || (x >= x4 && x <= x3)) && ((x >= x1 && x <= x2) || (x >= x2 && x <= x1))) {\n\t\t\t\tvar y = (det1 * height34 - height12 * det2) / det3;\n\t\t\t\tif (((y >= y3 && y <= y4) || (y >= y4 && y <= y3)) && ((y >= y1 && y <= y2) || (y >= y2 && y <= y1))) return true;\n\t\t\t}\n\t\t\tx3 = x4;\n\t\t\ty3 = y4;\n\t\t}\n\t\treturn false;\n\t},\n\tgetPolygon: function (attachment) {\n\t\tvar index = this.boundingBoxes.indexOf(attachment);\n\t\treturn index == -1 ? null : this.polygons[index];\n\t},\n\tgetWidth: function () {\n\t\treturn this.maxX - this.minX;\n\t},\n\tgetHeight: function () {\n\t\treturn this.maxY - this.minY;\n\t}\n};\n\r\n/* Esoteric Software SPINE wrapper for pixi.js */\n\nspine.Bone.yDown = true;\nPIXI.AnimCache = {};\n\n/**\n * Supporting class to load images from spine atlases as per spine spec.\n *\n * @class SpineTextureLoader\n * @uses EventTarget\n * @constructor\n * @param basePath {String} Tha base path where to look for the images to be loaded\n * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n */\nPIXI.SpineTextureLoader = function(basePath, crossorigin)\n{\n    PIXI.EventTarget.call(this);\n\n    this.basePath = basePath;\n    this.crossorigin = crossorigin;\n    this.loadingCount = 0;\n};\n\n/* constructor */\nPIXI.SpineTextureLoader.prototype = PIXI.SpineTextureLoader;\n\n/**\n * Starts loading a base texture as per spine specification\n *\n * @method load\n * @param page {spine.AtlasPage} Atlas page to which texture belongs\n * @param file {String} The file to load, this is just the file path relative to the base path configured in the constructor\n */\nPIXI.SpineTextureLoader.prototype.load = function(page, file)\n{\n    page.rendererObject = PIXI.BaseTexture.fromImage(this.basePath + '/' + file, this.crossorigin);\n    if (!page.rendererObject.hasLoaded)\n    {\n        var scope = this;\n        ++scope.loadingCount;\n        page.rendererObject.addEventListener('loaded', function(){\n            --scope.loadingCount;\n            scope.dispatchEvent({\n                type: 'loadedBaseTexture',\n                content: scope\n            });\n        });\n    }\n};\n\n/**\n * Unloads a previously loaded texture as per spine specification\n *\n * @method unload\n * @param texture {BaseTexture} Texture object to destroy\n */\nPIXI.SpineTextureLoader.prototype.unload = function(texture)\n{\n    texture.destroy(true);\n};\n\n/**\n * A class that enables the you to import and run your spine animations in pixi.\n * Spine animation data needs to be loaded using the PIXI.AssetLoader or PIXI.SpineLoader before it can be used by this class\n * See example 12 (http://www.goodboydigital.com/pixijs/examples/12/) to see a working example and check out the source\n *\n * @class Spine\n * @extends DisplayObjectContainer\n * @constructor\n * @param url {String} The url of the spine anim file to be used\n */\nPIXI.Spine = function (url) {\n    PIXI.DisplayObjectContainer.call(this);\n\n    this.spineData = PIXI.AnimCache[url];\n\n    if (!this.spineData) {\n        throw new Error('Spine data must be preloaded using PIXI.SpineLoader or PIXI.AssetLoader: ' + url);\n    }\n\n    this.skeleton = new spine.Skeleton(this.spineData);\n    this.skeleton.updateWorldTransform();\n\n    this.stateData = new spine.AnimationStateData(this.spineData);\n    this.state = new spine.AnimationState(this.stateData);\n\n    this.slotContainers = [];\n\n    for (var i = 0, n = this.skeleton.drawOrder.length; i < n; i++) {\n        var slot = this.skeleton.drawOrder[i];\n        var attachment = slot.attachment;\n        var slotContainer = new PIXI.DisplayObjectContainer();\n        this.slotContainers.push(slotContainer);\n        this.addChild(slotContainer);\n\n        if (attachment instanceof spine.RegionAttachment)\n        {\n            var spriteName = attachment.rendererObject.name;\n            var sprite = this.createSprite(slot, attachment);\n            slot.currentSprite = sprite;\n            slot.currentSpriteName = spriteName;\n            slotContainer.addChild(sprite);\n        }\n        else if (attachment instanceof spine.MeshAttachment)\n        {\n            var mesh = this.createMesh(slot, attachment);\n            slot.currentMesh = mesh;\n            slot.currentMeshName = attachment.name;\n            slotContainer.addChild(mesh);\n        }\n        else\n        {\n            continue;\n        }\n\n    }\n\n    this.autoUpdate = true;\n};\n\nPIXI.Spine.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);\nPIXI.Spine.prototype.constructor = PIXI.Spine;\n\n/**\n * If this flag is set to true, the spine animation will be autoupdated every time\n * the object id drawn. The down side of this approach is that the delta time is\n * automatically calculated and you could miss out on cool effects like slow motion,\n * pause, skip ahead and the sorts. Most of these effects can be achieved even with\n * autoupdate enabled but are harder to achieve.\n *\n * @property autoUpdate\n * @type { Boolean }\n * @default true\n */\nObject.defineProperty(PIXI.Spine.prototype, 'autoUpdate', {\n    get: function()\n    {\n        return (this.updateTransform === PIXI.Spine.prototype.autoUpdateTransform);\n    },\n\n    set: function(value)\n    {\n        this.updateTransform = value ? PIXI.Spine.prototype.autoUpdateTransform : PIXI.DisplayObjectContainer.prototype.updateTransform;\n    }\n});\n\n/**\n * Update the spine skeleton and its animations by delta time (dt)\n *\n * @method update\n * @param dt {Number} Delta time. Time by which the animation should be updated\n */\nPIXI.Spine.prototype.update = function(dt)\n{\n    this.state.update(dt);\n    this.state.apply(this.skeleton);\n    this.skeleton.updateWorldTransform();\n\n    var drawOrder = this.skeleton.drawOrder;\n    for (var i = 0, n = drawOrder.length; i < n; i++) {\n        var slot = drawOrder[i];\n        var attachment = slot.attachment;\n        var slotContainer = this.slotContainers[i];\n\n        if (!attachment)\n        {\n            slotContainer.visible = false;\n            continue;\n        }\n\n        var type = attachment.type;\n        if (type === spine.AttachmentType.region)\n        {\n            if (attachment.rendererObject)\n            {\n                if (!slot.currentSpriteName || slot.currentSpriteName !== attachment.name)\n                {\n                    var spriteName = attachment.rendererObject.name;\n                    if (slot.currentSprite !== undefined)\n                    {\n                        slot.currentSprite.visible = false;\n                    }\n                    slot.sprites = slot.sprites || {};\n                    if (slot.sprites[spriteName] !== undefined)\n                    {\n                        slot.sprites[spriteName].visible = true;\n                    }\n                    else\n                    {\n                        var sprite = this.createSprite(slot, attachment);\n                        slotContainer.addChild(sprite);\n                    }\n                    slot.currentSprite = slot.sprites[spriteName];\n                    slot.currentSpriteName = spriteName;\n                }\n            }\n\n            var bone = slot.bone;\n\n            slotContainer.position.x = bone.worldX + attachment.x * bone.m00 + attachment.y * bone.m01;\n            slotContainer.position.y = bone.worldY + attachment.x * bone.m10 + attachment.y * bone.m11;\n            slotContainer.scale.x = bone.worldScaleX;\n            slotContainer.scale.y = bone.worldScaleY;\n\n            slotContainer.rotation = -(slot.bone.worldRotation * spine.degRad);\n\n            slot.currentSprite.tint = PIXI.rgb2hex([slot.r,slot.g,slot.b]);\n        }\n        else if (type === spine.AttachmentType.skinnedmesh)\n        {\n            if (!slot.currentMeshName || slot.currentMeshName !== attachment.name)\n            {\n                var meshName = attachment.name;\n                if (slot.currentMesh !== undefined)\n                {\n                    slot.currentMesh.visible = false;\n                }\n\n                slot.meshes = slot.meshes || {};\n\n                if (slot.meshes[meshName] !== undefined)\n                {\n                    slot.meshes[meshName].visible = true;\n                }\n                else\n                {\n                    var mesh = this.createMesh(slot, attachment);\n                    slotContainer.addChild(mesh);\n                }\n\n                slot.currentMesh = slot.meshes[meshName];\n                slot.currentMeshName = meshName;\n            }\n\n            attachment.computeWorldVertices(slot.bone.skeleton.x, slot.bone.skeleton.y, slot, slot.currentMesh.vertices);\n\n        }\n        else\n        {\n            slotContainer.visible = false;\n            continue;\n        }\n        slotContainer.visible = true;\n\n        slotContainer.alpha = slot.a;\n    }\n};\n\n/**\n * When autoupdate is set to yes this function is used as pixi's updateTransform function\n *\n * @method autoUpdateTransform\n * @private\n */\nPIXI.Spine.prototype.autoUpdateTransform = function () {\n    this.lastTime = this.lastTime || Date.now();\n    var timeDelta = (Date.now() - this.lastTime) * 0.001;\n    this.lastTime = Date.now();\n\n    this.update(timeDelta);\n\n    PIXI.DisplayObjectContainer.prototype.updateTransform.call(this);\n};\n\n/**\n * Create a new sprite to be used with spine.RegionAttachment\n *\n * @method createSprite\n * @param slot {spine.Slot} The slot to which the attachment is parented\n * @param attachment {spine.RegionAttachment} The attachment that the sprite will represent\n * @private\n */\nPIXI.Spine.prototype.createSprite = function (slot, attachment) {\n    var descriptor = attachment.rendererObject;\n    var baseTexture = descriptor.page.rendererObject;\n    var spriteRect = new PIXI.Rectangle(descriptor.x,\n                                        descriptor.y,\n                                        descriptor.rotate ? descriptor.height : descriptor.width,\n                                        descriptor.rotate ? descriptor.width : descriptor.height);\n    var spriteTexture = new PIXI.Texture(baseTexture, spriteRect);\n    var sprite = new PIXI.Sprite(spriteTexture);\n\n    var baseRotation = descriptor.rotate ? Math.PI * 0.5 : 0.0;\n    sprite.scale.set(descriptor.width / descriptor.originalWidth, descriptor.height / descriptor.originalHeight);\n    sprite.rotation = baseRotation - (attachment.rotation * spine.degRad);\n    sprite.anchor.x = sprite.anchor.y = 0.5;\n\n    slot.sprites = slot.sprites || {};\n    slot.sprites[descriptor.name] = sprite;\n    return sprite;\n};\n\nPIXI.Spine.prototype.createMesh = function (slot, attachment) {\n    var descriptor = attachment.rendererObject;\n    var baseTexture = descriptor.page.rendererObject;\n    var texture = new PIXI.Texture(baseTexture);\n\n    var strip = new PIXI.Strip(texture);\n    strip.drawMode = PIXI.Strip.DrawModes.TRIANGLES;\n    strip.canvasPadding = 1.5;\n\n    strip.vertices = new PIXI.Float32Array(attachment.uvs.length);\n    strip.uvs = attachment.uvs;\n    strip.indices = attachment.triangles;\n\n    slot.meshes = slot.meshes || {};\n    slot.meshes[attachment.name] = strip;\n\n    return strip;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\nPIXI.BaseTextureCache = {};\n\nPIXI.BaseTextureCacheIdGenerator = 0;\n\n/**\n * A texture stores the information that represents an image. All textures have a base texture.\n *\n * @class BaseTexture\n * @uses EventTarget\n * @constructor\n * @param source {String} the source object (image or canvas)\n * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n */\nPIXI.BaseTexture = function(source, scaleMode)\n{\n    /**\n     * The Resolution of the texture. \n     *\n     * @property resolution\n     * @type Number\n     */\n    this.resolution = 1;\n    \n    /**\n     * [read-only] The width of the base texture set when the image has loaded\n     *\n     * @property width\n     * @type Number\n     * @readOnly\n     */\n    this.width = 100;\n\n    /**\n     * [read-only] The height of the base texture set when the image has loaded\n     *\n     * @property height\n     * @type Number\n     * @readOnly\n     */\n    this.height = 100;\n\n    /**\n     * The scale mode to apply when scaling this texture\n     * \n     * @property scaleMode\n     * @type {Number}\n     * @default PIXI.scaleModes.LINEAR\n     */\n    this.scaleMode = scaleMode || PIXI.scaleModes.DEFAULT;\n\n    /**\n     * [read-only] Set to true once the base texture has loaded\n     *\n     * @property hasLoaded\n     * @type Boolean\n     * @readOnly\n     */\n    this.hasLoaded = false;\n\n    /**\n     * The image source that is used to create the texture.\n     *\n     * @property source\n     * @type Image\n     */\n    this.source = source;\n\n    this._UID = PIXI._UID++;\n\n    /**\n     * Controls if RGB channels should be pre-multiplied by Alpha  (WebGL only)\n     *\n     * @property premultipliedAlpha\n     * @type Boolean\n     * @default true\n     */\n    this.premultipliedAlpha = true;\n\n    // used for webGL\n\n    /**\n     * @property _glTextures\n     * @type Array\n     * @private\n     */\n    this._glTextures = [];\n\n    /**\n     *\n     * Set this to true if a mipmap of this texture needs to be generated. This value needs to be set before the texture is used\n     * Also the texture must be a power of two size to work\n     * \n     * @property mipmap\n     * @type {Boolean}\n     */\n    this.mipmap = false;\n\n    // used for webGL texture updating...\n    // TODO - this needs to be addressed\n\n    /**\n     * @property _dirty\n     * @type Array\n     * @private\n     */\n    this._dirty = [true, true, true, true];\n\n    if(!source)return;\n\n    if((this.source.complete || this.source.getContext) && this.source.width && this.source.height)\n    {\n        this.hasLoaded = true;\n        this.width = this.source.naturalWidth || this.source.width;\n        this.height = this.source.naturalHeight || this.source.height;\n        this.dirty();\n    }\n    else\n    {\n        var scope = this;\n\n        this.source.onload = function() {\n\n            scope.hasLoaded = true;\n            scope.width = scope.source.naturalWidth || scope.source.width;\n            scope.height = scope.source.naturalHeight || scope.source.height;\n\n            scope.dirty();\n\n            // add it to somewhere...\n            scope.dispatchEvent( { type: 'loaded', content: scope } );\n        };\n\n        this.source.onerror = function() {\n            scope.dispatchEvent( { type: 'error', content: scope } );\n        };\n    }\n\n    /**\n     * @property imageUrl\n     * @type String\n     */\n    this.imageUrl = null;\n\n    /**\n     * @property _powerOf2\n     * @type Boolean\n     * @private\n     */\n    this._powerOf2 = false;\n\n};\n\nPIXI.BaseTexture.prototype.constructor = PIXI.BaseTexture;\n\nPIXI.EventTarget.mixin(PIXI.BaseTexture.prototype);\n\n/**\n * Destroys this base texture\n *\n * @method destroy\n */\nPIXI.BaseTexture.prototype.destroy = function()\n{\n    if(this.imageUrl)\n    {\n        delete PIXI.BaseTextureCache[this.imageUrl];\n        delete PIXI.TextureCache[this.imageUrl];\n        this.imageUrl = null;\n        if (!navigator.isCocoonJS) this.source.src = '';\n    }\n    else if (this.source && this.source._pixiId)\n    {\n        delete PIXI.BaseTextureCache[this.source._pixiId];\n    }\n    this.source = null;\n\n    this.unloadFromGPU();\n};\n\n/**\n * Changes the source image of the texture\n *\n * @method updateSourceImage\n * @param newSrc {String} the path of the image\n */\nPIXI.BaseTexture.prototype.updateSourceImage = function(newSrc)\n{\n    this.hasLoaded = false;\n    this.source.src = null;\n    this.source.src = newSrc;\n};\n\n/**\n * Sets all glTextures to be dirty.\n *\n * @method dirty\n */\nPIXI.BaseTexture.prototype.dirty = function()\n{\n    for (var i = 0; i < this._glTextures.length; i++)\n    {\n        this._dirty[i] = true;\n    }\n};\n\n/**\n * Removes the base texture from the GPU, useful for managing resources on the GPU.\n * Atexture is still 100% usable and will simply be reuploaded if there is a sprite on screen that is using it.\n *\n * @method unloadFromGPU\n */\nPIXI.BaseTexture.prototype.unloadFromGPU = function()\n{\n    this.dirty();\n\n    // delete the webGL textures if any.\n    for (var i = this._glTextures.length - 1; i >= 0; i--)\n    {\n        var glTexture = this._glTextures[i];\n        var gl = PIXI.glContexts[i];\n\n        if(gl && glTexture)\n        {\n            gl.deleteTexture(glTexture);\n        }\n        \n    }\n\n    this._glTextures.length = 0;\n\n    this.dirty();\n};\n\n/**\n * Helper function that creates a base texture from the given image url.\n * If the image is not in the base texture cache it will be created and loaded.\n *\n * @static\n * @method fromImage\n * @param imageUrl {String} The image url of the texture\n * @param crossorigin {Boolean}\n * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n * @return BaseTexture\n */\nPIXI.BaseTexture.fromImage = function(imageUrl, crossorigin, scaleMode)\n{\n    var baseTexture = PIXI.BaseTextureCache[imageUrl];\n\n    if(crossorigin === undefined && imageUrl.indexOf('data:') === -1) crossorigin = true;\n\n    if(!baseTexture)\n    {\n        // new Image() breaks tex loading in some versions of Chrome.\n        // See https://code.google.com/p/chromium/issues/detail?id=238071\n        var image = new Image();//document.createElement('img');\n        if (crossorigin)\n        {\n            image.crossOrigin = '';\n        }\n\n        image.src = imageUrl;\n        baseTexture = new PIXI.BaseTexture(image, scaleMode);\n        baseTexture.imageUrl = imageUrl;\n        PIXI.BaseTextureCache[imageUrl] = baseTexture;\n\n        // if there is an @2x at the end of the url we are going to assume its a highres image\n        if( imageUrl.indexOf(PIXI.RETINA_PREFIX + '.') !== -1)\n        {\n            baseTexture.resolution = 2;\n        }\n    }\n\n    return baseTexture;\n};\n\n/**\n * Helper function that creates a base texture from the given canvas element.\n *\n * @static\n * @method fromCanvas\n * @param canvas {Canvas} The canvas element source of the texture\n * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n * @return BaseTexture\n */\nPIXI.BaseTexture.fromCanvas = function(canvas, scaleMode)\n{\n    if(!canvas._pixiId)\n    {\n        canvas._pixiId = 'canvas_' + PIXI.TextureCacheIdGenerator++;\n    }\n\n    var baseTexture = PIXI.BaseTextureCache[canvas._pixiId];\n\n    if(!baseTexture)\n    {\n        baseTexture = new PIXI.BaseTexture(canvas, scaleMode);\n        PIXI.BaseTextureCache[canvas._pixiId] = baseTexture;\n    }\n\n    return baseTexture;\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\nPIXI.TextureCache = {};\nPIXI.FrameCache = {};\n\nPIXI.TextureCacheIdGenerator = 0;\n\n/**\n * A texture stores the information that represents an image or part of an image. It cannot be added\n * to the display list directly. Instead use it as the texture for a PIXI.Sprite. If no frame is provided then the whole image is used.\n *\n * @class Texture\n * @uses EventTarget\n * @constructor\n * @param baseTexture {BaseTexture} The base texture source to create the texture from\n * @param [frame] {Rectangle} The rectangle frame of the texture to show\n * @param [crop] {Rectangle} The area of original texture \n * @param [trim] {Rectangle} Trimmed texture rectangle\n */\nPIXI.Texture = function(baseTexture, frame, crop, trim)\n{\n    /**\n     * Does this Texture have any frame data assigned to it?\n     *\n     * @property noFrame\n     * @type Boolean\n     */\n    this.noFrame = false;\n\n    if (!frame)\n    {\n        this.noFrame = true;\n        frame = new PIXI.Rectangle(0,0,1,1);\n    }\n\n    if (baseTexture instanceof PIXI.Texture)\n    {\n        baseTexture = baseTexture.baseTexture;\n    }\n\n    /**\n     * The base texture that this texture uses.\n     *\n     * @property baseTexture\n     * @type BaseTexture\n     */\n    this.baseTexture = baseTexture;\n\n    /**\n     * The frame specifies the region of the base texture that this texture uses\n     *\n     * @property frame\n     * @type Rectangle\n     */\n    this.frame = frame;\n\n    /**\n     * The texture trim data.\n     *\n     * @property trim\n     * @type Rectangle\n     */\n    this.trim = trim;\n\n    /**\n     * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n     *\n     * @property valid\n     * @type Boolean\n     */\n    this.valid = false;\n\n    /**\n     * This will let a renderer know that a texture has been updated (used mainly for webGL uv updates)\n     *\n     * @property requiresUpdate\n     * @type Boolean\n     */\n    this.requiresUpdate = false;\n\n    /**\n     * The WebGL UV data cache.\n     *\n     * @property _uvs\n     * @type Object\n     * @private\n     */\n    this._uvs = null;\n\n    /**\n     * The width of the Texture in pixels.\n     *\n     * @property width\n     * @type Number\n     */\n    this.width = 0;\n\n    /**\n     * The height of the Texture in pixels.\n     *\n     * @property height\n     * @type Number\n     */\n    this.height = 0;\n\n    /**\n     * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n     * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n     *\n     * @property crop\n     * @type Rectangle\n     */\n    this.crop = crop || new PIXI.Rectangle(0, 0, 1, 1);\n\n    if (baseTexture.hasLoaded)\n    {\n        if (this.noFrame) frame = new PIXI.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n        this.setFrame(frame);\n    }\n    else\n    {\n        baseTexture.addEventListener('loaded', this.onBaseTextureLoaded.bind(this));\n    }\n};\n\nPIXI.Texture.prototype.constructor = PIXI.Texture;\nPIXI.EventTarget.mixin(PIXI.Texture.prototype);\n\n/**\n * Called when the base texture is loaded\n *\n * @method onBaseTextureLoaded\n * @private\n */\nPIXI.Texture.prototype.onBaseTextureLoaded = function()\n{\n    var baseTexture = this.baseTexture;\n    baseTexture.removeEventListener('loaded', this.onLoaded);\n\n    if (this.noFrame) this.frame = new PIXI.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n\n    this.setFrame(this.frame);\n\n    this.dispatchEvent( { type: 'update', content: this } );\n};\n\n/**\n * Destroys this texture\n *\n * @method destroy\n * @param destroyBase {Boolean} Whether to destroy the base texture as well\n */\nPIXI.Texture.prototype.destroy = function(destroyBase)\n{\n    if (destroyBase) this.baseTexture.destroy();\n\n    this.valid = false;\n};\n\n/**\n * Specifies the region of the baseTexture that this texture will use.\n *\n * @method setFrame\n * @param frame {Rectangle} The frame of the texture to set it to\n */\nPIXI.Texture.prototype.setFrame = function(frame)\n{\n    this.noFrame = false;\n\n    this.frame = frame;\n    this.width = frame.width;\n    this.height = frame.height;\n\n    this.crop.x = frame.x;\n    this.crop.y = frame.y;\n    this.crop.width = frame.width;\n    this.crop.height = frame.height;\n\n    if (!this.trim && (frame.x + frame.width > this.baseTexture.width || frame.y + frame.height > this.baseTexture.height))\n    {\n        throw new Error('Texture Error: frame does not fit inside the base Texture dimensions ' + this);\n    }\n\n    this.valid = frame && frame.width && frame.height && this.baseTexture.source && this.baseTexture.hasLoaded;\n\n    if (this.trim)\n    {\n        this.width = this.trim.width;\n        this.height = this.trim.height;\n        this.frame.width = this.trim.width;\n        this.frame.height = this.trim.height;\n    }\n    \n    if (this.valid) this._updateUvs();\n\n};\n\n/**\n * Updates the internal WebGL UV cache.\n *\n * @method _updateUvs\n * @private\n */\nPIXI.Texture.prototype._updateUvs = function()\n{\n    if(!this._uvs)this._uvs = new PIXI.TextureUvs();\n\n    var frame = this.crop;\n    var tw = this.baseTexture.width;\n    var th = this.baseTexture.height;\n    \n    this._uvs.x0 = frame.x / tw;\n    this._uvs.y0 = frame.y / th;\n\n    this._uvs.x1 = (frame.x + frame.width) / tw;\n    this._uvs.y1 = frame.y / th;\n\n    this._uvs.x2 = (frame.x + frame.width) / tw;\n    this._uvs.y2 = (frame.y + frame.height) / th;\n\n    this._uvs.x3 = frame.x / tw;\n    this._uvs.y3 = (frame.y + frame.height) / th;\n};\n\n/**\n * Helper function that creates a Texture object from the given image url.\n * If the image is not in the texture cache it will be  created and loaded.\n *\n * @static\n * @method fromImage\n * @param imageUrl {String} The image url of the texture\n * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n * @return Texture\n */\nPIXI.Texture.fromImage = function(imageUrl, crossorigin, scaleMode)\n{\n    var texture = PIXI.TextureCache[imageUrl];\n\n    if(!texture)\n    {\n        texture = new PIXI.Texture(PIXI.BaseTexture.fromImage(imageUrl, crossorigin, scaleMode));\n        PIXI.TextureCache[imageUrl] = texture;\n    }\n\n    return texture;\n};\n\n/**\n * Helper function that returns a Texture objected based on the given frame id.\n * If the frame id is not in the texture cache an error will be thrown.\n *\n * @static\n * @method fromFrame\n * @param frameId {String} The frame id of the texture\n * @return Texture\n */\nPIXI.Texture.fromFrame = function(frameId)\n{\n    var texture = PIXI.TextureCache[frameId];\n    if(!texture) throw new Error('The frameId \"' + frameId + '\" does not exist in the texture cache ');\n    return texture;\n};\n\n/**\n * Helper function that creates a new a Texture based on the given canvas element.\n *\n * @static\n * @method fromCanvas\n * @param canvas {Canvas} The canvas element source of the texture\n * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n * @return Texture\n */\nPIXI.Texture.fromCanvas = function(canvas, scaleMode)\n{\n    var baseTexture = PIXI.BaseTexture.fromCanvas(canvas, scaleMode);\n\n    return new PIXI.Texture( baseTexture );\n\n};\n\n/**\n * Adds a texture to the global PIXI.TextureCache. This cache is shared across the whole PIXI object.\n *\n * @static\n * @method addTextureToCache\n * @param texture {Texture} The Texture to add to the cache.\n * @param id {String} The id that the texture will be stored against.\n */\nPIXI.Texture.addTextureToCache = function(texture, id)\n{\n    PIXI.TextureCache[id] = texture;\n};\n\n/**\n * Remove a texture from the global PIXI.TextureCache.\n *\n * @static\n * @method removeTextureFromCache\n * @param id {String} The id of the texture to be removed\n * @return {Texture} The texture that was removed\n */\nPIXI.Texture.removeTextureFromCache = function(id)\n{\n    var texture = PIXI.TextureCache[id];\n    delete PIXI.TextureCache[id];\n    delete PIXI.BaseTextureCache[id];\n    return texture;\n};\n\nPIXI.TextureUvs = function()\n{\n    this.x0 = 0;\n    this.y0 = 0;\n\n    this.x1 = 0;\n    this.y1 = 0;\n\n    this.x2 = 0;\n    this.y2 = 0;\n\n    this.x3 = 0;\n    this.y3 = 0;\n};\n\nPIXI.Texture.emptyTexture = new PIXI.Texture(new PIXI.BaseTexture());\n\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * A RenderTexture is a special texture that allows any Pixi display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a RenderTexture should be preloaded otherwise black rectangles will be drawn instead.\n *\n * A RenderTexture takes a snapshot of any Display Object given to its render method. The position and rotation of the given Display Objects is ignored. For example:\n *\n *    var renderTexture = new PIXI.RenderTexture(800, 600);\n *    var sprite = PIXI.Sprite.fromImage(\"spinObj_01.png\");\n *    sprite.position.x = 800/2;\n *    sprite.position.y = 600/2;\n *    sprite.anchor.x = 0.5;\n *    sprite.anchor.y = 0.5;\n *    renderTexture.render(sprite);\n *\n * The Sprite in this case will be rendered to a position of 0,0. To render this sprite at its actual position a DisplayObjectContainer should be used:\n *\n *    var doc = new PIXI.DisplayObjectContainer();\n *    doc.addChild(sprite);\n *    renderTexture.render(doc);  // Renders to center of renderTexture\n *\n * @class RenderTexture\n * @extends Texture\n * @constructor\n * @param width {Number} The width of the render texture\n * @param height {Number} The height of the render texture\n * @param renderer {CanvasRenderer|WebGLRenderer} The renderer used for this RenderTexture\n * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n * @param resolution {Number} The resolution of the texture being generated\n */\nPIXI.RenderTexture = function(width, height, renderer, scaleMode, resolution)\n{\n    /**\n     * The with of the render texture\n     *\n     * @property width\n     * @type Number\n     */\n    this.width = width || 100;\n\n    /**\n     * The height of the render texture\n     *\n     * @property height\n     * @type Number\n     */\n    this.height = height || 100;\n\n    /**\n     * The Resolution of the texture.\n     *\n     * @property resolution\n     * @type Number\n     */\n    this.resolution = resolution || 1;\n\n    /**\n     * The framing rectangle of the render texture\n     *\n     * @property frame\n     * @type Rectangle\n     */\n    this.frame = new PIXI.Rectangle(0, 0, this.width * this.resolution, this.height * this.resolution);\n\n    /**\n     * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n     * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n     *\n     * @property crop\n     * @type Rectangle\n     */\n    this.crop = new PIXI.Rectangle(0, 0, this.width * this.resolution, this.height * this.resolution);\n\n    /**\n     * The base texture object that this texture uses\n     *\n     * @property baseTexture\n     * @type BaseTexture\n     */\n    this.baseTexture = new PIXI.BaseTexture();\n    this.baseTexture.width = this.width * this.resolution;\n    this.baseTexture.height = this.height * this.resolution;\n    this.baseTexture._glTextures = [];\n    this.baseTexture.resolution = this.resolution;\n\n    this.baseTexture.scaleMode = scaleMode || PIXI.scaleModes.DEFAULT;\n\n    this.baseTexture.hasLoaded = true;\n\n    PIXI.Texture.call(this,\n        this.baseTexture,\n        new PIXI.Rectangle(0, 0, this.width * this.resolution, this.height * this.resolution)\n    );\n\n    /**\n     * The renderer this RenderTexture uses. A RenderTexture can only belong to one renderer at the moment if its webGL.\n     *\n     * @property renderer\n     * @type CanvasRenderer|WebGLRenderer\n     */\n    this.renderer = renderer || PIXI.defaultRenderer;\n\n    if(this.renderer.type === PIXI.WEBGL_RENDERER)\n    {\n        var gl = this.renderer.gl;\n        this.baseTexture._dirty[gl.id] = false;\n\n        this.textureBuffer = new PIXI.FilterTexture(gl, this.width, this.height, this.baseTexture.scaleMode);\n        this.baseTexture._glTextures[gl.id] =  this.textureBuffer.texture;\n\n        this.render = this.renderWebGL;\n        this.projection = new PIXI.Point(this.width*0.5, -this.height*0.5);\n    }\n    else\n    {\n        this.render = this.renderCanvas;\n        this.textureBuffer = new PIXI.CanvasBuffer(this.width* this.resolution, this.height* this.resolution);\n        this.baseTexture.source = this.textureBuffer.canvas;\n    }\n\n    /**\n     * @property valid\n     * @type Boolean\n     */\n    this.valid = true;\n\n    this._updateUvs();\n};\n\nPIXI.RenderTexture.prototype = Object.create(PIXI.Texture.prototype);\nPIXI.RenderTexture.prototype.constructor = PIXI.RenderTexture;\n\n/**\n * Resizes the RenderTexture.\n *\n * @method resize\n * @param width {Number} The width to resize to.\n * @param height {Number} The height to resize to.\n * @param updateBase {Boolean} Should the baseTexture.width and height values be resized as well?\n */\nPIXI.RenderTexture.prototype.resize = function(width, height, updateBase)\n{\n    if (width === this.width && height === this.height)return;\n\n    this.valid = (width > 0 && height > 0);\n\n    this.width = width;\n    this.height = height;\n\n    this.frame.width = this.crop.width = width * this.resolution;\n    this.frame.height = this.crop.height = height * this.resolution;\n\n    if (updateBase)\n    {\n        this.baseTexture.width = this.width * this.resolution;\n        this.baseTexture.height = this.height * this.resolution;\n    }\n\n    if (this.renderer.type === PIXI.WEBGL_RENDERER)\n    {\n        this.projection.x = this.width / 2;\n        this.projection.y = -this.height / 2;\n    }\n\n    if(!this.valid)return;\n\n    this.textureBuffer.resize(this.width, this.height);\n};\n\n/**\n * Clears the RenderTexture.\n *\n * @method clear\n */\nPIXI.RenderTexture.prototype.clear = function()\n{\n    if(!this.valid)return;\n\n    if (this.renderer.type === PIXI.WEBGL_RENDERER)\n    {\n        this.renderer.gl.bindFramebuffer(this.renderer.gl.FRAMEBUFFER, this.textureBuffer.frameBuffer);\n    }\n\n    this.textureBuffer.clear();\n};\n\n/**\n * This function will draw the display object to the texture.\n *\n * @method renderWebGL\n * @param displayObject {DisplayObject} The display object to render this texture on\n * @param [matrix] {Matrix} Optional matrix to apply to the display object before rendering.\n * @param [clear] {Boolean} If true the texture will be cleared before the displayObject is drawn\n * @private\n */\nPIXI.RenderTexture.prototype.renderWebGL = function(displayObject, matrix, clear)\n{\n    if(!this.valid)return;\n    //TOOD replace position with matrix..\n   \n    //Lets create a nice matrix to apply to our display object. Frame buffers come in upside down so we need to flip the matrix \n    var wt = displayObject.worldTransform;\n    wt.identity();\n    wt.translate(0, this.projection.y * 2);\n    if(matrix)wt.append(matrix);\n    wt.scale(1,-1);\n\n    // setWorld Alpha to ensure that the object is renderer at full opacity\n    displayObject.worldAlpha = 1;\n\n    // Time to update all the children of the displayObject with the new matrix..    \n    var children = displayObject.children;\n\n    for(var i=0,j=children.length; i<j; i++)\n    {\n        children[i].updateTransform();\n    }\n    \n    // time for the webGL fun stuff!\n    var gl = this.renderer.gl;\n\n    gl.viewport(0, 0, this.width * this.resolution, this.height * this.resolution);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.textureBuffer.frameBuffer );\n\n    if(clear)this.textureBuffer.clear();\n\n    this.renderer.spriteBatch.dirty = true;\n\n    this.renderer.renderDisplayObject(displayObject, this.projection, this.textureBuffer.frameBuffer);\n\n    this.renderer.spriteBatch.dirty = true;\n};\n\n\n/**\n * This function will draw the display object to the texture.\n *\n * @method renderCanvas\n * @param displayObject {DisplayObject} The display object to render this texture on\n * @param [matrix] {Matrix} Optional matrix to apply to the display object before rendering.\n * @param [clear] {Boolean} If true the texture will be cleared before the displayObject is drawn\n * @private\n */\nPIXI.RenderTexture.prototype.renderCanvas = function(displayObject, matrix, clear)\n{\n    if(!this.valid)return;\n\n    var wt = displayObject.worldTransform;\n    wt.identity();\n    if(matrix)wt.append(matrix);\n    \n    // setWorld Alpha to ensure that the object is renderer at full opacity\n    displayObject.worldAlpha = 1;\n\n    // Time to update all the children of the displayObject with the new matrix..    \n    var children = displayObject.children;\n\n    for(var i = 0, j = children.length; i < j; i++)\n    {\n        children[i].updateTransform();\n    }\n\n    if(clear)this.textureBuffer.clear();\n\n    var context = this.textureBuffer.context;\n\n    var realResolution = this.renderer.resolution;\n\n    this.renderer.resolution = this.resolution;\n\n    this.renderer.renderDisplayObject(displayObject, context);\n\n    this.renderer.resolution = realResolution;\n};\n\n/**\n * Will return a HTML Image of the texture\n *\n * @method getImage\n * @return {Image}\n */\nPIXI.RenderTexture.prototype.getImage = function()\n{\n    var image = new Image();\n    image.src = this.getBase64();\n    return image;\n};\n\n/**\n * Will return a a base64 encoded string of this texture. It works by calling RenderTexture.getCanvas and then running toDataURL on that.\n *\n * @method getBase64\n * @return {String} A base64 encoded string of the texture.\n */\nPIXI.RenderTexture.prototype.getBase64 = function()\n{\n    return this.getCanvas().toDataURL();\n};\n\n/**\n * Creates a Canvas element, renders this RenderTexture to it and then returns it.\n *\n * @method getCanvas\n * @return {HTMLCanvasElement} A Canvas element with the texture rendered on.\n */\nPIXI.RenderTexture.prototype.getCanvas = function()\n{\n    if (this.renderer.type === PIXI.WEBGL_RENDERER)\n    {\n        var gl =  this.renderer.gl;\n        var width = this.textureBuffer.width;\n        var height = this.textureBuffer.height;\n\n        var webGLPixels = new Uint8Array(4 * width * height);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.textureBuffer.frameBuffer);\n        gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, webGLPixels);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        var tempCanvas = new PIXI.CanvasBuffer(width, height);\n        var canvasData = tempCanvas.context.getImageData(0, 0, width, height);\n        canvasData.data.set(webGLPixels);\n\n        tempCanvas.context.putImageData(canvasData, 0, 0);\n\n        return tempCanvas.canvas;\n    }\n    else\n    {\n        return this.textureBuffer.canvas;\n    }\n};\n\nPIXI.RenderTexture.tempMatrix = new PIXI.Matrix();\n\r\n/**\n * A texture of a [playing] Video.\n *\n * See the [\"deus\" demo](http://www.goodboydigital.com/pixijs/examples/deus/).\n *\n * @class VideoTexture\n * @extends BaseTexture\n * @constructor\n * @param source {HTMLVideoElement}\n * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n */\nPIXI.VideoTexture = function( source, scaleMode )\n{\n    if( !source ){\n        throw new Error( 'No video source element specified.' );\n    }\n\n    // hook in here to check if video is already available.\n    // PIXI.BaseTexture looks for a source.complete boolean, plus width & height.\n\n    if( (source.readyState === source.HAVE_ENOUGH_DATA || source.readyState === source.HAVE_FUTURE_DATA ) && source.width && source.height )\n    {\n        source.complete = true;\n    }\n\n    PIXI.BaseTexture.call( this, source, scaleMode );\n\n    this.autoUpdate = false;\n    this.updateBound = this._onUpdate.bind(this);\n\n    if( !source.complete )\n    {\n        this._onCanPlay = this.onCanPlay.bind(this);\n\n        source.addEventListener( 'canplay', this._onCanPlay );\n        source.addEventListener( 'canplaythrough', this._onCanPlay );\n\n        // started playing..\n        source.addEventListener( 'play', this.onPlayStart.bind(this) );\n        source.addEventListener( 'pause', this.onPlayStop.bind(this) );\n    }\n\n};\n\nPIXI.VideoTexture.prototype   = Object.create( PIXI.BaseTexture.prototype );\n\nPIXI.VideoTexture.constructor = PIXI.VideoTexture;\n\nPIXI.VideoTexture.prototype._onUpdate = function()\n{\n    if(this.autoUpdate)\n    {\n        window.requestAnimationFrame(this.updateBound);\n        this.dirty();\n    }\n};\n\nPIXI.VideoTexture.prototype.onPlayStart = function()\n{\n    if(!this.autoUpdate)\n    {\n        window.requestAnimationFrame(this.updateBound);\n        this.autoUpdate = true;\n    }\n};\n\nPIXI.VideoTexture.prototype.onPlayStop = function()\n{\n    this.autoUpdate = false;\n};\n\nPIXI.VideoTexture.prototype.onCanPlay = function()\n{\n    if( event.type === 'canplaythrough' )\n    {\n        this.hasLoaded  = true;\n\n\n        if( this.source )\n        {\n            this.source.removeEventListener( 'canplay', this._onCanPlay );\n            this.source.removeEventListener( 'canplaythrough', this._onCanPlay );\n\n            this.width      = this.source.videoWidth;\n            this.height     = this.source.videoHeight;\n\n            // prevent multiple loaded dispatches..\n            if( !this.__loaded ){\n                this.__loaded = true;\n                this.dispatchEvent( { type: 'loaded', content: this } );\n            }\n        }\n    }\n};\n\nPIXI.VideoTexture.prototype.destroy = function()\n{\n    if( this.source && this.source._pixiId )\n    {\n        PIXI.BaseTextureCache[ this.source._pixiId ] = null;\n        delete PIXI.BaseTextureCache[ this.source._pixiId ];\n\n        this.source._pixiId = null;\n        delete this.source._pixiId;\n    }\n\n    PIXI.BaseTexture.prototype.destroy.call( this );\n};\n\n/**\n * Mimic Pixi BaseTexture.from.... method.\n *\n * @static\n * @method baseTextureFromVideo\n * @param video {HTMLVideoElement}\n * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n * @return {VideoTexture}\n */\nPIXI.VideoTexture.baseTextureFromVideo = function( video, scaleMode )\n{\n    if( !video._pixiId )\n    {\n        video._pixiId = 'video_' + PIXI.TextureCacheIdGenerator++;\n    }\n\n    var baseTexture = PIXI.BaseTextureCache[ video._pixiId ];\n\n    if( !baseTexture )\n    {\n        baseTexture = new PIXI.VideoTexture( video, scaleMode );\n        PIXI.BaseTextureCache[ video._pixiId ] = baseTexture;\n    }\n\n    return baseTexture;\n};\n\n/**\n * Mimic Pixi BaseTexture.from.... method.\n *\n * @static\n * @method textureFromVideo \n * @param video {HTMLVideoElement}\n * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n * @return {Texture} A Texture, but not a VideoTexture.\n */\nPIXI.VideoTexture.textureFromVideo = function( video, scaleMode )\n{\n    var baseTexture = PIXI.VideoTexture.baseTextureFromVideo( video, scaleMode );\n    return new PIXI.Texture( baseTexture );\n};\n\n/**\n * Mimic Pixi BaseTexture.from.... method.\n *\n * @static\n * @method fromUrl \n * @param videoSrc {String} The URL for the video.\n * @param scaleMode {Number} See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values\n * @return {VideoTexture}\n */\nPIXI.VideoTexture.fromUrl = function( videoSrc, scaleMode )\n{\n    var video = document.createElement('video');\n    video.src = videoSrc;\n    video.autoPlay = true;\n    video.play();\n    return PIXI.VideoTexture.textureFromVideo( video, scaleMode);\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * A Class that loads a bunch of images / sprite sheet / bitmap font files. Once the\n * assets have been loaded they are added to the PIXI Texture cache and can be accessed\n * easily through PIXI.Texture.fromImage() and PIXI.Sprite.fromImage()\n * When all items have been loaded this class will dispatch a 'onLoaded' event\n * As each individual item is loaded this class will dispatch a 'onProgress' event\n *\n * @class AssetLoader\n * @constructor\n * @uses EventTarget\n * @param assetURLs {Array(String)} An array of image/sprite sheet urls that you would like loaded\n *      supported. Supported image formats include 'jpeg', 'jpg', 'png', 'gif'. Supported\n *      sprite sheet data formats only include 'JSON' at this time. Supported bitmap font\n *      data formats include 'xml' and 'fnt'.\n * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n */\nPIXI.AssetLoader = function(assetURLs, crossorigin)\n{\n    /**\n     * The array of asset URLs that are going to be loaded\n     *\n     * @property assetURLs\n     * @type Array(String)\n     */\n    this.assetURLs = assetURLs;\n\n    /**\n     * Whether the requests should be treated as cross origin\n     *\n     * @property crossorigin\n     * @type Boolean\n     */\n    this.crossorigin = crossorigin;\n\n    /**\n     * Maps file extension to loader types\n     *\n     * @property loadersByType\n     * @type Object\n     */\n    this.loadersByType = {\n        'jpg':  PIXI.ImageLoader,\n        'jpeg': PIXI.ImageLoader,\n        'png':  PIXI.ImageLoader,\n        'gif':  PIXI.ImageLoader,\n        'webp': PIXI.ImageLoader,\n        'json': PIXI.JsonLoader,\n        'atlas': PIXI.AtlasLoader,\n        'anim': PIXI.SpineLoader,\n        'xml':  PIXI.BitmapFontLoader,\n        'fnt':  PIXI.BitmapFontLoader\n    };\n};\n\nPIXI.EventTarget.mixin(PIXI.AssetLoader.prototype);\n\n/**\n * Fired when an item has loaded\n * @event onProgress\n */\n\n/**\n * Fired when all the assets have loaded\n * @event onComplete\n */\n\n// constructor\nPIXI.AssetLoader.prototype.constructor = PIXI.AssetLoader;\n\n/**\n * Given a filename, returns its extension.\n *\n * @method _getDataType\n * @param str {String} the name of the asset\n */\nPIXI.AssetLoader.prototype._getDataType = function(str)\n{\n    var test = 'data:';\n    //starts with 'data:'\n    var start = str.slice(0, test.length).toLowerCase();\n    if (start === test) {\n        var data = str.slice(test.length);\n\n        var sepIdx = data.indexOf(',');\n        if (sepIdx === -1) //malformed data URI scheme\n            return null;\n\n        //e.g. 'image/gif;base64' => 'image/gif'\n        var info = data.slice(0, sepIdx).split(';')[0];\n\n        //We might need to handle some special cases here...\n        //standardize text/plain to 'txt' file extension\n        if (!info || info.toLowerCase() === 'text/plain')\n            return 'txt';\n\n        //User specified mime type, try splitting it by '/'\n        return info.split('/').pop().toLowerCase();\n    }\n\n    return null;\n};\n\n/**\n * Starts loading the assets sequentially\n *\n * @method load\n */\nPIXI.AssetLoader.prototype.load = function()\n{\n    var scope = this;\n\n    function onLoad(evt) {\n        scope.onAssetLoaded(evt.data.content);\n    }\n\n    this.loadCount = this.assetURLs.length;\n\n    for (var i=0; i < this.assetURLs.length; i++)\n    {\n        var fileName = this.assetURLs[i];\n        //first see if we have a data URI scheme..\n        var fileType = this._getDataType(fileName);\n\n        //if not, assume it's a file URI\n        if (!fileType)\n            fileType = fileName.split('?').shift().split('.').pop().toLowerCase();\n\n        var Constructor = this.loadersByType[fileType];\n        if(!Constructor)\n            throw new Error(fileType + ' is an unsupported file type');\n\n        var loader = new Constructor(fileName, this.crossorigin);\n\n        loader.on('loaded', onLoad);\n        loader.load();\n    }\n};\n\n/**\n * Invoked after each file is loaded\n *\n * @method onAssetLoaded\n * @private\n */\nPIXI.AssetLoader.prototype.onAssetLoaded = function(loader)\n{\n    this.loadCount--;\n\n    this.emit('onProgress', {\n        content: this,\n        loader: loader,\n        loaded: this.assetURLs.length - this.loadCount,\n        total: this.assetURLs.length\n    });\n\n    if (this.onProgress) this.onProgress(loader);\n\n    if (!this.loadCount)\n    {\n        this.emit('onComplete', { content: this });\n        if(this.onComplete) this.onComplete();\n    }\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The json file loader is used to load in JSON data and parse it\n * When loaded this class will dispatch a 'loaded' event\n * If loading fails this class will dispatch an 'error' event\n *\n * @class JsonLoader\n * @uses EventTarget\n * @constructor\n * @param url {String} The url of the JSON file\n * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n */\nPIXI.JsonLoader = function (url, crossorigin) {\n    /**\n     * The url of the bitmap font data\n     *\n     * @property url\n     * @type String\n     */\n    this.url = url;\n\n    /**\n     * Whether the requests should be treated as cross origin\n     *\n     * @property crossorigin\n     * @type Boolean\n     */\n    this.crossorigin = crossorigin;\n\n    /**\n     * [read-only] The base url of the bitmap font data\n     *\n     * @property baseUrl\n     * @type String\n     * @readOnly\n     */\n    this.baseUrl = url.replace(/[^\\/]*$/, '');\n\n    /**\n     * [read-only] Whether the data has loaded yet\n     *\n     * @property loaded\n     * @type Boolean\n     * @readOnly\n     */\n    this.loaded = false;\n\n};\n\n// constructor\nPIXI.JsonLoader.prototype.constructor = PIXI.JsonLoader;\nPIXI.EventTarget.mixin(PIXI.JsonLoader.prototype);\n\n/**\n * Loads the JSON data\n *\n * @method load\n */\nPIXI.JsonLoader.prototype.load = function () {\n\n    if(window.XDomainRequest && this.crossorigin)\n    {\n        this.ajaxRequest = new window.XDomainRequest();\n\n        // XDomainRequest has a few quirks. Occasionally it will abort requests\n        // A way to avoid this is to make sure ALL callbacks are set even if not used\n        // More info here: http://stackoverflow.com/questions/15786966/xdomainrequest-aborts-post-on-ie-9\n        this.ajaxRequest.timeout = 3000;\n\n        this.ajaxRequest.onerror = this.onError.bind(this);\n\n        this.ajaxRequest.ontimeout = this.onError.bind(this);\n\n        this.ajaxRequest.onprogress = function() {};\n\n        this.ajaxRequest.onload = this.onJSONLoaded.bind(this);\n    }\n    else\n    {\n        if (window.XMLHttpRequest)\n        {\n            this.ajaxRequest = new window.XMLHttpRequest();\n        }\n        else\n        {\n            this.ajaxRequest = new window.ActiveXObject('Microsoft.XMLHTTP');\n        }\n\n        this.ajaxRequest.onreadystatechange = this.onReadyStateChanged.bind(this);\n    }\n\n    this.ajaxRequest.open('GET',this.url,true);\n\n    this.ajaxRequest.send();\n};\n\n/**\n * Bridge function to be able to use the more reliable onreadystatechange in XMLHttpRequest.\n *\n * @method onReadyStateChanged\n * @private\n */\nPIXI.JsonLoader.prototype.onReadyStateChanged = function () {\n    if (this.ajaxRequest.readyState === 4 && (this.ajaxRequest.status === 200 || window.location.href.indexOf('http') === -1)) {\n        this.onJSONLoaded();\n    }\n};\n\n/**\n * Invoke when JSON file is loaded\n *\n * @method onJSONLoaded\n * @private\n */\nPIXI.JsonLoader.prototype.onJSONLoaded = function () {\n\n    if(!this.ajaxRequest.responseText )\n    {\n        this.onError();\n        return;\n    }\n\n    this.json = JSON.parse(this.ajaxRequest.responseText);\n\n    if(this.json.frames && this.json.meta && this.json.meta.image)\n    {\n        // sprite sheet\n        var textureUrl = this.baseUrl + this.json.meta.image;\n        var image = new PIXI.ImageLoader(textureUrl, this.crossorigin);\n        var frameData = this.json.frames;\n\n        this.texture = image.texture.baseTexture;\n        image.addEventListener('loaded', this.onLoaded.bind(this));\n\n        for (var i in frameData)\n        {\n            var rect = frameData[i].frame;\n\n            if (rect)\n            {\n                var textureSize = new PIXI.Rectangle(rect.x, rect.y, rect.w, rect.h);\n                var crop = textureSize.clone();\n                var trim = null;\n\n                //  Check to see if the sprite is trimmed\n                if (frameData[i].trimmed)\n                {\n                    var actualSize = frameData[i].sourceSize;\n                    var realSize = frameData[i].spriteSourceSize;\n                    trim = new PIXI.Rectangle(realSize.x, realSize.y, actualSize.w, actualSize.h);\n                }\n                PIXI.TextureCache[i] = new PIXI.Texture(this.texture, textureSize, crop, trim);\n            }\n        }\n\n        image.load();\n\n    }\n    else if(this.json.bones)\n    {\n\t\t/* check if the json was loaded before */\n\t\tif (PIXI.AnimCache[this.url])\n\t\t{\n\t\t\tthis.onLoaded();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* use a bit of hackery to load the atlas file, here we assume that the .json, .atlas and .png files\n\t\t\t * that correspond to the spine file are in the same base URL and that the .json and .atlas files\n\t\t\t * have the same name\n\t\t\t*/\n\t\t\tvar atlasPath = this.url.substr(0, this.url.lastIndexOf('.')) + '.atlas';\n\t\t\tvar atlasLoader = new PIXI.JsonLoader(atlasPath, this.crossorigin);\n\t\t\t// save a copy of the current object for future reference //\n\t\t\tvar originalLoader = this;\n\t\t\t// before loading the file, replace the \"onJSONLoaded\" function for our own //\n\t\t\tatlasLoader.onJSONLoaded = function()\n\t\t\t{\n\t\t\t\t// at this point \"this\" points at the atlasLoader (JsonLoader) instance //\n\t\t\t\tif(!this.ajaxRequest.responseText)\n\t\t\t\t{\n\t\t\t\t\tthis.onError(); // FIXME: hmm, this is funny because we are not responding to errors yet\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// create a new instance of a spine texture loader for this spine object //\n\t\t\t\tvar textureLoader = new PIXI.SpineTextureLoader(this.url.substring(0, this.url.lastIndexOf('/')));\n\t\t\t\t// create a spine atlas using the loaded text and a spine texture loader instance //\n\t\t\t\tvar spineAtlas = new spine.Atlas(this.ajaxRequest.responseText, textureLoader);\n\t\t\t\t// now we use an atlas attachment loader //\n\t\t\t\tvar attachmentLoader = new spine.AtlasAttachmentLoader(spineAtlas);\n\t\t\t\t// spine animation\n\t\t\t\tvar spineJsonParser = new spine.SkeletonJson(attachmentLoader);\n\t\t\t\tvar skeletonData = spineJsonParser.readSkeletonData(originalLoader.json);\n\t\t\t\tPIXI.AnimCache[originalLoader.url] = skeletonData;\n\t\t\t\toriginalLoader.spine = skeletonData;\n\t\t\t\toriginalLoader.spineAtlas = spineAtlas;\n\t\t\t\toriginalLoader.spineAtlasLoader = atlasLoader;\n\t\t\t\t// wait for textures to finish loading if needed\n\t\t\t\tif (textureLoader.loadingCount > 0)\n\t\t\t\t{\n\t\t\t\t\ttextureLoader.addEventListener('loadedBaseTexture', function(evt){\n\t\t\t\t\t\tif (evt.content.content.loadingCount <= 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toriginalLoader.onLoaded();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\toriginalLoader.onLoaded();\n\t\t\t\t}\n\t\t\t};\n\t\t\t// start the loading //\n\t\t\tatlasLoader.load();\n\t\t}\n    }\n    else\n    {\n        this.onLoaded();\n    }\n};\n\n/**\n * Invoke when json file loaded\n *\n * @method onLoaded\n * @private\n */\nPIXI.JsonLoader.prototype.onLoaded = function () {\n    this.loaded = true;\n    this.dispatchEvent({\n        type: 'loaded',\n        content: this\n    });\n};\n\n/**\n * Invoke when error occured\n *\n * @method onError\n * @private\n */\nPIXI.JsonLoader.prototype.onError = function () {\n\n    this.dispatchEvent({\n        type: 'error',\n        content: this\n    });\n};\n\r\n/**\n * @author Martin Kelm http://mkelm.github.com\n */\n\n/**\n * The atlas file loader is used to load in Texture Atlas data and parse it. When loaded this class will dispatch a 'loaded' event. If loading fails this class will dispatch an 'error' event.\n *\n * To generate the data you can use http://www.codeandweb.com/texturepacker and publish in the 'JSON' format.\n * \n * It is highly recommended to use texture atlases (also know as 'sprite sheets') as it allowed sprites to be batched and drawn together for highly increased rendering speed.\n * Once the data has been loaded the frames are stored in the PIXI texture cache and can be accessed though PIXI.Texture.fromFrameId() and PIXI.Sprite.fromFrameId()\n * \n * @class AtlasLoader\n * @uses EventTarget\n * @constructor\n * @param url {String} The url of the JSON file\n * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n */\nPIXI.AtlasLoader = function (url, crossorigin) {\n    this.url = url;\n    this.baseUrl = url.replace(/[^\\/]*$/, '');\n    this.crossorigin = crossorigin;\n    this.loaded = false;\n\n};\n\n// constructor\nPIXI.AtlasLoader.constructor = PIXI.AtlasLoader;\n\nPIXI.EventTarget.mixin(PIXI.AtlasLoader.prototype);\n\n /**\n * Starts loading the JSON file\n *\n * @method load\n */\nPIXI.AtlasLoader.prototype.load = function () {\n    this.ajaxRequest = new PIXI.AjaxRequest();\n    this.ajaxRequest.onreadystatechange = this.onAtlasLoaded.bind(this);\n\n    this.ajaxRequest.open('GET', this.url, true);\n    if (this.ajaxRequest.overrideMimeType) this.ajaxRequest.overrideMimeType('application/json');\n    this.ajaxRequest.send(null);\n};\n\n/**\n * Invoked when the Atlas has fully loaded. Parses the JSON and builds the texture frames.\n * \n * @method onAtlasLoaded\n * @private\n */\nPIXI.AtlasLoader.prototype.onAtlasLoaded = function () {\n    if (this.ajaxRequest.readyState === 4) {\n        if (this.ajaxRequest.status === 200 || window.location.href.indexOf('http') === -1) {\n            this.atlas = {\n                meta : {\n                    image : []\n                },\n                frames : []\n            };\n            var result = this.ajaxRequest.responseText.split(/\\r?\\n/);\n            var lineCount = -3;\n\n            var currentImageId = 0;\n            var currentFrame = null;\n            var nameInNextLine = false;\n\n            var i = 0,\n                j = 0,\n                selfOnLoaded = this.onLoaded.bind(this);\n\n            // parser without rotation support yet!\n            for (i = 0; i < result.length; i++) {\n                result[i] = result[i].replace(/^\\s+|\\s+$/g, '');\n                if (result[i] === '') {\n                    nameInNextLine = i+1;\n                }\n                if (result[i].length > 0) {\n                    if (nameInNextLine === i) {\n                        this.atlas.meta.image.push(result[i]);\n                        currentImageId = this.atlas.meta.image.length - 1;\n                        this.atlas.frames.push({});\n                        lineCount = -3;\n                    } else if (lineCount > 0) {\n                        if (lineCount % 7 === 1) { // frame name\n                            if (currentFrame != null) { //jshint ignore:line\n                                this.atlas.frames[currentImageId][currentFrame.name] = currentFrame;\n                            }\n                            currentFrame = { name: result[i], frame : {} };\n                        } else {\n                            var text = result[i].split(' ');\n                            if (lineCount % 7 === 3) { // position\n                                currentFrame.frame.x = Number(text[1].replace(',', ''));\n                                currentFrame.frame.y = Number(text[2]);\n                            } else if (lineCount % 7 === 4) { // size\n                                currentFrame.frame.w = Number(text[1].replace(',', ''));\n                                currentFrame.frame.h = Number(text[2]);\n                            } else if (lineCount % 7 === 5) { // real size\n                                var realSize = {\n                                    x : 0,\n                                    y : 0,\n                                    w : Number(text[1].replace(',', '')),\n                                    h : Number(text[2])\n                                };\n\n                                if (realSize.w > currentFrame.frame.w || realSize.h > currentFrame.frame.h) {\n                                    currentFrame.trimmed = true;\n                                    currentFrame.realSize = realSize;\n                                } else {\n                                    currentFrame.trimmed = false;\n                                }\n                            }\n                        }\n                    }\n                    lineCount++;\n                }\n            }\n\n            if (currentFrame != null) { //jshint ignore:line\n                this.atlas.frames[currentImageId][currentFrame.name] = currentFrame;\n            }\n\n            if (this.atlas.meta.image.length > 0) {\n                this.images = [];\n                for (j = 0; j < this.atlas.meta.image.length; j++) {\n                    // sprite sheet\n                    var textureUrl = this.baseUrl + this.atlas.meta.image[j];\n                    var frameData = this.atlas.frames[j];\n                    this.images.push(new PIXI.ImageLoader(textureUrl, this.crossorigin));\n\n                    for (i in frameData) {\n                        var rect = frameData[i].frame;\n                        if (rect) {\n                            PIXI.TextureCache[i] = new PIXI.Texture(this.images[j].texture.baseTexture, {\n                                x: rect.x,\n                                y: rect.y,\n                                width: rect.w,\n                                height: rect.h\n                            });\n                            if (frameData[i].trimmed) {\n                                PIXI.TextureCache[i].realSize = frameData[i].realSize;\n                                // trim in pixi not supported yet, todo update trim properties if it is done ...\n                                PIXI.TextureCache[i].trim.x = 0;\n                                PIXI.TextureCache[i].trim.y = 0;\n                            }\n                        }\n                    }\n                }\n\n                this.currentImageId = 0;\n                for (j = 0; j < this.images.length; j++) {\n                    this.images[j].on('loaded', selfOnLoaded);\n                }\n                this.images[this.currentImageId].load();\n\n            } else {\n                this.onLoaded();\n            }\n\n        } else {\n            this.onError();\n        }\n    }\n};\n\n/**\n * Invoked when json file has loaded.\n * \n * @method onLoaded\n * @private\n */\nPIXI.AtlasLoader.prototype.onLoaded = function () {\n    if (this.images.length - 1 > this.currentImageId) {\n        this.currentImageId++;\n        this.images[this.currentImageId].load();\n    } else {\n        this.loaded = true;\n        this.emit('loaded', { content: this });\n    }\n};\n\n/**\n * Invoked when an error occurs.\n * \n * @method onError\n * @private\n */\nPIXI.AtlasLoader.prototype.onError = function () {\n    this.emit('error', { content: this });\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The sprite sheet loader is used to load in JSON sprite sheet data\n * To generate the data you can use http://www.codeandweb.com/texturepacker and publish in the 'JSON' format\n * There is a free version so thats nice, although the paid version is great value for money.\n * It is highly recommended to use Sprite sheets (also know as a 'texture atlas') as it means sprites can be batched and drawn together for highly increased rendering speed.\n * Once the data has been loaded the frames are stored in the PIXI texture cache and can be accessed though PIXI.Texture.fromFrameId() and PIXI.Sprite.fromFrameId()\n * This loader will load the image file that the Spritesheet points to as well as the data.\n * When loaded this class will dispatch a 'loaded' event\n *\n * @class SpriteSheetLoader\n * @uses EventTarget\n * @constructor\n * @param url {String} The url of the sprite sheet JSON file\n * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n */\nPIXI.SpriteSheetLoader = function (url, crossorigin) {\n\n    /**\n     * The url of the atlas data\n     *\n     * @property url\n     * @type String\n     */\n    this.url = url;\n\n    /**\n     * Whether the requests should be treated as cross origin\n     *\n     * @property crossorigin\n     * @type Boolean\n     */\n    this.crossorigin = crossorigin;\n\n    /**\n     * [read-only] The base url of the bitmap font data\n     *\n     * @property baseUrl\n     * @type String\n     * @readOnly\n     */\n    this.baseUrl = url.replace(/[^\\/]*$/, '');\n\n    /**\n     * The texture being loaded\n     *\n     * @property texture\n     * @type Texture\n     */\n    this.texture = null;\n\n    /**\n     * The frames of the sprite sheet\n     *\n     * @property frames\n     * @type Object\n     */\n    this.frames = {};\n};\n\n// constructor\nPIXI.SpriteSheetLoader.prototype.constructor = PIXI.SpriteSheetLoader;\n\nPIXI.EventTarget.mixin(PIXI.SpriteSheetLoader.prototype);\n\n/**\n * This will begin loading the JSON file\n *\n * @method load\n */\nPIXI.SpriteSheetLoader.prototype.load = function () {\n    var scope = this;\n    var jsonLoader = new PIXI.JsonLoader(this.url, this.crossorigin);\n    jsonLoader.on('loaded', function (event) {\n        scope.json = event.data.content.json;\n        scope.onLoaded();\n    });\n    jsonLoader.load();\n};\n\n/**\n * Invoke when all files are loaded (json and texture)\n *\n * @method onLoaded\n * @private\n */\nPIXI.SpriteSheetLoader.prototype.onLoaded = function () {\n    this.emit('loaded', {\n        content: this\n    });\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The image loader class is responsible for loading images file formats ('jpeg', 'jpg', 'png' and 'gif')\n * Once the image has been loaded it is stored in the PIXI texture cache and can be accessed though PIXI.Texture.fromFrame() and PIXI.Sprite.fromFrame()\n * When loaded this class will dispatch a 'loaded' event\n *\n * @class ImageLoader\n * @uses EventTarget\n * @constructor\n * @param url {String} The url of the image\n * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n */\nPIXI.ImageLoader = function(url, crossorigin)\n{\n    /**\n     * The texture being loaded\n     *\n     * @property texture\n     * @type Texture\n     */\n    this.texture = PIXI.Texture.fromImage(url, crossorigin);\n\n    /**\n     * if the image is loaded with loadFramedSpriteSheet\n     * frames will contain the sprite sheet frames\n     *\n     * @property frames\n     * @type Array\n     * @readOnly\n     */\n    this.frames = [];\n};\n\n// constructor\nPIXI.ImageLoader.prototype.constructor = PIXI.ImageLoader;\n\nPIXI.EventTarget.mixin(PIXI.ImageLoader.prototype);\n\n/**\n * Loads image or takes it from cache\n *\n * @method load\n */\nPIXI.ImageLoader.prototype.load = function()\n{\n    if(!this.texture.baseTexture.hasLoaded)\n    {\n        this.texture.baseTexture.on('loaded', this.onLoaded.bind(this));\n    }\n    else\n    {\n        this.onLoaded();\n    }\n};\n\n/**\n * Invoked when image file is loaded or it is already cached and ready to use\n *\n * @method onLoaded\n * @private\n */\nPIXI.ImageLoader.prototype.onLoaded = function()\n{\n    this.emit('loaded', { content: this });\n};\n\n/**\n * Loads image and split it to uniform sized frames\n *\n * @method loadFramedSpriteSheet\n * @param frameWidth {Number} width of each frame\n * @param frameHeight {Number} height of each frame\n * @param textureName {String} if given, the frames will be cached in <textureName>-<ord> format\n */\nPIXI.ImageLoader.prototype.loadFramedSpriteSheet = function(frameWidth, frameHeight, textureName)\n{\n    this.frames = [];\n    var cols = Math.floor(this.texture.width / frameWidth);\n    var rows = Math.floor(this.texture.height / frameHeight);\n\n    var i=0;\n    for (var y=0; y<rows; y++)\n    {\n        for (var x=0; x<cols; x++,i++)\n        {\n            var texture = new PIXI.Texture(this.texture.baseTexture, {\n                x: x*frameWidth,\n                y: y*frameHeight,\n                width: frameWidth,\n                height: frameHeight\n            });\n\n            this.frames.push(texture);\n            if (textureName) PIXI.TextureCache[textureName + '-' + i] = texture;\n        }\n    }\n\n\tthis.load();\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The xml loader is used to load in XML bitmap font data ('xml' or 'fnt')\n * To generate the data you can use http://www.angelcode.com/products/bmfont/\n * This loader will also load the image file as the data.\n * When loaded this class will dispatch a 'loaded' event\n *\n * @class BitmapFontLoader\n * @uses EventTarget\n * @constructor\n * @param url {String} The url of the sprite sheet JSON file\n * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n */\nPIXI.BitmapFontLoader = function(url, crossorigin)\n{\n    /**\n     * The url of the bitmap font data\n     *\n     * @property url\n     * @type String\n     */\n    this.url = url;\n\n    /**\n     * Whether the requests should be treated as cross origin\n     *\n     * @property crossorigin\n     * @type Boolean\n     */\n    this.crossorigin = crossorigin;\n\n    /**\n     * [read-only] The base url of the bitmap font data\n     *\n     * @property baseUrl\n     * @type String\n     * @readOnly\n     */\n    this.baseUrl = url.replace(/[^\\/]*$/, '');\n\n    /**\n     * [read-only] The texture of the bitmap font\n     *\n     * @property texture\n     * @type Texture\n     */\n    this.texture = null;\n};\n\n// constructor\nPIXI.BitmapFontLoader.prototype.constructor = PIXI.BitmapFontLoader;\nPIXI.EventTarget.mixin(PIXI.BitmapFontLoader.prototype);\n\n/**\n * Loads the XML font data\n *\n * @method load\n */\nPIXI.BitmapFontLoader.prototype.load = function()\n{\n    this.ajaxRequest = new PIXI.AjaxRequest();\n    this.ajaxRequest.onreadystatechange = this.onXMLLoaded.bind(this);\n\n    this.ajaxRequest.open('GET', this.url, true);\n    if (this.ajaxRequest.overrideMimeType) this.ajaxRequest.overrideMimeType('application/xml');\n    this.ajaxRequest.send(null);\n};\n\n/**\n * Invoked when the XML file is loaded, parses the data.\n *\n * @method onXMLLoaded\n * @private\n */\nPIXI.BitmapFontLoader.prototype.onXMLLoaded = function()\n{\n    if (this.ajaxRequest.readyState === 4)\n    {\n        if (this.ajaxRequest.status === 200 || window.location.protocol.indexOf('http') === -1)\n        {\n            var responseXML = this.ajaxRequest.responseXML;\n            if(!responseXML || /MSIE 9/i.test(navigator.userAgent) || navigator.isCocoonJS) {\n                if(typeof(window.DOMParser) === 'function') {\n                    var domparser = new DOMParser();\n                    responseXML = domparser.parseFromString(this.ajaxRequest.responseText, 'text/xml');\n                } else {\n                    var div = document.createElement('div');\n                    div.innerHTML = this.ajaxRequest.responseText;\n                    responseXML = div;\n                }\n            }\n\n            var textureUrl = this.baseUrl + responseXML.getElementsByTagName('page')[0].getAttribute('file');\n            var image = new PIXI.ImageLoader(textureUrl, this.crossorigin);\n            this.texture = image.texture.baseTexture;\n\n            var data = {};\n            var info = responseXML.getElementsByTagName('info')[0];\n            var common = responseXML.getElementsByTagName('common')[0];\n            data.font = info.getAttribute('face');\n            data.size = parseInt(info.getAttribute('size'), 10);\n            data.lineHeight = parseInt(common.getAttribute('lineHeight'), 10);\n            data.chars = {};\n\n            //parse letters\n            var letters = responseXML.getElementsByTagName('char');\n\n            for (var i = 0; i < letters.length; i++)\n            {\n                var charCode = parseInt(letters[i].getAttribute('id'), 10);\n\n                var textureRect = new PIXI.Rectangle(\n                    parseInt(letters[i].getAttribute('x'), 10),\n                    parseInt(letters[i].getAttribute('y'), 10),\n                    parseInt(letters[i].getAttribute('width'), 10),\n                    parseInt(letters[i].getAttribute('height'), 10)\n                );\n\n                data.chars[charCode] = {\n                    xOffset: parseInt(letters[i].getAttribute('xoffset'), 10),\n                    yOffset: parseInt(letters[i].getAttribute('yoffset'), 10),\n                    xAdvance: parseInt(letters[i].getAttribute('xadvance'), 10),\n                    kerning: {},\n                    texture: PIXI.TextureCache[charCode] = new PIXI.Texture(this.texture, textureRect)\n\n                };\n            }\n\n            //parse kernings\n            var kernings = responseXML.getElementsByTagName('kerning');\n            for (i = 0; i < kernings.length; i++)\n            {\n                var first = parseInt(kernings[i].getAttribute('first'), 10);\n                var second = parseInt(kernings[i].getAttribute('second'), 10);\n                var amount = parseInt(kernings[i].getAttribute('amount'), 10);\n\n                data.chars[second].kerning[first] = amount;\n\n            }\n\n            PIXI.BitmapText.fonts[data.font] = data;\n\n            image.addEventListener('loaded', this.onLoaded.bind(this));\n            image.load();\n        }\n    }\n};\n\n/**\n * Invoked when all files are loaded (xml/fnt and texture)\n *\n * @method onLoaded\n * @private\n */\nPIXI.BitmapFontLoader.prototype.onLoaded = function()\n{\n    this.emit('loaded', { content: this });\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n * based on pixi impact spine implementation made by Eemeli Kelokorpi (@ekelokorpi) https://github.com/ekelokorpi\n *\n * Awesome JS run time provided by EsotericSoftware\n * https://github.com/EsotericSoftware/spine-runtimes\n *\n */\n\n/**\n * The Spine loader is used to load in JSON spine data\n * To generate the data you need to use http://esotericsoftware.com/ and export in the \"JSON\" format\n * Due to a clash of names  You will need to change the extension of the spine file from *.json to *.anim for it to load\n * See example 12 (http://www.goodboydigital.com/pixijs/examples/12/) to see a working example and check out the source\n * You will need to generate a sprite sheet to accompany the spine data\n * When loaded this class will dispatch a \"loaded\" event\n *\n * @class SpineLoader\n * @uses EventTarget\n * @constructor\n * @param url {String} The url of the JSON file\n * @param crossorigin {Boolean} Whether requests should be treated as crossorigin\n */\nPIXI.SpineLoader = function(url, crossorigin)\n{\n    /**\n     * The url of the bitmap font data\n     *\n     * @property url\n     * @type String\n     */\n    this.url = url;\n\n    /**\n     * Whether the requests should be treated as cross origin\n     *\n     * @property crossorigin\n     * @type Boolean\n     */\n    this.crossorigin = crossorigin;\n\n    /**\n     * [read-only] Whether the data has loaded yet\n     *\n     * @property loaded\n     * @type Boolean\n     * @readOnly\n     */\n    this.loaded = false;\n};\n\nPIXI.SpineLoader.prototype.constructor = PIXI.SpineLoader;\n\nPIXI.EventTarget.mixin(PIXI.SpineLoader.prototype);\n\n/**\n * Loads the JSON data\n *\n * @method load\n */\nPIXI.SpineLoader.prototype.load = function () {\n\n    var scope = this;\n    var jsonLoader = new PIXI.JsonLoader(this.url, this.crossorigin);\n    jsonLoader.on('loaded', function (event) {\n        scope.json = event.data.content.json;\n        scope.onLoaded();\n    });\n    jsonLoader.load();\n};\n\n/**\n * Invoked when JSON file is loaded.\n *\n * @method onLoaded\n * @private\n */\nPIXI.SpineLoader.prototype.onLoaded = function () {\n    this.loaded = true;\n    this.emit('loaded', { content: this });\n};\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * This is the base class for creating a PIXI filter. Currently only webGL supports filters.\n * If you want to make a custom filter this should be your base class.\n * @class AbstractFilter\n * @constructor\n * @param fragmentSrc {Array} The fragment source in an array of strings.\n * @param uniforms {Object} An object containing the uniforms for this filter.\n */\nPIXI.AbstractFilter = function(fragmentSrc, uniforms)\n{\n    /**\n    * An array of passes - some filters contain a few steps this array simply stores the steps in a liniear fashion.\n    * For example the blur filter has two passes blurX and blurY.\n    * @property passes\n    * @type Array(Filter)\n    * @private\n    */\n    this.passes = [this];\n\n    /**\n    * @property shaders\n    * @type Array(Shader)\n    * @private\n    */\n    this.shaders = [];\n    \n    /**\n    * @property dirty\n    * @type Boolean\n    */\n    this.dirty = true;\n\n    /**\n    * @property padding\n    * @type Number\n    */\n    this.padding = 0;\n\n    /**\n    * @property uniforms\n    * @type object\n    * @private\n    */\n    this.uniforms = uniforms || {};\n\n    /**\n    * @property fragmentSrc\n    * @type Array\n    * @private\n    */\n    this.fragmentSrc = fragmentSrc || [];\n};\n\nPIXI.AbstractFilter.prototype.constructor = PIXI.AbstractFilter;\n\n/**\n * Syncs the uniforms between the class object and the shaders.\n *\n * @method syncUniforms\n */\nPIXI.AbstractFilter.prototype.syncUniforms = function()\n{\n    for(var i=0,j=this.shaders.length; i<j; i++)\n    {\n        this.shaders[i].dirty = true;\n    }\n};\n\n/*\nPIXI.AbstractFilter.prototype.apply = function(frameBuffer)\n{\n    // TODO :)\n};\n*/\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The AlphaMaskFilter class uses the pixel values from the specified texture (called the displacement map) to perform a displacement of an object.\n * You can use this filter to apply all manor of crazy warping effects\n * Currently the r property of the texture is used to offset the x and the g property of the texture is used to offset the y.\n * \n * @class AlphaMaskFilter\n * @extends AbstractFilter\n * @constructor\n * @param texture {Texture} The texture used for the displacement map * must be power of 2 texture at the moment\n */\nPIXI.AlphaMaskFilter = function(texture)\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n    texture.baseTexture._powerOf2 = true;\n\n    // set the uniforms\n    this.uniforms = {\n        mask: {type: 'sampler2D', value:texture},\n        mapDimensions:   {type: '2f', value:{x:1, y:5112}},\n        dimensions:   {type: '4fv', value:[0,0,0,0]}\n    };\n\n    if(texture.baseTexture.hasLoaded)\n    {\n        this.uniforms.mask.value.x = texture.width;\n        this.uniforms.mask.value.y = texture.height;\n    }\n    else\n    {\n        this.boundLoadedFunction = this.onTextureLoaded.bind(this);\n\n        texture.baseTexture.on('loaded', this.boundLoadedFunction);\n    }\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform sampler2D mask;',\n        'uniform sampler2D uSampler;',\n        'uniform vec2 offset;',\n        'uniform vec4 dimensions;',\n        'uniform vec2 mapDimensions;',\n\n        'void main(void) {',\n        '   vec2 mapCords = vTextureCoord.xy;',\n        '   mapCords += (dimensions.zw + offset)/ dimensions.xy ;',\n        '   mapCords.y *= -1.0;',\n        '   mapCords.y += 1.0;',\n        '   mapCords *= dimensions.xy / mapDimensions;',\n\n        '   vec4 original =  texture2D(uSampler, vTextureCoord);',\n        '   float maskAlpha =  texture2D(mask, mapCords).r;',\n        '   original *= maskAlpha;',\n        //'   original.rgb *= maskAlpha;',\n        '   gl_FragColor =  original;',\n        //'   gl_FragColor = gl_FragColor;',\n        '}'\n    ];\n};\n\nPIXI.AlphaMaskFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.AlphaMaskFilter.prototype.constructor = PIXI.AlphaMaskFilter;\n\n/**\n * Sets the map dimensions uniforms when the texture becomes available.\n *\n * @method onTextureLoaded\n */\nPIXI.AlphaMaskFilter.prototype.onTextureLoaded = function()\n{\n    this.uniforms.mapDimensions.value.x = this.uniforms.mask.value.width;\n    this.uniforms.mapDimensions.value.y = this.uniforms.mask.value.height;\n\n    this.uniforms.mask.value.baseTexture.off('loaded', this.boundLoadedFunction);\n};\n\n/**\n * The texture used for the displacement map. Must be power of 2 sized texture.\n *\n * @property map\n * @type Texture\n */\nObject.defineProperty(PIXI.AlphaMaskFilter.prototype, 'map', {\n    get: function() {\n        return this.uniforms.mask.value;\n    },\n    set: function(value) {\n        this.uniforms.mask.value = value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The ColorMatrixFilter class lets you apply a 4x4 matrix transformation on the RGBA\n * color and alpha values of every pixel on your displayObject to produce a result\n * with a new set of RGBA color and alpha values. It's pretty powerful!\n * \n * @class ColorMatrixFilter\n * @extends AbstractFilter\n * @constructor\n */\nPIXI.ColorMatrixFilter = function()\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n\n    // set the uniforms\n    this.uniforms = {\n        matrix: {type: 'mat4', value: [1,0,0,0,\n                                       0,1,0,0,\n                                       0,0,1,0,\n                                       0,0,0,1]}\n    };\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform float invert;',\n        'uniform mat4 matrix;',\n        'uniform sampler2D uSampler;',\n\n        'void main(void) {',\n        '   gl_FragColor = texture2D(uSampler, vTextureCoord) * matrix;',\n      //  '   gl_FragColor = gl_FragColor;',\n        '}'\n    ];\n};\n\nPIXI.ColorMatrixFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.ColorMatrixFilter.prototype.constructor = PIXI.ColorMatrixFilter;\n\n/**\n * Sets the matrix of the color matrix filter\n *\n * @property matrix\n * @type Array(Number)\n * @default [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]\n */\nObject.defineProperty(PIXI.ColorMatrixFilter.prototype, 'matrix', {\n    get: function() {\n        return this.uniforms.matrix.value;\n    },\n    set: function(value) {\n        this.uniforms.matrix.value = value;\n    }\n});\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * This greyscales the palette of your Display Objects.\n * \n * @class GrayFilter\n * @extends AbstractFilter\n * @constructor\n */\nPIXI.GrayFilter = function()\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n\n    // set the uniforms\n    this.uniforms = {\n        gray: {type: '1f', value: 1}\n    };\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform sampler2D uSampler;',\n        'uniform float gray;',\n\n        'void main(void) {',\n        '   gl_FragColor = texture2D(uSampler, vTextureCoord);',\n        '   gl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(0.2126*gl_FragColor.r + 0.7152*gl_FragColor.g + 0.0722*gl_FragColor.b), gray);',\n     //   '   gl_FragColor = gl_FragColor;',\n        '}'\n    ];\n};\n\nPIXI.GrayFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.GrayFilter.prototype.constructor = PIXI.GrayFilter;\n\n/**\n * The strength of the gray. 1 will make the object black and white, 0 will make the object its normal color.\n * @property gray\n * @type Number\n */\nObject.defineProperty(PIXI.GrayFilter.prototype, 'gray', {\n    get: function() {\n        return this.uniforms.gray.value;\n    },\n    set: function(value) {\n        this.uniforms.gray.value = value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The DisplacementFilter class uses the pixel values from the specified texture (called the displacement map) to perform a displacement of an object.\n * You can use this filter to apply all manor of crazy warping effects\n * Currently the r property of the texture is used offset the x and the g property of the texture is used to offset the y.\n * \n * @class DisplacementFilter\n * @extends AbstractFilter\n * @constructor\n * @param texture {Texture} The texture used for the displacement map * must be power of 2 texture at the moment\n */\nPIXI.DisplacementFilter = function(texture)\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n    texture.baseTexture._powerOf2 = true;\n\n    // set the uniforms\n    this.uniforms = {\n        displacementMap: {type: 'sampler2D', value:texture},\n        scale:           {type: '2f', value:{x:30, y:30}},\n        offset:          {type: '2f', value:{x:0, y:0}},\n        mapDimensions:   {type: '2f', value:{x:1, y:5112}},\n        dimensions:   {type: '4fv', value:[0,0,0,0]}\n    };\n\n    if(texture.baseTexture.hasLoaded)\n    {\n        this.uniforms.mapDimensions.value.x = texture.width;\n        this.uniforms.mapDimensions.value.y = texture.height;\n    }\n    else\n    {\n        this.boundLoadedFunction = this.onTextureLoaded.bind(this);\n\n        texture.baseTexture.on('loaded', this.boundLoadedFunction);\n    }\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform sampler2D displacementMap;',\n        'uniform sampler2D uSampler;',\n        'uniform vec2 scale;',\n        'uniform vec2 offset;',\n        'uniform vec4 dimensions;',\n        'uniform vec2 mapDimensions;',// = vec2(256.0, 256.0);',\n        // 'const vec2 textureDimensions = vec2(750.0, 750.0);',\n\n        'void main(void) {',\n        '   vec2 mapCords = vTextureCoord.xy;',\n        //'   mapCords -= ;',\n        '   mapCords += (dimensions.zw + offset)/ dimensions.xy ;',\n        '   mapCords.y *= -1.0;',\n        '   mapCords.y += 1.0;',\n        '   vec2 matSample = texture2D(displacementMap, mapCords).xy;',\n        '   matSample -= 0.5;',\n        '   matSample *= scale;',\n        '   matSample /= mapDimensions;',\n        '   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x + matSample.x, vTextureCoord.y + matSample.y));',\n        '   gl_FragColor.rgb = mix( gl_FragColor.rgb, gl_FragColor.rgb, 1.0);',\n        '   vec2 cord = vTextureCoord;',\n\n        //'   gl_FragColor =  texture2D(displacementMap, cord);',\n     //   '   gl_FragColor = gl_FragColor;',\n        '}'\n    ];\n};\n\nPIXI.DisplacementFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.DisplacementFilter.prototype.constructor = PIXI.DisplacementFilter;\n\n/**\n * Sets the map dimensions uniforms when the texture becomes available.\n *\n * @method onTextureLoaded\n */\nPIXI.DisplacementFilter.prototype.onTextureLoaded = function()\n{\n    this.uniforms.mapDimensions.value.x = this.uniforms.displacementMap.value.width;\n    this.uniforms.mapDimensions.value.y = this.uniforms.displacementMap.value.height;\n\n    this.uniforms.displacementMap.value.baseTexture.off('loaded', this.boundLoadedFunction);\n};\n\n/**\n * The texture used for the displacement map. Must be power of 2 texture.\n *\n * @property map\n * @type Texture\n */\nObject.defineProperty(PIXI.DisplacementFilter.prototype, 'map', {\n    get: function() {\n        return this.uniforms.displacementMap.value;\n    },\n    set: function(value) {\n        this.uniforms.displacementMap.value = value;\n    }\n});\n\n/**\n * The multiplier used to scale the displacement result from the map calculation.\n *\n * @property scale\n * @type Point\n */\nObject.defineProperty(PIXI.DisplacementFilter.prototype, 'scale', {\n    get: function() {\n        return this.uniforms.scale.value;\n    },\n    set: function(value) {\n        this.uniforms.scale.value = value;\n    }\n});\n\n/**\n * The offset used to move the displacement map.\n *\n * @property offset\n * @type Point\n */\nObject.defineProperty(PIXI.DisplacementFilter.prototype, 'offset', {\n    get: function() {\n        return this.uniforms.offset.value;\n    },\n    set: function(value) {\n        this.uniforms.offset.value = value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * This filter applies a pixelate effect making display objects appear 'blocky'.\n * \n * @class PixelateFilter\n * @extends AbstractFilter\n * @constructor\n */\nPIXI.PixelateFilter = function()\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n\n    // set the uniforms\n    this.uniforms = {\n        invert: {type: '1f', value: 0},\n        dimensions: {type: '4fv', value:new PIXI.Float32Array([10000, 100, 10, 10])},\n        pixelSize: {type: '2f', value:{x:10, y:10}}\n    };\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform vec2 testDim;',\n        'uniform vec4 dimensions;',\n        'uniform vec2 pixelSize;',\n        'uniform sampler2D uSampler;',\n\n        'void main(void) {',\n        '   vec2 coord = vTextureCoord;',\n\n        '   vec2 size = dimensions.xy/pixelSize;',\n\n        '   vec2 color = floor( ( vTextureCoord * size ) ) / size + pixelSize/dimensions.xy * 0.5;',\n        '   gl_FragColor = texture2D(uSampler, color);',\n        '}'\n    ];\n};\n\nPIXI.PixelateFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.PixelateFilter.prototype.constructor = PIXI.PixelateFilter;\n\n/**\n * This a point that describes the size of the blocks. x is the width of the block and y is the height.\n * \n * @property size\n * @type Point\n */\nObject.defineProperty(PIXI.PixelateFilter.prototype, 'size', {\n    get: function() {\n        return this.uniforms.pixelSize.value;\n    },\n    set: function(value) {\n        this.dirty = true;\n        this.uniforms.pixelSize.value = value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The BlurXFilter applies a horizontal Gaussian blur to an object.\n *\n * @class BlurXFilter\n * @extends AbstractFilter\n * @constructor\n */\nPIXI.BlurXFilter = function()\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n\n    // set the uniforms\n    this.uniforms = {\n        blur: {type: '1f', value: 1/512}\n    };\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform float blur;',\n        'uniform sampler2D uSampler;',\n\n        'void main(void) {',\n        '   vec4 sum = vec4(0.0);',\n\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x - 4.0*blur, vTextureCoord.y)) * 0.05;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x - 3.0*blur, vTextureCoord.y)) * 0.09;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x - 2.0*blur, vTextureCoord.y)) * 0.12;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x - blur, vTextureCoord.y)) * 0.15;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * 0.16;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x + blur, vTextureCoord.y)) * 0.15;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x + 2.0*blur, vTextureCoord.y)) * 0.12;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x + 3.0*blur, vTextureCoord.y)) * 0.09;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x + 4.0*blur, vTextureCoord.y)) * 0.05;',\n\n        '   gl_FragColor = sum;',\n        '}'\n    ];\n};\n\nPIXI.BlurXFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.BlurXFilter.prototype.constructor = PIXI.BlurXFilter;\n\n/**\n * Sets the strength of both the blur.\n *\n * @property blur\n * @type Number\n * @default 2\n */\nObject.defineProperty(PIXI.BlurXFilter.prototype, 'blur', {\n    get: function() {\n        return this.uniforms.blur.value / (1/7000);\n    },\n    set: function(value) {\n\n        this.dirty = true;\n        this.uniforms.blur.value = (1/7000) * value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The BlurYFilter applies a vertical Gaussian blur to an object.\n *\n * @class BlurYFilter\n * @extends AbstractFilter\n * @constructor\n */\nPIXI.BlurYFilter = function()\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n\n    // set the uniforms\n    this.uniforms = {\n        blur: {type: '1f', value: 1/512}\n    };\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform float blur;',\n        'uniform sampler2D uSampler;',\n\n        'void main(void) {',\n        '   vec4 sum = vec4(0.0);',\n\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 4.0*blur)) * 0.05;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 3.0*blur)) * 0.09;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 2.0*blur)) * 0.12;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - blur)) * 0.15;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * 0.16;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + blur)) * 0.15;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 2.0*blur)) * 0.12;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 3.0*blur)) * 0.09;',\n        '   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 4.0*blur)) * 0.05;',\n\n        '   gl_FragColor = sum;',\n        '}'\n    ];\n};\n\nPIXI.BlurYFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.BlurYFilter.prototype.constructor = PIXI.BlurYFilter;\n\n/**\n * Sets the strength of both the blur.\n *\n * @property blur\n * @type Number\n * @default 2\n */\nObject.defineProperty(PIXI.BlurYFilter.prototype, 'blur', {\n    get: function() {\n        return this.uniforms.blur.value / (1/7000);\n    },\n    set: function(value) {\n        //this.padding = value;\n        this.uniforms.blur.value = (1/7000) * value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * The BlurFilter applies a Gaussian blur to an object.\n * The strength of the blur can be set for x- and y-axis separately (always relative to the stage).\n *\n * @class BlurFilter\n * @extends AbstractFilter\n * @constructor\n */\nPIXI.BlurFilter = function()\n{\n    this.blurXFilter = new PIXI.BlurXFilter();\n    this.blurYFilter = new PIXI.BlurYFilter();\n\n    this.passes =[this.blurXFilter, this.blurYFilter];\n};\n\nPIXI.BlurFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.BlurFilter.prototype.constructor = PIXI.BlurFilter;\n\n/**\n * Sets the strength of both the blurX and blurY properties simultaneously\n *\n * @property blur\n * @type Number\n * @default 2\n */\nObject.defineProperty(PIXI.BlurFilter.prototype, 'blur', {\n    get: function() {\n        return this.blurXFilter.blur;\n    },\n    set: function(value) {\n        this.blurXFilter.blur = this.blurYFilter.blur = value;\n    }\n});\n\n/**\n * Sets the strength of the blurX property\n *\n * @property blurX\n * @type Number\n * @default 2\n */\nObject.defineProperty(PIXI.BlurFilter.prototype, 'blurX', {\n    get: function() {\n        return this.blurXFilter.blur;\n    },\n    set: function(value) {\n        this.blurXFilter.blur = value;\n    }\n});\n\n/**\n * Sets the strength of the blurY property\n *\n * @property blurY\n * @type Number\n * @default 2\n */\nObject.defineProperty(PIXI.BlurFilter.prototype, 'blurY', {\n    get: function() {\n        return this.blurYFilter.blur;\n    },\n    set: function(value) {\n        this.blurYFilter.blur = value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * This inverts your Display Objects colors.\n * \n * @class InvertFilter\n * @extends AbstractFilter\n * @constructor\n */\nPIXI.InvertFilter = function()\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n\n    // set the uniforms\n    this.uniforms = {\n        invert: {type: '1f', value: 1}\n    };\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform float invert;',\n        'uniform sampler2D uSampler;',\n\n        'void main(void) {',\n        '   gl_FragColor = texture2D(uSampler, vTextureCoord);',\n        '   gl_FragColor.rgb = mix( (vec3(1)-gl_FragColor.rgb) * gl_FragColor.a, gl_FragColor.rgb, 1.0 - invert);',\n        //'   gl_FragColor.rgb = gl_FragColor.rgb  * gl_FragColor.a;',\n      //  '   gl_FragColor = gl_FragColor * vColor;',\n        '}'\n    ];\n};\n\nPIXI.InvertFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.InvertFilter.prototype.constructor = PIXI.InvertFilter;\n\n/**\n * The strength of the invert. 1 will fully invert the colors, 0 will make the object its normal color\n * @property invert\n * @type Number\n*/\nObject.defineProperty(PIXI.InvertFilter.prototype, 'invert', {\n    get: function() {\n        return this.uniforms.invert.value;\n    },\n    set: function(value) {\n        this.uniforms.invert.value = value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * This applies a sepia effect to your Display Objects.\n * \n * @class SepiaFilter\n * @extends AbstractFilter\n * @constructor\n */\nPIXI.SepiaFilter = function()\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n\n    // set the uniforms\n    this.uniforms = {\n        sepia: {type: '1f', value: 1}\n    };\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform float sepia;',\n        'uniform sampler2D uSampler;',\n\n        'const mat3 sepiaMatrix = mat3(0.3588, 0.7044, 0.1368, 0.2990, 0.5870, 0.1140, 0.2392, 0.4696, 0.0912);',\n\n        'void main(void) {',\n        '   gl_FragColor = texture2D(uSampler, vTextureCoord);',\n        '   gl_FragColor.rgb = mix( gl_FragColor.rgb, gl_FragColor.rgb * sepiaMatrix, sepia);',\n       // '   gl_FragColor = gl_FragColor * vColor;',\n        '}'\n    ];\n};\n\nPIXI.SepiaFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.SepiaFilter.prototype.constructor = PIXI.SepiaFilter;\n\n/**\n * The strength of the sepia. 1 will apply the full sepia effect, 0 will make the object its normal color.\n * @property sepia\n * @type Number\n*/\nObject.defineProperty(PIXI.SepiaFilter.prototype, 'sepia', {\n    get: function() {\n        return this.uniforms.sepia.value;\n    },\n    set: function(value) {\n        this.uniforms.sepia.value = value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * This filter applies a twist effect making display objects appear twisted in the given direction.\n * \n * @class TwistFilter\n * @extends AbstractFilter\n * @constructor\n */\nPIXI.TwistFilter = function()\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n\n    // set the uniforms\n    this.uniforms = {\n        radius: {type: '1f', value:0.5},\n        angle: {type: '1f', value:5},\n        offset: {type: '2f', value:{x:0.5, y:0.5}}\n    };\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform vec4 dimensions;',\n        'uniform sampler2D uSampler;',\n\n        'uniform float radius;',\n        'uniform float angle;',\n        'uniform vec2 offset;',\n\n        'void main(void) {',\n        '   vec2 coord = vTextureCoord - offset;',\n        '   float distance = length(coord);',\n\n        '   if (distance < radius) {',\n        '       float ratio = (radius - distance) / radius;',\n        '       float angleMod = ratio * ratio * angle;',\n        '       float s = sin(angleMod);',\n        '       float c = cos(angleMod);',\n        '       coord = vec2(coord.x * c - coord.y * s, coord.x * s + coord.y * c);',\n        '   }',\n\n        '   gl_FragColor = texture2D(uSampler, coord+offset);',\n        '}'\n    ];\n};\n\nPIXI.TwistFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.TwistFilter.prototype.constructor = PIXI.TwistFilter;\n\n/**\n * This point describes the the offset of the twist.\n * \n * @property offset\n * @type Point\n */\nObject.defineProperty(PIXI.TwistFilter.prototype, 'offset', {\n    get: function() {\n        return this.uniforms.offset.value;\n    },\n    set: function(value) {\n        this.dirty = true;\n        this.uniforms.offset.value = value;\n    }\n});\n\n/**\n * This radius of the twist.\n * \n * @property radius\n * @type Number\n */\nObject.defineProperty(PIXI.TwistFilter.prototype, 'radius', {\n    get: function() {\n        return this.uniforms.radius.value;\n    },\n    set: function(value) {\n        this.dirty = true;\n        this.uniforms.radius.value = value;\n    }\n});\n\n/**\n * This angle of the twist.\n * \n * @property angle\n * @type Number\n */\nObject.defineProperty(PIXI.TwistFilter.prototype, 'angle', {\n    get: function() {\n        return this.uniforms.angle.value;\n    },\n    set: function(value) {\n        this.dirty = true;\n        this.uniforms.angle.value = value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * This lowers the color depth of your image by the given amount, producing an image with a smaller palette.\n * \n * @class ColorStepFilter\n * @extends AbstractFilter\n * @constructor\n */\nPIXI.ColorStepFilter = function()\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n\n    // set the uniforms\n    this.uniforms = {\n        step: {type: '1f', value: 5}\n    };\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform sampler2D uSampler;',\n        'uniform float step;',\n\n        'void main(void) {',\n        '   vec4 color = texture2D(uSampler, vTextureCoord);',\n        '   color = floor(color * step) / step;',\n        '   gl_FragColor = color;',\n        '}'\n    ];\n};\n\nPIXI.ColorStepFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.ColorStepFilter.prototype.constructor = PIXI.ColorStepFilter;\n\n/**\n * The number of steps to reduce the palette by.\n *\n * @property step\n * @type Number\n */\nObject.defineProperty(PIXI.ColorStepFilter.prototype, 'step', {\n    get: function() {\n        return this.uniforms.step.value;\n    },\n    set: function(value) {\n        this.uniforms.step.value = value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n * original filter: https://github.com/evanw/glfx.js/blob/master/src/filters/fun/dotscreen.js\n */\n\n/**\n * This filter applies a dotscreen effect making display objects appear to be made out of black and white halftone dots like an old printer.\n * \n * @class DotScreenFilter\n * @extends AbstractFilter\n * @constructor\n */\nPIXI.DotScreenFilter = function()\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n\n    // set the uniforms\n    this.uniforms = {\n        scale: {type: '1f', value:1},\n        angle: {type: '1f', value:5},\n        dimensions:   {type: '4fv', value:[0,0,0,0]}\n    };\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform vec4 dimensions;',\n        'uniform sampler2D uSampler;',\n\n        'uniform float angle;',\n        'uniform float scale;',\n\n        'float pattern() {',\n        '   float s = sin(angle), c = cos(angle);',\n        '   vec2 tex = vTextureCoord * dimensions.xy;',\n        '   vec2 point = vec2(',\n        '       c * tex.x - s * tex.y,',\n        '       s * tex.x + c * tex.y',\n        '   ) * scale;',\n        '   return (sin(point.x) * sin(point.y)) * 4.0;',\n        '}',\n\n        'void main() {',\n        '   vec4 color = texture2D(uSampler, vTextureCoord);',\n        '   float average = (color.r + color.g + color.b) / 3.0;',\n        '   gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);',\n        '}'\n    ];\n};\n\nPIXI.DotScreenFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.DotScreenFilter.prototype.constructor = PIXI.DotScreenFilter;\n\n/**\n * The scale of the effect.\n * @property scale\n * @type Number\n */\nObject.defineProperty(PIXI.DotScreenFilter.prototype, 'scale', {\n    get: function() {\n        return this.uniforms.scale.value;\n    },\n    set: function(value) {\n        this.dirty = true;\n        this.uniforms.scale.value = value;\n    }\n});\n\n/**\n * The radius of the effect.\n * @property angle\n * @type Number\n */\nObject.defineProperty(PIXI.DotScreenFilter.prototype, 'angle', {\n    get: function() {\n        return this.uniforms.angle.value;\n    },\n    set: function(value) {\n        this.dirty = true;\n        this.uniforms.angle.value = value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * A Cross Hatch effect filter.\n * \n * @class CrossHatchFilter\n * @extends AbstractFilter\n * @constructor\n */\nPIXI.CrossHatchFilter = function()\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n\n    // set the uniforms\n    this.uniforms = {\n        blur: {type: '1f', value: 1 / 512}\n    };\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform float blur;',\n        'uniform sampler2D uSampler;',\n\n        'void main(void) {',\n        '    float lum = length(texture2D(uSampler, vTextureCoord.xy).rgb);',\n\n        '    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);',\n\n        '    if (lum < 1.00) {',\n        '        if (mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0) {',\n        '            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);',\n        '        }',\n        '    }',\n\n        '    if (lum < 0.75) {',\n        '        if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0) {',\n        '            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);',\n        '        }',\n        '    }',\n\n        '    if (lum < 0.50) {',\n        '        if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0) {',\n        '            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);',\n        '        }',\n        '    }',\n\n        '    if (lum < 0.3) {',\n        '        if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0) {',\n        '            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);',\n        '        }',\n        '    }',\n        '}'\n    ];\n};\n\nPIXI.CrossHatchFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.CrossHatchFilter.prototype.constructor = PIXI.CrossHatchFilter;\n\n/**\n * Sets the strength of both the blur.\n *\n * @property blur\n * @type Number\n * @default 2\n */\nObject.defineProperty(PIXI.CrossHatchFilter.prototype, 'blur', {\n    get: function() {\n        return this.uniforms.blur.value / (1/7000);\n    },\n    set: function(value) {\n        //this.padding = value;\n        this.uniforms.blur.value = (1/7000) * value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n/**\n * An RGB Split Filter.\n * \n * @class RGBSplitFilter\n * @extends AbstractFilter\n * @constructor\n */\nPIXI.RGBSplitFilter = function()\n{\n    PIXI.AbstractFilter.call( this );\n\n    this.passes = [this];\n\n    // set the uniforms\n    this.uniforms = {\n        red: {type: '2f', value: {x:20, y:20}},\n        green: {type: '2f', value: {x:-20, y:20}},\n        blue: {type: '2f', value: {x:20, y:-20}},\n        dimensions:   {type: '4fv', value:[0,0,0,0]}\n    };\n\n    this.fragmentSrc = [\n        'precision mediump float;',\n        'varying vec2 vTextureCoord;',\n        'varying vec4 vColor;',\n        'uniform vec2 red;',\n        'uniform vec2 green;',\n        'uniform vec2 blue;',\n        'uniform vec4 dimensions;',\n        'uniform sampler2D uSampler;',\n\n        'void main(void) {',\n        '   gl_FragColor.r = texture2D(uSampler, vTextureCoord + red/dimensions.xy).r;',\n        '   gl_FragColor.g = texture2D(uSampler, vTextureCoord + green/dimensions.xy).g;',\n        '   gl_FragColor.b = texture2D(uSampler, vTextureCoord + blue/dimensions.xy).b;',\n        '   gl_FragColor.a = texture2D(uSampler, vTextureCoord).a;',\n        '}'\n    ];\n};\n\nPIXI.RGBSplitFilter.prototype = Object.create( PIXI.AbstractFilter.prototype );\nPIXI.RGBSplitFilter.prototype.constructor = PIXI.RGBSplitFilter;\n\n/**\n * Red channel offset.\n * \n * @property red\n * @type Point\n */\nObject.defineProperty(PIXI.RGBSplitFilter.prototype, 'red', {\n    get: function() {\n        return this.uniforms.red.value;\n    },\n    set: function(value) {\n        this.uniforms.red.value = value;\n    }\n});\n\n/**\n * Green channel offset.\n * \n * @property green\n * @type Point\n */\nObject.defineProperty(PIXI.RGBSplitFilter.prototype, 'green', {\n    get: function() {\n        return this.uniforms.green.value;\n    },\n    set: function(value) {\n        this.uniforms.green.value = value;\n    }\n});\n\n/**\n * Blue offset.\n * \n * @property blue\n * @type Point\n */\nObject.defineProperty(PIXI.RGBSplitFilter.prototype, 'blue', {\n    get: function() {\n        return this.uniforms.blue.value;\n    },\n    set: function(value) {\n        this.uniforms.blue.value = value;\n    }\n});\n\r\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n */\n\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = PIXI;\n        }\n        exports.PIXI = PIXI;\n    } else if (typeof define !== 'undefined' && define.amd) {\n        define(PIXI);\n    } else {\n        root.PIXI = PIXI;\n    }\n}).call(this);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/pixi.js/bin/pixi.dev.js\n ** module id = 18\n ** module chunks = 2 6 7 10\n **/","\n/**\n * slice() reference.\n */\n\nvar slice = Array.prototype.slice;\n\n/**\n * Expose `co`.\n */\n\nmodule.exports = co['default'] = co.co = co;\n\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n\n/**\n * Execute the generator function or a generator\n * and return a promise.\n *\n * @param {Function} fn\n * @return {Promise}\n * @api public\n */\n\nfunction co(gen) {\n  var ctx = this;\n  if (typeof gen === 'function') gen = gen.call(this);\n  // we wrap everything in a promise to avoid promise chaining,\n  // which leads to memory leak errors.\n  // see https://github.com/tj/co/issues/180\n  return new Promise(function(resolve, reject) {\n    onFulfilled();\n\n    /**\n     * @param {Mixed} res\n     * @return {Promise}\n     * @api private\n     */\n\n    function onFulfilled(res) {\n      var ret;\n      try {\n        ret = gen.next(res);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * @param {Error} err\n     * @return {Promise}\n     * @api private\n     */\n\n    function onRejected(err) {\n      var ret;\n      try {\n        ret = gen.throw(err);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * Get the next value in the generator,\n     * return a promise.\n     *\n     * @param {Object} ret\n     * @return {Promise}\n     * @api private\n     */\n\n    function next(ret) {\n      if (ret.done) return resolve(ret.value);\n      var value = toPromise.call(ctx, ret.value);\n      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\n      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\n        + 'but the following object was passed: \"' + String(ret.value) + '\"'));\n    }\n  });\n}\n\n/**\n * Convert a `yield`ed value into a promise.\n *\n * @param {Mixed} obj\n * @return {Promise}\n * @api private\n */\n\nfunction toPromise(obj) {\n  if (!obj) return obj;\n  if (isPromise(obj)) return obj;\n  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\n  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\n  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\n  if (isObject(obj)) return objectToPromise.call(this, obj);\n  return obj;\n}\n\n/**\n * Convert a thunk to a promise.\n *\n * @param {Function}\n * @return {Promise}\n * @api private\n */\n\nfunction thunkToPromise(fn) {\n  var ctx = this;\n  return new Promise(function (resolve, reject) {\n    fn.call(ctx, function (err, res) {\n      if (err) return reject(err);\n      if (arguments.length > 2) res = slice.call(arguments, 1);\n      resolve(res);\n    });\n  });\n}\n\n/**\n * Convert an array of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Array} obj\n * @return {Promise}\n * @api private\n */\n\nfunction arrayToPromise(obj) {\n  return Promise.all(obj.map(toPromise, this));\n}\n\n/**\n * Convert an object of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Object} obj\n * @return {Promise}\n * @api private\n */\n\nfunction objectToPromise(obj){\n  var results = new obj.constructor();\n  var keys = Object.keys(obj);\n  var promises = [];\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var promise = toPromise.call(this, obj[key]);\n    if (promise && isPromise(promise)) defer(promise, key);\n    else results[key] = obj[key];\n  }\n  return Promise.all(promises).then(function () {\n    return results;\n  });\n\n  function defer(promise, key) {\n    // predefine the key in the result\n    results[key] = undefined;\n    promises.push(promise.then(function (res) {\n      results[key] = res;\n    }));\n  }\n}\n\n/**\n * Check if `obj` is a promise.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isPromise(obj) {\n  return 'function' == typeof obj.then;\n}\n\n/**\n * Check if `obj` is a generator.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isGenerator(obj) {\n  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\n}\n\n/**\n * Check if `obj` is a generator function.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\nfunction isGeneratorFunction(obj) {\n  var constructor = obj.constructor;\n  if (!constructor) return false;\n  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\n  return isGenerator(constructor.prototype);\n}\n\n/**\n * Check for plain object.\n *\n * @param {Mixed} val\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(val) {\n  return Object == val.constructor;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/co/index.js\n ** module id = 30\n ** module chunks = 2 3 4 5 6 8\n **/","\n/**\n * A SkinNode is an internal representation of a Skin.\n *\n * Node.compile     :: (compiler, $xml) -> Node\n *\n * To implement:\n *\n * Node#compile     :: (compiler, $xml) -> undefined (side-effect)\n * Node#instantiate :: (instantiator)   -> PIXI.DisplayObject\n */\nexport class SkinNode {\n  static compile(compiler, $el) {\n    let node = new this()\n    node.compile(compiler, $el)\n    return node\n  }\n}\n\nexport default SkinNode\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/nodes/lib/base.js\n **/","\nimport Callbacks from 'bemuse/utils/callbacks'\n\nexport class Instance {\n  constructor(options) {\n    this._context   = options.context\n    this._object    = options.object\n    this._children  = options.children\n    this._bindings  = [ ]\n    this._concerns  = [ ]\n    this.onData     = new Callbacks(options.onData)\n    this.onDestroy  = new Callbacks(options.onDestroy)\n    if (options.bindings) {\n      for (let binding of options.bindings) {\n        this.bind(...binding)\n      }\n    }\n    if (options.concerns) {\n      for (let concern of options.concerns) {\n        this._concerns.push(concern.instantiate(this._context, this))\n      }\n    }\n    if (options.children) {\n      for (let children of options.children) {\n        this._concerns.push(children.instantiate(this._context, this._object))\n      }\n    }\n    if (options.onCreate) {\n      new Callbacks(options.onCreate).call()\n    }\n    if (options.parent) {\n      this.attachTo(options.parent)\n    }\n  }\n  bind(...pipeline) {\n    let sideEffect = onChange(pipeline.pop())\n    if (pipeline.length === 1 && pipeline[0].constant) {\n      // optimize: don't add binding when expression is constant --\n      // just do it once\n      sideEffect(pipeline[0]())\n    } else {\n      this._bindings.push((value) => {\n        for (var i = 0; i < pipeline.length; i++) {\n          value = pipeline[i](value)\n        }\n        sideEffect(value)\n      })\n    }\n  }\n  attachTo(parent) {\n    this._parent    = parent\n    this._parent.addChild(this._object)\n  }\n  detach() {\n    if (this._parent) {\n      this._parent.removeChild(this._object)\n      this._parent = null\n    }\n  }\n  push(value) {\n    var i\n    for (i = 0; i < this._bindings.length; i++) {\n      this._bindings[i](value)\n    }\n    for (i = 0; i < this._concerns.length; i++) {\n      this._concerns[i].push(value)\n    }\n    this.onData.call(value)\n  }\n  destroy() {\n    this.detach()\n    for (var i = 0; i < this._concerns.length; i++) {\n      this._concerns[i].destroy()\n    }\n    this.onDestroy.call()\n    this._concerns  = null\n    this._bindings  = null\n    this._parent    = null\n    this._object    = null\n  }\n  get object() {\n    return this._object\n  }\n  get parent() {\n    return this._parent\n  }\n}\n\nfunction onChange(f) {\n  let value\n  return function receiveNewValue(v) {\n    if (value !== v) {\n      value = v\n      f(v)\n    }\n  }\n}\n\nexport default Instance\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/nodes/lib/instance.js\n **/","\nmodule.exports = DataStructure\n\nfunction DataStructure() {\n\n  var schemas = [].slice.call(arguments)\n\n  function Constructor(object) {\n    Constructor.validate(object)\n    return object\n  }\n\n  Constructor.validate = function(object) {\n    for (var i = 0; i < schemas.length; i ++) {\n      validate(schemas[i], object)\n    }\n  }\n\n  return Constructor\n\n}\n\nDataStructure.maybe = function maybe(schema) {\n  function MaybeValidator(object) {\n    MaybeValidator.validate(object)\n    return object\n  }\n  MaybeValidator.validate = function(value) {\n    if (value === null || value === undefined) return\n    validate(schema, value)\n  }\n  return MaybeValidator\n}\n\nfunction validate(schema, value) {\n  if (schema === Number) schema = 'number'\n  if (schema === String) schema = 'string'\n  if (typeof schema === 'string') {\n    if (typeof value !== schema) throw new Error('should be a ' + schema)\n  } else if (typeof schema === 'function') {\n    if (typeof schema.validate === 'function') {\n      schema.validate(value)\n    } else if (!(value instanceof schema)) {\n      throw new Error('should be an instance of ' + schema)\n    }\n  } else if (typeof schema === 'object') {\n    if (!value) throw new Error('should be an object')\n    validateObject(schema, value)\n  } else {\n    throw new Error('invalid schema')\n  }\n}\n\nfunction validateObject(schema, object) {\n  for (var prop in schema) {\n    if (!(prop in object)) {\n      throw new Error('missing property: \"' + prop + '\"')\n    }\n    try {\n      validate(schema[prop], object[prop])\n    } catch (e) {\n      throw new Error('error in property \"' + prop + '\": ' + e.message)\n    }\n  }\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/data-structure/index.js\n ** module id = 41\n ** module chunks = 2 3 4 6 8\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/buildin/module.js\n ** module id = 51\n ** module chunks = 2 3 4 5 6\n **/","\nimport debug from 'debug/browser'\nlet log = debug('scintillator:expression')\n\nimport parser from './parser.pegjs'\n\nfunction createFunction(code) {\n  let fn = eval('(function(get) { return ' + code + ' })')\n  fn.displayName = '(' + code + ')'\n  fn.constant = !!/^[\\-0-9\\.]+$/.test(code)\n  return fn\n}\n\nexport function Expression(text) {\n  log('parsing %s', text)\n  let code = parser.parse(text)\n  log('parsed %s => %s', text, code)\n  let f = createFunction(code)\n  let evaluate\n  if (f.constant) {\n    evaluate = f\n  } else {\n    evaluate = function(data) {\n      return f(function(key) {\n        return data[key]\n      })\n    }\n  }\n  evaluate.constant = f.constant\n  return evaluate\n}\n\nexport default Expression\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/expression/index.js\n **/","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding, noZero) {\n  if (!(this instanceof Buffer))\n    return new Buffer(subject, encoding, noZero)\n\n  var type = typeof subject\n\n  // Find the length\n  var length\n  if (type === 'number') {\n    length = +subject\n  } else if (type === 'string') {\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) { // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data))\n      subject = subject.data\n    length = +subject.length\n  } else {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (length > kMaxLength)\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n      'size: 0x' + kMaxLength.toString(16) + ' bytes')\n\n  if (length < 0)\n    length = 0\n  else\n    length >>>= 0 // Coerce to uint32.\n\n  var self = this\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    /*eslint-disable consistent-this */\n    self = Buffer._augment(new Uint8Array(length))\n    /*eslint-enable consistent-this */\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    self.length = length\n    self._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    self._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++)\n        self[i] = subject.readUInt8(i)\n    } else {\n      for (i = 0; i < length; i++)\n        self[i] = ((subject[i] % 256) + 256) % 256\n    }\n  } else if (type === 'string') {\n    self.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT && !noZero) {\n    for (i = 0; i < length; i++) {\n      self[i] = 0\n    }\n  }\n\n  if (length > 0 && length <= Buffer.poolSize)\n    self.parent = rootParent\n\n  return self\n}\n\nfunction SlowBuffer (subject, encoding, noZero) {\n  if (!(this instanceof SlowBuffer))\n    return new SlowBuffer(subject, encoding, noZero)\n\n  var buf = new Buffer(subject, encoding, noZero)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b))\n    throw new TypeError('Arguments must be Buffers')\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('Usage: Buffer.concat(list[, length])')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase)\n          throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max)\n      str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var byte = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(byte)) throw new Error('Invalid hex string')\n    buf[offset + i] = byte\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nBuffer.prototype.write = function (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n\n  if (length < 0 || offset < 0 || offset > this.length)\n    throw new RangeError('attempt to write outside buffer bounds')\n\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0)\n      start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0)\n      end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start)\n    end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined, true)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length)\n    newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0)\n    throw new RangeError('offset is not uint')\n  if (offset + ext > length)\n    throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100))\n    val += this[offset + i] * mul\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100))\n    val += this[offset + --byteLength] * mul\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n      ((this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100))\n    val += this[offset + i] * mul\n  mul *= 0x80\n\n  if (val >= mul)\n    val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100))\n    val += this[offset + --i] * mul\n  mul *= 0x80\n\n  if (val >= mul)\n    val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80))\n    return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16) |\n      (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n      (this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100))\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100))\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(this,\n             value,\n             offset,\n             byteLength,\n             Math.pow(2, 8 * byteLength - 1) - 1,\n             -Math.pow(2, 8 * byteLength - 1))\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100))\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(this,\n             value,\n             offset,\n             byteLength,\n             Math.pow(2, 8 * byteLength - 1) - 1,\n             -Math.pow(2, 8 * byteLength - 1))\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100))\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function (target, target_start, start, end) {\n  var self = this // source\n\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (target_start >= target.length) target_start = target.length\n  if (!target_start) target_start = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || self.length === 0) return 0\n\n  // Fatal error conditions\n  if (target_start < 0)\n    throw new RangeError('targetStart out of bounds')\n  if (start < 0 || start >= self.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length)\n    end = this.length\n  if (target.length - target_start < end - start)\n    end = target.length - target_start + start\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array get/set methods before overwriting\n  arr._get = arr.get\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n  var i = 0\n\n  for (; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (leadSurrogate) {\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          leadSurrogate = codePoint\n          continue\n        } else {\n          // valid surrogate pair\n          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n          leadSurrogate = null\n        }\n      } else {\n        // no lead yet\n\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else {\n          // valid lead\n          leadSurrogate = codePoint\n          continue\n        }\n      }\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n      leadSurrogate = null\n    }\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x200000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length))\n      break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/~/node-libs-browser/~/buffer/index.js\n ** module id = 78\n ** module chunks = 2 3 4 6 8\n **/","\nexport function fixed(total, progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return (extra) => progress.report(++loaded, total, extra)\n}\n\nexport function wrapPromise(progress, f) {\n  let current = 0\n  let total = 0\n  return function() {\n    progress.report(current, ++total)\n    return Promise.resolve(f.apply(this, arguments))\n      .tap(() => progress.report(++current, total))\n  }\n}\n\nexport function bind(from, to) {\n  return from.watch(() => to.report(from.current, from.total, from.extra))\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./progress/utils.js\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/~/node-libs-browser/~/url/url.js\n ** module id = 86\n ** module chunks = 2 3 4 6\n **/","\nimport PIXI     from 'pixi.js'\n\nimport SkinNode from '../lib/base'\nimport Instance from '../lib/instance'\n\nimport Expression from '../../expression'\nimport Animation  from './animation'\n\n// Numeric properties that may be interpreted as expressions.\nlet properties = [\n  { name: 'x',       default: '0', apply: (obj, v) => obj.x = v },\n  { name: 'y',       default: '0', apply: (obj, v) => obj.y = v },\n  { name: 'scale-x', default: '1', apply: (obj, v) => obj.scale.x = v },\n  { name: 'scale-y', default: '1', apply: (obj, v) => obj.scale.y = v },\n  { name: 'alpha',   default: '1', apply: (obj, v) => obj.alpha = v },\n  { name: 'width',                 apply: (obj, v) => obj.width = v},\n  { name: 'height',                apply: (obj, v) => obj.height = v },\n  { name: 'visible',               apply: (obj, v) => obj.visible = v },\n]\n\nexport class DisplayObject extends SkinNode {\n  compile(compiler, $el) {\n    this._animation = Animation.compile(compiler, $el)\n    this._bindings  = [ ]\n    for (let property of properties) {\n      let code = $el.attr(property.name) || property.default\n      if (!code) continue\n      let expression  = new Expression(code)\n      let getter      = this._animation.prop(property.name, expression)\n      this._bindings.push({\n        getter: getter,\n        apply:  property.apply,\n      })\n    }\n    this.blendMode  = parseBlendMode($el.attr('blend') || 'normal')\n    this.ref        = $el.attr('ref') || null\n  }\n  instantiate(context, subject) {\n    var object      = subject.object\n    var bindings    = [ ]\n    var onDestroy   = null\n    object.blendMode = this.blendMode\n    for (var i = 0; i < this._bindings.length; i++) {\n      var binding = this._bindings[i]\n      bindings.push([ binding.getter, binding.apply.bind(null, object) ])\n    }\n    if (this.ref) {\n      context.ref(this.ref, object)\n      onDestroy = () => context.unref(this.ref, object)\n    }\n    return new Instance({\n      bindings: bindings,\n      onDestroy: onDestroy,\n    })\n  }\n}\n\nfunction parseBlendMode(text) {\n  if (text === 'normal') return PIXI.blendModes.NORMAL\n  if (text === 'screen') return PIXI.blendModes.SCREEN\n  throw new Error('Invalid blend mode: ' + text)\n}\n\nexport default DisplayObject\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/nodes/concerns/display-object.js\n **/","function bounceOut(t) {\n  var a = 4.0 / 11.0\n  var b = 8.0 / 11.0\n  var c = 9.0 / 10.0\n\n  var ca = 4356.0 / 361.0\n  var cb = 35442.0 / 1805.0\n  var cc = 16061.0 / 1805.0\n\n  var t2 = t * t\n\n  return t < a\n    ? 7.5625 * t2\n    : t < b\n      ? 9.075 * t2 - 9.9 * t + 3.4\n      : t < c\n        ? ca * t2 - cb * t + cc\n        : 10.8 * t * t - 20.52 * t + 10.72\n}\n\nmodule.exports = bounceOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/bounce-out.js\n ** module id = 93\n ** module chunks = 2 6 7\n **/","\nimport DataStructure from 'data-structure'\n\nexport let GameEvent = new DataStructure({\n  beat:       Number,\n  time:       Number,\n  position:   Number,\n})\n\nexport default GameEvent\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/data/event.js\n **/","\nimport { load }    from './loader'\nimport { Context } from './context'\n\nexport { load, Context }\n\nexport function getSkinUrl() {\n  if (window.innerWidth < window.innerHeight) {\n    return '/skins/default/skin_touch.xml'\n  } else {\n    return '/skins/default/skin_screen.xml'\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/index.js\n **/","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/~/node-libs-browser/~/buffer/~/base64-js/lib/b64.js\n ** module id = 127\n ** module chunks = 2 3 4 6 8\n **/","exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/~/node-libs-browser/~/buffer/~/ieee754/index.js\n ** module id = 128\n ** module chunks = 2 3 4 6 8\n **/","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/~/node-libs-browser/~/buffer/~/is-array/index.js\n ** module id = 129\n ** module chunks = 2 3 4 6 8\n **/","\nimport _ from 'lodash'\n\nexport class NoteArea {\n  constructor(notes, barLines) {\n    this._notes     = _.sortBy(notes, position)\n    this._barLines  = _(barLines).pluck('position').sortBy().value()\n  }\n  getVisibleNotes(lower, upper, headroom) {\n    let out = []\n    let notes = this._notes\n    if (!headroom) headroom = 0\n    for (let i = 0; i < notes.length; i++) {\n      let note = notes[i]\n      let visible = note.end ?\n            !(note.position > upper || note.end.position < lower - headroom) :\n            !(note.position > upper || note.position < lower - headroom)\n      if (visible) {\n        let entity = { note: note }\n        if (!note.end) {\n          entity.y = y(lower, upper, note.position)\n        } else {\n          let head = y(lower, upper, note.position)\n          let tail = y(lower, upper, note.end.position)\n          entity.y       = Math.min(head, tail)\n          entity.height  = Math.abs(head - tail)\n        }\n        out.push(entity)\n      }\n    }\n    return out\n  }\n  getVisibleBarLines(lower, upper, headroom) {\n    if (!headroom) headroom = 0\n    return this._barLines\n        .filter(pos => (lower - headroom <= pos && pos <= upper))\n        .map(pos => ({ id: pos, y: y(lower, upper, pos) }))\n  }\n}\n\nexport default NoteArea\n\nfunction y(lower, upper, pos) {\n  return 1 - (pos - lower) / (upper - lower)\n}\n\nfunction position(event) {\n  return event.position\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/display/note-area.js\n **/","\nimport PIXI from 'pixi.js'\n\nexport function parseFrame(text) {\n  let m = text.match(/^(\\d+)x(\\d+)\\+(\\d+)\\+(\\d+)$/)\n  if (!m) return null\n  return new PIXI.Rectangle(+m[3], +m[4], +m[1], +m[2])\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/nodes/lib/utils.js\n **/","var lerp = require('lerp')\n\nmodule.exports = function lerpValues(value1, value2, t, out) {\n    if (typeof value1 === 'number'\n            && typeof value2 === 'number')\n        return lerp(value1, value2, t)\n    else { //assume array\n        var len = Math.min(value1.length, value2.length)\n        out = out||new Array(len)\n        for (var i=0; i<len; i++) \n            out[i] = lerp(value1[i], value2[i], t)\n        return out\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/lerp-array/index.js\n ** module id = 134\n ** module chunks = 2 6 7\n **/","\nimport DataStructure  from 'data-structure'\nimport Event          from './event'\n\nexport let GameNote = new DataStructure(Event, {\n  id:         Number,\n  end:        DataStructure.maybe(Event),\n  column:     String,\n})\n\nexport default GameNote\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/data/game-note.js\n **/","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/~/node-libs-browser/~/punycode/punycode.js\n ** module id = 230\n ** module chunks = 2 3 4 6\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/~/node-libs-browser/~/url/~/querystring/decode.js\n ** module id = 231\n ** module chunks = 2 3 4 6\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/~/node-libs-browser/~/url/~/querystring/encode.js\n ** module id = 232\n ** module chunks = 2 3 4 6\n **/","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/~/node-libs-browser/~/url/~/querystring/index.js\n ** module id = 233\n ** module chunks = 2 3 4 6\n **/","\nimport _        from 'lodash'\nimport $        from 'jquery'\nimport keytime  from 'keytime'\n\nlet createKeytime = def => Object.assign({ }, def, { data: keytime(def.data) })\n\nexport class Animation {\n  constructor(animations) {\n    this._properties  = _(animations)\n        .map(animation => _.pluck(animation.data, 'name'))\n        .flatten()\n        .thru(array => new Set(array))\n        .value()\n    this._animations  = _.map(animations, createKeytime)\n    this._events      = _.uniq(_.pluck(animations, 'on'))\n  }\n  prop(name, fallback) {\n    if (!this._properties.has(name)) {\n      return fallback\n    }\n    return data => {\n      let values = this._getAnimation(data)\n      if (values.hasOwnProperty(name)) {\n        return values[name]\n      } else {\n        return fallback(data)\n      }\n    }\n  }\n  _getAnimation(data) {\n    let event       = _(this._events)\n        .filter(e => e === '' || e in data)\n        .max(e => data[e] || 0)\n    let t           = data.t - (data[event] || 0)\n    let animations  = this._animations.filter(a => a.on === event)\n    let values      = animations.map(a => a.data.values(t))\n    return Object.assign({}, ...values)\n  }\n  static compile(compiler, $el) {\n    let animationElements = Array.from($el.children('animation'))\n    let animations = _.map(animationElements, el => _compile($(el)))\n    return new Animation(animations)\n  }\n}\n\nexport function _compile($el) {\n  let keyframes = _.map(Array.from($el.children('keyframe')), _attrs)\n  let attrs = { }\n  for (let keyframe of keyframes) {\n    let time = +keyframe.t\n    let ease = keyframe.ease || 'linear'\n    if (isNaN(time)) throw new Error('Expected keyframe to have \"t\" attribute')\n    for (let key in keyframe) {\n      if (key === 't' || key === 'ease') continue\n      let value = +keyframe[key]\n      let attr = attrs[key] || (attrs[key] = _createKeyframes(key))\n      attr.keyframes.push({ time, value, ease })\n    }\n  }\n  return {\n    on:   $el.attr('on') || '',\n    data: _.values(attrs),\n  }\n}\n\nfunction _createKeyframes(name) {\n  return { name, keyframes: [] }\n}\n\nexport function _attrs(el) {\n  return _(el.attributes)\n      .map(n => [n.name.toLowerCase(), n.value])\n      .object()\n      .value()\n}\n\nexport default Animation\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/nodes/concerns/animation.js\n **/","\nimport debug from 'debug/browser'\nlet log = debug('scintillator:compiler')\n\nimport $ from 'jquery'\n\nimport SkinRootNode from './nodes/skin-root'\nimport SpriteNode   from './nodes/sprite'\nimport GroupNode    from './nodes/group'\nimport ObjectNode   from './nodes/object'\nimport TextNode     from './nodes/text'\nimport IfNode       from './nodes/if'\n\nlet NODES = {\n  'skin':   SkinRootNode,\n  'sprite': SpriteNode,\n  'group':  GroupNode,\n  'object': ObjectNode,\n  'text':   TextNode,\n  'if':     IfNode,\n}\n\n\n/**\n * A Compiler compiles the $xml theme file into SkinNode.\n */\nclass Compiler {\n  constructor(env) {\n    Object.assign(this, env)\n    this._defs = new Map()\n  }\n  compile($el) {\n    let nodeName = $el[0].nodeName\n    log('compiling', $el[0])\n    let Node = Compiler.getNodeClass(nodeName)\n    if (!Node) throw new Error('Invalid node name: ' + nodeName)\n    return Node.compile(this, $el)\n  }\n  compileChildren($el) {\n    let output = []\n    for (let child of Array.from($el.children())) {\n      let nodeName = child.nodeName\n      if (nodeName === 'defs') {\n        this.compileDefs($(child))\n      } else if (nodeName === 'use') {\n        output.push(this.getDef(child.getAttribute('def')))\n      } else {\n        let Node = Compiler.getNodeClass(nodeName)\n        if (Node) output.push(this.compile($(child)))\n      }\n    }\n    return output\n  }\n  compileDefs($el) {\n    for (let child of Array.from($el.children())) {\n      let id = child.getAttribute('id')\n      if (!id) throw new Error('A def should have an id: ' + child.nodeName)\n      this._defs.set(id, this.compile($(child)))\n    }\n  }\n  getDef(id) {\n    let node = this._defs.get(id)\n    if (!node) throw new Error('Cannot find def: ' + id)\n    return node\n  }\n\n  static getNodeClass(nodeName) {\n    return NODES[nodeName]\n  }\n}\n\nexport default Compiler\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/compiler.js\n **/","\nimport PIXI from 'pixi.js'\n\nfunction createRenderer(w, h) {\n  if (navigator.userAgent.match(/Gecko\\//)) {\n    return new PIXI.autoDetectRenderer(w, h)\n  } else {\n    return new PIXI.CanvasRenderer(w, h)\n  }\n}\n\nexport class Context {\n  constructor(skin) {\n    this.refs       = { }\n    this._skin      = skin\n    this._instance  = skin.instantiate(this)\n    this._renderer  = createRenderer(skin.width, skin.height)\n    this.stage      = this._instance.object\n    this.view       = this._renderer.view\n    this._setupInteractivity()\n  }\n  render(data) {\n    this._instance.push(data)\n    this._renderer.render(this.stage)\n  }\n  destroy() {\n    this._instance.destroy()\n    this._instance = null\n    this._teardownInteractivity()\n  }\n  get input() {\n    return this._input.get()\n  }\n  ref(key, object) {\n    let set = this.refs[key] || (this.refs[key] = new Set())\n    set.add(object)\n  }\n  unref(key, object) {\n    let set = this.refs[key]\n    if (!set) return\n    set.delete(object)\n  }\n  _setupInteractivity() {\n    let mouse         = null\n    let touches       = [ ]\n    let onMouse       = (e) => { mouse = e }\n    let onUpdateMouse = (e) => { mouse = mouse && e }\n    let onNoMouse     = ()  => { mouse = null }\n    let onTouch       = (e) => { touches = [].slice.call(e.touches) }\n    let view          = this.view\n    let width         = this._skin.width\n    let height        = this._skin.height\n    view.addEventListener('mousedown', onMouse, false)\n    view.addEventListener('mousemove', onUpdateMouse, false)\n    view.addEventListener('mouseup', onNoMouse, false)\n    view.addEventListener('touchstart', onTouch, false)\n    view.addEventListener('touchmove', onTouch, false)\n    view.addEventListener('touchend', onTouch, false)\n    this._teardownInteractivity = () => {\n      view.removeEventListener('mousedown', onMouse, false)\n      view.removeEventListener('mousemove', onUpdateMouse, false)\n      view.removeEventListener('mouseup', onNoMouse, false)\n      view.removeEventListener('touchstart', onTouch, false)\n      view.removeEventListener('touchmove', onTouch, false)\n      view.removeEventListener('touchend', onTouch, false)\n    }\n    this._input = {\n      get: () => {\n        let output = []\n        let rect = this.view.getBoundingClientRect()\n        if (mouse) {\n          output.push(point('mouse', mouse, rect))\n        }\n        for (let i = 0; i < touches.length; i++) {\n          let touch = touches[i]\n          output.push(point('touch' + touch.identifier, touch, rect))\n        }\n        return output\n      }\n    }\n    function point(id, p, rect) {\n      return {\n        x: (p.clientX - rect.left) / rect.width * width,\n        y: (p.clientY - rect.top) / rect.height * height,\n        id: id,\n      }\n    }\n  }\n}\n\nexport default Context\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/context.js\n **/","\nimport debug from 'debug/browser'\nlet log = debug('scintillator:loader')\n\nimport $    from 'jquery'\nimport url  from 'url'\nimport co   from 'co'\nimport PIXI from 'pixi.js'\nimport * as ProgressUtils from 'bemuse/progress/utils'\n\nimport Resources  from './resources'\nimport Compiler   from './compiler'\n\nexport function load(xmlPath, progress) {\n  return co(function*() {\n\n    log('load XML from %s', xmlPath)\n    let $xml = yield loadXml(xmlPath)\n\n    // scan all images\n    let resources = new Resources()\n    let paths     = new Set()\n    for (let element of Array.from($xml.find('[image]'))) {\n      paths.add($(element).attr('image'))\n    }\n    for (let element of Array.from($xml.find('[font-src]'))) {\n      paths.add($(element).attr('font-src'))\n    }\n    for (let path of paths) {\n      let assetUrl = url.resolve(xmlPath, path)\n      resources.add(path, assetUrl)\n    }\n\n    // load all images + progress reporting\n    let onload = ProgressUtils.fixed(1 + paths.size, progress)\n    onload()\n    yield loadResources(resources, onload)\n\n    // compile the skin\n    log('compiling')\n    let skin = new Compiler({ resources }).compile($xml)\n\n    return skin\n\n  })\n}\n\nfunction loadXml(xmlUrl) {\n  return Promise.resolve($.ajax({ url: xmlUrl, dataType: 'xml' }))\n    .then(xml => $(xml.documentElement))\n}\n\nfunction loadResources(resources, onprogress) {\n  log('loading resources')\n  return new Promise(function(resolve) {\n    if (resources.urls.length === 0) return resolve()\n    let loader = new PIXI.AssetLoader(resources.urls)\n    loader.on('onComplete', function() {\n      log('resources finished loading')\n      resolve()\n    })\n    if (onprogress) loader.on('onProgress', onprogress)\n    loader.load()\n  })\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/loader.js\n **/","\nimport PIXI           from 'pixi.js'\n\nimport SkinNode       from './lib/base'\nimport Instance       from './lib/instance'\n\nimport DisplayObject  from './concerns/display-object'\nimport { parseFrame } from './lib/utils'\n\nexport class Mask {\n  constructor(frame) {\n    this._frame = frame\n  }\n  instantiate(context, subject) {\n    let mask = new PIXI.Graphics()\n    mask.beginFill()\n    mask.drawShape(this._frame)\n    mask.endFill()\n    subject.object.mask = mask\n    return new Instance({\n      context:  context,\n      object:   mask,\n      parent:   subject.object,\n    })\n  }\n}\n\nexport class GroupNode extends SkinNode {\n  compile(compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    this.display  = DisplayObject.compile(compiler, $el)\n    let maskFrame = parseFrame($el.attr('mask') || '')\n    if (maskFrame) this.mask = new Mask(maskFrame)\n  }\n  instantiate(context, container) {\n    let object = new PIXI.DisplayObjectContainer()\n    let concerns = [ this.display ]\n    if (this.mask) {\n      concerns.push(this.mask)\n    }\n    return new Instance({\n      context:  context,\n      object:   object,\n      parent:   container,\n      concerns: concerns,\n      children: this.children,\n    })\n  }\n}\n\nexport default GroupNode\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/nodes/group.js\n **/","\nimport PIXI           from 'pixi.js'\n\nimport SkinNode       from './lib/base'\nimport Instance       from './lib/instance'\nimport Expression     from '../expression'\n\nexport class IfNode extends SkinNode {\n  compile(compiler, $el) {\n    let children = compiler.compileChildren($el)\n    if (children.length !== 1) {\n      throw new Error('Expected exactly 1 children, ' +\n        children.length + ' found')\n    }\n    this.child    = children[0]\n    this.key      = new Expression($el.attr('key'))\n    this.value    = String($el.attr('value'))\n  }\n  instantiate(context, container) {\n    let object    = new PIXI.DisplayObjectContainer()\n    let expr      = this.key\n    let value     = this.value\n    let childNode = this.child\n    let child     = null\n    return new Instance({\n      context:  context,\n      parent:   container,\n      object:   object,\n      onData: (data) => {\n        if (String(expr(data)) === value) {\n          if (child === null) {\n            child = childNode.instantiate(context, object)\n          }\n          child.push(data)\n        } else {\n          if (child !== null) {\n            child.destroy()\n            child = null\n          }\n        }\n      },\n    })\n  }\n}\n\nexport default IfNode\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/nodes/if.js\n **/","\nimport PIXI           from 'pixi.js'\n\nimport SkinNode       from './lib/base'\nimport Instance       from './lib/instance'\nimport Expression     from '../expression'\n\nfunction ChildManager(expr, child, poolSize) {\n  return {\n    instantiate(context, subject) {\n      let instances = new Map()\n      let pool      = []\n      initPool()\n      return new Instance({\n        context:  context,\n        onData:   (data) => {\n          update(expr(data))\n        },\n      })\n      function initPool() {\n        var instance\n        console.log('init i' + poolSize)\n        for (var i = 0; i < poolSize; i++) {\n          instance = child.instantiate(context, subject.object)\n          instance.detach()\n          pool.push(instance)\n        }\n      }\n      function update(array) {\n        var unused = new Set(instances.keys())\n        var key\n        var item\n        var instance\n        if (!array) array = []\n        for (var i = 0; i < array.length; i++) {\n          item  = array[i]\n          key = item.key\n          if (instances.has(key)) {\n            instance = instances.get(key)\n          } else {\n            instance = createInstance()\n            instances.set(key, instance)\n          }\n          instance.push(item)\n          unused.delete(key)\n        }\n        for (key of unused) {\n          instance = instances.get(key)\n          instance.detach()\n          instances.delete(key)\n          pool.push(instance)\n        }\n      }\n      function createInstance() {\n        var instance = pool.pop()\n        if (instance) {\n          instance.attachTo(subject.object)\n        } else {\n          instance = child.instantiate(context, subject.object)\n        }\n        return instance\n      }\n    }\n  }\n}\n\nexport class ObjectNode extends SkinNode {\n  compile(compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    if (this.children.length !== 1) {\n      throw new Error('Expected exactly 1 children, ' +\n        this.children.length + ' given')\n    }\n    this.pool     = +$el.attr('pool') || 1\n    this.key      = new Expression($el.attr('key'))\n  }\n  instantiate(context, container) {\n    let batch = new PIXI.SpriteBatch()\n    let manager = new ChildManager(this.key, this.children[0], this.pool)\n    return new Instance({\n      context:  context,\n      parent:   container,\n      object:   batch,\n      concerns: [manager],\n    })\n  }\n}\n\nexport default ObjectNode\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/nodes/object.js\n **/","\nimport PIXI      from 'pixi.js'\n\nimport SkinNode  from './lib/base'\nimport Instance  from './lib/instance'\n\nexport class SkinRootNode extends SkinNode {\n  compile(compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    this.width    = +$el.attr('width')\n    this.height   = +$el.attr('height')\n  }\n  instantiate(context) {\n    let stage = new PIXI.Stage(0x090807)\n    return new Instance({\n      context:  context,\n      object:   stage,\n      children: this.children,\n    })\n  }\n}\n\nexport default SkinRootNode\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/nodes/skin-root.js\n **/","\nimport PIXI           from 'pixi.js'\n\nimport SkinNode       from './lib/base'\nimport Instance       from './lib/instance'\nimport { parseFrame } from './lib/utils'\n\nimport DisplayObject  from './concerns/display-object'\n\nexport class SpriteNode extends SkinNode {\n  compile(compiler, $el) {\n    this.url      = compiler.resources.get($el.attr('image'))\n    this.display  = DisplayObject.compile(compiler, $el)\n    this.frame    = parseFrame($el.attr('frame') || '')\n  }\n  instantiate(context, container) {\n    let sprite = new PIXI.Sprite(this.getTexture())\n    return new Instance({\n      context:  context,\n      object:   sprite,\n      parent:   container,\n      concerns: [this.display],\n    })\n  }\n  getTexture() {\n    if (this._texture) return this._texture\n    let scaleMode = PIXI.scaleModes.NEAREST\n    let base      = PIXI.BaseTexture.fromImage(this.url, undefined, scaleMode)\n    let texture   = new PIXI.Texture(base, this.frame)\n    this._texture = texture\n    return texture\n  }\n}\n\nexport default SpriteNode\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/nodes/sprite.js\n **/","\nimport PIXI           from 'pixi.js'\n\nimport SkinNode       from './lib/base'\nimport Instance       from './lib/instance'\nimport DisplayObject  from './concerns/display-object'\nimport Expression     from '../expression'\n\nexport class TextNode extends SkinNode {\n  compile(compiler, $el) {\n    this.font     = $el.attr('font')\n    this.text     = $el.attr('text')\n    this.data     = new Expression($el.attr('data') || '0')\n    this.display  = DisplayObject.compile(compiler, $el)\n    this.align    = $el.attr('align') === 'center' ? 0.5 : 0\n  }\n  instantiate(context, container) {\n    let text = new PIXI.BitmapText(this.text, { font: this.font })\n    let object = new PIXI.DisplayObjectContainer()\n    object.addChild(text)\n    return new Instance({\n      context:  context,\n      parent:   container,\n      object:   object,\n      concerns: [this.display],\n      bindings: [\n        [\n          this.data,\n          v => {\n            text.setText(this.text.replace('%s', v))\n            text.x = text.width * -this.align\n          },\n        ],\n      ],\n    })\n  }\n}\n\nexport default TextNode\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/nodes/text.js\n **/","\nimport _ from 'lodash'\n\n/**\n * The resources class contains a mapping from an image \"src\" to the resolved\n * image \"url.\"\n */\nexport class Resources {\n  constructor() {\n    this._map = { }\n  }\n  add(src, url) {\n    this._map[src] = url\n  }\n  get(src) {\n    if (!(src in this._map)) throw new Error('Not registered: ' + src)\n    return this._map[src]\n  }\n  get urls() {\n    return _.values(this._map)\n  }\n}\n\nexport default Resources\n\n\n\n/** WEBPACK FOOTER **\n ** ./scintillator/resources.js\n **/","var lerp = require('lerp-array')\nvar Property = require('./property')\n\nfunction indexOfName(list, name) {\n\tfor (var i=0; i<list.length; i++)\n\t\tif (list[i].name === name)\n\t\t\treturn i\n\treturn -1\n}\n\nfunction TimelineBase(data) {\n\tif (!(this instanceof TimelineBase))\n\t\treturn new TimelineBase(data)\n\t\n\tthis.properties = []\n\n\tif (data)\n\t\tthis.load(data)\n}\n\nTimelineBase.prototype.dispose = function() {\n\tthis.properties.forEach(function(p) {\n\t\tp.dispose()\n\t})\n\tthis.properties.length = 0 \n}\n\nTimelineBase.prototype.addProperty = function(propData) {\n\tthis.properties.push(new Property(propData))\n}\n\n//Finds the max duration of all properties\nTimelineBase.prototype.duration = function() {\n\tvar maxTime = 0\n\tfor (var j=0; j<this.properties.length; j++) {\n\t\tvar prop = this.properties[j]\n\t\tvar frames = prop.keyframes.frames\n\t\tfor (var i=0; i<frames.length; i++) \n\t\t\tmaxTime = Math.max(frames[i].time, maxTime)\n\t}\n\treturn maxTime\n}\n\n//Returns the first control by the specified name or index\nTimelineBase.prototype.property = function(prop) {\n\tvar idx = typeof prop === 'number' ? prop : indexOfName(this.properties, prop)\n\treturn idx<0 ? undefined : this.properties[idx]\n}\n\n//Loads timeline animation data\nTimelineBase.prototype.load = function(data) {\n\tthis.dispose()\n\n\tif (!data)\n\t\treturn\n\n\tthis.properties = data.map(function(d) {\n\t\treturn new Property(d)\n\t})\n}\n\nTimelineBase.prototype.export = function() {\n\treturn this.properties.map(function(p) {\n\t\treturn p.export()\n\t})\n}\n\n//Eases the time; by default only linear ease is supported (entry point exposes others)\nTimelineBase.prototype.ease = function(name, t) {\n\treturn t\n}\n\n//Interpolate between two frames; subclasses can override to provide custom \n//interpolators (e.g. quaternions, paths, etc)\nTimelineBase.prototype.interpolate = function(property, frame1, frame2, t) {\n\treturn lerp(frame1.value, frame2.value, t)\n}\n\n//Determine the value at the given time stamp of the specified property\nTimelineBase.prototype.valueOf = function(time, property) {\n\tvar keys = property.keyframes,\n\t\tv = keys.interpolation(time),\n\t\tv0 = v[0],\n\t\tv1 = v[1],\n\t\tt = v[2]\n\n\t//return default value of property\n\tif (v0 === -1 || v1 === -1)\n\t\treturn property.value\n\n\tvar start = keys.frames[v0],\n\t\tend = keys.frames[v1]\n\n\t//frames match, return the first\n\tif (v0 === v1)\n\t\treturn start.value\n\n\t//ease and interpolate frames\n\telse {\n\t\tvar easeName = end.ease\n\t\tif (easeName) //remap time with easing equation\n\t\t\tt = this.ease(easeName, t)\n\t\treturn this.interpolate(property, start, end, t)\n\t}\n}\n\n//Convenience to get the values of all properties at a given time stamp\nTimelineBase.prototype.values = function(time, out) {\n\tif (!out)\n\t\tout = {}\n\tfor (var i=0; i<this.properties.length; i++) {\n\t\tvar prop = this.properties[i]\n\t\tout[prop.name] = this.valueOf(time, prop)\n\t}\n\treturn out\n}\n\nmodule.exports = TimelineBase\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/base.js\n ** module id = 295\n ** module chunks = 2 6 7\n **/","var eases = require('eases')\nvar inherits = require('inherits')\nvar Base = require('./base')\n\nfunction BasicTimeline(data) {\n\tif (!(this instanceof BasicTimeline))\n\t\treturn new BasicTimeline(data)\n\tBase.call(this, data)\n}\n\ninherits(BasicTimeline, Base)\n\nBasicTimeline.prototype.ease = function(name, t) {\n\treturn eases[name](t)\n}\n\nmodule.exports = BasicTimeline\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/index.js\n ** module id = 296\n ** module chunks = 2 6 7\n **/","function backInOut(t) {\n  var s = 1.70158 * 1.525\n  if ((t *= 2) < 1)\n    return 0.5 * (t * t * ((s + 1) * t - s))\n  return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2)\n}\n\nmodule.exports = backInOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/back-in-out.js\n ** module id = 297\n ** module chunks = 2 6 7\n **/","function backIn(t) {\n  var s = 1.70158\n  return t * t * ((s + 1) * t - s)\n}\n\nmodule.exports = backIn\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/back-in.js\n ** module id = 298\n ** module chunks = 2 6 7\n **/","function backOut(t) {\n  var s = 1.70158\n  return --t * t * ((s + 1) * t + s) + 1\n}\n\nmodule.exports = backOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/back-out.js\n ** module id = 299\n ** module chunks = 2 6 7\n **/","var bounceOut = require('./bounce-out')\n\nfunction bounceInOut(t) {\n  return t < 0.5\n    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5\n}\n\nmodule.exports = bounceInOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/bounce-in-out.js\n ** module id = 300\n ** module chunks = 2 6 7\n **/","var bounceOut = require('./bounce-out')\n\nfunction bounceIn(t) {\n  return 1.0 - bounceOut(1.0 - t)\n}\n\nmodule.exports = bounceIn\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/bounce-in.js\n ** module id = 301\n ** module chunks = 2 6 7\n **/","function circInOut(t) {\n  if ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1)\n  return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1)\n}\n\nmodule.exports = circInOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/circ-in-out.js\n ** module id = 302\n ** module chunks = 2 6 7\n **/","function circIn(t) {\n  return 1.0 - Math.sqrt(1.0 - t * t)\n}\n\nmodule.exports = circIn\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/circ-in.js\n ** module id = 303\n ** module chunks = 2 6 7\n **/","function circOut(t) {\n  return Math.sqrt(1 - ( --t * t ))\n}\n\nmodule.exports = circOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/circ-out.js\n ** module id = 304\n ** module chunks = 2 6 7\n **/","function cubicInOut(t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0\n}\n\nmodule.exports = cubicInOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/cubic-in-out.js\n ** module id = 305\n ** module chunks = 2 6 7\n **/","function cubicIn(t) {\n  return t * t * t\n}\n\nmodule.exports = cubicIn\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/cubic-in.js\n ** module id = 306\n ** module chunks = 2 6 7\n **/","function cubicOut(t) {\n  var f = t - 1.0\n  return f * f * f + 1.0\n}\n\nmodule.exports = cubicOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/cubic-out.js\n ** module id = 307\n ** module chunks = 2 6 7\n **/","function elasticInOut(t) {\n  return t < 0.5\n    ? 0.5 * Math.sin(+13.0 * Math.PI/2 * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n    : 0.5 * Math.sin(-13.0 * Math.PI/2 * ((2.0 * t - 1.0) + 1.0)) * Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) + 1.0\n}\n\nmodule.exports = elasticInOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/elastic-in-out.js\n ** module id = 308\n ** module chunks = 2 6 7\n **/","function elasticIn(t) {\n  return Math.sin(13.0 * t * Math.PI/2) * Math.pow(2.0, 10.0 * (t - 1.0))\n}\n\nmodule.exports = elasticIn\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/elastic-in.js\n ** module id = 309\n ** module chunks = 2 6 7\n **/","function elasticOut(t) {\n  return Math.sin(-13.0 * (t + 1.0) * Math.PI/2) * Math.pow(2.0, -10.0 * t) + 1.0\n}\n\nmodule.exports = elasticOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/elastic-out.js\n ** module id = 310\n ** module chunks = 2 6 7\n **/","function expoInOut(t) {\n  return (t === 0.0 || t === 1.0)\n    ? t\n    : t < 0.5\n      ? +0.5 * Math.pow(2.0, (20.0 * t) - 10.0)\n      : -0.5 * Math.pow(2.0, 10.0 - (t * 20.0)) + 1.0\n}\n\nmodule.exports = expoInOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/expo-in-out.js\n ** module id = 311\n ** module chunks = 2 6 7\n **/","function expoIn(t) {\n  return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0))\n}\n\nmodule.exports = expoIn\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/expo-in.js\n ** module id = 312\n ** module chunks = 2 6 7\n **/","function expoOut(t) {\n  return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t)\n}\n\nmodule.exports = expoOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/expo-out.js\n ** module id = 313\n ** module chunks = 2 6 7\n **/","module.exports = {\n\t'backInOut': require('./back-in-out'),\n\t'backIn': require('./back-in'),\n\t'backOut': require('./back-out'),\n\t'bounceInOut': require('./bounce-in-out'),\n\t'bounceIn': require('./bounce-in'),\n\t'bounceOut': require('./bounce-out'),\n\t'circInOut': require('./circ-in-out'),\n\t'circIn': require('./circ-in'),\n\t'circOut': require('./circ-out'),\n\t'cubicInOut': require('./cubic-in-out'),\n\t'cubicIn': require('./cubic-in'),\n\t'cubicOut': require('./cubic-out'),\n\t'elasticInOut': require('./elastic-in-out'),\n\t'elasticIn': require('./elastic-in'),\n\t'elasticOut': require('./elastic-out'),\n\t'expoInOut': require('./expo-in-out'),\n\t'expoIn': require('./expo-in'),\n\t'expoOut': require('./expo-out'),\n\t'linear': require('./linear'),\n\t'quadInOut': require('./quad-in-out'),\n\t'quadIn': require('./quad-in'),\n\t'quadOut': require('./quad-out'),\n\t'quartInOut': require('./quart-in-out'),\n\t'quartIn': require('./quart-in'),\n\t'quartOut': require('./quart-out'),\n\t'quintInOut': require('./quint-in-out'),\n\t'quintIn': require('./quint-in'),\n\t'quintOut': require('./quint-out'),\n\t'sineInOut': require('./sine-in-out'),\n\t'sineIn': require('./sine-in'),\n\t'sineOut': require('./sine-out')\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/index.js\n ** module id = 314\n ** module chunks = 2 6 7\n **/","function linear(t) {\n  return t\n}\n\nmodule.exports = linear\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/linear.js\n ** module id = 315\n ** module chunks = 2 6 7\n **/","function quadInOut(t) {\n    t /= 0.5\n    if (t < 1) return 0.5*t*t\n    t--\n    return -0.5 * (t*(t-2) - 1)\n}\n\nmodule.exports = quadInOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/quad-in-out.js\n ** module id = 316\n ** module chunks = 2 6 7\n **/","function quadIn(t) {\n  return t * t\n}\n\nmodule.exports = quadIn\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/quad-in.js\n ** module id = 317\n ** module chunks = 2 6 7\n **/","function quadOut(t) {\n  return -t * (t - 2.0)\n}\n\nmodule.exports = quadOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/quad-out.js\n ** module id = 318\n ** module chunks = 2 6 7\n **/","function quarticInOut(t) {\n  return t < 0.5\n    ? +8.0 * Math.pow(t, 4.0)\n    : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0\n}\n\nmodule.exports = quarticInOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/quart-in-out.js\n ** module id = 319\n ** module chunks = 2 6 7\n **/","function quarticIn(t) {\n  return Math.pow(t, 4.0)\n}\n\nmodule.exports = quarticIn\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/quart-in.js\n ** module id = 320\n ** module chunks = 2 6 7\n **/","function quarticOut(t) {\n  return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0\n}\n\nmodule.exports = quarticOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/quart-out.js\n ** module id = 321\n ** module chunks = 2 6 7\n **/","function qinticInOut(t) {\n    if ( ( t *= 2 ) < 1 ) return 0.5 * t * t * t * t * t\n    return 0.5 * ( ( t -= 2 ) * t * t * t * t + 2 )\n}\n\nmodule.exports = qinticInOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/quint-in-out.js\n ** module id = 322\n ** module chunks = 2 6 7\n **/","function qinticIn(t) {\n  return t * t * t * t * t\n}\n\nmodule.exports = qinticIn\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/quint-in.js\n ** module id = 323\n ** module chunks = 2 6 7\n **/","function qinticOut(t) {\n  return --t * t * t * t * t + 1\n}\n\nmodule.exports = qinticOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/quint-out.js\n ** module id = 324\n ** module chunks = 2 6 7\n **/","function sineInOut(t) {\n  return -0.5 * (Math.cos(Math.PI*t) - 1)\n}\n\nmodule.exports = sineInOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/sine-in-out.js\n ** module id = 325\n ** module chunks = 2 6 7\n **/","function sineIn(t) {\n  return 1 - Math.cos( t * Math.PI / 2 )\n}\n\nmodule.exports = sineIn\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/sine-in.js\n ** module id = 326\n ** module chunks = 2 6 7\n **/","function sineOut(t) {\n  return Math.sin(t * Math.PI/2)\n}\n\nmodule.exports = sineOut\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/eases/sine-out.js\n ** module id = 327\n ** module chunks = 2 6 7\n **/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/inherits/inherits_browser.js\n ** module id = 328\n ** module chunks = 2 6 7\n **/","//Generic list of keyframes with timestamps and values\n\nvar lerp = require('lerp-array')\nvar range = require('unlerp')\nvar vec3 = require('gl-vec3/set')\n\nvar temp = [0, 0, 0]\n\nfunction sort(a, b) {\n    return a.time - b.time\n}\n\nfunction Keyframes(frames, sorted) {\n    if (!(this instanceof Keyframes)) \n        return new Keyframes(frames, sorted)\n    this.frames = frames||[]\n    if (!sorted)\n        this.sort()\n}\n\n//Finds the index of the nearest keyframe to the given time stamp.\n//If radius is specified, it will return the nearest only within that radius\nKeyframes.prototype.nearestIndex = function(time, radius) {\n    radius = typeof radius === 'number' ? radius : Number.MAX_VALUE\n    var minDist = Number.MAX_VALUE\n    var nearest = -1\n    for (var i=0; i<this.frames.length; i++) {\n        var dist = Math.abs(this.frames[i].time - time)\n        if (dist < minDist && dist <= radius) {\n            minDist = dist\n            nearest = i\n        }\n    }\n    return nearest\n}\n\n//Gets the keyframe at the index\nKeyframes.prototype.nearest = function(time, radius) {\n    var idx = this.nearestIndex(time, radius)\n    return idx === -1 ? null : this.frames[idx]\n}\n\n//Gets the keyframe at time\nKeyframes.prototype.get = function(time) {\n    return this.nearest(time, 0)\n}\n\n//Gets the keyframe index at time\nKeyframes.prototype.getIndex = function(time) {\n    return this.nearestIndex(time, 0)\n}\n\n//lerps the value at the specified time stamp\n//returns null if no keyframes exist\nKeyframes.prototype.value = function(time, ease) {\n    var v = this.interpolation(time)\n    if (v[0] === -1 || v[1] === -1)\n        return null\n\n    var startFrame = this.frames[ v[0] ]\n    var endFrame = this.frames[ v[1] ]\n    var t = v[2]\n    \n    //We ease from left keyframe to right, with a custom easing\n    //equation if specified\n    if (typeof ease === 'function')\n        return ease(startFrame, endFrame, t)\n\n    //Otherwise we assume the values are simple numbers and lerp them\n    return lerp(startFrame.value, endFrame.value, t)\n}\n\nKeyframes.prototype.interpolation = function(time) {\n    if (this.frames.length === 0)\n        return vec3(temp, -1, -1, 0)\n\n    var prev = -1\n    //get last keyframe to time\n    for (var i=this.frames.length-1; i>=0; i--) {\n        if (time >= this.frames[i].time) {\n            prev = i\n            break\n        }\n    }\n    \n    //start or end keyframes\n    if (prev === -1 || prev === this.frames.length-1) {\n        if (prev < 0)\n            prev = 0\n        return vec3(temp, prev, prev, 0)\n    } \n    else {\n        var startFrame = this.frames[prev]\n        var endFrame = this.frames[prev+1]\n\n        //clamp and get range\n        time = Math.max(startFrame.time, Math.min(time, endFrame.time))\n        var t = range(startFrame.time, endFrame.time, time)\n\n        //provide interpolation factor\n        return vec3(temp, prev, prev+1, t)\n    }\n}\n\nKeyframes.prototype.next = function(time) {\n    if (this.frames.length < 1)\n        return null\n\n    var cur = -1\n    //get last keyframe to time\n    for (var i=0; i<this.frames.length; i++) {\n        if (time < this.frames[i].time) {\n            cur = i\n            break\n        }\n    }\n    return cur===-1 ? null : this.frames[cur]\n}\n\nKeyframes.prototype.previous = function(time) {\n    if (this.frames.length < 1)\n        return null\n\n    var cur = -1\n    //get last keyframe to time\n    for (var i=this.frames.length-1; i>=0; i--) {\n        if (time > this.frames[i].time) {\n            cur = i\n            break\n        }\n    }\n    return cur===-1 ? null : this.frames[cur]\n}\n\n//Adds a frame at the given time stamp\nKeyframes.prototype.add = function(frame) {\n    this.frames.push(frame)\n    this.sort()\n}\n\n//convenience for .frames.splice\n//if items are inserted, a sort will be applied after insertion\nKeyframes.prototype.splice = function(index, howmany, itemsN) {\n    this.frames.splice.apply(this.frames, arguments)\n    if (arguments.length > 2)\n        this.sort()\n}\n\n//sorts the keyframes. you should do this after \n//adding new keyframes that are not in linear time\nKeyframes.prototype.sort = function() {\n    this.frames.sort(sort)\n}\n\n//Clears the keyframe list\nKeyframes.prototype.clear = function() {\n    this.frames.length = 0\n}\n\nObject.defineProperty(Keyframes.prototype, \"count\", {\n    get: function() {\n        return this.frames.length\n    }\n})\n\nmodule.exports = Keyframes\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/keyframes/index.js\n ** module id = 329\n ** module chunks = 2 6 7\n **/","module.exports = set;\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nfunction set(out, x, y, z) {\n    out[0] = x\n    out[1] = y\n    out[2] = z\n    return out\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/keyframes/~/gl-vec3/set.js\n ** module id = 330\n ** module chunks = 2 6 7\n **/","module.exports = function range(min, max, value) {\n  return (value - min) / (max - min)\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/keyframes/~/unlerp/index.js\n ** module id = 331\n ** module chunks = 2 6 7\n **/","function lerp(v0, v1, t) {\n    return v0*(1-t)+v1*t\n}\nmodule.exports = lerp\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/lerp-array/~/lerp/index.js\n ** module id = 332\n ** module chunks = 2 6 7\n **/","module.exports = extend\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/~/xtend/immutable.js\n ** module id = 333\n ** module chunks = 2 6 7\n **/","//a \"Property\" maintains a set of tweenable values\n//for e.g.:\n//  position [x, y]\n//  color [r, g, b, a]\n//  alpha [a]\n\n//It will also store application-level flags like\n//whether or not your data is hidden, or what type\n//of property you might be dealing with\n\nvar keyframes = require('keyframes')\nvar xtend = require('xtend')\n\nfunction Property(data) {\n\tif (!(this instanceof Property)) \n\t\treturn new Property(data)\n\n\tthis.keyframes = keyframes()\n\tthis.value = null\n\tthis.name = ''\n\tif (data)\n\t\tthis.load(data)\n}\n\nProperty.prototype.dispose = function() {\n\tthis.keyframes.clear()\n}\n\nProperty.prototype.export = function() {\n\treturn xtend(this, {\n\t\tkeyframes: this.keyframes.frames\n\t})\n}\n\nProperty.prototype.load = function(data) {\n\tthis.dispose()\n\n\tif (!data)\n\t\treturn\n\t\n\tfor (var k in data) {\n\t\tif (!data.hasOwnProperty(k))\n\t\t\tcontinue\n\t\tif (k === 'keyframes')\n\t\t\tthis.keyframes.frames = data.keyframes\n\t\telse\n\t\t\tthis[k] = data[k]\n\t}\n}\n\nmodule.exports = Property\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/keytime/property.js\n ** module id = 334\n ** module chunks = 2 6 7\n **/","module.exports = (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { expr: peg$parseexpr },\n        peg$startRuleFunction  = peg$parseexpr,\n\n        peg$c0 = peg$FAILED,\n        peg$c1 = [],\n        peg$c2 = \"||\",\n        peg$c3 = { type: \"literal\", value: \"||\", description: \"\\\"||\\\"\" },\n        peg$c4 = function(first, rest) {\n              return combine(first, rest);\n            },\n        peg$c5 = \"&&\",\n        peg$c6 = { type: \"literal\", value: \"&&\", description: \"\\\"&&\\\"\" },\n        peg$c7 = \"+\",\n        peg$c8 = { type: \"literal\", value: \"+\", description: \"\\\"+\\\"\" },\n        peg$c9 = \"-\",\n        peg$c10 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n        peg$c11 = \"*\",\n        peg$c12 = { type: \"literal\", value: \"*\", description: \"\\\"*\\\"\" },\n        peg$c13 = \"/\",\n        peg$c14 = { type: \"literal\", value: \"/\", description: \"\\\"/\\\"\" },\n        peg$c15 = \"%\",\n        peg$c16 = { type: \"literal\", value: \"%\", description: \"\\\"%\\\"\" },\n        peg$c17 = \"(\",\n        peg$c18 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n        peg$c19 = \")\",\n        peg$c20 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n        peg$c21 = function(expr) { return \"(\" + expr + \")\"; },\n        peg$c22 = \"!\",\n        peg$c23 = { type: \"literal\", value: \"!\", description: \"\\\"!\\\"\" },\n        peg$c24 = function(val) { return \"!\" + val },\n        peg$c25 = { type: \"other\", description: \"number\" },\n        peg$c26 = null,\n        peg$c27 = function() { return text(); },\n        peg$c28 = /^[eE]/,\n        peg$c29 = { type: \"class\", value: \"[eE]\", description: \"[eE]\" },\n        peg$c30 = /^[0-9]/,\n        peg$c31 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c32 = \".\",\n        peg$c33 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n        peg$c34 = \"0\",\n        peg$c35 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n        peg$c36 = /^[1-9]/,\n        peg$c37 = { type: \"class\", value: \"[1-9]\", description: \"[1-9]\" },\n        peg$c38 = /^[a-zA-Z]/,\n        peg$c39 = { type: \"class\", value: \"[a-zA-Z]\", description: \"[a-zA-Z]\" },\n        peg$c40 = /^[a-zA-Z0-9_]/,\n        peg$c41 = { type: \"class\", value: \"[a-zA-Z0-9_]\", description: \"[a-zA-Z0-9_]\" },\n        peg$c42 = function() { return \"get(\" + JSON.stringify(text()) + \")\" },\n        peg$c43 = { type: \"other\", description: \"whitespace\" },\n        peg$c44 = /^[ \\t\\n\\r]/,\n        peg$c45 = { type: \"class\", value: \"[ \\\\t\\\\n\\\\r]\", description: \"[ \\\\t\\\\n\\\\r]\" },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parseexpr() {\n      var s0;\n\n      s0 = peg$parselogical_or();\n\n      return s0;\n    }\n\n    function peg$parselogical_or() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parselogical_and();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c2) {\n            s5 = peg$c2;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parselogical_and();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c2) {\n              s5 = peg$c2;\n              peg$currPos += 2;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parselogical_and();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c0;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c4(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parselogical_and() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseadd();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c5) {\n            s5 = peg$c5;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseadd();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c5) {\n              s5 = peg$c5;\n              peg$currPos += 2;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseadd();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c0;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c4(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseadd() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemul();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c7;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c9;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c10); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsemul();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s5 = peg$c7;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n            if (s5 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 45) {\n                s5 = peg$c9;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c10); }\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsemul();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c0;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c4(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemul() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseval();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c11;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c13;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n            if (s5 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 37) {\n                s5 = peg$c15;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c16); }\n              }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseval();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 42) {\n              s5 = peg$c11;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c12); }\n            }\n            if (s5 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 47) {\n                s5 = peg$c13;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c14); }\n              }\n              if (s5 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 37) {\n                  s5 = peg$c15;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c16); }\n                }\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseval();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c0;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c4(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseval() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c17;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parselogical_or();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c19;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c20); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c21(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s1 = peg$c22;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseval();\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c24(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsenumber();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseidentifier();\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c9;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c10); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c26;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseint();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsefrac();\n          if (s3 === peg$FAILED) {\n            s3 = peg$c26;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseexp();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c26;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c27();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c25); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseexp() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      if (peg$c28.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s2 = peg$c7;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$c26;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c30.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c31); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c30.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c31); }\n              }\n            }\n          } else {\n            s3 = peg$c0;\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsefrac() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c32;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c30.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c31); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c30.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c31); }\n            }\n          }\n        } else {\n          s2 = peg$c0;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseint() {\n      var s0, s1, s2, s3;\n\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s0 = peg$c34;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (peg$c36.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c37); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          if (peg$c30.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c31); }\n          }\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c30.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c31); }\n            }\n          }\n          if (s2 !== peg$FAILED) {\n            s1 = [s1, s2];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseidentifier() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c38.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c38.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c39); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c40.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c40.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c41); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c42();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c44.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c44.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n\n      return s0;\n    }\n\n\n      function operate(item) {\n        var operator = item[1]\n        var operand = item[3]\n        return \" \" + operator + \" \" + operand\n      }\n      function combine(first, rest) {\n        return first + rest.map(operate).join('')\n      }\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scintillator/expression/parser.pegjs\n ** module id = 336\n ** module chunks = 2 6 7\n **/","\nimport * as Scintillator from 'bemuse/scintillator'\n\nimport co from 'co'\nimport $ from 'jquery'\nimport Chance from 'chance'\n\nimport GameNote from 'bemuse/game/data/game-note'\nimport NoteArea from 'bemuse/game/display/note-area'\n\nexport function main() {\n  co(function*() {\n    let skin      = yield Scintillator.load(Scintillator.getSkinUrl())\n    let context   = new Scintillator.Context(skin)\n\n    let notes     = generateRandomNotes()\n    let area      = new NoteArea(notes, [])\n\n    let data = { }\n    let columns = ['SC', '1', '2', '3', '4', '5', '6', '7']\n\n    function updateNotes() {\n      let p = data.t * 192 / 60\n      for (let column of columns) {\n        data[`p1_note_${column}`].length = 0\n        data[`p1_longnote_${column}`].length = 0\n      }\n      let entities = area.getVisibleNotes(p, p + (5 / 2.5))\n      for (let entity of entities) {\n        let note = entity.note\n        let column = note.column\n        if (entity.height) {\n          data[`p1_longnote_${column}`].push({\n            key:    note.id,\n            y:      entity.y,\n            height: entity.height,\n            active: entity.y + entity.height > 1,\n            missed: entity.y + entity.height > 1.1 && note.id % 5 === 0,\n          })\n        } else {\n          data[`p1_note_${column}`].push({\n            key:    note.id,\n            y:      entity.y,\n          })\n        }\n      }\n    }\n\n    for (let column of columns) {\n      data[`p1_note_${column}`] = []\n      data[`p1_longnote_${column}`] = []\n    }\n\n    let started = new Date().getTime()\n    let draw = () => {\n      data.t = (new Date().getTime() - started) / 1000\n      updateNotes()\n      context.render(data)\n    }\n    draw()\n    requestAnimationFrame(function f() {\n      draw()\n      requestAnimationFrame(f)\n    })\n    showCanvas(context.view)\n  })\n  .done()\n\n}\n\nfunction generateRandomNotes() {\n  let notes = []\n  let chance = new Chance(1234)\n  let columns = ['SC', '1', '2', '3', '4', '5', '6', '7']\n  let nextId = 1\n  for (let column of columns) {\n    let position = 4\n    for (let j = 0; j < 2000; j++) {\n      position += chance.integer({ min: 1, max: 6 }) / 4\n      let length = chance.bool({ likelihood: 10 }) ?\n                      chance.integer({ min: 1, max: 24 }) / 4 : 0\n      let id = nextId++\n      if (length > 0) {\n        let end = { position: position + length, beat: 0, time: 0 }\n        notes.push(new GameNote({ position: position, end, column, id,\n                    beat: 0, time: 0, }))\n        position = end.position\n      } else {\n        notes.push(new GameNote({ position: position, column, id,\n                    beat: 0, time: 0, end: null, }))\n      }\n    }\n  }\n  return notes\n}\n\nfunction showCanvas(view) {\n\n  var { width, height } = view\n\n  view.style.display = 'block'\n  view.style.margin = '0 auto'\n\n  document.body.appendChild(view)\n  resize()\n  $(window).on('resize', resize)\n\n  function resize() {\n    var scale = Math.min(\n      window.innerWidth / width,\n      window.innerHeight / height\n    )\n    view.style.width = Math.round(width * scale) + 'px'\n    view.style.height = Math.round(height * scale) + 'px'\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./devtools/test-skin.js\n **/","//  Chance.js 0.7.3\n//  http://chancejs.com\n//  (c) 2013 Victor Quinn\n//  Chance may be freely distributed or modified under the MIT license.\n\n(function () {\n\n    // Constants\n    var MAX_INT = 9007199254740992;\n    var MIN_INT = -MAX_INT;\n    var NUMBERS = '0123456789';\n    var CHARS_LOWER = 'abcdefghijklmnopqrstuvwxyz';\n    var CHARS_UPPER = CHARS_LOWER.toUpperCase();\n    var HEX_POOL  = NUMBERS + \"abcdef\";\n\n    // Cached array helpers\n    var slice = Array.prototype.slice;\n\n    // Constructor\n    function Chance (seed) {\n        if (!(this instanceof Chance)) {\n            return new Chance(seed);\n        }\n\n        // if user has provided a function, use that as the generator\n        if (typeof seed === 'function') {\n            this.random = seed;\n            return this;\n        }\n\n        var seedling;\n\n        if (arguments.length) {\n            // set a starting value of zero so we can add to it\n            this.seed = 0;\n        }\n        // otherwise, leave this.seed blank so that MT will recieve a blank\n\n        for (var i = 0; i < arguments.length; i++) {\n            seedling = 0;\n            if (typeof arguments[i] === 'string') {\n                for (var j = 0; j < arguments[i].length; j++) {\n                    seedling += (arguments[i].length - j) * arguments[i].charCodeAt(j);\n                }\n            } else {\n                seedling = arguments[i];\n            }\n            this.seed += (arguments.length - i) * seedling;\n        }\n\n        // If no generator function was provided, use our MT\n        this.mt = this.mersenne_twister(this.seed);\n        this.random = function () {\n            return this.mt.random(this.seed);\n        };\n\n        return this;\n    }\n\n    Chance.prototype.VERSION = \"0.7.3\";\n\n    // Random helper functions\n    function initOptions(options, defaults) {\n        options || (options = {});\n\n        if (defaults) {\n            for (var i in defaults) {\n                if (typeof options[i] === 'undefined') {\n                    options[i] = defaults[i];\n                }\n            }\n        }\n\n        return options;\n    }\n\n    function testRange(test, errorMessage) {\n        if (test) {\n            throw new RangeError(errorMessage);\n        }\n    }\n\n    /**\n     * Encode the input string with Base64.\n     */\n    var base64 = function() {\n        throw new Error('No Base64 encoder available.');\n    };\n\n    // Select proper Base64 encoder.\n    (function determineBase64Encoder() {\n        if (typeof btoa === 'function') {\n            base64 = btoa;\n        } else if (typeof Buffer === 'function') {\n            base64 = function(input) {\n                return new Buffer(input).toString('base64');\n            };\n        }\n    })();\n\n    // -- Basics --\n\n    Chance.prototype.bool = function (options) {\n\n        // likelihood of success (true)\n        options = initOptions(options, {likelihood : 50});\n\n        testRange(\n            options.likelihood < 0 || options.likelihood > 100,\n            \"Chance: Likelihood accepts values from 0 to 100.\"\n        );\n\n        return this.random() * 100 < options.likelihood;\n    };\n\n    Chance.prototype.character = function (options) {\n        options = initOptions(options);\n\n        var symbols = \"!@#$%^&*()[]\",\n            letters, pool;\n\n        testRange(\n            options.alpha && options.symbols,\n            \"Chance: Cannot specify both alpha and symbols.\"\n        );\n\n\n        if (options.casing === 'lower') {\n            letters = CHARS_LOWER;\n        } else if (options.casing === 'upper') {\n            letters = CHARS_UPPER;\n        } else {\n            letters = CHARS_LOWER + CHARS_UPPER;\n        }\n\n        if (options.pool) {\n            pool = options.pool;\n        } else if (options.alpha) {\n            pool = letters;\n        } else if (options.symbols) {\n            pool = symbols;\n        } else {\n            pool = letters + NUMBERS + symbols;\n        }\n\n        return pool.charAt(this.natural({max: (pool.length - 1)}));\n    };\n\n    // Note, wanted to use \"float\" or \"double\" but those are both JS reserved words.\n\n    // Note, fixed means N OR LESS digits after the decimal. This because\n    // It could be 14.9000 but in JavaScript, when this is cast as a number,\n    // the trailing zeroes are dropped. Left to the consumer if trailing zeroes are\n    // needed\n    Chance.prototype.floating = function (options) {\n        var num;\n\n        options = initOptions(options, {fixed : 4});\n        var fixed = Math.pow(10, options.fixed);\n\n        testRange(\n            options.fixed && options.precision,\n            \"Chance: Cannot specify both fixed and precision.\"\n        );\n\n        var max = MAX_INT / fixed;\n        var min = -max;\n\n        testRange(\n            options.min && options.fixed && options.min < min,\n            \"Chance: Min specified is out of range with fixed. Min should be, at least, \" + min\n        );\n        testRange(\n            options.max && options.fixed && options.max > max,\n            \"Chance: Max specified is out of range with fixed. Max should be, at most, \" + max\n        );\n\n        options = initOptions(options, {min : min, max : max});\n\n        // Todo - Make this work!\n        // options.precision = (typeof options.precision !== \"undefined\") ? options.precision : false;\n\n        num = this.integer({min: options.min * fixed, max: options.max * fixed});\n        var num_fixed = (num / fixed).toFixed(options.fixed);\n\n        return parseFloat(num_fixed);\n    };\n\n    // NOTE the max and min are INCLUDED in the range. So:\n    //\n    // chance.natural({min: 1, max: 3});\n    //\n    // would return either 1, 2, or 3.\n\n    Chance.prototype.integer = function (options) {\n\n        // 9007199254740992 (2^53) is the max integer number in JavaScript\n        // See: http://vq.io/132sa2j\n        options = initOptions(options, {min: MIN_INT, max: MAX_INT});\n\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return Math.floor(this.random() * (options.max - options.min + 1) + options.min);\n    };\n\n    Chance.prototype.natural = function (options) {\n        options = initOptions(options, {min: 0, max: MAX_INT});\n        return this.integer(options);\n    };\n\n    Chance.prototype.string = function (options) {\n        options = initOptions(options);\n\n        var length = options.length || this.natural({min: 5, max: 20}),\n            pool = options.pool,\n            text = this.n(this.character, length, {pool: pool});\n\n        return text.join(\"\");\n    };\n\n    // -- End Basics --\n\n    // -- Helpers --\n\n    Chance.prototype.capitalize = function (word) {\n        return word.charAt(0).toUpperCase() + word.substr(1);\n    };\n\n    Chance.prototype.mixin = function (obj) {\n        for (var func_name in obj) {\n            Chance.prototype[func_name] = obj[func_name];\n        }\n        return this;\n    };\n\n    // Given a function that generates something random and a number of items to generate,\n    // return an array of items where none repeat.\n    Chance.prototype.unique = function(fn, num, options) {\n        options = initOptions(options, {\n            // Default comparator to check that val is not already in arr.\n            // Should return `false` if item not in array, `true` otherwise\n            comparator: function(arr, val) {\n                return arr.indexOf(val) !== -1;\n            }\n        });\n\n        var arr = [], count = 0, result, MAX_DUPLICATES = num * 50, params = slice.call(arguments, 2);\n\n        while (arr.length < num) {\n            result = fn.apply(this, params);\n            if (!options.comparator(arr, result)) {\n                arr.push(result);\n                // reset count when unique found\n                count = 0;\n            }\n\n            if (++count > MAX_DUPLICATES) {\n                throw new RangeError(\"Chance: num is likely too large for sample set\");\n            }\n        }\n        return arr;\n    };\n\n    /**\n     *  Gives an array of n random terms\n     *  @param fn the function that generates something random\n     *  @param n number of terms to generate\n     *  There can be more parameters after these. All additional parameters are provided to the given function\n     */\n    Chance.prototype.n = function(fn, n) {\n        if (typeof n === 'undefined') {\n            n = 1;\n        }\n        var i = n, arr = [], params = slice.call(arguments, 2);\n\n        // Providing a negative count should result in a noop.\n        i = Math.max( 0, i );\n\n        for (null; i--; null) {\n            arr.push(fn.apply(this, params));\n        }\n\n        return arr;\n    };\n\n    // H/T to SO for this one: http://vq.io/OtUrZ5\n    Chance.prototype.pad = function (number, width, pad) {\n        // Default pad to 0 if none provided\n        pad = pad || '0';\n        // Convert number to a string\n        number = number + '';\n        return number.length >= width ? number : new Array(width - number.length + 1).join(pad) + number;\n    };\n\n    Chance.prototype.pick = function (arr, count) {\n        if (arr.length === 0) {\n            throw new RangeError(\"Chance: Cannot pick() from an empty array\");\n        }\n        if (!count || count === 1) {\n            return arr[this.natural({max: arr.length - 1})];\n        } else {\n            return this.shuffle(arr).slice(0, count);\n        }\n    };\n\n    Chance.prototype.shuffle = function (arr) {\n        var old_array = arr.slice(0),\n            new_array = [],\n            j = 0,\n            length = Number(old_array.length);\n\n        for (var i = 0; i < length; i++) {\n            // Pick a random index from the array\n            j = this.natural({max: old_array.length - 1});\n            // Add it to the new array\n            new_array[i] = old_array[j];\n            // Remove that element from the original array\n            old_array.splice(j, 1);\n        }\n\n        return new_array;\n    };\n\n    // Returns a single item from an array with relative weighting of odds\n    Chance.prototype.weighted = function(arr, weights) {\n        if (arr.length !== weights.length) {\n            throw new RangeError(\"Chance: length of array and weights must match\");\n        }\n\n        // Handle weights that are less or equal to zero.\n        for (var weightIndex = weights.length - 1; weightIndex >= 0; --weightIndex) {\n            // If the weight is less or equal to zero, remove it and the value.\n            if (weights[weightIndex] <= 0) {\n                arr.splice(weightIndex,1);\n                weights.splice(weightIndex,1);\n            }\n        }\n\n        // If any of the weights are less than 1, we want to scale them up to whole\n        //   numbers for the rest of this logic to work\n        if (weights.some(function(weight) { return weight < 1; })) {\n            var min = weights.reduce(function(min, weight) {\n                return (weight < min) ? weight : min;\n            }, weights[0]);\n\n            var scaling_factor = 1 / min;\n\n            weights = weights.map(function(weight) {\n                return weight * scaling_factor;\n            });\n        }\n\n        var sum = weights.reduce(function(total, weight) {\n            return total + weight;\n        }, 0);\n\n        // get an index\n        var selected = this.natural({ min: 1, max: sum });\n\n        var total = 0;\n        var chosen;\n        // Using some() here so we can bail as soon as we get our match\n        weights.some(function(weight, index) {\n            if (selected <= total + weight) {\n                chosen = arr[index];\n                return true;\n            }\n            total += weight;\n            return false;\n        });\n\n        return chosen;\n    };\n\n    // -- End Helpers --\n\n    // -- Text --\n\n    Chance.prototype.paragraph = function (options) {\n        options = initOptions(options);\n\n        var sentences = options.sentences || this.natural({min: 3, max: 7}),\n            sentence_array = this.n(this.sentence, sentences);\n\n        return sentence_array.join(' ');\n    };\n\n    // Could get smarter about this than generating random words and\n    // chaining them together. Such as: http://vq.io/1a5ceOh\n    Chance.prototype.sentence = function (options) {\n        options = initOptions(options);\n\n        var words = options.words || this.natural({min: 12, max: 18}),\n            text, word_array = this.n(this.word, words);\n\n        text = word_array.join(' ');\n\n        // Capitalize first letter of sentence, add period at end\n        text = this.capitalize(text) + '.';\n\n        return text;\n    };\n\n    Chance.prototype.syllable = function (options) {\n        options = initOptions(options);\n\n        var length = options.length || this.natural({min: 2, max: 3}),\n            consonants = 'bcdfghjklmnprstvwz', // consonants except hard to speak ones\n            vowels = 'aeiou', // vowels\n            all = consonants + vowels, // all\n            text = '',\n            chr;\n\n        // I'm sure there's a more elegant way to do this, but this works\n        // decently well.\n        for (var i = 0; i < length; i++) {\n            if (i === 0) {\n                // First character can be anything\n                chr = this.character({pool: all});\n            } else if (consonants.indexOf(chr) === -1) {\n                // Last character was a vowel, now we want a consonant\n                chr = this.character({pool: consonants});\n            } else {\n                // Last character was a consonant, now we want a vowel\n                chr = this.character({pool: vowels});\n            }\n\n            text += chr;\n        }\n\n        return text;\n    };\n\n    Chance.prototype.word = function (options) {\n        options = initOptions(options);\n\n        testRange(\n            options.syllables && options.length,\n            \"Chance: Cannot specify both syllables AND length.\"\n        );\n\n        var syllables = options.syllables || this.natural({min: 1, max: 3}),\n            text = '';\n\n        if (options.length) {\n            // Either bound word by length\n            do {\n                text += this.syllable();\n            } while (text.length < options.length);\n            text = text.substring(0, options.length);\n        } else {\n            // Or by number of syllables\n            for (var i = 0; i < syllables; i++) {\n                text += this.syllable();\n            }\n        }\n        return text;\n    };\n\n    // -- End Text --\n\n    // -- Person --\n\n    Chance.prototype.age = function (options) {\n        options = initOptions(options);\n        var ageRange;\n\n        switch (options.type) {\n            case 'child':\n                ageRange = {min: 1, max: 12};\n                break;\n            case 'teen':\n                ageRange = {min: 13, max: 19};\n                break;\n            case 'adult':\n                ageRange = {min: 18, max: 65};\n                break;\n            case 'senior':\n                ageRange = {min: 65, max: 100};\n                break;\n            case 'all':\n                ageRange = {min: 1, max: 100};\n                break;\n            default:\n                ageRange = {min: 18, max: 65};\n                break;\n        }\n\n        return this.natural(ageRange);\n    };\n\n    Chance.prototype.birthday = function (options) {\n        options = initOptions(options, {\n            year: (new Date().getFullYear() - this.age(options))\n        });\n\n        return this.date(options);\n    };\n\n    // CPF; ID to identify taxpayers in Brazil\n    Chance.prototype.cpf = function () {\n        var n = this.n(this.natural, 9, { max: 9 });\n        var d1 = n[8]*2+n[7]*3+n[6]*4+n[5]*5+n[4]*6+n[3]*7+n[2]*8+n[1]*9+n[0]*10;\n        d1 = 11 - (d1 % 11);\n        if (d1>=10) {\n            d1 = 0;\n        }\n        var d2 = d1*2+n[8]*3+n[7]*4+n[6]*5+n[5]*6+n[4]*7+n[3]*8+n[2]*9+n[1]*10+n[0]*11;\n        d2 = 11 - (d2 % 11);\n        if (d2>=10) {\n            d2 = 0;\n        }\n        return ''+n[0]+n[1]+n[2]+'.'+n[3]+n[4]+n[5]+'.'+n[6]+n[7]+n[8]+'-'+d1+d2;\n    };\n\n    Chance.prototype.first = function (options) {\n        options = initOptions(options, {gender: this.gender()});\n        return this.pick(this.get(\"firstNames\")[options.gender.toLowerCase()]);\n    };\n\n    Chance.prototype.gender = function () {\n        return this.pick(['Male', 'Female']);\n    };\n\n    Chance.prototype.last = function () {\n        return this.pick(this.get(\"lastNames\"));\n    };\n\n    Chance.prototype.name = function (options) {\n        options = initOptions(options);\n\n        var first = this.first(options),\n            last = this.last(),\n            name;\n\n        if (options.middle) {\n            name = first + ' ' + this.first(options) + ' ' + last;\n        } else if (options.middle_initial) {\n            name = first + ' ' + this.character({alpha: true, casing: 'upper'}) + '. ' + last;\n        } else {\n            name = first + ' ' + last;\n        }\n\n        if (options.prefix) {\n            name = this.prefix(options) + ' ' + name;\n        }\n\n        if (options.suffix) {\n            name = name + ' ' + this.suffix(options);\n        }\n\n        return name;\n    };\n\n    // Return the list of available name prefixes based on supplied gender.\n    Chance.prototype.name_prefixes = function (gender) {\n        gender = gender || \"all\";\n        gender = gender.toLowerCase();\n\n        var prefixes = [\n            { name: 'Doctor', abbreviation: 'Dr.' }\n        ];\n\n        if (gender === \"male\" || gender === \"all\") {\n            prefixes.push({ name: 'Mister', abbreviation: 'Mr.' });\n        }\n\n        if (gender === \"female\" || gender === \"all\") {\n            prefixes.push({ name: 'Miss', abbreviation: 'Miss' });\n            prefixes.push({ name: 'Misses', abbreviation: 'Mrs.' });\n        }\n\n        return prefixes;\n    };\n\n    // Alias for name_prefix\n    Chance.prototype.prefix = function (options) {\n        return this.name_prefix(options);\n    };\n\n    Chance.prototype.name_prefix = function (options) {\n        options = initOptions(options, { gender: \"all\" });\n        return options.full ?\n            this.pick(this.name_prefixes(options.gender)).name :\n            this.pick(this.name_prefixes(options.gender)).abbreviation;\n    };\n\n    Chance.prototype.ssn = function (options) {\n        options = initOptions(options, {ssnFour: false, dashes: true});\n        var ssn_pool = \"1234567890\",\n            ssn,\n            dash = options.dashes ? '-' : '';\n\n        if(!options.ssnFour) {\n            ssn = this.string({pool: ssn_pool, length: 3}) + dash +\n            this.string({pool: ssn_pool, length: 2}) + dash +\n            this.string({pool: ssn_pool, length: 4});\n        } else {\n            ssn = this.string({pool: ssn_pool, length: 4});\n        }\n        return ssn;\n    };\n\n    // Return the list of available name suffixes\n    Chance.prototype.name_suffixes = function () {\n        var suffixes = [\n            { name: 'Doctor of Osteopathic Medicine', abbreviation: 'D.O.' },\n            { name: 'Doctor of Philosophy', abbreviation: 'Ph.D.' },\n            { name: 'Esquire', abbreviation: 'Esq.' },\n            { name: 'Junior', abbreviation: 'Jr.' },\n            { name: 'Juris Doctor', abbreviation: 'J.D.' },\n            { name: 'Master of Arts', abbreviation: 'M.A.' },\n            { name: 'Master of Business Administration', abbreviation: 'M.B.A.' },\n            { name: 'Master of Science', abbreviation: 'M.S.' },\n            { name: 'Medical Doctor', abbreviation: 'M.D.' },\n            { name: 'Senior', abbreviation: 'Sr.' },\n            { name: 'The Third', abbreviation: 'III' },\n            { name: 'The Fourth', abbreviation: 'IV' }\n        ];\n        return suffixes;\n    };\n\n    // Alias for name_suffix\n    Chance.prototype.suffix = function (options) {\n        return this.name_suffix(options);\n    };\n\n    Chance.prototype.name_suffix = function (options) {\n        options = initOptions(options);\n        return options.full ?\n            this.pick(this.name_suffixes()).name :\n            this.pick(this.name_suffixes()).abbreviation;\n    };\n\n    // -- End Person --\n\n    // -- Mobile --\n    // Android GCM Registration ID\n    Chance.prototype.android_id = function () {\n        return \"APA91\" + this.string({ pool: \"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_\", length: 178 });\n    };\n\n    // Apple Push Token\n    Chance.prototype.apple_token = function () {\n        return this.string({ pool: \"abcdef1234567890\", length: 64 });\n    };\n\n    // Windows Phone 8 ANID2\n    Chance.prototype.wp8_anid2 = function () {\n        return base64( this.hash( { length : 32 } ) );\n    };\n\n    // Windows Phone 7 ANID\n    Chance.prototype.wp7_anid = function () {\n        return 'A=' + this.guid().replace(/-/g, '').toUpperCase() + '&E=' + this.hash({ length:3 }) + '&W=' + this.integer({ min:0, max:9 });\n    };\n\n    // BlackBerry Device PIN\n    Chance.prototype.bb_pin = function () {\n        return this.hash({ length: 8 });\n    };\n\n    // -- End Mobile --\n\n    // -- Web --\n    Chance.prototype.color = function (options) {\n        function gray(value, delimiter) {\n            return [value, value, value].join(delimiter || '');\n        }\n\n        options = initOptions(options, {format: this.pick(['hex', 'shorthex', 'rgb', '0x']), grayscale: false, casing: 'lower'});\n        var isGrayscale = options.grayscale;\n        var colorValue;\n\n        if (options.format === 'hex') {\n            colorValue = '#' + (isGrayscale ? gray(this.hash({length: 2})) : this.hash({length: 6}));\n\n        } else if (options.format === 'shorthex') {\n            colorValue = '#' + (isGrayscale ? gray(this.hash({length: 1})) : this.hash({length: 3}));\n\n        } else if (options.format === 'rgb') {\n            if (isGrayscale) {\n                colorValue = 'rgb(' + gray(this.natural({max: 255}), ',') + ')';\n            } else {\n                colorValue = 'rgb(' + this.natural({max: 255}) + ',' + this.natural({max: 255}) + ',' + this.natural({max: 255}) + ')';\n            }\n        } else if (options.format === '0x') {\n            colorValue = '0x' + (isGrayscale ? gray(this.hash({length: 2})) : this.hash({length: 6}));\n        } else {\n            throw new Error('Invalid format provided. Please provide one of \"hex\", \"shorthex\", \"rgb\" or \"0x\".');\n        }\n\n        if (options.casing === 'upper' ) {\n            colorValue = colorValue.toUpperCase();\n        }\n\n        return colorValue;\n    };\n\n    Chance.prototype.domain = function (options) {\n        options = initOptions(options);\n        return this.word() + '.' + (options.tld || this.tld());\n    };\n\n    Chance.prototype.email = function (options) {\n        options = initOptions(options);\n        return this.word({length: options.length}) + '@' + (options.domain || this.domain());\n    };\n\n    Chance.prototype.fbid = function () {\n        return parseInt('10000' + this.natural({max: 100000000000}), 10);\n    };\n\n    Chance.prototype.google_analytics = function () {\n        var account = this.pad(this.natural({max: 999999}), 6);\n        var property = this.pad(this.natural({max: 99}), 2);\n\n        return 'UA-' + account + '-' + property;\n    };\n\n    Chance.prototype.hashtag = function () {\n        return '#' + this.word();\n    };\n\n    Chance.prototype.ip = function () {\n        // Todo: This could return some reserved IPs. See http://vq.io/137dgYy\n        // this should probably be updated to account for that rare as it may be\n        return this.natural({max: 255}) + '.' +\n               this.natural({max: 255}) + '.' +\n               this.natural({max: 255}) + '.' +\n               this.natural({max: 255});\n    };\n\n    Chance.prototype.ipv6 = function () {\n        var ip_addr = this.n(this.hash, 8, {length: 4});\n\n        return ip_addr.join(\":\");\n    };\n\n    Chance.prototype.klout = function () {\n        return this.natural({min: 1, max: 99});\n    };\n\n    Chance.prototype.tlds = function () {\n        return ['com', 'org', 'edu', 'gov', 'co.uk', 'net', 'io'];\n    };\n\n    Chance.prototype.tld = function () {\n        return this.pick(this.tlds());\n    };\n\n    Chance.prototype.twitter = function () {\n        return '@' + this.word();\n    };\n\n    Chance.prototype.url = function (options) {\n        options = initOptions(options, { protocol: \"http\", domain: this.domain(options), domain_prefix: \"\", path: this.word(), extensions: []});\n\n        var extension = options.extensions.length > 0 ? \".\" + this.pick(options.extensions) : \"\";\n        var domain = options.domain_prefix ? options.domain_prefix + \".\" + options.domain : options.domain;\n\n        return options.protocol + \"://\" + domain + \"/\" + options.path + extension;\n    };\n\n    // -- End Web --\n\n    // -- Location --\n\n    Chance.prototype.address = function (options) {\n        options = initOptions(options);\n        return this.natural({min: 5, max: 2000}) + ' ' + this.street(options);\n    };\n\n    Chance.prototype.altitude = function (options) {\n        options = initOptions(options, {fixed : 5, max: 8848});\n        return this.floating({min: 0, max: options.max, fixed: options.fixed});\n    };\n\n    Chance.prototype.areacode = function (options) {\n        options = initOptions(options, {parens : true});\n        // Don't want area codes to start with 1, or have a 9 as the second digit\n        var areacode = this.natural({min: 2, max: 9}).toString() +\n                this.natural({min: 0, max: 8}).toString() +\n                this.natural({min: 0, max: 9}).toString();\n\n        return options.parens ? '(' + areacode + ')' : areacode;\n    };\n\n    Chance.prototype.city = function () {\n        return this.capitalize(this.word({syllables: 3}));\n    };\n\n    Chance.prototype.coordinates = function (options) {\n        options = initOptions(options);\n        return this.latitude(options) + ', ' + this.longitude(options);\n    };\n\n    Chance.prototype.countries = function () {\n        return this.get(\"countries\");\n    };\n\n    Chance.prototype.country = function (options) {\n        options = initOptions(options);\n        var country = this.pick(this.countries());\n        return options.full ? country.name : country.abbreviation;\n    };\n\n    Chance.prototype.depth = function (options) {\n        options = initOptions(options, {fixed: 5, min: -2550});\n        return this.floating({min: options.min, max: 0, fixed: options.fixed});\n    };\n\n    Chance.prototype.geohash = function (options) {\n        options = initOptions(options, { length: 7 });\n        return this.string({ length: options.length, pool: '0123456789bcdefghjkmnpqrstuvwxyz' });\n    };\n\n    Chance.prototype.geojson = function (options) {\n        options = initOptions(options);\n        return this.latitude(options) + ', ' + this.longitude(options) + ', ' + this.altitude(options);\n    };\n\n    Chance.prototype.latitude = function (options) {\n        options = initOptions(options, {fixed: 5, min: -90, max: 90});\n        return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n    };\n\n    Chance.prototype.longitude = function (options) {\n        options = initOptions(options, {fixed: 5, min: -180, max: 180});\n        return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n    };\n\n    Chance.prototype.phone = function (options) {\n        var self = this,\n            numPick,\n            ukNum = function (parts) {\n                var section = [];\n                //fills the section part of the phone number with random numbers.\n                parts.sections.forEach(function(n) {\n                    section.push(self.string({ pool: '0123456789', length: n}));\n                });\n                return parts.area + section.join(' ');\n            };\n        options = initOptions(options, {\n            formatted: true,\n            country: 'us',\n            mobile: false\n        });\n        if (!options.formatted) {\n            options.parens = false;\n        }\n        var phone;\n        switch (options.country) {\n            case 'fr':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                        // Valid zone and département codes.\n                        '01' + this.pick(['30', '34', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '53', '55', '56', '58', '60', '64', '69', '70', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83']) + self.string({ pool: '0123456789', length: 6}),\n                        '02' + this.pick(['14', '18', '22', '23', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '56', '57', '61', '62', '69', '72', '76', '77', '78', '85', '90', '96', '97', '98', '99']) + self.string({ pool: '0123456789', length: 6}),\n                        '03' + this.pick(['10', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '39', '44', '45', '51', '52', '54', '55', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90']) + self.string({ pool: '0123456789', length: 6}),\n                        '04' + this.pick(['11', '13', '15', '20', '22', '26', '27', '30', '32', '34', '37', '42', '43', '44', '50', '56', '57', '63', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '88', '89', '90', '91', '92', '93', '94', '95', '97', '98']) + self.string({ pool: '0123456789', length: 6}),\n                        '05' + this.pick(['08', '16', '17', '19', '24', '31', '32', '33', '34', '35', '40', '45', '46', '47', '49', '53', '55', '56', '57', '58', '59', '61', '62', '63', '64', '65', '67', '79', '81', '82', '86', '87', '90', '94']) + self.string({ pool: '0123456789', length: 6}),\n                        '09' + self.string({ pool: '0123456789', length: 8}),\n                    ]);\n                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n                } else {\n                    numPick = this.pick(['06', '07']) + self.string({ pool: '0123456789', length: 8});\n                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n                }\n                break;\n            case 'uk':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                        //valid area codes of major cities/counties followed by random numbers in required format.\n                        { area: '01' + this.character({ pool: '234569' }) + '1 ', sections: [3,4] },\n                        { area: '020 ' + this.character({ pool: '378' }), sections: [3,4] },\n                        { area: '023 ' + this.character({ pool: '89' }), sections: [3,4] },\n                        { area: '024 7', sections: [3,4] },\n                        { area: '028 ' + this.pick(['25','28','37','71','82','90','92','95']), sections: [2,4] },\n                        { area: '012' + this.pick(['04','08','54','76','97','98']) + ' ', sections: [5] },\n                        { area: '013' + this.pick(['63','64','84','86']) + ' ', sections: [5] },\n                        { area: '014' + this.pick(['04','20','60','61','80','88']) + ' ', sections: [5] },\n                        { area: '015' + this.pick(['24','27','62','66']) + ' ', sections: [5] },\n                        { area: '016' + this.pick(['06','29','35','47','59','95']) + ' ', sections: [5] },\n                        { area: '017' + this.pick(['26','44','50','68']) + ' ', sections: [5] },\n                        { area: '018' + this.pick(['27','37','84','97']) + ' ', sections: [5] },\n                        { area: '019' + this.pick(['00','05','35','46','49','63','95']) + ' ', sections: [5] }\n                    ]);\n                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '', 'g');\n                } else {\n                    numPick = this.pick([\n                        { area: '07' + this.pick(['4','5','7','8','9']), sections: [2,6] },\n                        { area: '07624 ', sections: [6] }\n                    ]);\n                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '');\n                }\n                break;\n            case 'us':\n                var areacode = this.areacode(options).toString();\n                var exchange = this.natural({ min: 2, max: 9 }).toString() +\n                    this.natural({ min: 0, max: 9 }).toString() +\n                    this.natural({ min: 0, max: 9 }).toString();\n                var subscriber = this.natural({ min: 1000, max: 9999 }).toString(); // this could be random [0-9]{4}\n                phone = options.formatted ? areacode + ' ' + exchange + '-' + subscriber : areacode + exchange + subscriber;\n        }\n        return phone;\n    };\n\n    Chance.prototype.postal = function () {\n        // Postal District\n        var pd = this.character({pool: \"XVTSRPNKLMHJGECBA\"});\n        // Forward Sortation Area (FSA)\n        var fsa = pd + this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"});\n        // Local Delivery Unut (LDU)\n        var ldu = this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"}) + this.natural({max: 9});\n\n        return fsa + \" \" + ldu;\n    };\n\n    Chance.prototype.provinces = function () {\n        return this.get(\"provinces\");\n    };\n\n    Chance.prototype.province = function (options) {\n        return (options && options.full) ?\n            this.pick(this.provinces()).name :\n            this.pick(this.provinces()).abbreviation;\n    };\n\n    Chance.prototype.state = function (options) {\n        return (options && options.full) ?\n            this.pick(this.states(options)).name :\n            this.pick(this.states(options)).abbreviation;\n    };\n\n    Chance.prototype.states = function (options) {\n        options = initOptions(options);\n\n        var states,\n            us_states_and_dc = this.get(\"us_states_and_dc\"),\n            territories = this.get(\"territories\"),\n            armed_forces = this.get(\"armed_forces\");\n\n        states = us_states_and_dc;\n\n        if (options.territories) {\n            states = states.concat(territories);\n        }\n        if (options.armed_forces) {\n            states = states.concat(armed_forces);\n        }\n\n        return states;\n    };\n\n    Chance.prototype.street = function (options) {\n        options = initOptions(options);\n\n        var street = this.word({syllables: 2});\n        street = this.capitalize(street);\n        street += ' ';\n        street += options.short_suffix ?\n            this.street_suffix().abbreviation :\n            this.street_suffix().name;\n        return street;\n    };\n\n    Chance.prototype.street_suffix = function () {\n        return this.pick(this.street_suffixes());\n    };\n\n    Chance.prototype.street_suffixes = function () {\n        // These are the most common suffixes.\n        return this.get(\"street_suffixes\");\n    };\n\n    // Note: only returning US zip codes, internationalization will be a whole\n    // other beast to tackle at some point.\n    Chance.prototype.zip = function (options) {\n        var zip = this.n(this.natural, 5, {max: 9});\n\n        if (options && options.plusfour === true) {\n            zip.push('-');\n            zip = zip.concat(this.n(this.natural, 4, {max: 9}));\n        }\n\n        return zip.join(\"\");\n    };\n\n    // -- End Location --\n\n    // -- Time\n\n    Chance.prototype.ampm = function () {\n        return this.bool() ? 'am' : 'pm';\n    };\n\n    Chance.prototype.date = function (options) {\n        var date_string, date;\n\n        // If interval is specified we ignore preset\n        if(options && (options.min || options.max)) {\n            options = initOptions(options, {\n                american: true,\n                string: false\n            });\n            var min = typeof options.min !== \"undefined\" ? options.min.getTime() : 1;\n            // 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. http://es5.github.io/#x15.9.1.1\n            var max = typeof options.max !== \"undefined\" ? options.max.getTime() : 8640000000000000;\n\n            date = new Date(this.natural({min: min, max: max}));\n        } else {\n            var m = this.month({raw: true});\n\n            options = initOptions(options, {\n                year: parseInt(this.year(), 10),\n                // Necessary to subtract 1 because Date() 0-indexes month but not day or year\n                // for some reason.\n                month: m.numeric - 1,\n                day: this.natural({min: 1, max: m.days}),\n                hour: this.hour(),\n                minute: this.minute(),\n                second: this.second(),\n                millisecond: this.millisecond(),\n                american: true,\n                string: false\n            });\n\n            date = new Date(options.year, options.month, options.day, options.hour, options.minute, options.second, options.millisecond);\n        }\n\n        if (options.american) {\n            // Adding 1 to the month is necessary because Date() 0-indexes\n            // months but not day for some odd reason.\n            date_string = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();\n        } else {\n            date_string = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n        }\n\n        return options.string ? date_string : date;\n    };\n\n    Chance.prototype.hammertime = function (options) {\n        return this.date(options).getTime();\n    };\n\n    Chance.prototype.hour = function (options) {\n        options = initOptions(options, {min: 1, max: options && options.twentyfour ? 24 : 12});\n\n        testRange(options.min < 1, \"Chance: Min cannot be less than 1.\");\n        testRange(options.twentyfour && options.max > 24, \"Chance: Max cannot be greater than 24 for twentyfour option.\");\n        testRange(!options.twentyfour && options.max > 12, \"Chance: Max cannot be greater than 12.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return this.natural({min: options.min, max: options.max});\n    };\n\n    Chance.prototype.millisecond = function () {\n        return this.natural({max: 999});\n    };\n\n    Chance.prototype.minute = Chance.prototype.second = function (options) {\n        options = initOptions(options, {min: 0, max: 59});\n\n        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n        testRange(options.max > 59, \"Chance: Max cannot be greater than 59.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return this.natural({min: options.min, max: options.max});\n    };\n\n    Chance.prototype.month = function (options) {\n        options = initOptions(options, {min: 1, max: 12});\n\n        testRange(options.min < 1, \"Chance: Min cannot be less than 1.\");\n        testRange(options.max > 12, \"Chance: Max cannot be greater than 12.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        var month = this.pick(this.months().slice(options.min - 1, options.max));\n        return options.raw ? month : month.name;\n    };\n\n    Chance.prototype.months = function () {\n        return this.get(\"months\");\n    };\n\n    Chance.prototype.second = function () {\n        return this.natural({max: 59});\n    };\n\n    Chance.prototype.timestamp = function () {\n        return this.natural({min: 1, max: parseInt(new Date().getTime() / 1000, 10)});\n    };\n\n    Chance.prototype.year = function (options) {\n        // Default to current year as min if none specified\n        options = initOptions(options, {min: new Date().getFullYear()});\n\n        // Default to one century after current year as max if none specified\n        options.max = (typeof options.max !== \"undefined\") ? options.max : options.min + 100;\n\n        return this.natural(options).toString();\n    };\n\n    // -- End Time\n\n    // -- Finance --\n\n    Chance.prototype.cc = function (options) {\n        options = initOptions(options);\n\n        var type, number, to_generate;\n\n        type = (options.type) ?\n                    this.cc_type({ name: options.type, raw: true }) :\n                    this.cc_type({ raw: true });\n\n        number = type.prefix.split(\"\");\n        to_generate = type.length - type.prefix.length - 1;\n\n        // Generates n - 1 digits\n        number = number.concat(this.n(this.integer, to_generate, {min: 0, max: 9}));\n\n        // Generates the last digit according to Luhn algorithm\n        number.push(this.luhn_calculate(number.join(\"\")));\n\n        return number.join(\"\");\n    };\n\n    Chance.prototype.cc_types = function () {\n        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n        return this.get(\"cc_types\");\n    };\n\n    Chance.prototype.cc_type = function (options) {\n        options = initOptions(options);\n        var types = this.cc_types(),\n            type = null;\n\n        if (options.name) {\n            for (var i = 0; i < types.length; i++) {\n                // Accept either name or short_name to specify card type\n                if (types[i].name === options.name || types[i].short_name === options.name) {\n                    type = types[i];\n                    break;\n                }\n            }\n            if (type === null) {\n                throw new Error(\"Credit card type '\" + options.name + \"'' is not supported\");\n            }\n        } else {\n            type = this.pick(types);\n        }\n\n        return options.raw ? type : type.name;\n    };\n\n    //return all world currency by ISO 4217\n    Chance.prototype.currency_types = function () {\n        return this.get(\"currency_types\");\n    };\n\n    //return random world currency by ISO 4217\n    Chance.prototype.currency = function () {\n        return this.pick(this.currency_types());\n    };\n\n    //Return random correct currency exchange pair (e.g. EUR/USD) or array of currency code\n    Chance.prototype.currency_pair = function (returnAsString) {\n        var currencies = this.unique(this.currency, 2, {\n            comparator: function(arr, val) {\n\n                return arr.reduce(function(acc, item) {\n                    // If a match has been found, short circuit check and just return\n                    return acc || (item.code === val.code);\n                }, false);\n            }\n        });\n\n        if (returnAsString) {\n            return  currencies[0] + '/' + currencies[1];\n        } else {\n            return currencies;\n        }\n    };\n\n    Chance.prototype.dollar = function (options) {\n        // By default, a somewhat more sane max for dollar than all available numbers\n        options = initOptions(options, {max : 10000, min : 0});\n\n        var dollar = this.floating({min: options.min, max: options.max, fixed: 2}).toString(),\n            cents = dollar.split('.')[1];\n\n        if (cents === undefined) {\n            dollar += '.00';\n        } else if (cents.length < 2) {\n            dollar = dollar + '0';\n        }\n\n        if (dollar < 0) {\n            return '-$' + dollar.replace('-', '');\n        } else {\n            return '$' + dollar;\n        }\n    };\n\n    Chance.prototype.exp = function (options) {\n        options = initOptions(options);\n        var exp = {};\n\n        exp.year = this.exp_year();\n\n        // If the year is this year, need to ensure month is greater than the\n        // current month or this expiration will not be valid\n        if (exp.year === (new Date().getFullYear())) {\n            exp.month = this.exp_month({future: true});\n        } else {\n            exp.month = this.exp_month();\n        }\n\n        return options.raw ? exp : exp.month + '/' + exp.year;\n    };\n\n    Chance.prototype.exp_month = function (options) {\n        options = initOptions(options);\n        var month, month_int,\n            curMonth = new Date().getMonth();\n\n        if (options.future) {\n            do {\n                month = this.month({raw: true}).numeric;\n                month_int = parseInt(month, 10);\n            } while (month_int < curMonth);\n        } else {\n            month = this.month({raw: true}).numeric;\n        }\n\n        return month;\n    };\n\n    Chance.prototype.exp_year = function () {\n        return this.year({max: new Date().getFullYear() + 10});\n    };\n\n    // -- End Finance\n\n    // -- Miscellaneous --\n\n    // Dice - For all the board game geeks out there, myself included ;)\n    function diceFn (range) {\n        return function () {\n            return this.natural(range);\n        };\n    }\n    Chance.prototype.d4 = diceFn({min: 1, max: 4});\n    Chance.prototype.d6 = diceFn({min: 1, max: 6});\n    Chance.prototype.d8 = diceFn({min: 1, max: 8});\n    Chance.prototype.d10 = diceFn({min: 1, max: 10});\n    Chance.prototype.d12 = diceFn({min: 1, max: 12});\n    Chance.prototype.d20 = diceFn({min: 1, max: 20});\n    Chance.prototype.d30 = diceFn({min: 1, max: 30});\n    Chance.prototype.d100 = diceFn({min: 1, max: 100});\n\n    Chance.prototype.rpg = function (thrown, options) {\n        options = initOptions(options);\n        if (thrown === null) {\n            throw new Error(\"A type of die roll must be included\");\n        } else {\n            var bits = thrown.toLowerCase().split(\"d\"),\n                rolls = [];\n\n            if (bits.length !== 2 || !parseInt(bits[0], 10) || !parseInt(bits[1], 10)) {\n                throw new Error(\"Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die\");\n            }\n            for (var i = bits[0]; i > 0; i--) {\n                rolls[i - 1] = this.natural({min: 1, max: bits[1]});\n            }\n            return (typeof options.sum !== 'undefined' && options.sum) ? rolls.reduce(function (p, c) { return p + c; }) : rolls;\n        }\n    };\n\n    // Guid\n    Chance.prototype.guid = function (options) {\n        options = initOptions(options, { version: 5 });\n\n        var guid_pool = \"abcdef1234567890\",\n            variant_pool = \"ab89\",\n            guid = this.string({ pool: guid_pool, length: 8 }) + '-' +\n                   this.string({ pool: guid_pool, length: 4 }) + '-' +\n                   // The Version\n                   options.version +\n                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n                   // The Variant\n                   this.string({ pool: variant_pool, length: 1 }) +\n                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n                   this.string({ pool: guid_pool, length: 12 });\n        return guid;\n    };\n\n    // Hash\n    Chance.prototype.hash = function (options) {\n        options = initOptions(options, {length : 40, casing: 'lower'});\n        var pool = options.casing === 'upper' ? HEX_POOL.toUpperCase() : HEX_POOL;\n        return this.string({pool: pool, length: options.length});\n    };\n\n    Chance.prototype.luhn_check = function (num) {\n        var str = num.toString();\n        var checkDigit = +str.substring(str.length - 1);\n        return checkDigit === this.luhn_calculate(+str.substring(0, str.length - 1));\n    };\n\n    Chance.prototype.luhn_calculate = function (num) {\n        var digits = num.toString().split(\"\").reverse();\n        var sum = 0;\n        var digit;\n\n        for (var i = 0, l = digits.length; l > i; ++i) {\n            digit = +digits[i];\n            if (i % 2 === 0) {\n                digit *= 2;\n                if (digit > 9) {\n                    digit -= 9;\n                }\n            }\n            sum += digit;\n        }\n        return (sum * 9) % 10;\n    };\n\n\n    var data = {\n\n        firstNames: {\n            \"male\": [\"James\", \"John\", \"Robert\", \"Michael\", \"William\", \"David\", \"Richard\", \"Joseph\", \"Charles\", \"Thomas\", \"Christopher\", \"Daniel\", \"Matthew\", \"George\", \"Donald\", \"Anthony\", \"Paul\", \"Mark\", \"Edward\", \"Steven\", \"Kenneth\", \"Andrew\", \"Brian\", \"Joshua\", \"Kevin\", \"Ronald\", \"Timothy\", \"Jason\", \"Jeffrey\", \"Frank\", \"Gary\", \"Ryan\", \"Nicholas\", \"Eric\", \"Stephen\", \"Jacob\", \"Larry\", \"Jonathan\", \"Scott\", \"Raymond\", \"Justin\", \"Brandon\", \"Gregory\", \"Samuel\", \"Benjamin\", \"Patrick\", \"Jack\", \"Henry\", \"Walter\", \"Dennis\", \"Jerry\", \"Alexander\", \"Peter\", \"Tyler\", \"Douglas\", \"Harold\", \"Aaron\", \"Jose\", \"Adam\", \"Arthur\", \"Zachary\", \"Carl\", \"Nathan\", \"Albert\", \"Kyle\", \"Lawrence\", \"Joe\", \"Willie\", \"Gerald\", \"Roger\", \"Keith\", \"Jeremy\", \"Terry\", \"Harry\", \"Ralph\", \"Sean\", \"Jesse\", \"Roy\", \"Louis\", \"Billy\", \"Austin\", \"Bruce\", \"Eugene\", \"Christian\", \"Bryan\", \"Wayne\", \"Russell\", \"Howard\", \"Fred\", \"Ethan\", \"Jordan\", \"Philip\", \"Alan\", \"Juan\", \"Randy\", \"Vincent\", \"Bobby\", \"Dylan\", \"Johnny\", \"Phillip\", \"Victor\", \"Clarence\", \"Ernest\", \"Martin\", \"Craig\", \"Stanley\", \"Shawn\", \"Travis\", \"Bradley\", \"Leonard\", \"Earl\", \"Gabriel\", \"Jimmy\", \"Francis\", \"Todd\", \"Noah\", \"Danny\", \"Dale\", \"Cody\", \"Carlos\", \"Allen\", \"Frederick\", \"Logan\", \"Curtis\", \"Alex\", \"Joel\", \"Luis\", \"Norman\", \"Marvin\", \"Glenn\", \"Tony\", \"Nathaniel\", \"Rodney\", \"Melvin\", \"Alfred\", \"Steve\", \"Cameron\", \"Chad\", \"Edwin\", \"Caleb\", \"Evan\", \"Antonio\", \"Lee\", \"Herbert\", \"Jeffery\", \"Isaac\", \"Derek\", \"Ricky\", \"Marcus\", \"Theodore\", \"Elijah\", \"Luke\", \"Jesus\", \"Eddie\", \"Troy\", \"Mike\", \"Dustin\", \"Ray\", \"Adrian\", \"Bernard\", \"Leroy\", \"Angel\", \"Randall\", \"Wesley\", \"Ian\", \"Jared\", \"Mason\", \"Hunter\", \"Calvin\", \"Oscar\", \"Clifford\", \"Jay\", \"Shane\", \"Ronnie\", \"Barry\", \"Lucas\", \"Corey\", \"Manuel\", \"Leo\", \"Tommy\", \"Warren\", \"Jackson\", \"Isaiah\", \"Connor\", \"Don\", \"Dean\", \"Jon\", \"Julian\", \"Miguel\", \"Bill\", \"Lloyd\", \"Charlie\", \"Mitchell\", \"Leon\", \"Jerome\", \"Darrell\", \"Jeremiah\", \"Alvin\", \"Brett\", \"Seth\", \"Floyd\", \"Jim\", \"Blake\", \"Micheal\", \"Gordon\", \"Trevor\", \"Lewis\", \"Erik\", \"Edgar\", \"Vernon\", \"Devin\", \"Gavin\", \"Jayden\", \"Chris\", \"Clyde\", \"Tom\", \"Derrick\", \"Mario\", \"Brent\", \"Marc\", \"Herman\", \"Chase\", \"Dominic\", \"Ricardo\", \"Franklin\", \"Maurice\", \"Max\", \"Aiden\", \"Owen\", \"Lester\", \"Gilbert\", \"Elmer\", \"Gene\", \"Francisco\", \"Glen\", \"Cory\", \"Garrett\", \"Clayton\", \"Sam\", \"Jorge\", \"Chester\", \"Alejandro\", \"Jeff\", \"Harvey\", \"Milton\", \"Cole\", \"Ivan\", \"Andre\", \"Duane\", \"Landon\"],\n            \"female\": [\"Mary\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\", \"Alice\", \"Bertha\", \"Sarah\", \"Annie\", \"Clara\", \"Ella\", \"Florence\", \"Cora\", \"Martha\", \"Laura\", \"Nellie\", \"Grace\", \"Carrie\", \"Maude\", \"Mabel\", \"Bessie\", \"Jennie\", \"Gertrude\", \"Julia\", \"Hattie\", \"Edith\", \"Mattie\", \"Rose\", \"Catherine\", \"Lillian\", \"Ada\", \"Lillie\", \"Helen\", \"Jessie\", \"Louise\", \"Ethel\", \"Lula\", \"Myrtle\", \"Eva\", \"Frances\", \"Lena\", \"Lucy\", \"Edna\", \"Maggie\", \"Pearl\", \"Daisy\", \"Fannie\", \"Josephine\", \"Dora\", \"Rosa\", \"Katherine\", \"Agnes\", \"Marie\", \"Nora\", \"May\", \"Mamie\", \"Blanche\", \"Stella\", \"Ellen\", \"Nancy\", \"Effie\", \"Sallie\", \"Nettie\", \"Della\", \"Lizzie\", \"Flora\", \"Susie\", \"Maud\", \"Mae\", \"Etta\", \"Harriet\", \"Sadie\", \"Caroline\", \"Katie\", \"Lydia\", \"Elsie\", \"Kate\", \"Susan\", \"Mollie\", \"Alma\", \"Addie\", \"Georgia\", \"Eliza\", \"Lulu\", \"Nannie\", \"Lottie\", \"Amanda\", \"Belle\", \"Charlotte\", \"Rebecca\", \"Ruth\", \"Viola\", \"Olive\", \"Amelia\", \"Hannah\", \"Jane\", \"Virginia\", \"Emily\", \"Matilda\", \"Irene\", \"Kathryn\", \"Esther\", \"Willie\", \"Henrietta\", \"Ollie\", \"Amy\", \"Rachel\", \"Sara\", \"Estella\", \"Theresa\", \"Augusta\", \"Ora\", \"Pauline\", \"Josie\", \"Lola\", \"Sophia\", \"Leona\", \"Anne\", \"Mildred\", \"Ann\", \"Beulah\", \"Callie\", \"Lou\", \"Delia\", \"Eleanor\", \"Barbara\", \"Iva\", \"Louisa\", \"Maria\", \"Mayme\", \"Evelyn\", \"Estelle\", \"Nina\", \"Betty\", \"Marion\", \"Bettie\", \"Dorothy\", \"Luella\", \"Inez\", \"Lela\", \"Rosie\", \"Allie\", \"Millie\", \"Janie\", \"Cornelia\", \"Victoria\", \"Ruby\", \"Winifred\", \"Alta\", \"Celia\", \"Christine\", \"Beatrice\", \"Birdie\", \"Harriett\", \"Mable\", \"Myra\", \"Sophie\", \"Tillie\", \"Isabel\", \"Sylvia\", \"Carolyn\", \"Isabelle\", \"Leila\", \"Sally\", \"Ina\", \"Essie\", \"Bertie\", \"Nell\", \"Alberta\", \"Katharine\", \"Lora\", \"Rena\", \"Mina\", \"Rhoda\", \"Mathilda\", \"Abbie\", \"Eula\", \"Dollie\", \"Hettie\", \"Eunice\", \"Fanny\", \"Ola\", \"Lenora\", \"Adelaide\", \"Christina\", \"Lelia\", \"Nelle\", \"Sue\", \"Johanna\", \"Lilly\", \"Lucinda\", \"Minerva\", \"Lettie\", \"Roxie\", \"Cynthia\", \"Helena\", \"Hilda\", \"Hulda\", \"Bernice\", \"Genevieve\", \"Jean\", \"Cordelia\", \"Marian\", \"Francis\", \"Jeanette\", \"Adeline\", \"Gussie\", \"Leah\", \"Lois\", \"Lura\", \"Mittie\", \"Hallie\", \"Isabella\", \"Olga\", \"Phoebe\", \"Teresa\", \"Hester\", \"Lida\", \"Lina\", \"Winnie\", \"Claudia\", \"Marguerite\", \"Vera\", \"Cecelia\", \"Bess\", \"Emilie\", \"John\", \"Rosetta\", \"Verna\", \"Myrtie\", \"Cecilia\", \"Elva\", \"Olivia\", \"Ophelia\", \"Georgie\", \"Elnora\", \"Violet\", \"Adele\", \"Lily\", \"Linnie\", \"Loretta\", \"Madge\", \"Polly\", \"Virgie\", \"Eugenia\", \"Lucile\", \"Lucille\", \"Mabelle\", \"Rosalie\"]\n        },\n\n        lastNames: ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Thompson', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis', 'Lee', 'Walker', 'Hall', 'Allen', 'Young', 'Hernandez', 'King', 'Wright', 'Lopez', 'Hill', 'Scott', 'Green', 'Adams', 'Baker', 'Gonzalez', 'Nelson', 'Carter', 'Mitchell', 'Perez', 'Roberts', 'Turner', 'Phillips', 'Campbell', 'Parker', 'Evans', 'Edwards', 'Collins', 'Stewart', 'Sanchez', 'Morris', 'Rogers', 'Reed', 'Cook', 'Morgan', 'Bell', 'Murphy', 'Bailey', 'Rivera', 'Cooper', 'Richardson', 'Cox', 'Howard', 'Ward', 'Torres', 'Peterson', 'Gray', 'Ramirez', 'James', 'Watson', 'Brooks', 'Kelly', 'Sanders', 'Price', 'Bennett', 'Wood', 'Barnes', 'Ross', 'Henderson', 'Coleman', 'Jenkins', 'Perry', 'Powell', 'Long', 'Patterson', 'Hughes', 'Flores', 'Washington', 'Butler', 'Simmons', 'Foster', 'Gonzales', 'Bryant', 'Alexander', 'Russell', 'Griffin', 'Diaz', 'Hayes', 'Myers', 'Ford', 'Hamilton', 'Graham', 'Sullivan', 'Wallace', 'Woods', 'Cole', 'West', 'Jordan', 'Owens', 'Reynolds', 'Fisher', 'Ellis', 'Harrison', 'Gibson', 'McDonald', 'Cruz', 'Marshall', 'Ortiz', 'Gomez', 'Murray', 'Freeman', 'Wells', 'Webb', 'Simpson', 'Stevens', 'Tucker', 'Porter', 'Hunter', 'Hicks', 'Crawford', 'Henry', 'Boyd', 'Mason', 'Morales', 'Kennedy', 'Warren', 'Dixon', 'Ramos', 'Reyes', 'Burns', 'Gordon', 'Shaw', 'Holmes', 'Rice', 'Robertson', 'Hunt', 'Black', 'Daniels', 'Palmer', 'Mills', 'Nichols', 'Grant', 'Knight', 'Ferguson', 'Rose', 'Stone', 'Hawkins', 'Dunn', 'Perkins', 'Hudson', 'Spencer', 'Gardner', 'Stephens', 'Payne', 'Pierce', 'Berry', 'Matthews', 'Arnold', 'Wagner', 'Willis', 'Ray', 'Watkins', 'Olson', 'Carroll', 'Duncan', 'Snyder', 'Hart', 'Cunningham', 'Bradley', 'Lane', 'Andrews', 'Ruiz', 'Harper', 'Fox', 'Riley', 'Armstrong', 'Carpenter', 'Weaver', 'Greene', 'Lawrence', 'Elliott', 'Chavez', 'Sims', 'Austin', 'Peters', 'Kelley', 'Franklin', 'Lawson', 'Fields', 'Gutierrez', 'Ryan', 'Schmidt', 'Carr', 'Vasquez', 'Castillo', 'Wheeler', 'Chapman', 'Oliver', 'Montgomery', 'Richards', 'Williamson', 'Johnston', 'Banks', 'Meyer', 'Bishop', 'McCoy', 'Howell', 'Alvarez', 'Morrison', 'Hansen', 'Fernandez', 'Garza', 'Harvey', 'Little', 'Burton', 'Stanley', 'Nguyen', 'George', 'Jacobs', 'Reid', 'Kim', 'Fuller', 'Lynch', 'Dean', 'Gilbert', 'Garrett', 'Romero', 'Welch', 'Larson', 'Frazier', 'Burke', 'Hanson', 'Day', 'Mendoza', 'Moreno', 'Bowman', 'Medina', 'Fowler', 'Brewer', 'Hoffman', 'Carlson', 'Silva', 'Pearson', 'Holland', 'Douglas', 'Fleming', 'Jensen', 'Vargas', 'Byrd', 'Davidson', 'Hopkins', 'May', 'Terry', 'Herrera', 'Wade', 'Soto', 'Walters', 'Curtis', 'Neal', 'Caldwell', 'Lowe', 'Jennings', 'Barnett', 'Graves', 'Jimenez', 'Horton', 'Shelton', 'Barrett', 'Obrien', 'Castro', 'Sutton', 'Gregory', 'McKinney', 'Lucas', 'Miles', 'Craig', 'Rodriquez', 'Chambers', 'Holt', 'Lambert', 'Fletcher', 'Watts', 'Bates', 'Hale', 'Rhodes', 'Pena', 'Beck', 'Newman', 'Haynes', 'McDaniel', 'Mendez', 'Bush', 'Vaughn', 'Parks', 'Dawson', 'Santiago', 'Norris', 'Hardy', 'Love', 'Steele', 'Curry', 'Powers', 'Schultz', 'Barker', 'Guzman', 'Page', 'Munoz', 'Ball', 'Keller', 'Chandler', 'Weber', 'Leonard', 'Walsh', 'Lyons', 'Ramsey', 'Wolfe', 'Schneider', 'Mullins', 'Benson', 'Sharp', 'Bowen', 'Daniel', 'Barber', 'Cummings', 'Hines', 'Baldwin', 'Griffith', 'Valdez', 'Hubbard', 'Salazar', 'Reeves', 'Warner', 'Stevenson', 'Burgess', 'Santos', 'Tate', 'Cross', 'Garner', 'Mann', 'Mack', 'Moss', 'Thornton', 'Dennis', 'McGee', 'Farmer', 'Delgado', 'Aguilar', 'Vega', 'Glover', 'Manning', 'Cohen', 'Harmon', 'Rodgers', 'Robbins', 'Newton', 'Todd', 'Blair', 'Higgins', 'Ingram', 'Reese', 'Cannon', 'Strickland', 'Townsend', 'Potter', 'Goodwin', 'Walton', 'Rowe', 'Hampton', 'Ortega', 'Patton', 'Swanson', 'Joseph', 'Francis', 'Goodman', 'Maldonado', 'Yates', 'Becker', 'Erickson', 'Hodges', 'Rios', 'Conner', 'Adkins', 'Webster', 'Norman', 'Malone', 'Hammond', 'Flowers', 'Cobb', 'Moody', 'Quinn', 'Blake', 'Maxwell', 'Pope', 'Floyd', 'Osborne', 'Paul', 'McCarthy', 'Guerrero', 'Lindsey', 'Estrada', 'Sandoval', 'Gibbs', 'Tyler', 'Gross', 'Fitzgerald', 'Stokes', 'Doyle', 'Sherman', 'Saunders', 'Wise', 'Colon', 'Gill', 'Alvarado', 'Greer', 'Padilla', 'Simon', 'Waters', 'Nunez', 'Ballard', 'Schwartz', 'McBride', 'Houston', 'Christensen', 'Klein', 'Pratt', 'Briggs', 'Parsons', 'McLaughlin', 'Zimmerman', 'French', 'Buchanan', 'Moran', 'Copeland', 'Roy', 'Pittman', 'Brady', 'McCormick', 'Holloway', 'Brock', 'Poole', 'Frank', 'Logan', 'Owen', 'Bass', 'Marsh', 'Drake', 'Wong', 'Jefferson', 'Park', 'Morton', 'Abbott', 'Sparks', 'Patrick', 'Norton', 'Huff', 'Clayton', 'Massey', 'Lloyd', 'Figueroa', 'Carson', 'Bowers', 'Roberson', 'Barton', 'Tran', 'Lamb', 'Harrington', 'Casey', 'Boone', 'Cortez', 'Clarke', 'Mathis', 'Singleton', 'Wilkins', 'Cain', 'Bryan', 'Underwood', 'Hogan', 'McKenzie', 'Collier', 'Luna', 'Phelps', 'McGuire', 'Allison', 'Bridges', 'Wilkerson', 'Nash', 'Summers', 'Atkins'],\n\n        // Data taken from https://github.com/umpirsky/country-list/blob/master/country/cldr/en_US/country.json\n        countries: [{\"name\":\"Afghanistan\",\"abbreviation\":\"AF\"},{\"name\":\"Albania\",\"abbreviation\":\"AL\"},{\"name\":\"Algeria\",\"abbreviation\":\"DZ\"},{\"name\":\"American Samoa\",\"abbreviation\":\"AS\"},{\"name\":\"Andorra\",\"abbreviation\":\"AD\"},{\"name\":\"Angola\",\"abbreviation\":\"AO\"},{\"name\":\"Anguilla\",\"abbreviation\":\"AI\"},{\"name\":\"Antarctica\",\"abbreviation\":\"AQ\"},{\"name\":\"Antigua and Barbuda\",\"abbreviation\":\"AG\"},{\"name\":\"Argentina\",\"abbreviation\":\"AR\"},{\"name\":\"Armenia\",\"abbreviation\":\"AM\"},{\"name\":\"Aruba\",\"abbreviation\":\"AW\"},{\"name\":\"Australia\",\"abbreviation\":\"AU\"},{\"name\":\"Austria\",\"abbreviation\":\"AT\"},{\"name\":\"Azerbaijan\",\"abbreviation\":\"AZ\"},{\"name\":\"Bahamas\",\"abbreviation\":\"BS\"},{\"name\":\"Bahrain\",\"abbreviation\":\"BH\"},{\"name\":\"Bangladesh\",\"abbreviation\":\"BD\"},{\"name\":\"Barbados\",\"abbreviation\":\"BB\"},{\"name\":\"Belarus\",\"abbreviation\":\"BY\"},{\"name\":\"Belgium\",\"abbreviation\":\"BE\"},{\"name\":\"Belize\",\"abbreviation\":\"BZ\"},{\"name\":\"Benin\",\"abbreviation\":\"BJ\"},{\"name\":\"Bermuda\",\"abbreviation\":\"BM\"},{\"name\":\"Bhutan\",\"abbreviation\":\"BT\"},{\"name\":\"Bolivia\",\"abbreviation\":\"BO\"},{\"name\":\"Bosnia and Herzegovina\",\"abbreviation\":\"BA\"},{\"name\":\"Botswana\",\"abbreviation\":\"BW\"},{\"name\":\"Bouvet Island\",\"abbreviation\":\"BV\"},{\"name\":\"Brazil\",\"abbreviation\":\"BR\"},{\"name\":\"British Antarctic Territory\",\"abbreviation\":\"BQ\"},{\"name\":\"British Indian Ocean Territory\",\"abbreviation\":\"IO\"},{\"name\":\"British Virgin Islands\",\"abbreviation\":\"VG\"},{\"name\":\"Brunei\",\"abbreviation\":\"BN\"},{\"name\":\"Bulgaria\",\"abbreviation\":\"BG\"},{\"name\":\"Burkina Faso\",\"abbreviation\":\"BF\"},{\"name\":\"Burundi\",\"abbreviation\":\"BI\"},{\"name\":\"Cambodia\",\"abbreviation\":\"KH\"},{\"name\":\"Cameroon\",\"abbreviation\":\"CM\"},{\"name\":\"Canada\",\"abbreviation\":\"CA\"},{\"name\":\"Canton and Enderbury Islands\",\"abbreviation\":\"CT\"},{\"name\":\"Cape Verde\",\"abbreviation\":\"CV\"},{\"name\":\"Cayman Islands\",\"abbreviation\":\"KY\"},{\"name\":\"Central African Republic\",\"abbreviation\":\"CF\"},{\"name\":\"Chad\",\"abbreviation\":\"TD\"},{\"name\":\"Chile\",\"abbreviation\":\"CL\"},{\"name\":\"China\",\"abbreviation\":\"CN\"},{\"name\":\"Christmas Island\",\"abbreviation\":\"CX\"},{\"name\":\"Cocos [Keeling] Islands\",\"abbreviation\":\"CC\"},{\"name\":\"Colombia\",\"abbreviation\":\"CO\"},{\"name\":\"Comoros\",\"abbreviation\":\"KM\"},{\"name\":\"Congo - Brazzaville\",\"abbreviation\":\"CG\"},{\"name\":\"Congo - Kinshasa\",\"abbreviation\":\"CD\"},{\"name\":\"Cook Islands\",\"abbreviation\":\"CK\"},{\"name\":\"Costa Rica\",\"abbreviation\":\"CR\"},{\"name\":\"Croatia\",\"abbreviation\":\"HR\"},{\"name\":\"Cuba\",\"abbreviation\":\"CU\"},{\"name\":\"Cyprus\",\"abbreviation\":\"CY\"},{\"name\":\"Czech Republic\",\"abbreviation\":\"CZ\"},{\"name\":\"Côte d’Ivoire\",\"abbreviation\":\"CI\"},{\"name\":\"Denmark\",\"abbreviation\":\"DK\"},{\"name\":\"Djibouti\",\"abbreviation\":\"DJ\"},{\"name\":\"Dominica\",\"abbreviation\":\"DM\"},{\"name\":\"Dominican Republic\",\"abbreviation\":\"DO\"},{\"name\":\"Dronning Maud Land\",\"abbreviation\":\"NQ\"},{\"name\":\"East Germany\",\"abbreviation\":\"DD\"},{\"name\":\"Ecuador\",\"abbreviation\":\"EC\"},{\"name\":\"Egypt\",\"abbreviation\":\"EG\"},{\"name\":\"El Salvador\",\"abbreviation\":\"SV\"},{\"name\":\"Equatorial Guinea\",\"abbreviation\":\"GQ\"},{\"name\":\"Eritrea\",\"abbreviation\":\"ER\"},{\"name\":\"Estonia\",\"abbreviation\":\"EE\"},{\"name\":\"Ethiopia\",\"abbreviation\":\"ET\"},{\"name\":\"Falkland Islands\",\"abbreviation\":\"FK\"},{\"name\":\"Faroe Islands\",\"abbreviation\":\"FO\"},{\"name\":\"Fiji\",\"abbreviation\":\"FJ\"},{\"name\":\"Finland\",\"abbreviation\":\"FI\"},{\"name\":\"France\",\"abbreviation\":\"FR\"},{\"name\":\"French Guiana\",\"abbreviation\":\"GF\"},{\"name\":\"French Polynesia\",\"abbreviation\":\"PF\"},{\"name\":\"French Southern Territories\",\"abbreviation\":\"TF\"},{\"name\":\"French Southern and Antarctic Territories\",\"abbreviation\":\"FQ\"},{\"name\":\"Gabon\",\"abbreviation\":\"GA\"},{\"name\":\"Gambia\",\"abbreviation\":\"GM\"},{\"name\":\"Georgia\",\"abbreviation\":\"GE\"},{\"name\":\"Germany\",\"abbreviation\":\"DE\"},{\"name\":\"Ghana\",\"abbreviation\":\"GH\"},{\"name\":\"Gibraltar\",\"abbreviation\":\"GI\"},{\"name\":\"Greece\",\"abbreviation\":\"GR\"},{\"name\":\"Greenland\",\"abbreviation\":\"GL\"},{\"name\":\"Grenada\",\"abbreviation\":\"GD\"},{\"name\":\"Guadeloupe\",\"abbreviation\":\"GP\"},{\"name\":\"Guam\",\"abbreviation\":\"GU\"},{\"name\":\"Guatemala\",\"abbreviation\":\"GT\"},{\"name\":\"Guernsey\",\"abbreviation\":\"GG\"},{\"name\":\"Guinea\",\"abbreviation\":\"GN\"},{\"name\":\"Guinea-Bissau\",\"abbreviation\":\"GW\"},{\"name\":\"Guyana\",\"abbreviation\":\"GY\"},{\"name\":\"Haiti\",\"abbreviation\":\"HT\"},{\"name\":\"Heard Island and McDonald Islands\",\"abbreviation\":\"HM\"},{\"name\":\"Honduras\",\"abbreviation\":\"HN\"},{\"name\":\"Hong Kong SAR China\",\"abbreviation\":\"HK\"},{\"name\":\"Hungary\",\"abbreviation\":\"HU\"},{\"name\":\"Iceland\",\"abbreviation\":\"IS\"},{\"name\":\"India\",\"abbreviation\":\"IN\"},{\"name\":\"Indonesia\",\"abbreviation\":\"ID\"},{\"name\":\"Iran\",\"abbreviation\":\"IR\"},{\"name\":\"Iraq\",\"abbreviation\":\"IQ\"},{\"name\":\"Ireland\",\"abbreviation\":\"IE\"},{\"name\":\"Isle of Man\",\"abbreviation\":\"IM\"},{\"name\":\"Israel\",\"abbreviation\":\"IL\"},{\"name\":\"Italy\",\"abbreviation\":\"IT\"},{\"name\":\"Jamaica\",\"abbreviation\":\"JM\"},{\"name\":\"Japan\",\"abbreviation\":\"JP\"},{\"name\":\"Jersey\",\"abbreviation\":\"JE\"},{\"name\":\"Johnston Island\",\"abbreviation\":\"JT\"},{\"name\":\"Jordan\",\"abbreviation\":\"JO\"},{\"name\":\"Kazakhstan\",\"abbreviation\":\"KZ\"},{\"name\":\"Kenya\",\"abbreviation\":\"KE\"},{\"name\":\"Kiribati\",\"abbreviation\":\"KI\"},{\"name\":\"Kuwait\",\"abbreviation\":\"KW\"},{\"name\":\"Kyrgyzstan\",\"abbreviation\":\"KG\"},{\"name\":\"Laos\",\"abbreviation\":\"LA\"},{\"name\":\"Latvia\",\"abbreviation\":\"LV\"},{\"name\":\"Lebanon\",\"abbreviation\":\"LB\"},{\"name\":\"Lesotho\",\"abbreviation\":\"LS\"},{\"name\":\"Liberia\",\"abbreviation\":\"LR\"},{\"name\":\"Libya\",\"abbreviation\":\"LY\"},{\"name\":\"Liechtenstein\",\"abbreviation\":\"LI\"},{\"name\":\"Lithuania\",\"abbreviation\":\"LT\"},{\"name\":\"Luxembourg\",\"abbreviation\":\"LU\"},{\"name\":\"Macau SAR China\",\"abbreviation\":\"MO\"},{\"name\":\"Macedonia\",\"abbreviation\":\"MK\"},{\"name\":\"Madagascar\",\"abbreviation\":\"MG\"},{\"name\":\"Malawi\",\"abbreviation\":\"MW\"},{\"name\":\"Malaysia\",\"abbreviation\":\"MY\"},{\"name\":\"Maldives\",\"abbreviation\":\"MV\"},{\"name\":\"Mali\",\"abbreviation\":\"ML\"},{\"name\":\"Malta\",\"abbreviation\":\"MT\"},{\"name\":\"Marshall Islands\",\"abbreviation\":\"MH\"},{\"name\":\"Martinique\",\"abbreviation\":\"MQ\"},{\"name\":\"Mauritania\",\"abbreviation\":\"MR\"},{\"name\":\"Mauritius\",\"abbreviation\":\"MU\"},{\"name\":\"Mayotte\",\"abbreviation\":\"YT\"},{\"name\":\"Metropolitan France\",\"abbreviation\":\"FX\"},{\"name\":\"Mexico\",\"abbreviation\":\"MX\"},{\"name\":\"Micronesia\",\"abbreviation\":\"FM\"},{\"name\":\"Midway Islands\",\"abbreviation\":\"MI\"},{\"name\":\"Moldova\",\"abbreviation\":\"MD\"},{\"name\":\"Monaco\",\"abbreviation\":\"MC\"},{\"name\":\"Mongolia\",\"abbreviation\":\"MN\"},{\"name\":\"Montenegro\",\"abbreviation\":\"ME\"},{\"name\":\"Montserrat\",\"abbreviation\":\"MS\"},{\"name\":\"Morocco\",\"abbreviation\":\"MA\"},{\"name\":\"Mozambique\",\"abbreviation\":\"MZ\"},{\"name\":\"Myanmar [Burma]\",\"abbreviation\":\"MM\"},{\"name\":\"Namibia\",\"abbreviation\":\"NA\"},{\"name\":\"Nauru\",\"abbreviation\":\"NR\"},{\"name\":\"Nepal\",\"abbreviation\":\"NP\"},{\"name\":\"Netherlands\",\"abbreviation\":\"NL\"},{\"name\":\"Netherlands Antilles\",\"abbreviation\":\"AN\"},{\"name\":\"Neutral Zone\",\"abbreviation\":\"NT\"},{\"name\":\"New Caledonia\",\"abbreviation\":\"NC\"},{\"name\":\"New Zealand\",\"abbreviation\":\"NZ\"},{\"name\":\"Nicaragua\",\"abbreviation\":\"NI\"},{\"name\":\"Niger\",\"abbreviation\":\"NE\"},{\"name\":\"Nigeria\",\"abbreviation\":\"NG\"},{\"name\":\"Niue\",\"abbreviation\":\"NU\"},{\"name\":\"Norfolk Island\",\"abbreviation\":\"NF\"},{\"name\":\"North Korea\",\"abbreviation\":\"KP\"},{\"name\":\"North Vietnam\",\"abbreviation\":\"VD\"},{\"name\":\"Northern Mariana Islands\",\"abbreviation\":\"MP\"},{\"name\":\"Norway\",\"abbreviation\":\"NO\"},{\"name\":\"Oman\",\"abbreviation\":\"OM\"},{\"name\":\"Pacific Islands Trust Territory\",\"abbreviation\":\"PC\"},{\"name\":\"Pakistan\",\"abbreviation\":\"PK\"},{\"name\":\"Palau\",\"abbreviation\":\"PW\"},{\"name\":\"Palestinian Territories\",\"abbreviation\":\"PS\"},{\"name\":\"Panama\",\"abbreviation\":\"PA\"},{\"name\":\"Panama Canal Zone\",\"abbreviation\":\"PZ\"},{\"name\":\"Papua New Guinea\",\"abbreviation\":\"PG\"},{\"name\":\"Paraguay\",\"abbreviation\":\"PY\"},{\"name\":\"People's Democratic Republic of Yemen\",\"abbreviation\":\"YD\"},{\"name\":\"Peru\",\"abbreviation\":\"PE\"},{\"name\":\"Philippines\",\"abbreviation\":\"PH\"},{\"name\":\"Pitcairn Islands\",\"abbreviation\":\"PN\"},{\"name\":\"Poland\",\"abbreviation\":\"PL\"},{\"name\":\"Portugal\",\"abbreviation\":\"PT\"},{\"name\":\"Puerto Rico\",\"abbreviation\":\"PR\"},{\"name\":\"Qatar\",\"abbreviation\":\"QA\"},{\"name\":\"Romania\",\"abbreviation\":\"RO\"},{\"name\":\"Russia\",\"abbreviation\":\"RU\"},{\"name\":\"Rwanda\",\"abbreviation\":\"RW\"},{\"name\":\"Réunion\",\"abbreviation\":\"RE\"},{\"name\":\"Saint Barthélemy\",\"abbreviation\":\"BL\"},{\"name\":\"Saint Helena\",\"abbreviation\":\"SH\"},{\"name\":\"Saint Kitts and Nevis\",\"abbreviation\":\"KN\"},{\"name\":\"Saint Lucia\",\"abbreviation\":\"LC\"},{\"name\":\"Saint Martin\",\"abbreviation\":\"MF\"},{\"name\":\"Saint Pierre and Miquelon\",\"abbreviation\":\"PM\"},{\"name\":\"Saint Vincent and the Grenadines\",\"abbreviation\":\"VC\"},{\"name\":\"Samoa\",\"abbreviation\":\"WS\"},{\"name\":\"San Marino\",\"abbreviation\":\"SM\"},{\"name\":\"Saudi Arabia\",\"abbreviation\":\"SA\"},{\"name\":\"Senegal\",\"abbreviation\":\"SN\"},{\"name\":\"Serbia\",\"abbreviation\":\"RS\"},{\"name\":\"Serbia and Montenegro\",\"abbreviation\":\"CS\"},{\"name\":\"Seychelles\",\"abbreviation\":\"SC\"},{\"name\":\"Sierra Leone\",\"abbreviation\":\"SL\"},{\"name\":\"Singapore\",\"abbreviation\":\"SG\"},{\"name\":\"Slovakia\",\"abbreviation\":\"SK\"},{\"name\":\"Slovenia\",\"abbreviation\":\"SI\"},{\"name\":\"Solomon Islands\",\"abbreviation\":\"SB\"},{\"name\":\"Somalia\",\"abbreviation\":\"SO\"},{\"name\":\"South Africa\",\"abbreviation\":\"ZA\"},{\"name\":\"South Georgia and the South Sandwich Islands\",\"abbreviation\":\"GS\"},{\"name\":\"South Korea\",\"abbreviation\":\"KR\"},{\"name\":\"Spain\",\"abbreviation\":\"ES\"},{\"name\":\"Sri Lanka\",\"abbreviation\":\"LK\"},{\"name\":\"Sudan\",\"abbreviation\":\"SD\"},{\"name\":\"Suriname\",\"abbreviation\":\"SR\"},{\"name\":\"Svalbard and Jan Mayen\",\"abbreviation\":\"SJ\"},{\"name\":\"Swaziland\",\"abbreviation\":\"SZ\"},{\"name\":\"Sweden\",\"abbreviation\":\"SE\"},{\"name\":\"Switzerland\",\"abbreviation\":\"CH\"},{\"name\":\"Syria\",\"abbreviation\":\"SY\"},{\"name\":\"São Tomé and Príncipe\",\"abbreviation\":\"ST\"},{\"name\":\"Taiwan\",\"abbreviation\":\"TW\"},{\"name\":\"Tajikistan\",\"abbreviation\":\"TJ\"},{\"name\":\"Tanzania\",\"abbreviation\":\"TZ\"},{\"name\":\"Thailand\",\"abbreviation\":\"TH\"},{\"name\":\"Timor-Leste\",\"abbreviation\":\"TL\"},{\"name\":\"Togo\",\"abbreviation\":\"TG\"},{\"name\":\"Tokelau\",\"abbreviation\":\"TK\"},{\"name\":\"Tonga\",\"abbreviation\":\"TO\"},{\"name\":\"Trinidad and Tobago\",\"abbreviation\":\"TT\"},{\"name\":\"Tunisia\",\"abbreviation\":\"TN\"},{\"name\":\"Turkey\",\"abbreviation\":\"TR\"},{\"name\":\"Turkmenistan\",\"abbreviation\":\"TM\"},{\"name\":\"Turks and Caicos Islands\",\"abbreviation\":\"TC\"},{\"name\":\"Tuvalu\",\"abbreviation\":\"TV\"},{\"name\":\"U.S. Minor Outlying Islands\",\"abbreviation\":\"UM\"},{\"name\":\"U.S. Miscellaneous Pacific Islands\",\"abbreviation\":\"PU\"},{\"name\":\"U.S. Virgin Islands\",\"abbreviation\":\"VI\"},{\"name\":\"Uganda\",\"abbreviation\":\"UG\"},{\"name\":\"Ukraine\",\"abbreviation\":\"UA\"},{\"name\":\"Union of Soviet Socialist Republics\",\"abbreviation\":\"SU\"},{\"name\":\"United Arab Emirates\",\"abbreviation\":\"AE\"},{\"name\":\"United Kingdom\",\"abbreviation\":\"GB\"},{\"name\":\"United States\",\"abbreviation\":\"US\"},{\"name\":\"Unknown or Invalid Region\",\"abbreviation\":\"ZZ\"},{\"name\":\"Uruguay\",\"abbreviation\":\"UY\"},{\"name\":\"Uzbekistan\",\"abbreviation\":\"UZ\"},{\"name\":\"Vanuatu\",\"abbreviation\":\"VU\"},{\"name\":\"Vatican City\",\"abbreviation\":\"VA\"},{\"name\":\"Venezuela\",\"abbreviation\":\"VE\"},{\"name\":\"Vietnam\",\"abbreviation\":\"VN\"},{\"name\":\"Wake Island\",\"abbreviation\":\"WK\"},{\"name\":\"Wallis and Futuna\",\"abbreviation\":\"WF\"},{\"name\":\"Western Sahara\",\"abbreviation\":\"EH\"},{\"name\":\"Yemen\",\"abbreviation\":\"YE\"},{\"name\":\"Zambia\",\"abbreviation\":\"ZM\"},{\"name\":\"Zimbabwe\",\"abbreviation\":\"ZW\"},{\"name\":\"Åland Islands\",\"abbreviation\":\"AX\"}],\n\n        provinces: [\n            {name: 'Alberta', abbreviation: 'AB'},\n            {name: 'British Columbia', abbreviation: 'BC'},\n            {name: 'Manitoba', abbreviation: 'MB'},\n            {name: 'New Brunswick', abbreviation: 'NB'},\n            {name: 'Newfoundland and Labrador', abbreviation: 'NL'},\n            {name: 'Nova Scotia', abbreviation: 'NS'},\n            {name: 'Ontario', abbreviation: 'ON'},\n            {name: 'Prince Edward Island', abbreviation: 'PE'},\n            {name: 'Quebec', abbreviation: 'QC'},\n            {name: 'Saskatchewan', abbreviation: 'SK'},\n\n            // The case could be made that the following are not actually provinces\n            // since they are technically considered \"territories\" however they all\n            // look the same on an envelope!\n            {name: 'Northwest Territories', abbreviation: 'NT'},\n            {name: 'Nunavut', abbreviation: 'NU'},\n            {name: 'Yukon', abbreviation: 'YT'}\n        ],\n\n        us_states_and_dc: [\n            {name: 'Alabama', abbreviation: 'AL'},\n            {name: 'Alaska', abbreviation: 'AK'},\n            {name: 'Arizona', abbreviation: 'AZ'},\n            {name: 'Arkansas', abbreviation: 'AR'},\n            {name: 'California', abbreviation: 'CA'},\n            {name: 'Colorado', abbreviation: 'CO'},\n            {name: 'Connecticut', abbreviation: 'CT'},\n            {name: 'Delaware', abbreviation: 'DE'},\n            {name: 'District of Columbia', abbreviation: 'DC'},\n            {name: 'Florida', abbreviation: 'FL'},\n            {name: 'Georgia', abbreviation: 'GA'},\n            {name: 'Hawaii', abbreviation: 'HI'},\n            {name: 'Idaho', abbreviation: 'ID'},\n            {name: 'Illinois', abbreviation: 'IL'},\n            {name: 'Indiana', abbreviation: 'IN'},\n            {name: 'Iowa', abbreviation: 'IA'},\n            {name: 'Kansas', abbreviation: 'KS'},\n            {name: 'Kentucky', abbreviation: 'KY'},\n            {name: 'Louisiana', abbreviation: 'LA'},\n            {name: 'Maine', abbreviation: 'ME'},\n            {name: 'Maryland', abbreviation: 'MD'},\n            {name: 'Massachusetts', abbreviation: 'MA'},\n            {name: 'Michigan', abbreviation: 'MI'},\n            {name: 'Minnesota', abbreviation: 'MN'},\n            {name: 'Mississippi', abbreviation: 'MS'},\n            {name: 'Missouri', abbreviation: 'MO'},\n            {name: 'Montana', abbreviation: 'MT'},\n            {name: 'Nebraska', abbreviation: 'NE'},\n            {name: 'Nevada', abbreviation: 'NV'},\n            {name: 'New Hampshire', abbreviation: 'NH'},\n            {name: 'New Jersey', abbreviation: 'NJ'},\n            {name: 'New Mexico', abbreviation: 'NM'},\n            {name: 'New York', abbreviation: 'NY'},\n            {name: 'North Carolina', abbreviation: 'NC'},\n            {name: 'North Dakota', abbreviation: 'ND'},\n            {name: 'Ohio', abbreviation: 'OH'},\n            {name: 'Oklahoma', abbreviation: 'OK'},\n            {name: 'Oregon', abbreviation: 'OR'},\n            {name: 'Pennsylvania', abbreviation: 'PA'},\n            {name: 'Rhode Island', abbreviation: 'RI'},\n            {name: 'South Carolina', abbreviation: 'SC'},\n            {name: 'South Dakota', abbreviation: 'SD'},\n            {name: 'Tennessee', abbreviation: 'TN'},\n            {name: 'Texas', abbreviation: 'TX'},\n            {name: 'Utah', abbreviation: 'UT'},\n            {name: 'Vermont', abbreviation: 'VT'},\n            {name: 'Virginia', abbreviation: 'VA'},\n            {name: 'Washington', abbreviation: 'WA'},\n            {name: 'West Virginia', abbreviation: 'WV'},\n            {name: 'Wisconsin', abbreviation: 'WI'},\n            {name: 'Wyoming', abbreviation: 'WY'}\n        ],\n\n        territories: [\n            {name: 'American Samoa', abbreviation: 'AS'},\n            {name: 'Federated States of Micronesia', abbreviation: 'FM'},\n            {name: 'Guam', abbreviation: 'GU'},\n            {name: 'Marshall Islands', abbreviation: 'MH'},\n            {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n            {name: 'Puerto Rico', abbreviation: 'PR'},\n            {name: 'Virgin Islands, U.S.', abbreviation: 'VI'}\n        ],\n\n        armed_forces: [\n            {name: 'Armed Forces Europe', abbreviation: 'AE'},\n            {name: 'Armed Forces Pacific', abbreviation: 'AP'},\n            {name: 'Armed Forces the Americas', abbreviation: 'AA'}\n        ],\n\n        street_suffixes: [\n            {name: 'Avenue', abbreviation: 'Ave'},\n            {name: 'Boulevard', abbreviation: 'Blvd'},\n            {name: 'Center', abbreviation: 'Ctr'},\n            {name: 'Circle', abbreviation: 'Cir'},\n            {name: 'Court', abbreviation: 'Ct'},\n            {name: 'Drive', abbreviation: 'Dr'},\n            {name: 'Extension', abbreviation: 'Ext'},\n            {name: 'Glen', abbreviation: 'Gln'},\n            {name: 'Grove', abbreviation: 'Grv'},\n            {name: 'Heights', abbreviation: 'Hts'},\n            {name: 'Highway', abbreviation: 'Hwy'},\n            {name: 'Junction', abbreviation: 'Jct'},\n            {name: 'Key', abbreviation: 'Key'},\n            {name: 'Lane', abbreviation: 'Ln'},\n            {name: 'Loop', abbreviation: 'Loop'},\n            {name: 'Manor', abbreviation: 'Mnr'},\n            {name: 'Mill', abbreviation: 'Mill'},\n            {name: 'Park', abbreviation: 'Park'},\n            {name: 'Parkway', abbreviation: 'Pkwy'},\n            {name: 'Pass', abbreviation: 'Pass'},\n            {name: 'Path', abbreviation: 'Path'},\n            {name: 'Pike', abbreviation: 'Pike'},\n            {name: 'Place', abbreviation: 'Pl'},\n            {name: 'Plaza', abbreviation: 'Plz'},\n            {name: 'Point', abbreviation: 'Pt'},\n            {name: 'Ridge', abbreviation: 'Rdg'},\n            {name: 'River', abbreviation: 'Riv'},\n            {name: 'Road', abbreviation: 'Rd'},\n            {name: 'Square', abbreviation: 'Sq'},\n            {name: 'Street', abbreviation: 'St'},\n            {name: 'Terrace', abbreviation: 'Ter'},\n            {name: 'Trail', abbreviation: 'Trl'},\n            {name: 'Turnpike', abbreviation: 'Tpke'},\n            {name: 'View', abbreviation: 'Vw'},\n            {name: 'Way', abbreviation: 'Way'}\n        ],\n\n        months: [\n            {name: 'January', short_name: 'Jan', numeric: '01', days: 31},\n            // Not messing with leap years...\n            {name: 'February', short_name: 'Feb', numeric: '02', days: 28},\n            {name: 'March', short_name: 'Mar', numeric: '03', days: 31},\n            {name: 'April', short_name: 'Apr', numeric: '04', days: 30},\n            {name: 'May', short_name: 'May', numeric: '05', days: 31},\n            {name: 'June', short_name: 'Jun', numeric: '06', days: 30},\n            {name: 'July', short_name: 'Jul', numeric: '07', days: 31},\n            {name: 'August', short_name: 'Aug', numeric: '08', days: 31},\n            {name: 'September', short_name: 'Sep', numeric: '09', days: 30},\n            {name: 'October', short_name: 'Oct', numeric: '10', days: 31},\n            {name: 'November', short_name: 'Nov', numeric: '11', days: 30},\n            {name: 'December', short_name: 'Dec', numeric: '12', days: 31}\n        ],\n\n        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n        cc_types: [\n            {name: \"American Express\", short_name: 'amex', prefix: '34', length: 15},\n            {name: \"Bankcard\", short_name: 'bankcard', prefix: '5610', length: 16},\n            {name: \"China UnionPay\", short_name: 'chinaunion', prefix: '62', length: 16},\n            {name: \"Diners Club Carte Blanche\", short_name: 'dccarte', prefix: '300', length: 14},\n            {name: \"Diners Club enRoute\", short_name: 'dcenroute', prefix: '2014', length: 15},\n            {name: \"Diners Club International\", short_name: 'dcintl', prefix: '36', length: 14},\n            {name: \"Diners Club United States & Canada\", short_name: 'dcusc', prefix: '54', length: 16},\n            {name: \"Discover Card\", short_name: 'discover', prefix: '6011', length: 16},\n            {name: \"InstaPayment\", short_name: 'instapay', prefix: '637', length: 16},\n            {name: \"JCB\", short_name: 'jcb', prefix: '3528', length: 16},\n            {name: \"Laser\", short_name: 'laser', prefix: '6304', length: 16},\n            {name: \"Maestro\", short_name: 'maestro', prefix: '5018', length: 16},\n            {name: \"Mastercard\", short_name: 'mc', prefix: '51', length: 16},\n            {name: \"Solo\", short_name: 'solo', prefix: '6334', length: 16},\n            {name: \"Switch\", short_name: 'switch', prefix: '4903', length: 16},\n            {name: \"Visa\", short_name: 'visa', prefix: '4', length: 16},\n            {name: \"Visa Electron\", short_name: 'electron', prefix: '4026', length: 16}\n        ],\n\n        //return all world currency by ISO 4217\n        currency_types: [\n            {'code' : 'AED', 'name' : 'United Arab Emirates Dirham'},\n            {'code' : 'AFN', 'name' : 'Afghanistan Afghani'},\n            {'code' : 'ALL', 'name' : 'Albania Lek'},\n            {'code' : 'AMD', 'name' : 'Armenia Dram'},\n            {'code' : 'ANG', 'name' : 'Netherlands Antilles Guilder'},\n            {'code' : 'AOA', 'name' : 'Angola Kwanza'},\n            {'code' : 'ARS', 'name' : 'Argentina Peso'},\n            {'code' : 'AUD', 'name' : 'Australia Dollar'},\n            {'code' : 'AWG', 'name' : 'Aruba Guilder'},\n            {'code' : 'AZN', 'name' : 'Azerbaijan New Manat'},\n            {'code' : 'BAM', 'name' : 'Bosnia and Herzegovina Convertible Marka'},\n            {'code' : 'BBD', 'name' : 'Barbados Dollar'},\n            {'code' : 'BDT', 'name' : 'Bangladesh Taka'},\n            {'code' : 'BGN', 'name' : 'Bulgaria Lev'},\n            {'code' : 'BHD', 'name' : 'Bahrain Dinar'},\n            {'code' : 'BIF', 'name' : 'Burundi Franc'},\n            {'code' : 'BMD', 'name' : 'Bermuda Dollar'},\n            {'code' : 'BND', 'name' : 'Brunei Darussalam Dollar'},\n            {'code' : 'BOB', 'name' : 'Bolivia Boliviano'},\n            {'code' : 'BRL', 'name' : 'Brazil Real'},\n            {'code' : 'BSD', 'name' : 'Bahamas Dollar'},\n            {'code' : 'BTN', 'name' : 'Bhutan Ngultrum'},\n            {'code' : 'BWP', 'name' : 'Botswana Pula'},\n            {'code' : 'BYR', 'name' : 'Belarus Ruble'},\n            {'code' : 'BZD', 'name' : 'Belize Dollar'},\n            {'code' : 'CAD', 'name' : 'Canada Dollar'},\n            {'code' : 'CDF', 'name' : 'Congo/Kinshasa Franc'},\n            {'code' : 'CHF', 'name' : 'Switzerland Franc'},\n            {'code' : 'CLP', 'name' : 'Chile Peso'},\n            {'code' : 'CNY', 'name' : 'China Yuan Renminbi'},\n            {'code' : 'COP', 'name' : 'Colombia Peso'},\n            {'code' : 'CRC', 'name' : 'Costa Rica Colon'},\n            {'code' : 'CUC', 'name' : 'Cuba Convertible Peso'},\n            {'code' : 'CUP', 'name' : 'Cuba Peso'},\n            {'code' : 'CVE', 'name' : 'Cape Verde Escudo'},\n            {'code' : 'CZK', 'name' : 'Czech Republic Koruna'},\n            {'code' : 'DJF', 'name' : 'Djibouti Franc'},\n            {'code' : 'DKK', 'name' : 'Denmark Krone'},\n            {'code' : 'DOP', 'name' : 'Dominican Republic Peso'},\n            {'code' : 'DZD', 'name' : 'Algeria Dinar'},\n            {'code' : 'EGP', 'name' : 'Egypt Pound'},\n            {'code' : 'ERN', 'name' : 'Eritrea Nakfa'},\n            {'code' : 'ETB', 'name' : 'Ethiopia Birr'},\n            {'code' : 'EUR', 'name' : 'Euro Member Countries'},\n            {'code' : 'FJD', 'name' : 'Fiji Dollar'},\n            {'code' : 'FKP', 'name' : 'Falkland Islands (Malvinas) Pound'},\n            {'code' : 'GBP', 'name' : 'United Kingdom Pound'},\n            {'code' : 'GEL', 'name' : 'Georgia Lari'},\n            {'code' : 'GGP', 'name' : 'Guernsey Pound'},\n            {'code' : 'GHS', 'name' : 'Ghana Cedi'},\n            {'code' : 'GIP', 'name' : 'Gibraltar Pound'},\n            {'code' : 'GMD', 'name' : 'Gambia Dalasi'},\n            {'code' : 'GNF', 'name' : 'Guinea Franc'},\n            {'code' : 'GTQ', 'name' : 'Guatemala Quetzal'},\n            {'code' : 'GYD', 'name' : 'Guyana Dollar'},\n            {'code' : 'HKD', 'name' : 'Hong Kong Dollar'},\n            {'code' : 'HNL', 'name' : 'Honduras Lempira'},\n            {'code' : 'HRK', 'name' : 'Croatia Kuna'},\n            {'code' : 'HTG', 'name' : 'Haiti Gourde'},\n            {'code' : 'HUF', 'name' : 'Hungary Forint'},\n            {'code' : 'IDR', 'name' : 'Indonesia Rupiah'},\n            {'code' : 'ILS', 'name' : 'Israel Shekel'},\n            {'code' : 'IMP', 'name' : 'Isle of Man Pound'},\n            {'code' : 'INR', 'name' : 'India Rupee'},\n            {'code' : 'IQD', 'name' : 'Iraq Dinar'},\n            {'code' : 'IRR', 'name' : 'Iran Rial'},\n            {'code' : 'ISK', 'name' : 'Iceland Krona'},\n            {'code' : 'JEP', 'name' : 'Jersey Pound'},\n            {'code' : 'JMD', 'name' : 'Jamaica Dollar'},\n            {'code' : 'JOD', 'name' : 'Jordan Dinar'},\n            {'code' : 'JPY', 'name' : 'Japan Yen'},\n            {'code' : 'KES', 'name' : 'Kenya Shilling'},\n            {'code' : 'KGS', 'name' : 'Kyrgyzstan Som'},\n            {'code' : 'KHR', 'name' : 'Cambodia Riel'},\n            {'code' : 'KMF', 'name' : 'Comoros Franc'},\n            {'code' : 'KPW', 'name' : 'Korea (North) Won'},\n            {'code' : 'KRW', 'name' : 'Korea (South) Won'},\n            {'code' : 'KWD', 'name' : 'Kuwait Dinar'},\n            {'code' : 'KYD', 'name' : 'Cayman Islands Dollar'},\n            {'code' : 'KZT', 'name' : 'Kazakhstan Tenge'},\n            {'code' : 'LAK', 'name' : 'Laos Kip'},\n            {'code' : 'LBP', 'name' : 'Lebanon Pound'},\n            {'code' : 'LKR', 'name' : 'Sri Lanka Rupee'},\n            {'code' : 'LRD', 'name' : 'Liberia Dollar'},\n            {'code' : 'LSL', 'name' : 'Lesotho Loti'},\n            {'code' : 'LTL', 'name' : 'Lithuania Litas'},\n            {'code' : 'LYD', 'name' : 'Libya Dinar'},\n            {'code' : 'MAD', 'name' : 'Morocco Dirham'},\n            {'code' : 'MDL', 'name' : 'Moldova Leu'},\n            {'code' : 'MGA', 'name' : 'Madagascar Ariary'},\n            {'code' : 'MKD', 'name' : 'Macedonia Denar'},\n            {'code' : 'MMK', 'name' : 'Myanmar (Burma) Kyat'},\n            {'code' : 'MNT', 'name' : 'Mongolia Tughrik'},\n            {'code' : 'MOP', 'name' : 'Macau Pataca'},\n            {'code' : 'MRO', 'name' : 'Mauritania Ouguiya'},\n            {'code' : 'MUR', 'name' : 'Mauritius Rupee'},\n            {'code' : 'MVR', 'name' : 'Maldives (Maldive Islands) Rufiyaa'},\n            {'code' : 'MWK', 'name' : 'Malawi Kwacha'},\n            {'code' : 'MXN', 'name' : 'Mexico Peso'},\n            {'code' : 'MYR', 'name' : 'Malaysia Ringgit'},\n            {'code' : 'MZN', 'name' : 'Mozambique Metical'},\n            {'code' : 'NAD', 'name' : 'Namibia Dollar'},\n            {'code' : 'NGN', 'name' : 'Nigeria Naira'},\n            {'code' : 'NIO', 'name' : 'Nicaragua Cordoba'},\n            {'code' : 'NOK', 'name' : 'Norway Krone'},\n            {'code' : 'NPR', 'name' : 'Nepal Rupee'},\n            {'code' : 'NZD', 'name' : 'New Zealand Dollar'},\n            {'code' : 'OMR', 'name' : 'Oman Rial'},\n            {'code' : 'PAB', 'name' : 'Panama Balboa'},\n            {'code' : 'PEN', 'name' : 'Peru Nuevo Sol'},\n            {'code' : 'PGK', 'name' : 'Papua New Guinea Kina'},\n            {'code' : 'PHP', 'name' : 'Philippines Peso'},\n            {'code' : 'PKR', 'name' : 'Pakistan Rupee'},\n            {'code' : 'PLN', 'name' : 'Poland Zloty'},\n            {'code' : 'PYG', 'name' : 'Paraguay Guarani'},\n            {'code' : 'QAR', 'name' : 'Qatar Riyal'},\n            {'code' : 'RON', 'name' : 'Romania New Leu'},\n            {'code' : 'RSD', 'name' : 'Serbia Dinar'},\n            {'code' : 'RUB', 'name' : 'Russia Ruble'},\n            {'code' : 'RWF', 'name' : 'Rwanda Franc'},\n            {'code' : 'SAR', 'name' : 'Saudi Arabia Riyal'},\n            {'code' : 'SBD', 'name' : 'Solomon Islands Dollar'},\n            {'code' : 'SCR', 'name' : 'Seychelles Rupee'},\n            {'code' : 'SDG', 'name' : 'Sudan Pound'},\n            {'code' : 'SEK', 'name' : 'Sweden Krona'},\n            {'code' : 'SGD', 'name' : 'Singapore Dollar'},\n            {'code' : 'SHP', 'name' : 'Saint Helena Pound'},\n            {'code' : 'SLL', 'name' : 'Sierra Leone Leone'},\n            {'code' : 'SOS', 'name' : 'Somalia Shilling'},\n            {'code' : 'SPL', 'name' : 'Seborga Luigino'},\n            {'code' : 'SRD', 'name' : 'Suriname Dollar'},\n            {'code' : 'STD', 'name' : 'São Tomé and Príncipe Dobra'},\n            {'code' : 'SVC', 'name' : 'El Salvador Colon'},\n            {'code' : 'SYP', 'name' : 'Syria Pound'},\n            {'code' : 'SZL', 'name' : 'Swaziland Lilangeni'},\n            {'code' : 'THB', 'name' : 'Thailand Baht'},\n            {'code' : 'TJS', 'name' : 'Tajikistan Somoni'},\n            {'code' : 'TMT', 'name' : 'Turkmenistan Manat'},\n            {'code' : 'TND', 'name' : 'Tunisia Dinar'},\n            {'code' : 'TOP', 'name' : 'Tonga Pa\\'anga'},\n            {'code' : 'TRY', 'name' : 'Turkey Lira'},\n            {'code' : 'TTD', 'name' : 'Trinidad and Tobago Dollar'},\n            {'code' : 'TVD', 'name' : 'Tuvalu Dollar'},\n            {'code' : 'TWD', 'name' : 'Taiwan New Dollar'},\n            {'code' : 'TZS', 'name' : 'Tanzania Shilling'},\n            {'code' : 'UAH', 'name' : 'Ukraine Hryvnia'},\n            {'code' : 'UGX', 'name' : 'Uganda Shilling'},\n            {'code' : 'USD', 'name' : 'United States Dollar'},\n            {'code' : 'UYU', 'name' : 'Uruguay Peso'},\n            {'code' : 'UZS', 'name' : 'Uzbekistan Som'},\n            {'code' : 'VEF', 'name' : 'Venezuela Bolivar'},\n            {'code' : 'VND', 'name' : 'Viet Nam Dong'},\n            {'code' : 'VUV', 'name' : 'Vanuatu Vatu'},\n            {'code' : 'WST', 'name' : 'Samoa Tala'},\n            {'code' : 'XAF', 'name' : 'Communauté Financière Africaine (BEAC) CFA Franc BEAC'},\n            {'code' : 'XCD', 'name' : 'East Caribbean Dollar'},\n            {'code' : 'XDR', 'name' : 'International Monetary Fund (IMF) Special Drawing Rights'},\n            {'code' : 'XOF', 'name' : 'Communauté Financière Africaine (BCEAO) Franc'},\n            {'code' : 'XPF', 'name' : 'Comptoirs Français du Pacifique (CFP) Franc'},\n            {'code' : 'YER', 'name' : 'Yemen Rial'},\n            {'code' : 'ZAR', 'name' : 'South Africa Rand'},\n            {'code' : 'ZMW', 'name' : 'Zambia Kwacha'},\n            {'code' : 'ZWD', 'name' : 'Zimbabwe Dollar'}\n        ]\n    };\n\n    var o_hasOwnProperty = Object.prototype.hasOwnProperty;\n    var o_keys = (Object.keys || function(obj) {\n      var result = [];\n      for (var key in obj) {\n        if (o_hasOwnProperty.call(obj, key)) {\n          result.push(key);\n        }\n      }\n\n      return result;\n    });\n\n    function _copyObject(source, target) {\n      var keys = o_keys(source);\n      var key;\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        target[key] = source[key] || target[key];\n      }\n    }\n\n    function _copyArray(source, target) {\n      for (var i = 0, l = source.length; i < l; i++) {\n        target[i] = source[i];\n      }\n    }\n\n    function copyObject(source, _target) {\n        var isArray = Array.isArray(source);\n        var target = _target || (isArray ? new Array(source.length) : {});\n\n        if (isArray) {\n          _copyArray(source, target);\n        } else {\n          _copyObject(source, target);\n        }\n\n        return target;\n    }\n\n    /** Get the data based on key**/\n    Chance.prototype.get = function (name) {\n        return copyObject(data[name]);\n    };\n\n    // Mac Address\n    Chance.prototype.mac_address = function(options){\n        // typically mac addresses are separated by \":\"\n        // however they can also be separated by \"-\"\n        // the network variant uses a dot every fourth byte\n\n        options = initOptions(options);\n        if(!options.separator) {\n            options.separator =  options.networkVersion ? \".\" : \":\";\n        }\n\n        var mac_pool=\"ABCDEF1234567890\",\n            mac = \"\";\n        if(!options.networkVersion) {\n            mac = this.n(this.string, 6, { pool: mac_pool, length:2 }).join(options.separator);\n        } else {\n            mac = this.n(this.string, 3, { pool: mac_pool, length:4 }).join(options.separator);\n        }\n\n        return mac;\n    };\n\n    Chance.prototype.normal = function (options) {\n        options = initOptions(options, {mean : 0, dev : 1});\n\n        // The Marsaglia Polar method\n        var s, u, v, norm,\n            mean = options.mean,\n            dev = options.dev;\n\n        do {\n            // U and V are from the uniform distribution on (-1, 1)\n            u = this.random() * 2 - 1;\n            v = this.random() * 2 - 1;\n\n            s = u * u + v * v;\n        } while (s >= 1);\n\n        // Compute the standard normal variate\n        norm = u * Math.sqrt(-2 * Math.log(s) / s);\n\n        // Shape and scale\n        return dev * norm + mean;\n    };\n\n    Chance.prototype.radio = function (options) {\n        // Initial Letter (Typically Designated by Side of Mississippi River)\n        options = initOptions(options, {side : \"?\"});\n        var fl = \"\";\n        switch (options.side.toLowerCase()) {\n        case \"east\":\n        case \"e\":\n            fl = \"W\";\n            break;\n        case \"west\":\n        case \"w\":\n            fl = \"K\";\n            break;\n        default:\n            fl = this.character({pool: \"KW\"});\n            break;\n        }\n\n        return fl + this.character({alpha: true, casing: \"upper\"}) +\n                this.character({alpha: true, casing: \"upper\"}) +\n                this.character({alpha: true, casing: \"upper\"});\n    };\n\n    // Set the data as key and data or the data map\n    Chance.prototype.set = function (name, values) {\n        if (typeof name === \"string\") {\n            data[name] = values;\n        } else {\n            data = copyObject(name, data);\n        }\n    };\n\n    Chance.prototype.tv = function (options) {\n        return this.radio(options);\n    };\n\n    // ID number for Brazil companies\n    Chance.prototype.cnpj = function () {\n        var n = this.n(this.natural, 8, { max: 9 });\n        var d1 = 2+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\n        d1 = 11 - (d1 % 11);\n        if (d1>=10){\n            d1 = 0;\n        }\n        var d2 = d1*2+3+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\n        d2 = 11 - (d2 % 11);\n        if (d2>=10){\n            d2 = 0;\n        }\n        return ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/0001-'+d1+d2;\n    };\n\n    // -- End Miscellaneous --\n\n    Chance.prototype.mersenne_twister = function (seed) {\n        return new MersenneTwister(seed);\n    };\n\n    // Mersenne Twister from https://gist.github.com/banksean/300494\n    var MersenneTwister = function (seed) {\n        if (seed === undefined) {\n            seed = new Date().getTime();\n        }\n        /* Period parameters */\n        this.N = 624;\n        this.M = 397;\n        this.MATRIX_A = 0x9908b0df;   /* constant vector a */\n        this.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n        this.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n        this.mt = new Array(this.N); /* the array for the state vector */\n        this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */\n\n        this.init_genrand(seed);\n    };\n\n    /* initializes mt[N] with a seed */\n    MersenneTwister.prototype.init_genrand = function (s) {\n        this.mt[0] = s >>> 0;\n        for (this.mti = 1; this.mti < this.N; this.mti++) {\n            s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\n            this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + this.mti;\n            /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n            /* In the previous versions, MSBs of the seed affect   */\n            /* only MSBs of the array mt[].                        */\n            /* 2002/01/09 modified by Makoto Matsumoto             */\n            this.mt[this.mti] >>>= 0;\n            /* for >32 bit machines */\n        }\n    };\n\n    /* initialize by an array with array-length */\n    /* init_key is the array for initializing keys */\n    /* key_length is its length */\n    /* slight change for C++, 2004/2/26 */\n    MersenneTwister.prototype.init_by_array = function (init_key, key_length) {\n        var i = 1, j = 0, k, s;\n        this.init_genrand(19650218);\n        k = (this.N > key_length ? this.N : key_length);\n        for (; k; k--) {\n            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525))) + init_key[j] + j; /* non linear */\n            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n            i++;\n            j++;\n            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n            if (j >= key_length) { j = 0; }\n        }\n        for (k = this.N - 1; k; k--) {\n            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941)) - i; /* non linear */\n            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n            i++;\n            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n        }\n\n        this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n    };\n\n    /* generates a random number on [0,0xffffffff]-interval */\n    MersenneTwister.prototype.genrand_int32 = function () {\n        var y;\n        var mag01 = new Array(0x0, this.MATRIX_A);\n        /* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n        if (this.mti >= this.N) { /* generate N words at one time */\n            var kk;\n\n            if (this.mti === this.N + 1) {   /* if init_genrand() has not been called, */\n                this.init_genrand(5489); /* a default initial seed is used */\n            }\n            for (kk = 0; kk < this.N - this.M; kk++) {\n                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n                this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n            }\n            for (;kk < this.N - 1; kk++) {\n                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n                this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n            }\n            y = (this.mt[this.N - 1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\n            this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n            this.mti = 0;\n        }\n\n        y = this.mt[this.mti++];\n\n        /* Tempering */\n        y ^= (y >>> 11);\n        y ^= (y << 7) & 0x9d2c5680;\n        y ^= (y << 15) & 0xefc60000;\n        y ^= (y >>> 18);\n\n        return y >>> 0;\n    };\n\n    /* generates a random number on [0,0x7fffffff]-interval */\n    MersenneTwister.prototype.genrand_int31 = function () {\n        return (this.genrand_int32() >>> 1);\n    };\n\n    /* generates a random number on [0,1]-real-interval */\n    MersenneTwister.prototype.genrand_real1 = function () {\n        return this.genrand_int32() * (1.0 / 4294967295.0);\n        /* divided by 2^32-1 */\n    };\n\n    /* generates a random number on [0,1)-real-interval */\n    MersenneTwister.prototype.random = function () {\n        return this.genrand_int32() * (1.0 / 4294967296.0);\n        /* divided by 2^32 */\n    };\n\n    /* generates a random number on (0,1)-real-interval */\n    MersenneTwister.prototype.genrand_real3 = function () {\n        return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);\n        /* divided by 2^32 */\n    };\n\n    /* generates a random number on [0,1) with 53-bit resolution*/\n    MersenneTwister.prototype.genrand_res53 = function () {\n        var a = this.genrand_int32()>>>5, b = this.genrand_int32()>>>6;\n        return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\n    };\n\n\n    // CommonJS module\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = Chance;\n        }\n        exports.Chance = Chance;\n    }\n\n    // Register as an anonymous AMD module\n    if (typeof define === 'function' && define.amd) {\n        define([], function () {\n            return Chance;\n        });\n    }\n\n    // if there is a importsScrips object define chance for worker\n    if (typeof importScripts !== 'undefined') {\n        chance = new Chance();\n    }\n\n    // If there is a window object, that at least has a document property,\n    // instantiate and define chance on the window\n    if (typeof window === \"object\" && typeof window.document === \"object\") {\n        window.Chance = Chance;\n        window.chance = new Chance();\n    }\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/chance/chance.js\n ** module id = 498\n ** module chunks = 6\n **/"],"sourceRoot":""}