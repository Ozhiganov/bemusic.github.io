{"version":3,"sources":["webpack:///comingSoonDemo-3b2c39a2b7357cd01d9a.js","webpack:///../~/lodash/index.js?933d****","webpack:///../~/bms/~/bemuse-chardet/match.js?9eeb***","webpack:///../~/co/index.js?5989****","webpack:///../~/node-libs-browser/~/util/util.js?a976***","webpack:///../~/data-structure/index.js?12c8***","webpack:///./progress/formatters.js?ad28****","webpack:///./progress/utils.js?8e3b***","webpack:///./utils/read-blob.js?3889****","webpack:///../~/webpack/buildin/module.js?17a8****","webpack:///./sampling-master/index.js?b6e4***","webpack:///../~/bms/util/match.js?d59a***","webpack:///../~/bms/bms/chart.js?6148***","webpack:///../~/bms/bms/headers.js?fe08***","webpack:///../~/bms/bms/objects.js?4fe6***","webpack:///../~/bms/speedcore/index.js?dca6***","webpack:///../~/bms/time-signatures/index.js?05b3***","webpack:///../~/node-libs-browser/~/buffer/index.js?c973**","webpack:///../~/audio-context/index.js?af50***","webpack:///../~/bytes/index.js?8398****","webpack:///../~/audio-context/~/global/window.js?bfdb***","webpack:///../~/bms/compiler/index.js?6bc5***","webpack:///../~/bms/~/bemuse-chardet/bemuse-chardet.js?1019***","webpack:///../~/bms/~/bemuse-chardet/encoding/iso2022.js?7adf***","webpack:///../~/bms/~/bemuse-chardet/encoding/mbcs.js?757a***","webpack:///../~/bms/~/bemuse-chardet/encoding/sbcs.js?0135***","webpack:///../~/bms/~/bemuse-chardet/encoding/unicode.js?8728***","webpack:///../~/bms/~/bemuse-chardet/encoding/utf8.js?586d***","webpack:///../~/bms/notes/index.js?6e40***","webpack:///../~/bms/notes/note.js?58df***","webpack:///../~/bms/reader/index.web.js?3b8a***","webpack:///../~/bms/song-info/index.js?89d7***","webpack:///../~/bms/speedcore/segment.js?b626***","webpack:///../~/bms/timing/index.js?7599***","webpack:///../~/node-libs-browser/~/util/~/inherits/inherits_browser.js?1c9c***","webpack:///../~/node-libs-browser/~/util/support/isBufferBrowser.js?aae8***","webpack:///./resources/dnd-resources.js?f67f**","webpack:///../~/node-libs-browser/~/buffer/~/base64-js/lib/b64.js?3369**","webpack:///../~/node-libs-browser/~/buffer/~/ieee754/index.js?d9ac**","webpack:///../~/node-libs-browser/~/buffer/~/is-array/index.js?fe42**","webpack:///./coming-soon/demo/index.js","webpack:///./coming-soon/demo/style.scss","webpack:///./coming-soon/demo/template.jade","webpack:///./coming-soon/demo/style.scss?3176"],"names":["webpackJsonp",12,"module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_RESULT__","global","baseCompareAscending","value","other","valIsNull","valIsUndef","undefined","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","length","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","call","wrapperClone","baseLodash","chainAll","actions","this","__wrapped__","__actions__","__chain__","__dir__","__dropCount__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","iteratees","views","arrayCopy","lazyReverse","clone","lazyValue","baseWrapperValue","dir","isRight","view","getView","start","end","takeCount","nativeMin","iterLength","outer","iterIndex","data","type","LAZY_DROP_WHILE_FLAG","done","count","limit","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","key","has","mapGet","mapHas","mapSet","SetCache","values","hash","nativeCreate","set","Set","push","cacheIndexOf","cache","isObject","cachePush","add","source","Array","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArr","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","valIndex","valLength","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","splice","baseRandom","min","max","floor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","bufferSlice","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","offset","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","prototype","createCurry","flag","curryFunc","arity","createWrapper","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","ceil","slice","createPartialWrapper","createSortedIndex","mergeData","baseSetData","arrLength","othLength","arrValue","othValue","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","realNames","otherFunc","target","pairs","getNative","isNative","transforms","size","input","Object","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","pickByArray","pickByCallback","oldArray","shimIsPlainObject","support","shimKeys","allowIndexes","replace","rePropName","match","number","quote","reEscapeChar","chunk","compact","drop","n","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","concat","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","reverse","wrapperToString","wrapperValue","every","filter","findWhere","find","includes","isString","map","pluck","reject","sample","toArray","rand","shuffle","some","sortBy","sortByOrder","where","after","temp","before","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","trailingCall","delayed","remaining","now","stamp","isCalled","lastCalled","maxDelayed","trailing","maxWait","debounced","leading","leadingCall","memoize","resolver","memoized","get","Cache","negate","once","otherArgs","spread","throttle","debounceOptions","wrap","cloneDeep","gt","gte","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isMatch","isNaN","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","lt","lte","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","parseInt","radix","nativeParseInt","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trim","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","constant","matchesProperty","mixin","isObj","methodNames","methodName","noConflict","_","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","id","idCounter","augend","addend","sum","noIteratee","defaults","pick","contextProps","Date","Error","Math","Number","String","arrayProto","objectProto","stringProto","document","window","toString","ArrayBuffer","getPrototypeOf","Uint8Array","WeakMap","Float64Array","e","nativeIsArray","isFinite","nativeKeys","nativeNow","nativeNumIsFinite","NEGATIVE_INFINITY","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","metaMap","x","valueOf","y","dom","createDocumentFragment","reEscape","reEvaluate","baseEachRight","byteLength","floatLength","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","othIndex","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","at","countBy","findLast","forEach","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduce","reduceRight","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","partial","partialRight","rearg","objProto","assign","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","merge","omit","camelCase","word","toLowerCase","kebabCase","padLeft","padRight","whitespace","reHasHexPrefix","snakeCase","startCase","method","methodOf","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","isFilter","isDropWhile","filtered","whileName","takeName","dropName","operationName","createCallback","lodashFunc","checkIteratee","retUnwrapped","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","run","toJSON","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow",31,"det","rec","confidence","lang",38,"co","gen","ctx","Promise","resolve","onFulfilled","res","ret","next","onRejected","err","toPromise","isPromise","then","obj","isGeneratorFunction","isGenerator","thunkToPromise","arrayToPromise","objectToPromise","promise","results","promises","i","displayName","val","createPromise","__generatorFunction__",40,"process","inspect","opts","stylize","stylizeNoColor","depth","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","str","styleType","style","styles","arrayToHash","idx","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","base","braces","toUTCString","output","formatArray","formatProperty","reduceToSingleString","simple","JSON","stringify","l","desc","getOwnPropertyDescriptor","split","line","join","substr","numLinesEst","prev","cur","ar","arg","isNullOrUndefined","isSymbol","re","objectToString","d","isPrimitive","o","timestamp","time","getHours","getMinutes","getSeconds","getDate","months","getMonth","prop","formatRegExp","format","f","objects","len","deprecate","msg","deprecated","warned","throwDeprecation","traceDeprecation","console","trace","error","noDeprecation","debugEnviron","debugs","debuglog","env","NODE_DEBUG","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","boolean","null","date","regexp","isBuffer","log","inherits","origin",52,"DataStructure","Constructor","validate","schemas","schema","validateObject","maybe","MaybeValidator",75,"_interopRequire","__esModule","defineProperty","bytes","progress","BYTES_FORMATTER","total","EXTRA_FORMATTER","extra",76,"fixed","loaded","report","atomic","formatter","wrapPromise","from","to","watch",77,"readBlob","blob","as","reader","FileReader","onload","onerror","readAsArrayBuffer","readAsText",79,"webpackPolyfill","paths","children",83,"canPlay","dummyAudioTag","canPlayType","unmuteAudio","gain","createGain","connect","destination","disconnect","_createClass","defineProperties","configurable","writable","protoProps","staticProps","_classCallCheck","instance","defaultAudioContext","createElement","SamplingMaster","audioContext","_audioContext","_samples","_instances","unmute","destroy","_destroyed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","blobOrArrayBuffer","_this","_coerceToArrayBuffer","arrayBuffer","_decodeAudio","audioBuffer","Sample","decodeAudioData","_startPlaying","_stoppedPlaying","samplingMaster","_master","_buffer","play","node","PlayInstance","createBufferSource","onended","stop","_source","_gain","currentTime","onstop","bad","playbackRate","pow",85,"text","matched","when","else",114,"BMSChart","headers","BMSHeaders","BMSObjects","timeSignatures","TimeSignatures","measureToBeat","measure","fraction",115,"_data","_dataAll","getAll",116,"_objects","channel","allSorted","list","a","b",117,"Speedcore","segments","_segments","Segment","T","segment","t","X","_reached","typeFn","inclusive","_segmentAt","segmentAtX","segmentAtT","dx",118,"_values","getBeats",119,"Buffer","fromNumber","fromString","fromObject","that","allocate","checked","TYPED_ARRAY_SUPPORT","encoding","write","fromBuffer","fromArray","fromTypedArray","fromArrayLike","fromJsonObject","copy","_augment","_isBuffer","fromPool","poolSize","rootParent","kMaxLength","RangeError","SlowBuffer","subject","buf","utf8ToBytes","base64ToBytes","hexWrite","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64Slice","base64","fromByteArray","utf8Slice","tmp","decodeUtf8Char","fromCharCode","asciiSlice","binarySlice","hexSlice","out","toHex","utf16leSlice","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","j","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","Infinity","codePoint","leadSurrogate","byteArray","c","hi","lo","toByteArray","src","dst","decodeURIComponent","INSPECT_MAX_BYTES","arr","foo","subarray","compare","isEncoding","pos","item","loweredCase","equals","arrayIndexOf","foundIndex","readUInt8","v","writeUInt8","swap","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","_set","toArrayBuffer","BP","toLocaleString",120,"Context","AudioContext","webkitAudioContext",128,"convert","tb","gb","mb","kb","abs","round","parts",134,138,"eachLine","compile","handleChannelSentence","lineNumber","items","chart","warn","warnings","rng","randomStack","skipStack","headerSentences","channelSentences","controlSentences","skippedSentences","malformedSentences","m","skipped",139,"utf8","unicode","mbcs","recognisers","UTF_16BE","UTF_16LE","sjis","euc_kr","fByteStats","fC1Bytes","fRawInput","fRawLength","fInputBytes","fInputLen",140,"ISO_2022","util","Match","escN","quality","hits","misses","shifts","textLen","scanInput","checkEscapes","escapeSequences","seq","ISO_2022_JP","ISO_2022_KR","ISO_2022_CN",141,"binarySearch","searchValue","left","right","IteratedChar","charValue","nextIndex","reset","nextByte","byteValue","eucNextChar","iter","firstByte","secondByte","thirdByte","singleByteCharCount","doubleByteCharCount","commonCharCount","badCharCount","totalCharCount","detectBlock","nextChar","cv","commonChars","maxVal","scaleFactor","language","big5","euc_jp","gb_18030","fourthByte","buildChar",142,"NGramParser","theNgramList","theByteMap","N_GRAM_MASK","byteIndex","ngram","ngramList","byteMap","ngramCount","hitCount","spaceChar","table","lookup","thisNgram","addByte","parse","spaceCh","ignoreSpace","rawPercent","NGramsPlusLang","la","ng","fLang","fNGrams","sbcs","ngrams","multiple","parser","bestConfidenceSoFar","ngl","ISO_8859_1","ISO_8859_2","ISO_8859_5","ISO_8859_6","ISO_8859_7","ISO_8859_8","ISO_8859_9","windows_1251","windows_1256","KOI8_R",143,"UTF_32","numValid","numInvalid","hasBOM","getChar","ch","UTF_32BE","UTF_32LE",144,"trailBytes",145,"Notes","notes","Note","_notes","BMSNoteBuilder","_chart","CHANNEL_MAPPING","IIDX_P1","11","column","13","14","15","18","19","16","fromBMSChart","builder","build","_activeLN","_lastNote","_lnObj","_channelMapping","_handle","_handleNormalNote","_handleLongNote","_normalizeChannel","beat","_getBeat","endBeat","note","keysound","_getColumn",146,"Column",147,"chardet","readAsync","charset","Blob",148,"SongInfo","title","artist","genre","subtitles","subartists","difficulty","level","info","extractSubtitle",149,150,"Timing","initialBPM","state","bpm","seconds","precedence","stopBeats","_speedcore","_eventBeats","beatToSeconds","secondsToBeat","bpmAtBeat","getEventBeats",151,"ctor","superCtor","super_","enumerable","TempCtor",152,245,"getFilesFromEvent","event","readItem","regeneratorRuntime","mark","callee$2$0","entry","file","context$3$0","webkitGetAsEntry","readEntry","getAsFile","addFile","isFile","readFile","isDirectory","readDirectory","entries","readMore","createReader","readEntries","sent","abrupt","_toConsumableArray","t5","finish","callee$1$0","context$2$0","dataTransfer","t3","files","t4","_interopRequireWildcard","default","arr2","ProgressUtils","DndResources","_files","FileResource","fileList","_file",249,"decode","elt","code","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","L","placeHolders","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","extraBytes",250,"isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","rt","LN2",251,434,"main","element","handler","ui","$","off","hide","el","appendTo","on","preventDefault","dndLoader","originalEvent","go","loader","waitForPlay","$play","show","$log","loadSamples","samples","completed","loadKeysound","master","$sampler","bmsFile","arraybuffer","timing","promisify","Reader","Compiler","span","scrollTop","scrollHeight","addClass",584,606,"locals",705,"content"],"mappings":"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A,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,mEAEA,GAAAA,GAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,GAAAA,GAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,GAAAA,GAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,GAAAA,GAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,GAAAA,GAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,oEAEA,GAAAA,GAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,sEAKA34C,KAAAmW,KAAA,SAAAggB,GACA,MAAAA,MAAA6d,SAAA,8BAGAO,EAAA3V,SAAAzjC,EAAAC,QAAAk+C,WAAAN,GAGA79C,EAAAC,QAAAm+C,WAAA,WACAv5C,KAAA+3C,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,4BACA,8BACA,6BACA,8BACA,gCACA,gCACA,+BACA,gCACA,gCACA,gCACA,+BACA,iCAIA/3C,KAAAi5C,OAAA,WACA,OACA,GAAAN,GAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,yEAEA,GAAAA,GAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,oEAEA,GAAAA,GAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,mEAEA,GAAAA,GAAA,MACA,gEACA,gEACA,gEACA,gEACA,+DACA,gEACA,gEACA;EAKA34C,KAAAmW,KAAA,SAAAggB,GACA,MAAAA,MAAA6d,SAAA,8BAGAO,EAAA3V,SAAAzjC,EAAAC,QAAAm+C,WAAAP,GAGA79C,EAAAC,QAAAo+C,WAAA,WACAx5C,KAAA+3C,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,+BACA,+BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,+BACA,iCAIA/3C,KAAAi5C,OAAA,WACA,OACA,gEACA,gEACA,sEACA,wEACA,wEACA,wEACA,wEACA,yEAIAj5C,KAAAmW,KAAA,SAAAggB,GACA,oBAGAn2B,KAAAi3C,SAAA,WACA,aAGA1C,EAAA3V,SAAAzjC,EAAAC,QAAAo+C,WAAAR,GAGA79C,EAAAC,QAAAq+C,WAAA,WACAz5C,KAAA+3C,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,+BACA,gCACA,gCACA,2BACA,gCACA,2BACA,wBACA,0BAIA/3C,KAAAi5C,OAAA,WACA,OACA,gEACA,wEACA,wEACA,wEACA,wEACA,wEACA,wEACA,0EAIAj5C,KAAAmW,KAAA,SAAAggB,GACA,oBAGAn2B,KAAAi3C,SAAA,WACA,aAGA1C,EAAA3V,SAAAzjC,EAAAC,QAAAq+C,WAAAT,GAGA79C,EAAAC,QAAAs+C,WAAA,WACA15C,KAAA+3C,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,0BACA,wBACA,yBACA,8BACA,gCACA,gCACA,+BACA,gCACA,gCACA,gCACA,gCACA,iCAIA/3C,KAAAi5C,OAAA,WACA,OACA,gEACA,gEACA,uEACA,wEACA,wEACA,wEACA,wEACA,yEAIAj5C,KAAAmW,KAAA,SAAAggB,GACA,MAAAA,MAAA6d,SAAA,6BAGAh0C,KAAAi3C,SAAA,WACA,aAGA1C,EAAA3V,SAAAzjC,EAAAC,QAAAs+C,WAAAV,GAEA79C,EAAAC,QAAAu+C,WAAA,WAEA35C,KAAA+3C,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,gCACA,gCACA,gCACA,6BAIA/3C,KAAAi5C,OAAA,WACA,OACA,GAAAN,GAAA,MACA,gEACA,gEACA,sEACA,wEACA,wEACA,wEACA,wEACA,0EAEA,GAAAA,GAAA,MACA,gEACA,gEACA,sEACA,wEACA,wEACA,wEACA,wEACA,4EAKA34C,KAAAmW,KAAA,SAAAggB,GACA,MAAAA,MAAA6d,SAAA,6BAGAh0C,KAAAi3C,SAAA,WACA,aAIA1C,EAAA3V,SAAAzjC,EAAAC,QAAAu+C,WAAAX,GAGA79C,EAAAC,QAAAw+C,WAAA,WACA55C,KAAA+3C,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,yBACA,yBACA,gCACA,gCACA,+BACA,gCACA,gCACA,gCACA,+BACA,kCAIA/3C,KAAAi5C,OAAA,WACA,OACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,sEAIAj5C,KAAAmW,KAAA,SAAAggB,GACA,MAAAA,MAAA6d,SAAA,6BAGAh0C,KAAAi3C,SAAA,WACA,aAGA1C,EAAA3V,SAAAzjC,EAAAC,QAAAw+C,WAAAZ,GAGA79C,EAAAC,QAAAy+C,aAAA,WACA75C,KAAA+3C,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,2BACA,6BACA,yBACA,6BACA,4BACA,2BACA,4BACA,8BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,kCAIA/3C,KAAAi5C,OAAA,WACA,OACA,gEACA,gEACA,sEACA,wEACA,wEACA,wEACA,wEACA,0EAIAj5C,KAAAmW,KAAA,SAAAggB,GACA,sBAGAn2B,KAAAi3C,SAAA,WACA,aAGA1C,EAAA3V,SAAAzjC,EAAAC,QAAAy+C,aAAAb,GAGA79C,EAAAC,QAAA0+C,aAAA,WACA95C,KAAA+3C,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,0BACA,8BACA,yBACA,4BACA,wBACA,yBACA,yBACA,wBACA,gCACA,gCACA,+BACA,gCACA,gCACA,gCACA,yBACA,8BAIA/3C,KAAAi5C,OAAA,WACA,OACA,gEACA,wEACA,wEACA,wEACA,wEACA,wEACA,wEACA,0EAIAj5C,KAAAmW,KAAA,SAAAggB,GACA,sBAGAn2B,KAAAi3C,SAAA,WACA,aAGA1C,EAAA3V,SAAAzjC,EAAAC,QAAA0+C,aAAAd,GAGA79C,EAAAC,QAAA2+C,OAAA,WACA/5C,KAAA+3C,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,yBACA,wBACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,kCAIA/3C,KAAAi5C,OAAA,WACA,OACA,gEACA,gEACA,sEACA,wEACA,wEACA,wEACA,wEACA,0EAIAj5C,KAAAmW,KAAA,SAAAggB,GACA,gBAGAn2B,KAAAi3C,SAAA,WACA,aAGA1C,EAAA3V,SAAAzjC,EAAAC,QAAA2+C,OAAAf,IzBm9fMgB,IACA,SAAS7+C,EAAQC,EAASC,G0BtxhBhC,QAAA4+C,MA3CA,GAAA1F,GAAAl5C,EAAA,IACAm5C,EAAAn5C,EAAA,GAMAF,GAAAC,QAAAu4C,SAAA,WACA3zC,KAAAmW,KAAA,WACA,kBAEAnW,KAAAy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","file":"comingSoonDemo-3b2c39a2b7357cd01d9a.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ 12:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash 3.9.3 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern -d -o ./index.js`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '3.9.3';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256;\n\t\n\t  /** Used as default options for `_.trunc`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect when a function becomes hot. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_DROP_WHILE_FLAG = 0,\n\t      LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      weakMapTag = '[object WeakMap]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /**\n\t   * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n\t   * In addition to special characters the forward slash is escaped to allow for\n\t   * easier `eval` use and `Function` compilation.\n\t   */\n\t  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n\t      reHasRegExpChars = RegExp(reRegExpChars.source);\n\t\n\t  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n\t  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0[xX]/;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^\\d+$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to match words to create compound words. */\n\t  var reWords = (function() {\n\t    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n\t        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\t\n\t    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n\t  }());\n\t\n\t  /** Used to detect and test for whitespace. */\n\t  var whitespace = (\n\t    // Basic whitespace characters.\n\t    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\t\n\t    // Line terminators.\n\t    '\\n\\r\\u2028\\u2029' +\n\t\n\t    // Unicode category \"Zs\" space separators.\n\t    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n\t  );\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n\t    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n\t    'isFinite', 'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', 'window'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[mapTag] = cloneableTags[setTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n\t  var debounceOptions = {\n\t    'leading': false,\n\t    'maxWait': 0,\n\t    'trailing': false\n\t  };\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * The base implementation of `compareAscending` which compares values and\n\t   * sorts them in ascending order without guaranteeing a stable sort.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare.\n\t   * @param {*} other The other value to compare.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function baseCompareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsNull = value === null,\n\t          valIsUndef = value === undefined,\n\t          valIsReflexive = value === value;\n\t\n\t      var othIsNull = other === null,\n\t          othIsUndef = other === undefined,\n\t          othIsReflexive = other === other;\n\t\n\t      if ((value > other && !othIsNull) || !valIsReflexive ||\n\t          (valIsNull && !othIsUndef && othIsReflexive) ||\n\t          (valIsUndef && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if ((value < other && !valIsNull) || !othIsReflexive ||\n\t          (othIsNull && !valIsUndef && valIsReflexive) ||\n\t          (othIsUndef && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without support for binary searches.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isFunction` without support for environments\n\t   * with incorrect `typeof` results.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t   */\n\t  function baseIsFunction(value) {\n\t    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n\t    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n\t    return typeof value == 'function' || false;\n\t  }\n\t\n\t  /**\n\t   * Converts `value` to a string if it's not one. An empty string is returned\n\t   * for `null` or `undefined` values.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to process.\n\t   * @returns {string} Returns the string.\n\t   */\n\t  function baseToString(value) {\n\t    if (typeof value == 'string') {\n\t      return value;\n\t    }\n\t    return value == null ? '' : (value + '');\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the first character not found in `chars`.\n\t   */\n\t  function charsLeftIndex(string, chars) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the last character not found in `chars`.\n\t   */\n\t  function charsRightIndex(string, chars) {\n\t    var index = string.length;\n\t\n\t    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n\t   * sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare to `other`.\n\t   * @param {Object} other The object to compare to `object`.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareAscending(object, other) {\n\t    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortByOrder` to compare multiple properties of each element\n\t   * in a collection and stable sort them in the following order:\n\t   *\n\t   * If `orders` is unspecified, sort in ascending order for all properties.\n\t   * Otherwise, for each property, sort in ascending order if its corresponding value in\n\t   * orders is true, and descending order if false.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare to `other`.\n\t   * @param {Object} other The object to compare to `object`.\n\t   * @param {boolean[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        return result * (orders[index] ? 1 : -1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled\n\t   * string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is object-like.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t   */\n\t  function isObjectLike(value) {\n\t    return !!value && typeof value == 'object';\n\t  }\n\t\n\t  /**\n\t   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n\t   * character code is whitespace.\n\t   *\n\t   * @private\n\t   * @param {number} charCode The character code to inspect.\n\t   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n\t   */\n\t  function isSpace(charCode) {\n\t    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n\t      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      if (array[index] === placeholder) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * An implementation of `_.uniq` optimized for sorted arrays without support\n\t   * for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} [iteratee] The function invoked per iteration.\n\t   * @returns {Array} Returns the new duplicate-value-free array.\n\t   */\n\t  function sortedUniq(array, iteratee) {\n\t    var seen,\n\t        index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t      if (!index || seen !== computed) {\n\t        seen = computed;\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the first non-whitespace character.\n\t   */\n\t  function trimmedLeftIndex(string) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the last non-whitespace character.\n\t   */\n\t  function trimmedRightIndex(string) {\n\t    var index = string.length;\n\t\n\t    while (index-- && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the given `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Utility\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // using `context` to mock `Date#getTime` use in `_.now`\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // or creating a suped-up `defer` in Node.js\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    // Avoid issues with some ES3 environments that attempt to use values, named\n\t    // after built-in constructors like `Object`, for the creation of literals.\n\t    // ES5 clears this up by stating that literals must use built-in constructors.\n\t    // See https://es5.github.io/#x11.1.5 for more details.\n\t    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Native constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Number = context.Number,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for native method references. */\n\t    var arrayProto = Array.prototype,\n\t        objectProto = Object.prototype,\n\t        stringProto = String.prototype;\n\t\n\t    /** Used to detect DOM support. */\n\t    var document = (document = context.window) ? document.document : null;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var fnToString = Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = context._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      escapeRegExp(fnToString.call(hasOwnProperty))\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Native method references. */\n\t    var ArrayBuffer = getNative(context, 'ArrayBuffer'),\n\t        bufferSlice = getNative(ArrayBuffer && new ArrayBuffer(0), 'slice'),\n\t        ceil = Math.ceil,\n\t        clearTimeout = context.clearTimeout,\n\t        floor = Math.floor,\n\t        getPrototypeOf = getNative(Object, 'getPrototypeOf'),\n\t        parseFloat = context.parseFloat,\n\t        push = arrayProto.push,\n\t        Set = getNative(context, 'Set'),\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice,\n\t        Uint8Array = getNative(context, 'Uint8Array'),\n\t        WeakMap = getNative(context, 'WeakMap');\n\t\n\t    /** Used to clone array buffers. */\n\t    var Float64Array = (function() {\n\t      // Safari 5 errors when using an array buffer to initialize a typed array\n\t      // where the array buffer's `byteLength` is not a multiple of the typed\n\t      // array's `BYTES_PER_ELEMENT`.\n\t      try {\n\t        var func = getNative(context, 'Float64Array'),\n\t            result = new func(new ArrayBuffer(10), 0, 1) && func;\n\t      } catch(e) {}\n\t      return result || null;\n\t    }());\n\t\n\t    /* Native method references for those with the same name as other `lodash` methods. */\n\t    var nativeCreate = getNative(Object, 'create'),\n\t        nativeIsArray = getNative(Array, 'isArray'),\n\t        nativeIsFinite = context.isFinite,\n\t        nativeKeys = getNative(Object, 'keys'),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = getNative(Date, 'now'),\n\t        nativeNumIsFinite = getNative(Number, 'isFinite'),\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random;\n\t\n\t    /** Used as references for `-Infinity` and `Infinity`. */\n\t    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n\t        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\t\n\t    /** Used as references for the maximum length and index of an array. */\n\t    var MAX_ARRAY_LENGTH = 4294967295,\n\t        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t    /** Used as the size, in bytes, of each `Float64Array` element. */\n\t    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\t\n\t    /**\n\t     * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n\t     * of an array-like value.\n\t     */\n\t    var MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n\t     * Methods that operate on and return arrays, collections, and functions can\n\t     * be chained together. Methods that return a boolean or single value will\n\t     * automatically end the chain returning the unwrapped value. Explicit chaining\n\t     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n\t     * that is, execution is deferred until `_#value` is implicitly or explicitly\n\t     * called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization that merges iteratees to avoid creating intermediate\n\t     * arrays and reduce the number of iteratee executions.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n\t     * `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n\t     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n\t     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n\t     * and `where`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n\t     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n\t     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n\t     * `difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n\t     * `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n\t     * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n\t     * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n\t     * `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `method`, `methodOf`, `mixin`, `negate`, `omit`, `once`,\n\t     * `pairs`, `partial`, `partialRight`, `partition`, `pick`, `plant`, `pluck`,\n\t     * `property`, `propertyOf`, `pull`, `pullAt`, `push`, `range`, `rearg`,\n\t     * `reject`, `remove`, `rest`, `restParam`, `reverse`, `set`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `sortByAll`, `sortByOrder`, `splice`, `spread`,\n\t     * `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,\n\t     * `thru`, `times`, `toArray`, `toPlainObject`, `transform`, `union`, `uniq`,\n\t     * `unshift`, `unzip`, `unzipWith`, `values`, `valuesIn`, `where`, `without`,\n\t     * `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n\t     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n\t     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `get`,\n\t     * `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`, `inRange`, `isArguments`,\n\t     * `isArray`, `isBoolean`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`,\n\t     * `isFinite` `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\n\t     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\n\t     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `lt`, `lte`,\n\t     * `max`, `min`, `noConflict`, `noop`, `now`, `pad`, `padLeft`, `padRight`,\n\t     * `parseInt`, `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`,\n\t     * `runInContext`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,\n\t     * `sortedLastIndex`, `startCase`, `startsWith`, `sum`, `template`, `trim`,\n\t     * `trimLeft`, `trimRight`, `trunc`, `unescape`, `uniqueId`, `value`, and `words`\n\t     *\n\t     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n\t     * otherwise an unwrapped value is returned.\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Chain\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // returns an unwrapped value\n\t     * wrapped.reduce(function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 6\n\t     *\n\t     * // returns a wrapped value\n\t     * var squares = wrapped.map(function(n) {\n\t     *   return n * n;\n\t     * });\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n\t     */\n\t    function LodashWrapper(value, chainAll, actions) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = actions || [];\n\t      this.__chain__ = !!chainAll;\n\t    }\n\t\n\t    /**\n\t     * An object environment feature flags.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    var support = lodash.support = {};\n\t\n\t    (function(x) {\n\t      var Ctor = function() { this.x = x; },\n\t          object = { '0': x, 'length': x },\n\t          props = [];\n\t\n\t      Ctor.prototype = { 'valueOf': x, 'y': x };\n\t      for (var key in new Ctor) { props.push(key); }\n\t\n\t      /**\n\t       * Detect if the DOM is supported.\n\t       *\n\t       * @memberOf _.support\n\t       * @type boolean\n\t       */\n\t      try {\n\t        support.dom = document.createDocumentFragment().nodeType === 11;\n\t      } catch(e) {\n\t        support.dom = false;\n\t      }\n\t    }(1, 0));\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type Object\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type Function\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = null;\n\t      this.__dir__ = 1;\n\t      this.__dropCount__ = 0;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = null;\n\t      this.__takeCount__ = POSITIVE_INFINITY;\n\t      this.__views__ = null;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var actions = this.__actions__,\n\t          iteratees = this.__iteratees__,\n\t          views = this.__views__,\n\t          result = new LazyWrapper(this.__wrapped__);\n\t\n\t      result.__actions__ = actions ? arrayCopy(actions) : null;\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = iteratees ? arrayCopy(iteratees) : null;\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = views ? arrayCopy(views) : null;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value();\n\t      if (!isArray(array)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var dir = this.__dir__,\n\t          isRight = dir < 0,\n\t          view = getView(0, array.length, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          takeCount = nativeMin(length, this.__takeCount__),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees ? iteratees.length : 0,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type;\n\t\n\t          if (type == LAZY_DROP_WHILE_FLAG) {\n\t            if (data.done && (isRight ? (index > data.index) : (index < data.index))) {\n\t              data.count = 0;\n\t              data.done = false;\n\t            }\n\t            data.index = index;\n\t            if (!data.done) {\n\t              var limit = data.limit;\n\t              if (!(data.done = limit > -1 ? (data.count++ >= limit) : !iteratee(value))) {\n\t                continue outer;\n\t              }\n\t            }\n\t          } else {\n\t            var computed = iteratee(value);\n\t            if (type == LAZY_MAP_FLAG) {\n\t              value = computed;\n\t            } else if (!computed) {\n\t              if (type == LAZY_FILTER_FLAG) {\n\t                continue outer;\n\t              } else {\n\t                break outer;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a cache object to store key/value pairs.\n\t     *\n\t     * @private\n\t     * @static\n\t     * @name Cache\n\t     * @memberOf _.memoize\n\t     */\n\t    function MapCache() {\n\t      this.__data__ = {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the cached value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the cached value.\n\t     */\n\t    function mapGet(key) {\n\t      return key == '__proto__' ? undefined : this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Checks if a cached value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n\t    }\n\t\n\t    /**\n\t     * Sets `value` to `key` of the cache.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to cache.\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      if (key != '__proto__') {\n\t        this.__data__[key] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var length = values ? values.length : 0;\n\t\n\t      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n\t      while (length--) {\n\t        this.push(values[length]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache` mimicking the return signature of\n\t     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `0` if `value` is found, else `-1`.\n\t     */\n\t    function cacheIndexOf(cache, value) {\n\t      var data = cache.data,\n\t          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\t\n\t      return result ? 0 : -1;\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var data = this.data;\n\t      if (typeof value == 'string' || isObject(value)) {\n\t        data.set.add(value);\n\t      } else {\n\t        data.hash[value] = true;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayCopy(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEach` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEach(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (iteratee(array[index], index, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEachRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEachRight(array, iteratee) {\n\t      var length = array.length;\n\t\n\t      while (length--) {\n\t        if (iteratee(array[length], length, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.every` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arrayEvery(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (!predicate(array[index], index, array)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n\t     * with one argument: (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function arrayExtremum(array, iteratee, comparator, exValue) {\n\t      var index = -1,\n\t          length = array.length,\n\t          computed = exValue,\n\t          result = computed;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = +iteratee(value);\n\t\n\t        if (comparator(current, computed)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.filter` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function arrayFilter(array, predicate) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.map` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function arrayMap(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = iteratee(array[index], index, array);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduce` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the first element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (initFromArray && length) {\n\t        accumulator = array[++index];\n\t      }\n\t      while (++index < length) {\n\t        accumulator = iteratee(accumulator, array[index], index, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduceRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the last element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n\t      var length = array.length;\n\t      if (initFromArray && length) {\n\t        accumulator = array[--length];\n\t      }\n\t      while (length--) {\n\t        accumulator = iteratee(accumulator, array[length], length, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.some` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arraySome(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (predicate(array[index], index, array)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sum` for arrays without support for iteratees.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function arraySum(array) {\n\t      var length = array.length,\n\t          result = 0;\n\t\n\t      while (length--) {\n\t        result += +array[length] || 0;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assign` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : objectValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.template` to customize its `_.assign` use.\n\t     *\n\t     * **Note:** This function is like `assignDefaults` except that it ignores\n\t     * inherited property values when checking if a property is `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @param {string} key The key associated with the object and source values.\n\t     * @param {Object} object The destination object.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n\t      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n\t        ? sourceValue\n\t        : objectValue;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.assign` for customizing assigned values without\n\t     * support for argument juggling, multiple sources, and `this` binding `customizer`\n\t     * functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function assignWith(object, source, customizer) {\n\t      var index = -1,\n\t          props = keys(source),\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key],\n\t            result = customizer(value, source[key], key, object, source);\n\t\n\t        if ((result === result ? (result !== value) : (value === value)) ||\n\t            (value === undefined && !(key in object))) {\n\t          object[key] = result;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for argument juggling,\n\t     * multiple sources, and `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return source == null\n\t        ? object\n\t        : baseCopy(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for string collections\n\t     * and individual key arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(collection, props) {\n\t      var index = -1,\n\t          isNil = collection == null,\n\t          isArr = !isNil && isArrayLike(collection),\n\t          length = isArr ? collection.length : 0,\n\t          propsLength = props.length,\n\t          result = Array(propsLength);\n\t\n\t      while(++index < propsLength) {\n\t        var key = props[index];\n\t        if (isArr) {\n\t          result[index] = isIndex(key, length) ? collection[key] : undefined;\n\t        } else {\n\t          result[index] = isNil ? undefined : collection[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseCopy(source, props, object) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        object[key] = source[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.callback` which supports specifying the\n\t     * number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function baseCallback(func, thisArg, argCount) {\n\t      var type = typeof func;\n\t      if (type == 'function') {\n\t        return thisArg === undefined\n\t          ? func\n\t          : bindCallback(func, thisArg, argCount);\n\t      }\n\t      if (func == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return baseMatches(func);\n\t      }\n\t      return thisArg === undefined\n\t        ? property(func)\n\t        : baseMatchesProperty(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` without support for argument juggling\n\t     * and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The object `value` belongs to.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return arrayCopy(value, result);\n\t        }\n\t      } else {\n\t        var tag = objToString.call(value),\n\t            isFunc = tag == funcTag;\n\t\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return baseAssign(result, value);\n\t          }\n\t        } else {\n\t          return cloneableTags[tag]\n\t            ? initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : {});\n\t        }\n\t      }\n\t      // Check for circular references and return corresponding clone.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == value) {\n\t          return stackB[length];\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate it with its clone.\n\t      stackA.push(value);\n\t      stackB.push(result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(prototype) {\n\t        if (isObject(prototype)) {\n\t          object.prototype = prototype;\n\t          var result = new object;\n\t          object.prototype = null;\n\t        }\n\t        return result || {};\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an index\n\t     * of where to slice the arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.difference` which accepts a single array\n\t     * of values to exclude.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values) {\n\t      var length = array ? array.length : 0,\n\t          result = [];\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          cache = (isCommon && values.length >= 200) ? createCache(values) : null,\n\t          valuesLength = values.length;\n\t\n\t      if (cache) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t        values = cache;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index];\n\t\n\t        if (isCommon && value === value) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === value) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(values, value, 0) < 0) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the extremum value of `collection` invoking `iteratee` for each value\n\t     * in `collection` to generate the criterion by which the value is ranked.\n\t     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(collection, iteratee, comparator, exValue) {\n\t      var computed = exValue,\n\t          result = computed;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        var current = +iteratee(value, index, collection);\n\t        if (comparator(current, computed) || (current === exValue && current === result)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : (end >>> 0);\n\t      start >>>= 0;\n\t\n\t      while (start < length) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n\t     * without support for callback shorthands and `this` binding, which iterates\n\t     * over `collection` using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @param {boolean} [retKey] Specify returning the key of the found element\n\t     *  instead of the element itself.\n\t     * @returns {*} Returns the found element or its key, else `undefined`.\n\t     */\n\t    function baseFind(collection, predicate, eachFunc, retKey) {\n\t      var result;\n\t      eachFunc(collection, function(value, key, collection) {\n\t        if (predicate(value, key, collection)) {\n\t          result = retKey ? key : value;\n\t          return false;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with added support for restricting\n\t     * flattening and specifying the start index.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (isObjectLike(value) && isArrayLike(value) &&\n\t            (isStrict || isArray(value) || isArguments(value))) {\n\t          if (isDeep) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            value = baseFlatten(value, isDeep, isStrict);\n\t          }\n\t          var valIndex = -1,\n\t              valLength = value.length;\n\t\n\t          while (++valIndex < valLength) {\n\t            result[++resIndex] = value[valIndex];\n\t          }\n\t        } else if (!isStrict) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from those provided.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (isFunction(object[key])) {\n\t          result[++resIndex] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `get` without support for string paths\n\t     * and default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path of the property to get.\n\t     * @param {string} [pathKey] The key representation of path.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path, pathKey) {\n\t      if (object == null) {\n\t        return;\n\t      }\n\t      if (pathKey !== undefined && pathKey in toObject(object)) {\n\t        path = [pathKey];\n\t      }\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[path[index++]];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` without support for `this` binding\n\t     * `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = objToString.call(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = objToString.call(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag);\n\t      }\n\t      if (!isLoose) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      // For more information on detecting circular references see https://es5.github.io/#JO.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == object) {\n\t          return stackB[length] == other;\n\t        }\n\t      }\n\t      // Add `object` and `other` to the stack of traversed objects.\n\t      stackA.push(object);\n\t      stackB.push(other);\n\t\n\t      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\t\n\t      stackA.pop();\n\t      stackB.pop();\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} matchData The propery names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = toObject(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\t          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which does not clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        var key = matchData[0][0],\n\t            value = matchData[0][1];\n\t\n\t        return function(object) {\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          return object[key] === value && (value !== undefined || (key in toObject(object)));\n\t        };\n\t      }\n\t      return function(object) {\n\t        return baseIsMatch(object, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to compare.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      var isArr = isArray(path),\n\t          isCommon = isKey(path) && isStrictComparable(srcValue),\n\t          pathKey = (path + '');\n\t\n\t      path = toPath(path);\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        var key = pathKey;\n\t        object = toObject(object);\n\t        if ((isArr || !isCommon) && !(key in object)) {\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          key = last(path);\n\t          object = toObject(object);\n\t        }\n\t        return object[key] === srcValue\n\t          ? (srcValue !== undefined || (key in object))\n\t          : baseIsEqual(srcValue, object[key], undefined, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for argument juggling,\n\t     * multiple sources, and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} [customizer] The function to customize merging properties.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseMerge(object, source, customizer, stackA, stackB) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n\t          props = isSrcArr ? null : keys(source);\n\t\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObjectLike(srcValue)) {\n\t          stackA || (stackA = []);\n\t          stackB || (stackB = []);\n\t          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n\t        }\n\t        else {\n\t          var value = object[key],\n\t              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t              isCommon = result === undefined;\n\t\n\t          if (isCommon) {\n\t            result = srcValue;\n\t          }\n\t          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n\t              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n\t            object[key] = result;\n\t          }\n\t        }\n\t      });\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize merging properties.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n\t      var length = stackA.length,\n\t          srcValue = source[key];\n\t\n\t      while (length--) {\n\t        if (stackA[length] == srcValue) {\n\t          object[key] = stackB[length];\n\t          return;\n\t        }\n\t      }\n\t      var value = object[key],\n\t          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t          isCommon = result === undefined;\n\t\n\t      if (isCommon) {\n\t        result = srcValue;\n\t        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n\t          result = isArray(value)\n\t            ? value\n\t            : (isArrayLike(value) ? arrayCopy(value) : []);\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          result = isArguments(value)\n\t            ? toPlainObject(value)\n\t            : (isPlainObject(value) ? value : {});\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate\n\t      // it with its merged value.\n\t      stackA.push(srcValue);\n\t      stackB.push(result);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n\t      } else if (result === result ? (result !== value) : (value === value)) {\n\t        object[key] = result;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      var pathKey = (path + '');\n\t      path = toPath(path);\n\t      return function(object) {\n\t        return baseGet(object, path, pathKey);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * index arguments and capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0;\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (index != previous && isIndex(index)) {\n\t          var previous = index;\n\t          splice.call(array, index, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for argument juggling\n\t     * and returning floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} min The minimum possible value.\n\t     * @param {number} max The maximum possible value.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(min, max) {\n\t      return min + floor(nativeRandom() * (max - min + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.reduce` and `_.reduceRight` without support\n\t     * for callback shorthands and `this` binding, which iterates over `collection`\n\t     * using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} accumulator The initial value.\n\t     * @param {boolean} initFromCollection Specify using the first or last element\n\t     *  of `collection` as the initial value.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n\t      eachFunc(collection, function(value, index, collection) {\n\t        accumulator = initFromCollection\n\t          ? (initFromCollection = false, value)\n\t          : iteratee(accumulator, value, index, collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortBy` which uses `comparer` to define\n\t     * the sort order of `array` and replaces criteria objects with their\n\t     * corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sort.\n\t     * @param {Function} comparer The function to define sort order.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseSortBy(array, comparer) {\n\t      var length = array.length;\n\t\n\t      array.sort(comparer);\n\t      while (length--) {\n\t        array[length] = array[length].value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortByOrder` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseSortByOrder(collection, iteratees, orders) {\n\t      var callback = getCallback(),\n\t          index = -1;\n\t\n\t      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\t\n\t      var result = baseMap(collection, function(value) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sum` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function baseSum(collection, iteratee) {\n\t      var result = 0;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result += +iteratee(value, index, collection) || 0;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniq` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The function invoked per iteration.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     */\n\t    function baseUniq(array, iteratee) {\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          length = array.length,\n\t          isCommon = indexOf == baseIndexOf,\n\t          isLarge = isCommon && length >= 200,\n\t          seen = isLarge ? createCache() : null,\n\t          result = [];\n\t\n\t      if (seen) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t      } else {\n\t        isLarge = false;\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t        if (isCommon && value === value) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(seen, computed, 0) < 0) {\n\t          if (iteratee || isLarge) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t     * array of `object` property values corresponding to the property names\n\t     * of `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} props The property names to get values for.\n\t     * @returns {Object} Returns the array of property values.\n\t     */\n\t    function baseValues(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = object[props[index]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n\t     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      var index = -1,\n\t          length = actions.length;\n\t\n\t      while (++index < length) {\n\t        var args = [result],\n\t            action = actions[index];\n\t\n\t        push.apply(args, action.args);\n\t        result = action.func.apply(action.thisArg, args);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return binaryIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * This function is like `binaryIndex` except that it invokes `iteratee` for\n\t     * `value` and each element of `array` to compute their sort ranking. The\n\t     * iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = floor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isDef = computed !== undefined,\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t          setLow = isReflexive && isDef && (retHighest || computed != null);\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || isDef);\n\t        } else if (computed == null) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseCallback` which only supports `this` binding\n\t     * and specifying the number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function bindCallback(func, thisArg, argCount) {\n\t      if (typeof func != 'function') {\n\t        return identity;\n\t      }\n\t      if (thisArg === undefined) {\n\t        return func;\n\t      }\n\t      switch (argCount) {\n\t        case 1: return function(value) {\n\t          return func.call(thisArg, value);\n\t        };\n\t        case 3: return function(value, index, collection) {\n\t          return func.call(thisArg, value, index, collection);\n\t        };\n\t        case 4: return function(accumulator, value, index, collection) {\n\t          return func.call(thisArg, accumulator, value, index, collection);\n\t        };\n\t        case 5: return function(value, other, key, object, source) {\n\t          return func.call(thisArg, value, other, key, object, source);\n\t        };\n\t      }\n\t      return function() {\n\t        return func.apply(thisArg, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the given array buffer.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} buffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function bufferClone(buffer) {\n\t      return bufferSlice.call(buffer, 0);\n\t    }\n\t    if (!bufferSlice) {\n\t      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n\t      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n\t        var byteLength = buffer.byteLength,\n\t            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n\t            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n\t            result = new ArrayBuffer(byteLength);\n\t\n\t        if (floatLength) {\n\t          var view = new Float64Array(result, 0, floatLength);\n\t          view.set(new Float64Array(buffer, 0, floatLength));\n\t        }\n\t        if (byteLength != offset) {\n\t          view = new Uint8Array(result, offset);\n\t          view.set(new Uint8Array(buffer, offset));\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders) {\n\t      var holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          result = Array(argsLength + leftLength);\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        result[holders[argsIndex]] = args[argsIndex];\n\t      }\n\t      while (argsLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders) {\n\t      var holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          result = Array(argsLength + rightLength);\n\t\n\t      while (++argsIndex < argsLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that aggregates a collection, creating an accumulator\n\t     * object composed from the results of running each element in the collection\n\t     * through an iteratee.\n\t     *\n\t     * **Note:** This function is used to create `_.countBy`, `_.groupBy`, `_.indexBy`,\n\t     * and `_.partition`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set keys and values of the accumulator object.\n\t     * @param {Function} [initializer] The function to initialize the accumulator object.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee, thisArg) {\n\t        var result = initializer ? initializer() : {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        if (isArray(collection)) {\n\t          var index = -1,\n\t              length = collection.length;\n\t\n\t          while (++index < length) {\n\t            var value = collection[index];\n\t            setter(result, value, iteratee(value, index, collection), collection);\n\t          }\n\t        } else {\n\t          baseEach(collection, function(value, key, collection) {\n\t            setter(result, value, iteratee(value, key, collection), collection);\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that assigns properties of source object(s) to a given\n\t     * destination object.\n\t     *\n\t     * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return restParam(function(object, sources) {\n\t        var index = -1,\n\t            length = object == null ? 0 : sources.length,\n\t            customizer = length > 2 ? sources[length - 2] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined,\n\t            thisArg = length > 1 ? sources[length - 1] : undefined;\n\t\n\t        if (typeof customizer == 'function') {\n\t          customizer = bindCallback(customizer, thisArg, 5);\n\t          length -= 2;\n\t        } else {\n\t          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n\t          length -= (customizer ? 1 : 0);\n\t        }\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        var length = collection ? getLength(collection) : 0;\n\t        if (!isLength(length)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var index = fromRight ? length : -1,\n\t            iterable = toObject(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var iterable = toObject(object),\n\t            props = keysFunc(object),\n\t            length = props.length,\n\t            index = fromRight ? length : -1;\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var key = props[index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createBindWrapper(func, thisArg) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(thisArg, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `Set` cache object to optimize linear searches of large arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n\t     */\n\t    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n\t      return new SetCache(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a function that produces compound words out of the words in a\n\t     * given string.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        var index = -1,\n\t            array = words(deburr(string)),\n\t            length = array.length,\n\t            result = '';\n\t\n\t        while (++index < length) {\n\t          result = callback(result, array[index], index);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors.\n\t        // See https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.curry` or `_.curryRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The curry bit flag.\n\t     * @returns {Function} Returns the new curry function.\n\t     */\n\t    function createCurry(flag) {\n\t      function curryFunc(func, arity, guard) {\n\t        if (guard && isIterateeCall(func, arity, guard)) {\n\t          arity = null;\n\t        }\n\t        var result = createWrapper(func, flag, null, null, null, null, null, arity);\n\t        result.placeholder = curryFunc.placeholder;\n\t        return result;\n\t      }\n\t      return curryFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.max` or `_.min` function.\n\t     *\n\t     * @private\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {Function} Returns the new extremum function.\n\t     */\n\t    function createExtremum(comparator, exValue) {\n\t      return function(collection, iteratee, thisArg) {\n\t        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t          iteratee = null;\n\t        }\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t        if (iteratee.length == 1) {\n\t          collection = toIterable(collection);\n\t          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n\t          if (!(collection.length && result === exValue)) {\n\t            return result;\n\t          }\n\t        }\n\t        return baseExtremum(collection, iteratee, comparator, exValue);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(eachFunc, fromRight) {\n\t      return function(collection, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        if (isArray(collection)) {\n\t          var index = baseFindIndex(collection, predicate, fromRight);\n\t          return index > -1 ? collection[index] : undefined;\n\t        }\n\t        return baseFind(collection, predicate, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findIndex` or `_.findLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindIndex(fromRight) {\n\t      return function(array, predicate, thisArg) {\n\t        if (!(array && array.length)) {\n\t          return -1;\n\t        }\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFindIndex(array, predicate, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findKey` or `_.findLastKey` function.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindKey(objectFunc) {\n\t      return function(object, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFind(object, predicate, objectFunc, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return function() {\n\t        var wrapper,\n\t            length = arguments.length,\n\t            index = fromRight ? length : -1,\n\t            leftIndex = 0,\n\t            funcs = Array(length);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var func = funcs[leftIndex++] = arguments[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n\t            wrapper = new LodashWrapper([]);\n\t          }\n\t        }\n\t        index = wrapper ? -1 : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : null;\n\t\n\t          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments;\n\t          if (wrapper && args.length == 1 && isArray(args[0])) {\n\t            return wrapper.plant(args[0]).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : args[0];\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forEach` or `_.forEachRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForEach(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, thisArg) {\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee)\n\t          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForIn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee, keysIn);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForOwn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.mapKeys` or `_.mapValues`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n\t     * @returns {Function} Returns the new map function.\n\t     */\n\t    function createObjectMapper(isMapKeys) {\n\t      return function(object, iteratee, thisArg) {\n\t        var result = {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        baseForOwn(object, function(value, key, object) {\n\t          var mapped = iteratee(value, key, object);\n\t          key = isMapKeys ? mapped : key;\n\t          value = isMapKeys ? value : mapped;\n\t          result[key] = value;\n\t        });\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.padLeft` or `_.padRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify padding from the right.\n\t     * @returns {Function} Returns the new pad function.\n\t     */\n\t    function createPadDir(fromRight) {\n\t      return function(string, length, chars) {\n\t        string = baseToString(string);\n\t        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.partial` or `_.partialRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The partial bit flag.\n\t     * @returns {Function} Returns the new partial function.\n\t     */\n\t    function createPartial(flag) {\n\t      var partialFunc = restParam(function(func, partials) {\n\t        var holders = replaceHolders(partials, partialFunc.placeholder);\n\t        return createWrapper(func, flag, null, partials, holders);\n\t      });\n\t      return partialFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.reduce` or `_.reduceRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createReduce(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, accumulator, thisArg) {\n\t        var initFromArray = arguments.length < 3;\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n\t          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with optional `this`\n\t     * binding of, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurry = bitmask & CURRY_FLAG,\n\t          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n\t          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n\t          Ctor = isBindKey ? null : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it to other functions.\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight);\n\t        }\n\t        if (isCurry || isCurryRight) {\n\t          var placeholder = wrapper.placeholder,\n\t              argsHolders = replaceHolders(args, placeholder);\n\t\n\t          length -= argsHolders.length;\n\t          if (length < arity) {\n\t            var newArgPos = argPos ? arrayCopy(argPos) : null,\n\t                newArity = nativeMax(arity - length, 0),\n\t                newsHolders = isCurry ? argsHolders : null,\n\t                newHoldersRight = isCurry ? null : argsHolders,\n\t                newPartials = isCurry ? args : null,\n\t                newPartialsRight = isCurry ? null : args;\n\t\n\t            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t            if (!isCurryBound) {\n\t              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t            }\n\t            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n\t                result = createHybridWrapper.apply(undefined, newData);\n\t\n\t            if (isLaziable(func)) {\n\t              setData(result, newData);\n\t            }\n\t            result.placeholder = placeholder;\n\t            return result;\n\t          }\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        }\n\t        if (isAry && ary < args.length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(func);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates the padding required for `string` based on the given `length`.\n\t     * The `chars` string is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the pad for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      var strLength = string.length;\n\t      length = +length;\n\t\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars == null ? ' ' : (chars + '');\n\t      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it `func`.\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(argsLength + leftLength);\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {Function} Returns the new index function.\n\t     */\n\t    function createSortedIndex(retHighest) {\n\t      return function(array, value, iteratee, thisArg) {\n\t        var callback = getCallback(iteratee);\n\t        return (iteratee == null && callback === baseCallback)\n\t          ? binaryIndex(array, value, retHighest)\n\t          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = null;\n\t      }\n\t      length -= (holders ? holders.length : 0);\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = null;\n\t      }\n\t      var data = isBindKey ? null : getData(func),\n\t          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t        bitmask = newData[1];\n\t        arity = newData[9];\n\t      }\n\t      newData[9] = arity == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : (nativeMax(arity - length, 0) || 0);\n\t\n\t      if (bitmask == BIND_FLAG) {\n\t        var result = createBindWrapper(newData[0], newData[2]);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n\t        result = createPartialWrapper.apply(undefined, newData);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing arrays.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var index = -1,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index],\n\t            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\t\n\t        if (result !== undefined) {\n\t          if (result) {\n\t            continue;\n\t          }\n\t          return false;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (isLoose) {\n\t          if (!arraySome(other, function(othValue) {\n\t                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n\t              })) {\n\t            return false;\n\t          }\n\t        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} value The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag) {\n\t      switch (tag) {\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object)\n\t            ? other != +other\n\t            : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isLoose) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      var skipCtor = isLoose;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key],\n\t            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\t\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n\t          return false;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (!skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseCallback` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getCallback(func, thisArg, argCount) {\n\t      var result = lodash.callback || callback;\n\t      result = result === callback ? baseCallback : result;\n\t      return argCount ? result(func, thisArg, argCount) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = func.name,\n\t          array = realNames[result],\n\t          length = array ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseIndexOf` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function|number} Returns the chosen function or its result.\n\t     */\n\t    function getIndexOf(collection, target, fromIndex) {\n\t      var result = lodash.indexOf || indexOf;\n\t      result = result === indexOf ? baseIndexOf : result;\n\t      return collection ? result(collection, target, fromIndex) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the propery names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = pairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object == null ? undefined : object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} [transforms] The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms ? transforms.length : 0;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = new array.constructor(length);\n\t\n\t      // Add array properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      var Ctor = object.constructor;\n\t      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n\t        Ctor = Object;\n\t      }\n\t      return new Ctor;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return bufferClone(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          var buffer = object.buffer;\n\t          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          var result = new Ctor(object.source, reFlags.exec(object));\n\t          result.lastIndex = object.lastIndex;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function invokePath(object, path, args) {\n\t      if (object != null && !isKey(path, object)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : func.apply(object, args);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return value > -1 && value % 1 == 0 && value < length;\n\t    }\n\t\n\t    /**\n\t     * Checks if the provided arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t          ? (isArrayLike(object) && isIndex(index, object.length))\n\t          : (type == 'string' && index in object)) {\n\t        var other = object[index];\n\t        return value === value ? (value === other) : (other !== other);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      var type = typeof value;\n\t      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n\t        return true;\n\t      }\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var result = !reIsDeepProp.test(value);\n\t      return result || (object != null && value in toObject(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func);\n\t      if (!(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      var other = lodash[funcName];\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers required to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * augment function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < ARY_FLAG;\n\t\n\t      var isCombo =\n\t        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n\t        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n\t        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = arrayCopy(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties specified\n\t     * by `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByArray(object, props) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties `predicate`\n\t     * returns truthy for.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByCallback(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key, object) {\n\t        if (predicate(value, key, object)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = arrayCopy(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * A fallback implementation of `_.isPlainObject` which checks if `value`\n\t     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n\t     * of `null`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     */\n\t    function shimIsPlainObject(value) {\n\t      var Ctor,\n\t          support = lodash.support;\n\t\n\t      // Exit early for non `Object` objects.\n\t      if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n\t          (!hasOwnProperty.call(value, 'constructor') &&\n\t            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n\t        return false;\n\t      }\n\t      // IE < 9 iterates inherited properties before own properties. If the first\n\t      // iterated property is an object's own property then there are no inherited\n\t      // enumerable properties.\n\t      var result;\n\t      // In most environments an object's own properties are iterated before\n\t      // its inherited properties. If the last iterated property is an object's\n\t      // own property then there are no inherited enumerable properties.\n\t      baseForIn(value, function(subValue, key) {\n\t        result = key;\n\t      });\n\t      return result === undefined || hasOwnProperty.call(value, result);\n\t    }\n\t\n\t    /**\n\t     * A fallback implementation of `Object.keys` which creates an array of the\n\t     * own enumerable property names of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function shimKeys(object) {\n\t      var props = keysIn(object),\n\t          propsLength = props.length,\n\t          length = propsLength && object.length;\n\t\n\t      var allowIndexes = !!length && isLength(length) &&\n\t        (isArray(object) || isArguments(object));\n\t\n\t      var index = -1,\n\t          result = [];\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array-like object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array|Object} Returns the array-like object.\n\t     */\n\t    function toIterable(value) {\n\t      if (value == null) {\n\t        return [];\n\t      }\n\t      if (!isArrayLike(value)) {\n\t        return values(value);\n\t      }\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Object} Returns the object.\n\t     */\n\t    function toObject(value) {\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to property path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      var result = [];\n\t      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      return wrapper instanceof LazyWrapper\n\t        ? wrapper.clone()\n\t        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `collection` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(+size || 1, 1);\n\t      }\n\t      var index = 0,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = Array(ceil(length / size));\n\t\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other\n\t     * provided arrays using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The arrays of values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([1, 2, 3], [4, 2]);\n\t     * // => [1, 3]\n\t     */\n\t    var difference = restParam(function(array, values) {\n\t      return isArrayLike(array)\n\t        ? baseDifference(array, baseFlatten(values, false, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that match the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [1]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8], '*', 1, 2);\n\t     * // => [4, '*', 8]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(chr) {\n\t     *   return chr.user == 'barney';\n\t     * });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findIndex(users, 'active', false);\n\t     * // => 0\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    var findIndex = createFindIndex();\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(chr) {\n\t     *   return chr.user == 'pebbles';\n\t     * });\n\t     * // => 2\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastIndex(users, 'active', false);\n\t     * // => 2\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    var findLastIndex = createFindIndex(true);\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias head\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.first([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.first([]);\n\t     * // => undefined\n\t     */\n\t    function first(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n\t     * flattened, otherwise it is only flattened a single level.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * // using `isDeep`\n\t     * _.flatten([1, [2, 3, [4]]], true);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flatten(array, isDeep, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (guard && isIterateeCall(array, isDeep, guard)) {\n\t        isDeep = false;\n\t      }\n\t      return length ? baseFlatten(array, isDeep) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens a nested array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to recursively flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, true) : [];\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n\t     * performs a faster binary search.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n\t     *  to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // using `fromIndex`\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     *\n\t     * // performing a binary search\n\t     * _.indexOf([1, 1, 2, 2], 2, true);\n\t     * // => 2\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      if (typeof fromIndex == 'number') {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n\t      } else if (fromIndex) {\n\t        var index = binaryIndex(array, value),\n\t            other = array[index];\n\t\n\t        if (value === value ? (value === other) : (other !== other)) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      return baseIndexOf(array, value, fromIndex || 0);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all of the provided\n\t     * arrays using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     * _.intersection([1, 2], [4, 2], [2, 1]);\n\t     * // => [2]\n\t     */\n\t    var intersection = restParam(function(arrays) {\n\t      var othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(length),\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n\t        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n\t      }\n\t      var array = arrays[0],\n\t          index = -1,\n\t          length = array ? array.length : 0,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length) {\n\t        value = array[index];\n\t        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n\t          var othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(value);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n\t     *  or `true` to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // using `fromIndex`\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     *\n\t     * // performing a binary search\n\t     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n\t     * // => 3\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (typeof fromIndex == 'number') {\n\t        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n\t      } else if (fromIndex) {\n\t        index = binaryIndex(array, value, true) - 1;\n\t        var other = array[index];\n\t        if (value === value ? (value === other) : (other !== other)) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all provided values from `array` using\n\t     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pull() {\n\t      var args = arguments,\n\t          array = args[0];\n\t\n\t      if (!(array && array.length)) {\n\t        return array;\n\t      }\n\t      var index = 0,\n\t          indexOf = getIndexOf(),\n\t          length = args.length;\n\t\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = args[index];\n\t\n\t        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to the given indexes and returns\n\t     * an array of the removed elements. Indexes may be specified as an array of\n\t     * indexes or as individual arguments.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = restParam(function(array, indexes) {\n\t      indexes = baseFlatten(indexes);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(baseCompareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate, thisArg) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias tail\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.rest([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function rest(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of `Array#slice` to support node\n\t     * lists in IE < 9 and to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order. If an iteratee\n\t     * function is provided it is invoked for `value` and each element of `array`\n\t     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n\t     * invoked with one argument; (value).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 4, 5, 5], 5);\n\t     * // => 2\n\t     *\n\t     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n\t     *\n\t     * // using an iteratee function\n\t     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n\t     *   return this.data[word];\n\t     * }, dict);\n\t     * // => 1\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n\t     * // => 1\n\t     */\n\t    var sortedIndex = createSortedIndex();\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 4, 5, 5], 5);\n\t     * // => 4\n\t     */\n\t    var sortedLastIndex = createSortedIndex(true);\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n\t     * and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [2, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all of the provided arrays\n\t     * using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([1, 2], [4, 2], [2, 1]);\n\t     * // => [1, 2, 4]\n\t     */\n\t    var union = restParam(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, false, true));\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurence of each element\n\t     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n\t     * for sorted arrays. If an iteratee function is provided it is invoked for\n\t     * each element in the array to generate the criterion by which uniqueness\n\t     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias unique\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {boolean} [isSorted] Specify the array is sorted.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     *\n\t     * // using `isSorted`\n\t     * _.uniq([1, 1, 2], true);\n\t     * // => [1, 2]\n\t     *\n\t     * // using an iteratee function\n\t     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => [1, 2.5]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniq(array, isSorted, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (isSorted != null && typeof isSorted != 'boolean') {\n\t        thisArg = iteratee;\n\t        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n\t        isSorted = false;\n\t      }\n\t      var callback = getCallback();\n\t      if (!(iteratee == null && callback === baseCallback)) {\n\t        iteratee = callback(iteratee, thisArg, 3);\n\t      }\n\t      return (isSorted && getIndexOf() == baseIndexOf)\n\t        ? sortedUniq(array, iteratee)\n\t        : baseUniq(array, iteratee);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          length = 0;\n\t\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLike(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = arrayMap(array, baseProperty(index));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts an iteratee to specify\n\t     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee] The function to combine regrouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      iteratee = bindCallback(iteratee, thisArg, 4);\n\t      return arrayMap(result, function(group) {\n\t        return arrayReduce(group, iteratee, undefined, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all provided values using\n\t     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = restParam(function(array, values) {\n\t      return isArrayLike(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the provided arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([1, 2], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    function xor() {\n\t      var index = -1,\n\t          length = arguments.length;\n\t\n\t      while (++index < length) {\n\t        var array = arguments[index];\n\t        if (isArrayLike(array)) {\n\t          var result = result\n\t            ? baseDifference(result, array).concat(baseDifference(array, result))\n\t            : array;\n\t        }\n\t      }\n\t      return result ? baseUniq(result) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = restParam(unzip);\n\t\n\t    /**\n\t     * The inverse of `_.pairs`; this method returns an object composed from arrays\n\t     * of property names and values. Provide either a single two dimensional array,\n\t     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n\t     * and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias object\n\t     * @category Array\n\t     * @param {Array} props The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     *\n\t     * _.zipObject(['fred', 'barney'], [30, 40]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function zipObject(props, values) {\n\t      var index = -1,\n\t          length = props ? props.length : 0,\n\t          result = {};\n\t\n\t      if (length && !values && !isArray(props[0])) {\n\t        values = [];\n\t      }\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (values) {\n\t          result[key] = values[index];\n\t        } else if (key) {\n\t          result[key[0]] = key[1];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an iteratee to specify\n\t     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee] The function to combine grouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = restParam(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 2 ? arrays[length - 2] : undefined,\n\t          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      if (length > 2 && typeof iteratee == 'function') {\n\t        length -= 2;\n\t      } else {\n\t        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n\t        thisArg = undefined;\n\t      }\n\t      arrays.length = length;\n\t      return unzipWith(arrays, iteratee, thisArg);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method\n\t     * chaining enabled.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _.chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(chr) {\n\t     *     return chr.user + ' is ' + chr.age;\n\t     *   })\n\t     *   .first()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor is\n\t     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n\t     * this method is to \"tap into\" a method chain in order to perform operations\n\t     * on intermediate results within the chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor, thisArg) {\n\t      interceptor.call(thisArg, value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor, thisArg) {\n\t      return interceptor.call(thisArg, value);\n\t    }\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // without explicit chaining\n\t     * _(users).first();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // with explicit chaining\n\t     * _(users).chain()\n\t     *   .first()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapper = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapper = wrapper.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapper.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapper = _(array).map(function(value) {\n\t     *   return Math.pow(value, 2);\n\t     * });\n\t     *\n\t     * var other = [3, 4];\n\t     * var otherWrapper = wrapper.plant(other);\n\t     *\n\t     * otherWrapper.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapper.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the wrapped array so the first element becomes the last, the\n\t     * second element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        if (this.__actions__.length) {\n\t          value = new LazyWrapper(this);\n\t        }\n\t        return new LodashWrapper(value.reverse(), this.__chain__);\n\t      }\n\t      return this.thru(function(value) {\n\t        return value.reverse();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Produces the result of coercing the unwrapped value to a string.\n\t     *\n\t     * @name toString\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {string} Returns the coerced string value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).toString();\n\t     * // => '1,2,3'\n\t     */\n\t    function wrapperToString() {\n\t      return (this.value() + '');\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias run, toJSON, valueOf\n\t     * @category Chain\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements corresponding to the given keys, or indexes,\n\t     * of `collection`. Keys may be specified as individual arguments or as arrays\n\t     * of keys.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(number|number[]|string|string[])} [props] The property names\n\t     *  or indexes of elements to pick, specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * _.at(['a', 'b', 'c'], [0, 2]);\n\t     * // => ['a', 'c']\n\t     *\n\t     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n\t     * // => ['barney', 'pebbles']\n\t     */\n\t    var at = restParam(function(collection, props) {\n\t      return baseAt(collection, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * The predicate is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias all\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.every(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = null;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias select\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.filter([4, 5, 6], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 6]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.filter(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.filter(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function filter(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias detect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.result(_.find(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.result(_.find(users, 'active', false), 'user');\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.result(_.find(users, 'active'), 'user');\n\t     * // => 'barney'\n\t     */\n\t    var find = createFind(baseEach);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(baseEachRight, true);\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning the first element that has equivalent property\n\t     * values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n\t     * // => 'fred'\n\t     */\n\t    function findWhere(collection, source) {\n\t      return find(collection, baseMatches(source));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection). Iteratee functions may exit iteration early\n\t     * by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n\t     * may be used for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from left to right and returns the array\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n\t     *   console.log(n, key);\n\t     * });\n\t     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n\t     */\n\t    var forEach = createForEach(arrayEach, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEachRight(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from right to left and returns the array\n\t     */\n\t    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of the elements responsible for generating the key.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection` using\n\t     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias contains, include\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} target The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, target, fromIndex, guard) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      if (!isLength(length)) {\n\t        collection = values(collection);\n\t        length = collection.length;\n\t      }\n\t      if (!length) {\n\t        return false;\n\t      }\n\t      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n\t        fromIndex = 0;\n\t      } else {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n\t      }\n\t      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n\t        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n\t        : (getIndexOf(collection, target, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var keyData = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.indexBy(keyData, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return String.fromCharCode(object.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return this.fromCharCode(object.code);\n\t     * }, String);\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var indexBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it is\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invoke([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invoke = restParam(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : null);\n\t        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n\t     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n\t     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n\t     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n\t     * `sum`, `uniq`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias collect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function timesThree(n) {\n\t     *   return n * 3;\n\t     * }\n\t     *\n\t     * _.map([1, 2], timesThree);\n\t     * // => [3, 6]\n\t     *\n\t     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n\t     * // => [3, 6] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee, thisArg) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return func(collection, iteratee);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, while the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is bound\n\t     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.partition([1, 2, 3], function(n) {\n\t     *   return n % 2;\n\t     * });\n\t     * // => [[1, 3], [2]]\n\t     *\n\t     * _.partition([1.2, 2.3, 3.4], function(n) {\n\t     *   return this.floor(n) % 2;\n\t     * }, Math);\n\t     * // => [[1.2, 3.4], [2.3]]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * var mapper = function(array) {\n\t     *   return _.pluck(array, 'user');\n\t     * };\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n\t     * // => [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.map(_.partition(users, 'active', false), mapper);\n\t     * // => [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(_.partition(users, 'active'), mapper);\n\t     * // => [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Gets the property value of `path` from all elements in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|string} path The path of the property to pluck.\n\t     * @returns {Array} Returns the property values.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.pluck(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * var userIndex = _.indexBy(users, 'user');\n\t     * _.pluck(userIndex, 'age');\n\t     * // => [36, 40] (iteration order is not guaranteed)\n\t     */\n\t    function pluck(collection, path) {\n\t      return map(collection, property(path));\n\t    }\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not provided the first element of `collection` is used as the initial\n\t     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `includes`, `merge`, `sortByAll`, and `sortByOrder`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldl, inject\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     *   return result;\n\t     * }, {});\n\t     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n\t     */\n\t    var reduce = createReduce(arrayReduce, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldr\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.reject([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [1, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.reject(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.reject(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function reject(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element or `n` random elements from a collection.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to sample.\n\t     * @param {number} [n] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {*} Returns the random sample(s).\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     *\n\t     * _.sample([1, 2, 3, 4], 2);\n\t     * // => [3, 1]\n\t     */\n\t    function sample(collection, n, guard) {\n\t      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n\t        collection = toIterable(collection);\n\t        var length = collection.length;\n\t        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n\t      }\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sample(collection, POSITIVE_INFINITY);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the size of `collection`.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      return isLength(length) ? length : keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * The function returns as soon as it finds a passing value and does not iterate\n\t     * over the entire collection. The predicate is bound to `thisArg` and invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias any\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.some(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = null;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through `iteratee`. This method performs\n\t     * a stable sort, that is, it preserves the original sort order of equal elements.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return Math.sin(n);\n\t     * });\n\t     * // => [3, 1, 2]\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return this.sin(n);\n\t     * }, Math);\n\t     * // => [3, 1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred' },\n\t     *   { 'user': 'pebbles' },\n\t     *   { 'user': 'barney' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.sortBy(users, 'user'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function sortBy(collection, iteratee, thisArg) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = null;\n\t      }\n\t      var index = -1;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n\t      });\n\t      return baseSortBy(result, compareAscending);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n\t     * or property names.\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n\t     *  The iteratees to sort by, specified as individual values or arrays of values.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n\t     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.map(_.sortByAll(users, 'user', function(chr) {\n\t     *   return Math.floor(chr.age / 10);\n\t     * }), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortByAll = restParam(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var guard = iteratees[2];\n\t      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.sortByAll` except that it allows specifying the\n\t     * sort orders of the iteratees to sort by. A truthy value in `orders` will\n\t     * sort the corresponding property name in ascending order while a falsey\n\t     * value will sort it in descending order.\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} orders The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // sort by `user` in ascending order and by `age` in descending order\n\t     * _.map(_.sortByOrder(users, ['user', 'age'], [true, false]), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function sortByOrder(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (guard && isIterateeCall(iteratees, orders, guard)) {\n\t        orders = null;\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseSortByOrder(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning an array of all elements that have equivalent\n\t     * property values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n\t     * ];\n\t     *\n\t     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n\t     * // => ['fred']\n\t     */\n\t    function where(collection, source) {\n\t      return filter(collection, baseMatches(source));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the number of milliseconds that have elapsed since the Unix epoch\n\t     * (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Date\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = nativeNow || function() {\n\t      return new Date().getTime();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it is called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      n = nativeIsFinite(n = +n) ? n : 0;\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      if (guard && isIterateeCall(func, n, guard)) {\n\t        n = null;\n\t      }\n\t      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n\t      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it is called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery('#add').on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = null;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = restParam(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bind.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method. Method names may be specified as individual arguments or as arrays\n\t     * of method names. If no method names are provided all enumerable function\n\t     * properties, own and inherited, of `object` are bound.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} [methodNames] The object method names to bind,\n\t     *  specified as individual method names or arrays of method names.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view);\n\t     * jQuery('#docs').on('click', view.onClick);\n\t     * // => logs 'clicked docs' when the element is clicked\n\t     */\n\t    var bindAll = restParam(function(object, methodNames) {\n\t      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\t\n\t      var index = -1,\n\t          length = methodNames.length;\n\t\n\t      while (++index < length) {\n\t        var key = methodNames[index];\n\t        object[key] = createWrapper(object[key], BIND_FLAG, object);\n\t      }\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object the method belongs to.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = restParam(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bindKey.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts one or more arguments of `func` that when\n\t     * called either invokes `func` returning its result, if all `func` arguments\n\t     * have been provided, or returns a function that accepts one or more of the\n\t     * remaining `func` arguments, and so on. The arity of `func` may be specified\n\t     * if `func.length` is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curry = createCurry(CURRY_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed invocations. Provide an options object to indicate that `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n\t     * Subsequent calls to the debounced function return the result of the last\n\t     * `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it is invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // avoid costly calculations while the window size is in flux\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n\t     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n\t     *   'maxWait': 1000\n\t     * }));\n\t     *\n\t     * // cancel a debounced call\n\t     * var todoChanges = _.debounce(batchLog, 1000);\n\t     * Object.observe(models.todo, todoChanges);\n\t     *\n\t     * Object.observe(models, function(changes) {\n\t     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n\t     *     todoChanges.cancel();\n\t     *   }\n\t     * }, ['delete']);\n\t     *\n\t     * // ...at some point `models.todo` is changed\n\t     * models.todo.completed = true;\n\t     *\n\t     * // ...before 1 second has passed `models.todo` is deleted\n\t     * // which cancels the debounced `todoChanges` call\n\t     * delete models.todo;\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = wait < 0 ? 0 : (+wait || 0);\n\t      if (options === true) {\n\t        var leading = true;\n\t        trailing = false;\n\t      } else if (isObject(options)) {\n\t        leading = options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n\t        trailing = 'trailing' in options ? options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          if (maxTimeoutId) {\n\t            clearTimeout(maxTimeoutId);\n\t          }\n\t          var isCalled = trailingCall;\n\t          maxTimeoutId = timeoutId = trailingCall = undefined;\n\t          if (isCalled) {\n\t            lastCalled = now();\n\t            result = func.apply(thisArg, args);\n\t            if (!timeoutId && !maxTimeoutId) {\n\t              args = thisArg = null;\n\t            }\n\t          }\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function maxDelayed() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (trailing || (maxWait !== wait)) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = null;\n\t          }\n\t        }\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled),\n\t              isCalled = remaining <= 0 || remaining > maxWait;\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = null;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = restParam(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = restParam(function(func, wait, args) {\n\t      return baseDelay(func, wait, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the provided\n\t     * functions with the `this` binding of the created function, where each\n\t     * successive invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the provided functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias backflow, compose\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is coerced to a string and used as the\n\t     * cache key. The `func` is invoked with the `this` binding of the memoized\n\t     * function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var upperCase = _.memoize(function(string) {\n\t     *   return string.toUpperCase();\n\t     * });\n\t     *\n\t     * upperCase('fred');\n\t     * // => 'FRED'\n\t     *\n\t     * // modifying the result cache\n\t     * upperCase.cache.set('fred', 'BARNEY');\n\t     * upperCase('fred');\n\t     * // => 'BARNEY'\n\t     *\n\t     * // replacing `_.memoize.Cache`\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'barney' };\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.memoize.Cache = WeakMap;\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first call. The `func` is invoked\n\t     * with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // using placeholders\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = createPartial(PARTIAL_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // using placeholders\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * var map = _.rearg(_.map, [1, 0]);\n\t     * map(function(n) {\n\t     *   return n * 3;\n\t     * }, [1, 2, 3]);\n\t     * // => [3, 6, 9]\n\t     */\n\t    var rearg = restParam(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, null, null, null, baseFlatten(indexes));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.restParam(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function restParam(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            rest = Array(length);\n\t\n\t        while (++index < length) {\n\t          rest[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, rest);\n\t          case 1: return func.call(this, args[0], rest);\n\t          case 2: return func.call(this, args[0], args[1], rest);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = rest;\n\t        return func.apply(this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * // with a Promise\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function(array) {\n\t        return func.apply(this, array);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed invocations. Provide an options object to indicate\n\t     * that `func` should be invoked on the leading and/or trailing edge of the\n\t     * `wait` timeout. Subsequent calls to the throttled function return the\n\t     * result of the last `func` call.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // avoid excessively updating the position while scrolling\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n\t     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // cancel a trailing throttled call\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (options === false) {\n\t        leading = false;\n\t      } else if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      debounceOptions.leading = leading;\n\t      debounceOptions.maxWait = +wait;\n\t      debounceOptions.trailing = trailing;\n\t      return debounce(func, wait, debounceOptions);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n\t     * otherwise they are assigned by reference. If `customizer` is provided it is\n\t     * invoked to produce the cloned values. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is bound to\n\t     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var shallow = _.clone(users);\n\t     * shallow[0] === users[0];\n\t     * // => true\n\t     *\n\t     * var deep = _.clone(users, true);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.clone(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 0\n\t     */\n\t    function clone(value, isDeep, customizer, thisArg) {\n\t      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n\t        isDeep = false;\n\t      }\n\t      else if (typeof isDeep == 'function') {\n\t        thisArg = customizer;\n\t        customizer = isDeep;\n\t        isDeep = false;\n\t      }\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, isDeep);\n\t    }\n\t\n\t    /**\n\t     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n\t     * to produce the cloned values. If `customizer` returns `undefined` cloning\n\t     * is handled by the method instead. The `customizer` is bound to `thisArg`\n\t     * and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var deep = _.cloneDeep(users);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.cloneDeep(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 20\n\t     */\n\t    function cloneDeep(value, customizer, thisArg) {\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, true);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    function gt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    function gte(value, other) {\n\t      return value >= other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      return isObjectLike(value) && isArrayLike(value) && objToString.call(value) == argsTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(function() { return arguments; }());\n\t     * // => false\n\t     */\n\t    var isArray = nativeIsArray || function(value) {\n\t      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) &&\n\t        (objToString.call(value).indexOf('Element') > -1);\n\t    }\n\t    // Fallback for environments without DOM support.\n\t    if (!support.dom) {\n\t      isElement = function(value) {\n\t        return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it is an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n\t          (isObjectLike(value) && isFunction(value.splice)))) {\n\t        return !value.length;\n\t      }\n\t      return !keys(value).length;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent. If `customizer` is provided it is invoked to compare values.\n\t     * If `customizer` returns `undefined` comparisons are handled by the method\n\t     * instead. The `customizer` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, other [, index|key]).\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. Functions and DOM nodes\n\t     * are **not** supported. Provide a customizer function to extend support\n\t     * for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eq\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * object == other;\n\t     * // => false\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * // using a customizer callback\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqual(array, other, function(value, other) {\n\t     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n\t     *     return true;\n\t     *   }\n\t     * });\n\t     * // => true\n\t     */\n\t    function isEqual(value, other, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(10);\n\t     * // => true\n\t     *\n\t     * _.isFinite('10');\n\t     * // => false\n\t     *\n\t     * _.isFinite(true);\n\t     * // => false\n\t     *\n\t     * _.isFinite(Object(10));\n\t     * // => false\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    var isFinite = nativeNumIsFinite || function(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    var isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in older versions of Chrome and Safari which return 'function' for regexes\n\t      // and Safari 8 equivalents which return 'object' for typed array constructors.\n\t      return objToString.call(value) == funcTag;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(1);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      // Avoid a V8 JIT bug in Chrome 19-20.\n\t      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between `object` and `source` to determine if\n\t     * `object` contains equivalent property values. If `customizer` is provided\n\t     * it is invoked to compare values. If `customizer` returns `undefined`\n\t     * comparisons are handled by the method instead. The `customizer` is bound\n\t     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n\t     *\n\t     * **Note:** This method supports comparing properties of arrays, booleans,\n\t     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n\t     * and DOM nodes are **not** supported. Provide a customizer function to extend\n\t     * support for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatch(object, source, function(value, other) {\n\t     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n\t     * });\n\t     * // => true\n\t     */\n\t    function isMatch(object, source, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      return baseIsMatch(object, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (objToString.call(value) == funcTag) {\n\t        return reIsNative.test(fnToString.call(value));\n\t      }\n\t      return isObjectLike(value) && reIsHostCtor.test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(8.4);\n\t     * // => true\n\t     *\n\t     * _.isNumber(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNumber('8.4');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * **Note:** This method assumes objects created by the `Object` constructor\n\t     * have no inherited enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n\t      if (!(value && objToString.call(value) == objectTag)) {\n\t        return false;\n\t      }\n\t      var valueOf = getNative(value, 'valueOf'),\n\t          objProto = valueOf && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\t\n\t      return objProto\n\t        ? (value == objProto || getPrototypeOf(value) == objProto)\n\t        : shimIsPlainObject(value);\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObjectLike(value) && objToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    function lt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    function lte(value, other) {\n\t      return value <= other;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * (function() {\n\t     *   return _.toArray(arguments).slice(1);\n\t     * }(1, 2, 3));\n\t     * // => [2, 3]\n\t     */\n\t    function toArray(value) {\n\t      var length = value ? getLength(value) : 0;\n\t      if (!isLength(length)) {\n\t        return values(value);\n\t      }\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      return arrayCopy(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return baseCopy(value, keysIn(value));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object. Subsequent sources overwrite property assignments of previous sources.\n\t     * If `customizer` is provided it is invoked to produce the assigned values.\n\t     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n\t     * (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object` and is based on\n\t     * [`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using a customizer callback\n\t     * var defaults = _.partialRight(_.assign, function(value, other) {\n\t     *   return _.isUndefined(value) ? other : value;\n\t     * });\n\t     *\n\t     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var assign = createAssigner(function(object, source, customizer) {\n\t      return customizer\n\t        ? assignWith(object, source, customizer)\n\t        : baseAssign(object, source);\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the given `prototype` object. If a\n\t     * `properties` object is provided its own enumerable properties are assigned\n\t     * to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties, guard) {\n\t      var result = baseCreate(prototype);\n\t      if (guard && isIterateeCall(prototype, properties, guard)) {\n\t        properties = null;\n\t      }\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object for all destination properties that resolve to `undefined`. Once a\n\t     * property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = restParam(function(args) {\n\t      var object = args[0];\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      args.push(assignDefaults);\n\t      return assign.apply(undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    var findKey = createFindKey(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    var findLastKey = createFindKey(baseForOwnRight);\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n\t     */\n\t    var forIn = createForIn(baseFor);\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n\t     */\n\t    var forInRight = createForIn(baseForRight);\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n\t     * three arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n\t     */\n\t    var forOwn = createForOwn(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n\t     */\n\t    var forOwnRight = createForOwn(baseForOwnRight);\n\t\n\t    /**\n\t     * Creates an array of function property names from all enumerable properties,\n\t     * own and inherited, of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias methods\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * _.functions(_);\n\t     * // => ['after', 'ary', 'assign', ...]\n\t     */\n\t    function functions(object) {\n\t      return baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the property value at `path` of `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     */\n\t    function has(object, path) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasOwnProperty.call(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        path = last(path);\n\t        result = hasOwnProperty.call(object, path);\n\t      }\n\t      return result || (isLength(object.length) && isIndex(path, object.length) &&\n\t        (isArray(object) || isArguments(object)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values unless `multiValue` is `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {boolean} [multiValue] Allow multiple values per key.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     *\n\t     * // with `multiValue`\n\t     * _.invert(object, true);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function invert(object, multiValue, guard) {\n\t      if (guard && isIterateeCall(object, multiValue, guard)) {\n\t        multiValue = null;\n\t      }\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (multiValue) {\n\t          if (hasOwnProperty.call(result, value)) {\n\t            result[value].push(key);\n\t          } else {\n\t            result[value] = [key];\n\t          }\n\t        }\n\t        else {\n\t          result[value] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    var keys = !nativeKeys ? shimKeys : function(object) {\n\t      var Ctor = object == null ? null : object.constructor;\n\t      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n\t          (typeof object != 'function' && isArrayLike(object))) {\n\t        return shimKeys(object);\n\t      }\n\t      return isObject(object) ? nativeKeys(object) : [];\n\t    };\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      if (!isObject(object)) {\n\t        object = Object(object);\n\t      }\n\t      var length = object.length;\n\t      length = (length && isLength(length) &&\n\t        (isArray(object) || isArguments(object)) && length) || 0;\n\t\n\t      var Ctor = object.constructor,\n\t          index = -1,\n\t          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n\t          result = Array(length),\n\t          skipIndexes = length > 0;\n\t\n\t      while (++index < length) {\n\t        result[index] = (index + '');\n\t      }\n\t      for (var key in object) {\n\t        if (!(skipIndexes && isIndex(key, length)) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * property of `object` through `iteratee`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    var mapKeys = createObjectMapper(true);\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n\t     *   return n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    var mapValues = createObjectMapper();\n\t\n\t    /**\n\t     * Recursively merges own enumerable properties of the source object(s), that\n\t     * don't resolve to `undefined` into the destination object. Subsequent sources\n\t     * overwrite property assignments of previous sources. If `customizer` is\n\t     * provided it is invoked to produce the merged values of the destination and\n\t     * source properties. If `customizer` returns `undefined` merging is handled\n\t     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n\t     * with five arguments: (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     *\n\t     * // using a customizer callback\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.merge(object, other, function(a, b) {\n\t     *   if (_.isArray(a)) {\n\t     *     return a.concat(b);\n\t     *   }\n\t     * });\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var merge = createAssigner(baseMerge);\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to omit, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.omit(object, 'age');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.omit(object, _.isNumber);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var omit = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      if (typeof props[0] != 'function') {\n\t        var props = arrayMap(baseFlatten(props), String);\n\t        return pickByArray(object, baseDifference(keysIn(object), props));\n\t      }\n\t      var predicate = bindCallback(props[0], props[1], 3);\n\t      return pickByCallback(object, function(value, key, object) {\n\t        return !predicate(value, key, object);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a two dimensional array of the key-value pairs for `object`,\n\t     * e.g. `[[key1, value1], [key2, value2]]`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * _.pairs({ 'barney': 36, 'fred': 40 });\n\t     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n\t     */\n\t    function pairs(object) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        result[index] = [key, object[key]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties. Property\n\t     * names may be specified as individual arguments or as arrays of property\n\t     * names. If `predicate` is provided it is invoked for each property of `object`\n\t     * picking the properties `predicate` returns truthy for. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to pick, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.pick(object, 'user');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.pick(object, _.isString);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var pick = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      return typeof props[0] == 'function'\n\t        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n\t        : pickByArray(object, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it is invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a.b.c', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      var result = object == null ? undefined : object[path];\n\t      if (result === undefined) {\n\t        if (object != null && !isKey(path, object)) {\n\t          path = toPath(path);\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          result = object == null ? undefined : object[last(path)];\n\t        }\n\t        result = result === undefined ? defaultValue : result;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the property value of `path` on `object`. If a portion of `path`\n\t     * does not exist it is created.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to augment.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      var pathKey = (path + '');\n\t      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          if (index == lastIndex) {\n\t            nested[key] = value;\n\t          } else if (nested[key] == null) {\n\t            nested[key] = isIndex(path[index + 1]) ? [] : {};\n\t          }\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n\t     * with four arguments: (accumulator, value, key, object). Iteratee functions\n\t     * may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     */\n\t    function transform(object, iteratee, accumulator, thisArg) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getCallback(iteratee, thisArg, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : null);\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values\n\t     * of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it is set to `start` with `start` then set to `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} n The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     */\n\t    function inRange(value, start, end) {\n\t      start = +start || 0;\n\t      if (typeof end === 'undefined') {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between `min` and `max` (inclusive). If only one\n\t     * argument is provided a number between `0` and the given number is returned.\n\t     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n\t     * number is returned instead of an integer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [min=0] The minimum possible value.\n\t     * @param {number} [max=1] The maximum possible value.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(min, max, floating) {\n\t      if (floating && isIterateeCall(min, max, floating)) {\n\t        max = floating = null;\n\t      }\n\t      var noMin = min == null,\n\t          noMax = max == null;\n\t\n\t      if (floating == null) {\n\t        if (noMax && typeof min == 'boolean') {\n\t          floating = min;\n\t          min = 1;\n\t        }\n\t        else if (typeof max == 'boolean') {\n\t          floating = max;\n\t          noMax = true;\n\t        }\n\t      }\n\t      if (noMin && noMax) {\n\t        max = 1;\n\t        noMax = false;\n\t      }\n\t      min = +min || 0;\n\t      if (noMax) {\n\t        max = min;\n\t        min = 0;\n\t      } else {\n\t        max = +max || 0;\n\t      }\n\t      if (floating || min % 1 || max % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n\t      }\n\t      return baseRandom(min, max);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n\t    });\n\t\n\t    /**\n\t     * Capitalizes the first character of `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('fred');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      string = baseToString(string);\n\t      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = baseToString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      target = (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional characters\n\t     * use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in Internet Explorer < 9, they can break out\n\t     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n\t      string = baseToString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n\t     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasRegExpChars.test(string))\n\t        ? string.replace(reRegExpChars, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = baseToString(string);\n\t      length = +length;\n\t\n\t      var strLength = string.length;\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = floor(mid),\n\t          rightLength = ceil(mid);\n\t\n\t      chars = createPadding('', rightLength, chars);\n\t      return chars.slice(0, leftLength) + string + chars;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padLeft('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padLeft('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padLeft('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padLeft = createPadDir();\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padRight('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padRight('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padRight('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padRight = createPadDir(true);\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      if (guard && isIterateeCall(string, radix, guard)) {\n\t        radix = 0;\n\t      }\n\t      return nativeParseInt(string, radix);\n\t    }\n\t    // Fallback for environments with pre-ES5 implementations.\n\t    if (nativeParseInt(whitespace + '08') != 8) {\n\t      parseInt = function(string, radix, guard) {\n\t        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n\t        // Chrome fails to trim leading <BOM> whitespace characters.\n\t        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n\t          radix = 0;\n\t        } else if (radix) {\n\t          radix = +radix;\n\t        }\n\t        string = trim(string);\n\t        return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      var result = '';\n\t      string = baseToString(string);\n\t      n = +n;\n\t      if (n < 1 || !string || !nativeIsFinite(n)) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = floor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      position = position == null\n\t        ? 0\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\t\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is provided it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // using the \"interpolate\" delimiter to create a compiled template\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // using the HTML \"escape\" delimiter to escape data property values\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the internal `print` function in \"evaluate\" delimiters\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // using custom template delimiters\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // using backslashes to treat delimiters as plain text\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // using the `imports` option to import `jQuery` as `jq`\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the `sourceURL` option to specify a custom sourceURL for the template\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // using the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and a stack trace\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, otherOptions) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n\t        options = otherOptions = null;\n\t      }\n\t      string = baseToString(string);\n\t      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\t\n\t      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products requires returning the `match`\n\t        // string in order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n\t      }\n\t      chars = (chars + '');\n\t      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimLeft('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimLeft('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimLeft(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string));\n\t      }\n\t      return string.slice(charsLeftIndex(string, (chars + '')));\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimRight('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimRight('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimRight(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(0, trimmedRightIndex(string) + 1);\n\t      }\n\t      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object|number} [options] The options object or maximum string length.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', 24);\n\t     * // => 'hi-diddly-ho there, n...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function trunc(string, options, guard) {\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = null;\n\t      }\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (options != null) {\n\t        if (isObject(options)) {\n\t          var separator = 'separator' in options ? options.separator : separator;\n\t          length = 'length' in options ? (+options.length || 0) : length;\n\t          omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t        } else {\n\t          length = +options || 0;\n\t        }\n\t      }\n\t      string = baseToString(string);\n\t      if (length >= string.length) {\n\t        return string;\n\t      }\n\t      var end = length - omission.length;\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = string.slice(0, end);\n\t      if (separator == null) {\n\t        return result + omission;\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              newEnd,\n\t              substring = string.slice(0, end);\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd == null ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      if (guard && isIterateeCall(string, pattern, guard)) {\n\t        pattern = null;\n\t      }\n\t      string = baseToString(string);\n\t      return string.match(pattern || reWords) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // avoid throwing errors for invalid selectors\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = restParam(function(func, args) {\n\t      try {\n\t        return func.apply(undefined, args);\n\t      } catch(e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and arguments of the created function. If `func` is a property name the\n\t     * created callback returns the property value for a given element. If `func`\n\t     * is an object the created callback returns `true` for elements that contain\n\t     * the equivalent object properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias iteratee\n\t     * @category Utility\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // wrap to create custom callback shorthands\n\t     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n\t     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n\t     *   if (!match) {\n\t     *     return callback(func, thisArg);\n\t     *   }\n\t     *   return function(object) {\n\t     *     return match[2] == 'gt'\n\t     *       ? object[match[1]] > match[3]\n\t     *       : object[match[1]] < match[3];\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age__gt36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function callback(func, thisArg, guard) {\n\t      if (guard && isIterateeCall(func, thisArg, guard)) {\n\t        thisArg = null;\n\t      }\n\t      return isObjectLike(func)\n\t        ? matches(func)\n\t        : baseCallback(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * This method returns the first argument provided to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a deep comparison between a given object\n\t     * and `source`, returning `true` if the given object has equivalent property\n\t     * values, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that compares the property value of `path` on a given\n\t     * object to `value`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` on a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = restParam(function(path, args) {\n\t      return function(object) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path on `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = restParam(function(object, args) {\n\t      return function(path) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      if (options == null) {\n\t        var isObj = isObject(source),\n\t            props = isObj ? keys(source) : null,\n\t            methodNames = (props && props.length) ? baseFunctions(source, props) : null;\n\t\n\t        if (!(methodNames ? methodNames.length : isObj)) {\n\t          methodNames = false;\n\t          options = source;\n\t          source = object;\n\t          object = this;\n\t        }\n\t      }\n\t      if (!methodNames) {\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = true,\n\t          index = -1,\n\t          isFunc = isFunction(object),\n\t          length = methodNames.length;\n\t\n\t      if (options === false) {\n\t        chain = false;\n\t      } else if (isObject(options) && 'chain' in options) {\n\t        chain = options.chain;\n\t      }\n\t      while (++index < length) {\n\t        var methodName = methodNames[index],\n\t            func = source[methodName];\n\t\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = (function(func) {\n\t            return function() {\n\t              var chainAll = this.__chain__;\n\t              if (chain || chainAll) {\n\t                var result = object(this.__wrapped__),\n\t                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\t\n\t                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t                result.__chain__ = chainAll;\n\t                return result;\n\t              }\n\t              var args = [this.value()];\n\t              push.apply(args, arguments);\n\t              return func.apply(object, args);\n\t            };\n\t          }(func));\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      context._ = oldDash;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the property value at `path` on a\n\t     * given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the property value at a given path on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return baseGet(object, toPath(path), path + '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. If `end` is not specified it is\n\t     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n\t     * a zero-length range is created unless a negative `step` is specified.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    function range(start, end, step) {\n\t      if (step && isIterateeCall(start, end, step)) {\n\t        end = step = null;\n\t      }\n\t      start = +start || 0;\n\t      step = step == null ? 1 : (+step || 0);\n\t\n\t      if (end == null) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n\t      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\t      var index = -1,\n\t          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee function `n` times, returning an array of the results\n\t     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n\t     * one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n\t     * // => [3, 6, 4]\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   mage.castSpell(n);\n\t     * });\n\t     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   this.cast(n);\n\t     * }, mage);\n\t     * // => also invokes `mage.castSpell(n)` three times\n\t     */\n\t    function times(n, iteratee, thisArg) {\n\t      n = floor(n);\n\t\n\t      // Exit early to avoid a JSC JIT bug in Safari 8\n\t      // where `Array(0)` is treated as `Array(1)`.\n\t      if (n < 1 || !nativeIsFinite(n)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\t\n\t      iteratee = bindCallback(iteratee, thisArg, 1);\n\t      while (++index < n) {\n\t        if (index < MAX_ARRAY_LENGTH) {\n\t          result[index] = iteratee(index);\n\t        } else {\n\t          iteratee(index);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {string} [prefix] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return baseToString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number to add.\n\t     * @param {number} addend The second number to add.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      return (+augend || 0) + (+addend || 0);\n\t    }\n\t\n\t    /**\n\t     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n\t     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => -Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.max(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.max(users, 'age');\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     */\n\t    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\t\n\t    /**\n\t     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n\t     * `Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.min(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.min(users, 'age');\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var min = createExtremum(lt, POSITIVE_INFINITY);\n\t\n\t    /**\n\t     * Gets the sum of the values in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 6]);\n\t     * // => 10\n\t     *\n\t     * _.sum({ 'a': 4, 'b': 6 });\n\t     * // => 10\n\t     *\n\t     * var objects = [\n\t     *   { 'n': 4 },\n\t     *   { 'n': 6 }\n\t     * ];\n\t     *\n\t     * _.sum(objects, function(object) {\n\t     *   return object.n;\n\t     * });\n\t     * // => 10\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sum(objects, 'n');\n\t     * // => 10\n\t     */\n\t    function sum(collection, iteratee, thisArg) {\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = null;\n\t      }\n\t      var callback = getCallback(),\n\t          noIteratee = iteratee == null;\n\t\n\t      if (!(noIteratee && callback === baseCallback)) {\n\t        noIteratee = false;\n\t        iteratee = callback(iteratee, thisArg, 3);\n\t      }\n\t      return noIteratee\n\t        ? arraySum(isArray(collection) ? collection : toIterable(collection))\n\t        : baseSum(collection, iteratee);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Add functions to the `Map` cache.\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `Set` cache.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.callback = callback;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.functions = functions;\n\t    lodash.groupBy = groupBy;\n\t    lodash.indexBy = indexBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.invert = invert;\n\t    lodash.invoke = invoke;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.omit = omit;\n\t    lodash.once = once;\n\t    lodash.pairs = pairs;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pluck = pluck;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.restParam = restParam;\n\t    lodash.set = set;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortByAll = sortByAll;\n\t    lodash.sortByOrder = sortByOrder;\n\t    lodash.spread = spread;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.times = times;\n\t    lodash.toArray = toArray;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.union = union;\n\t    lodash.uniq = uniq;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.where = where;\n\t    lodash.without = without;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.backflow = flowRight;\n\t    lodash.collect = map;\n\t    lodash.compose = flowRight;\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.extend = assign;\n\t    lodash.iteratee = callback;\n\t    lodash.methods = functions;\n\t    lodash.object = zipObject;\n\t    lodash.select = filter;\n\t    lodash.tail = rest;\n\t    lodash.unique = uniq;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.findWhere = findWhere;\n\t    lodash.first = first;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isString = isString;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.min = min;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padLeft = padLeft;\n\t    lodash.padRight = padRight;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.result = result;\n\t    lodash.runInContext = runInContext;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.sum = sum;\n\t    lodash.template = template;\n\t    lodash.trim = trim;\n\t    lodash.trimLeft = trimLeft;\n\t    lodash.trimRight = trimRight;\n\t    lodash.trunc = trunc;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.words = words;\n\t\n\t    // Add aliases.\n\t    lodash.all = every;\n\t    lodash.any = some;\n\t    lodash.contains = includes;\n\t    lodash.eq = isEqual;\n\t    lodash.detect = find;\n\t    lodash.foldl = reduce;\n\t    lodash.foldr = reduceRight;\n\t    lodash.head = first;\n\t    lodash.include = includes;\n\t    lodash.inject = reduce;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!lodash.prototype[methodName]) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), false);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\t    lodash.sample = sample;\n\t\n\t    lodash.prototype.sample = function(n) {\n\t      if (!this.__chain__ && n == null) {\n\t        return sample(this.value());\n\t      }\n\t      return this.thru(function(value) {\n\t        return sample(value, n);\n\t      });\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['dropWhile', 'filter', 'map', 'takeWhile'], function(methodName, type) {\n\t      var isFilter = type != LAZY_MAP_FLAG,\n\t          isDropWhile = type == LAZY_DROP_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n\t        var filtered = this.__filtered__,\n\t            result = (filtered && isDropWhile) ? new LazyWrapper(this) : this.clone(),\n\t            iteratees = result.__iteratees__ || (result.__iteratees__ = []);\n\t\n\t        iteratees.push({\n\t          'done': false,\n\t          'count': 0,\n\t          'index': 0,\n\t          'iteratee': getCallback(iteratee, thisArg, 1),\n\t          'limit': -1,\n\t          'type': type\n\t        });\n\t\n\t        result.__filtered__ = filtered || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      var whileName = methodName + 'While';\n\t\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__,\n\t            result = (filtered && !index) ? this.dropWhile() : this.clone();\n\t\n\t        n = n == null ? 1 : nativeMax(floor(n) || 0, 0);\n\t        if (filtered) {\n\t          if (index) {\n\t            result.__takeCount__ = nativeMin(result.__takeCount__, n);\n\t          } else {\n\t            last(result.__iteratees__).limit = n;\n\t          }\n\t        } else {\n\t          var views = result.__views__ || (result.__views__ = []);\n\t          views.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n\t        return this.reverse()[whileName](predicate, thisArg).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\t    arrayEach(['first', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\t    arrayEach(['initial', 'rest'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[dropName](1);\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\t    arrayEach(['pluck', 'where'], function(methodName, index) {\n\t      var operationName = index ? 'filter' : 'map',\n\t          createCallback = index ? baseMatches : property;\n\t\n\t      LazyWrapper.prototype[methodName] = function(value) {\n\t        return this[operationName](createCallback(value));\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n\t      predicate = getCallback(predicate, thisArg, 1);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = start == null ? 0 : (+start || 0);\n\t\n\t      var result = this;\n\t      if (start < 0) {\n\t        result = this.takeRight(-start);\n\t      } else if (start) {\n\t        result = this.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = (+end || 0);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.drop(0);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n\t          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments,\n\t            chainAll = this.__chain__,\n\t            value = this.__wrapped__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // avoid lazy use if the iteratee has a \"length\" value other than `1`\n\t          isLazy = useLazy = false;\n\t        }\n\t        var onlyLazy = isLazy && !isHybrid;\n\t        if (retUnwrapped && !chainAll) {\n\t          return onlyLazy\n\t            ? func.call(value)\n\t            : lodashFunc.call(lodash, this.value());\n\t        }\n\t        var interceptor = function(value) {\n\t          var otherArgs = [value];\n\t          push.apply(otherArgs, args);\n\t          return lodashFunc.apply(lodash, otherArgs);\n\t        };\n\t        if (useLazy) {\n\t          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n\t              result = func.apply(wrapper, args);\n\t\n\t          if (!retUnwrapped && (isHybrid || result.__actions__)) {\n\t            var actions = result.__actions__ || (result.__actions__ = []);\n\t            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n\t          }\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        return this.thru(interceptor);\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['concat', 'join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n\t      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = lodashFunc.name,\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(null, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': null }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toString = wrapperToString;\n\t    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add function aliases to the `lodash` wrapper.\n\t    lodash.prototype.collect = lodash.prototype.map;\n\t    lodash.prototype.head = lodash.prototype.first;\n\t    lodash.prototype.select = lodash.prototype.filter;\n\t    lodash.prototype.tail = lodash.prototype.rest;\n\t\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Expose lodash to the global object when an AMD loader is present to avoid\n\t    // errors in cases where lodash is loaded by a script tag and not intended\n\t    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n\t    // more details.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js or RingoJS.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for Rhino with CommonJS support.\n\t    else {\n\t      freeExports._ = _;\n\t    }\n\t  }\n\t  else {\n\t    // Export for a browser or Rhino.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(79)(module), (function() { return this; }())))\n\n/***/ },\n\n/***/ 31:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = function(det, rec, confidence, name, lang) {\n\t  this.confidence = confidence;\n\t  this.name = name || rec.name(det);\n\t  this.lang = lang;\n\t};\n\n\n/***/ },\n\n/***/ 38:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t/**\r\n\t * slice() reference.\r\n\t */\r\n\t\r\n\tvar slice = Array.prototype.slice;\r\n\t\r\n\t/**\r\n\t * Expose `co`.\r\n\t */\r\n\t\r\n\tmodule.exports = co['default'] = co.co = co;\r\n\t\r\n\t/**\r\n\t * Wrap the given generator `fn` into a\r\n\t * function that returns a promise.\r\n\t * This is a separate function so that\r\n\t * every `co()` call doesn't create a new,\r\n\t * unnecessary closure.\r\n\t *\r\n\t * @param {GeneratorFunction} fn\r\n\t * @return {Function}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tco.wrap = function (fn) {\r\n\t  createPromise.__generatorFunction__ = fn;\r\n\t  return createPromise;\r\n\t  function createPromise() {\r\n\t    return co.call(this, fn.apply(this, arguments));\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Execute the generator function or a generator\r\n\t * and return a promise.\r\n\t *\r\n\t * @param {Function} fn\r\n\t * @return {Promise}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction co(gen) {\r\n\t  var ctx = this;\r\n\t\r\n\t  // we wrap everything in a promise to avoid promise chaining,\r\n\t  // which leads to memory leak errors.\r\n\t  // see https://github.com/tj/co/issues/180\r\n\t  return new Promise(function(resolve, reject) {\r\n\t    if (typeof gen === 'function') gen = gen.call(ctx);\r\n\t    if (!gen || typeof gen.next !== 'function') return resolve(gen);\r\n\t\r\n\t    onFulfilled();\r\n\t\r\n\t    /**\r\n\t     * @param {Mixed} res\r\n\t     * @return {Promise}\r\n\t     * @api private\r\n\t     */\r\n\t\r\n\t    function onFulfilled(res) {\r\n\t      var ret;\r\n\t      try {\r\n\t        ret = gen.next(res);\r\n\t      } catch (e) {\r\n\t        return reject(e);\r\n\t      }\r\n\t      next(ret);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @param {Error} err\r\n\t     * @return {Promise}\r\n\t     * @api private\r\n\t     */\r\n\t\r\n\t    function onRejected(err) {\r\n\t      var ret;\r\n\t      try {\r\n\t        ret = gen.throw(err);\r\n\t      } catch (e) {\r\n\t        return reject(e);\r\n\t      }\r\n\t      next(ret);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Get the next value in the generator,\r\n\t     * return a promise.\r\n\t     *\r\n\t     * @param {Object} ret\r\n\t     * @return {Promise}\r\n\t     * @api private\r\n\t     */\r\n\t\r\n\t    function next(ret) {\r\n\t      if (ret.done) return resolve(ret.value);\r\n\t      var value = toPromise.call(ctx, ret.value);\r\n\t      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\r\n\t      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\r\n\t        + 'but the following object was passed: \"' + String(ret.value) + '\"'));\r\n\t    }\r\n\t  });\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert a `yield`ed value into a promise.\r\n\t *\r\n\t * @param {Mixed} obj\r\n\t * @return {Promise}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction toPromise(obj) {\r\n\t  if (!obj) return obj;\r\n\t  if (isPromise(obj)) return obj;\r\n\t  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\r\n\t  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\r\n\t  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\r\n\t  if (isObject(obj)) return objectToPromise.call(this, obj);\r\n\t  return obj;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert a thunk to a promise.\r\n\t *\r\n\t * @param {Function}\r\n\t * @return {Promise}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction thunkToPromise(fn) {\r\n\t  var ctx = this;\r\n\t  return new Promise(function (resolve, reject) {\r\n\t    fn.call(ctx, function (err, res) {\r\n\t      if (err) return reject(err);\r\n\t      if (arguments.length > 2) res = slice.call(arguments, 1);\r\n\t      resolve(res);\r\n\t    });\r\n\t  });\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert an array of \"yieldables\" to a promise.\r\n\t * Uses `Promise.all()` internally.\r\n\t *\r\n\t * @param {Array} obj\r\n\t * @return {Promise}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction arrayToPromise(obj) {\r\n\t  return Promise.all(obj.map(toPromise, this));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert an object of \"yieldables\" to a promise.\r\n\t * Uses `Promise.all()` internally.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Promise}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction objectToPromise(obj){\r\n\t  var results = new obj.constructor();\r\n\t  var keys = Object.keys(obj);\r\n\t  var promises = [];\r\n\t  for (var i = 0; i < keys.length; i++) {\r\n\t    var key = keys[i];\r\n\t    var promise = toPromise.call(this, obj[key]);\r\n\t    if (promise && isPromise(promise)) defer(promise, key);\r\n\t    else results[key] = obj[key];\r\n\t  }\r\n\t  return Promise.all(promises).then(function () {\r\n\t    return results;\r\n\t  });\r\n\t\r\n\t  function defer(promise, key) {\r\n\t    // predefine the key in the result\r\n\t    results[key] = undefined;\r\n\t    promises.push(promise.then(function (res) {\r\n\t      results[key] = res;\r\n\t    }));\r\n\t  }\r\n\t}\r\n\t\r\n\t/**\r\n\t * Check if `obj` is a promise.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Boolean}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction isPromise(obj) {\r\n\t  return 'function' == typeof obj.then;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Check if `obj` is a generator.\r\n\t *\r\n\t * @param {Mixed} obj\r\n\t * @return {Boolean}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction isGenerator(obj) {\r\n\t  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Check if `obj` is a generator function.\r\n\t *\r\n\t * @param {Mixed} obj\r\n\t * @return {Boolean}\r\n\t * @api private\r\n\t */\r\n\tfunction isGeneratorFunction(obj) {\r\n\t  var constructor = obj.constructor;\r\n\t  if (!constructor) return false;\r\n\t  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\r\n\t  return isGenerator(constructor.prototype);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Check for plain object.\r\n\t *\r\n\t * @param {Mixed} val\r\n\t * @return {Boolean}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction isObject(val) {\r\n\t  return Object == val.constructor;\r\n\t}\r\n\n\n/***/ },\n\n/***/ 40:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\t\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t};\n\t\n\t\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = process.env.NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\t\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\t\n\t\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\t\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\t\n\t\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\t\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\t\n\t\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\t\n\t\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\t\n\t  return hash;\n\t}\n\t\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\t\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\t\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = __webpack_require__(152);\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\t\n\t\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\t\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\t\n\t\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\t\n\t\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(151);\n\t\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\t\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\t\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 52:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = DataStructure\n\t\n\tfunction DataStructure() {\n\t\n\t  var schemas = [].slice.call(arguments)\n\t\n\t  function Constructor(object) {\n\t    Constructor.validate(object)\n\t    return object\n\t  }\n\t\n\t  Constructor.validate = function(object) {\n\t    for (var i = 0; i < schemas.length; i ++) {\n\t      validate(schemas[i], object)\n\t    }\n\t  }\n\t\n\t  return Constructor\n\t\n\t}\n\t\n\tDataStructure.maybe = function maybe(schema) {\n\t  function MaybeValidator(object) {\n\t    MaybeValidator.validate(object)\n\t    return object\n\t  }\n\t  MaybeValidator.validate = function(value) {\n\t    if (value === null || value === undefined) return\n\t    validate(schema, value)\n\t  }\n\t  return MaybeValidator\n\t}\n\t\n\tfunction validate(schema, value) {\n\t  if (schema === Number) schema = 'number'\n\t  if (schema === String) schema = 'string'\n\t  if (typeof schema === 'string') {\n\t    if (typeof value !== schema) throw new Error('should be a ' + schema)\n\t  } else if (typeof schema === 'function') {\n\t    if (typeof schema.validate === 'function') {\n\t      schema.validate(value)\n\t    } else if (!(value instanceof schema)) {\n\t      throw new Error('should be an instance of ' + schema)\n\t    }\n\t  } else if (typeof schema === 'object') {\n\t    if (!value) throw new Error('should be an object')\n\t    validateObject(schema, value)\n\t  } else {\n\t    throw new Error('invalid schema')\n\t  }\n\t}\n\t\n\tfunction validateObject(schema, object) {\n\t  for (var prop in schema) {\n\t    if (!(prop in object)) {\n\t      throw new Error('missing property: \"' + prop + '\"')\n\t    }\n\t    try {\n\t      validate(schema[prop], object[prop])\n\t    } catch (e) {\n\t      throw new Error('error in property \"' + prop + '\": ' + e.message)\n\t    }\n\t  }\n\t}\n\t\n\n\n/***/ },\n\n/***/ 75:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar bytes = _interopRequire(__webpack_require__(128));\n\t\n\tvar wrap = function (f) {\n\t  return function (progress) {\n\t    return progress.progress !== null ? f(progress) : \"\";\n\t  };\n\t};\n\t\n\t// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\n\tvar BYTES_FORMATTER = wrap(function (progress) {\n\t  return bytes(progress.current) + \" / \" + bytes(progress.total);\n\t});\n\t\n\texports.BYTES_FORMATTER = BYTES_FORMATTER;\n\t// Formats the `Progress` simply bu using the value of `Progress#extra`.\n\tvar EXTRA_FORMATTER = wrap(function (progress) {\n\t  return progress.extra + \"\";\n\t});\n\texports.EXTRA_FORMATTER = EXTRA_FORMATTER;\n\n/***/ },\n\n/***/ 76:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.fixed = fixed;\n\t\n\t// Reports the progress as an atomic operation.\n\texports.atomic = atomic;\n\texports.wrapPromise = wrapPromise;\n\texports.bind = bind;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar BYTES_FORMATTER = __webpack_require__(75).BYTES_FORMATTER;\n\t\n\tfunction fixed(total, progress) {\n\t  if (!progress) {\n\t    return function () {};\n\t  }var loaded = 0;\n\t  progress.report(0, total);\n\t  return function (extra) {\n\t    return progress.report(++loaded, total, extra);\n\t  };\n\t}\n\t\n\tfunction atomic(progress, promise) {\n\t  if (!progress) {\n\t    return promise;\n\t  }return Promise.resolve(promise).tap(function (data) {\n\t    if (data && data.byteLength) {\n\t      progress.formatter = BYTES_FORMATTER;\n\t      progress.report(data.byteLength, data.byteLength);\n\t    } else {\n\t      progress.report(1, 1);\n\t    }\n\t  });\n\t}\n\t\n\tfunction wrapPromise(progress, f) {\n\t  var current = 0;\n\t  var total = 0;\n\t  return function () {\n\t    progress.report(current, ++total);\n\t    return Promise.resolve(f.apply(this, arguments)).tap(function () {\n\t      return progress.report(++current, total);\n\t    });\n\t  };\n\t}\n\t\n\tfunction bind(from, to) {\n\t  return from.watch(function () {\n\t    return to.report(from.current, from.total, from.extra);\n\t  });\n\t}\n\n/***/ },\n\n/***/ 77:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t// Reads the blob as a specified type. The blob will not actually be read\n\t// unless the ``as()`` method is called.\n\t//\n\t// .. js:function:: as(type)\n\t//\n\t//    Starts reading the blob as ``type``. The ``type`` is a String such as\n\t//    \"arraybuffer\" or \"text\".\n\t\"use strict\";\n\t\n\texports.readBlob = readBlob;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports[\"default\"] = readBlob;\n\t\n\tfunction readBlob(blob) {\n\t  return {\n\t    as: function as(type) {\n\t      return new Promise(function (resolve, reject) {\n\t        var reader = new FileReader();\n\t        reader.onload = function () {\n\t          resolve(reader.result);\n\t        };\n\t        reader.onerror = function () {\n\t          reject(new Error(\"Unable to read from Blob\"));\n\t        };\n\t        switch (type) {\n\t          case \"arraybuffer\":\n\t            reader.readAsArrayBuffer(blob);\n\t            break;\n\t          case \"text\":\n\t            reader.readAsText(blob);\n\t            break;\n\t        }\n\t      });\n\t    }\n\t  };\n\t}\n\n/***/ },\n\n/***/ 79:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n\n/***/ 83:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\t\n\t// Checks whether an audio format is supported.\n\texports.canPlay = canPlay;\n\texports.unmuteAudio = unmuteAudio;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar readBlob = _interopRequire(__webpack_require__(77));\n\t\n\tvar defaultAudioContext = _interopRequire(__webpack_require__(120));\n\t\n\tvar dummyAudioTag = document.createElement(\"audio\");\n\tfunction canPlay(type) {\n\t  return dummyAudioTag.canPlayType(type) === \"probably\";\n\t}\n\t\n\t// The sampling master is a wrapper class around Web Audio API\n\t// that takes care of:\n\t//\n\t// - Decoding audio from an ArrayBuffer or Blob (resulting in a \"Sample\").\n\t// - Playing the `Sample` and managing its lifecycle.\n\t\n\tvar SamplingMaster = exports.SamplingMaster = (function () {\n\t  function SamplingMaster(audioContext) {\n\t    _classCallCheck(this, SamplingMaster);\n\t\n\t    this._audioContext = audioContext || defaultAudioContext;\n\t    this._samples = [];\n\t    this._instances = new Set();\n\t  }\n\t\n\t  _createClass(SamplingMaster, {\n\t    unmute: {\n\t\n\t      // Connects a dummy node to the audio, thereby unmuting the audio system on\n\t      // iOS devices (which keeps the audio muted until a user interacts with the\n\t      // page).\n\t\n\t      value: function unmute() {\n\t        unmuteAudio(this._audioContext);\n\t      }\n\t    },\n\t    audioContext: {\n\t\n\t      // The underlying AudioContext.\n\t\n\t      get: function () {\n\t        return this._audioContext;\n\t      }\n\t    },\n\t    destroy: {\n\t\n\t      // Destroys this SamplingMaster, make it unusable.\n\t\n\t      value: function destroy() {\n\t        if (this._destroyed) {\n\t          return;\n\t        }this._destroyed = true;\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t          for (var _iterator = this._samples[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var sample = _step.value;\n\t            sample.destroy();\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError = true;\n\t          _iteratorError = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t              _iterator[\"return\"]();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError) {\n\t              throw _iteratorError;\n\t            }\n\t          }\n\t        }\n\t\n\t        var _iteratorNormalCompletion2 = true;\n\t        var _didIteratorError2 = false;\n\t        var _iteratorError2 = undefined;\n\t\n\t        try {\n\t          for (var _iterator2 = this._instances[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var instance = _step2.value;\n\t            instance.destroy();\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError2 = true;\n\t          _iteratorError2 = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"]) {\n\t              _iterator2[\"return\"]();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError2) {\n\t              throw _iteratorError2;\n\t            }\n\t          }\n\t        }\n\t\n\t        this._samples = null;\n\t        this._instances = null;\n\t      }\n\t    },\n\t    sample: {\n\t\n\t      // Creates a `Sample` from a Blob or an ArrayBuffer.\n\t\n\t      value: function sample(blobOrArrayBuffer) {\n\t        var _this = this;\n\t\n\t        return this._coerceToArrayBuffer(blobOrArrayBuffer).then(function (arrayBuffer) {\n\t          return _this._decodeAudio(arrayBuffer);\n\t        }).then(function (audioBuffer) {\n\t          if (_this._destroyed) throw new Error(\"SamplingMaster already destroyed!\");\n\t          var sample = new Sample(_this, audioBuffer);\n\t          _this._samples.push(sample);\n\t          return sample;\n\t        });\n\t      }\n\t    },\n\t    _coerceToArrayBuffer: {\n\t      value: function _coerceToArrayBuffer(blobOrArrayBuffer) {\n\t        if (blobOrArrayBuffer instanceof ArrayBuffer) {\n\t          return Promise.resolve(blobOrArrayBuffer);\n\t        } else {\n\t          return readBlob(blobOrArrayBuffer).as(\"arraybuffer\");\n\t        }\n\t      }\n\t    },\n\t    _decodeAudio: {\n\t      value: function _decodeAudio(arrayBuffer) {\n\t        var _this = this;\n\t\n\t        return new Promise(function (resolve, reject) {\n\t          _this.audioContext.decodeAudioData(arrayBuffer, function decodeAudioDataSuccess(audioBuffer) {\n\t            resolve(audioBuffer);\n\t          }, function decodeAudioDataFailure(e) {\n\t            reject(\"Unable to decode audio: \" + e);\n\t          });\n\t        });\n\t      }\n\t    },\n\t    _startPlaying: {\n\t      value: function _startPlaying(instance) {\n\t        this._instances.add(instance);\n\t      }\n\t    },\n\t    _stoppedPlaying: {\n\t      value: function _stoppedPlaying(instance) {\n\t        this._instances[\"delete\"](instance);\n\t      }\n\t    }\n\t  });\n\t\n\t  return SamplingMaster;\n\t})();\n\t\n\t// The Sample is created by and belongs to the `SamplingMaster`.\n\t//\n\t// You don't invoke this constructor directly; it is invoked by\n\t// `SamplingMaster#create`.\n\t\n\tvar Sample = (function () {\n\t  function Sample(samplingMaster, audioBuffer) {\n\t    _classCallCheck(this, Sample);\n\t\n\t    this._master = samplingMaster;\n\t    this._buffer = audioBuffer;\n\t  }\n\t\n\t  _createClass(Sample, {\n\t    play: {\n\t\n\t      // Plays the sample and returns the new PlayInstance.\n\t\n\t      value: function play(delay, node) {\n\t        return new PlayInstance(this._master, this._buffer, delay, node);\n\t      }\n\t    },\n\t    destroy: {\n\t\n\t      // Destroys this sample, thereby making it unusable.\n\t\n\t      value: function destroy() {\n\t        this._master = null;\n\t        this._buffer = null;\n\t      }\n\t    }\n\t  });\n\t\n\t  return Sample;\n\t})();\n\t\n\t// When a `Sample` is played, a PlayInstance is created.\n\t// A PlayInstance may not be reused; after the sound finishes playing,\n\t// you have to invoke `Sample#play` again.\n\t//\n\t// You don't invoke this constructor directly; it is invoked by `Sample#play`.\n\t\n\tvar PlayInstance = (function () {\n\t  function PlayInstance(samplingMaster, buffer, delay, node) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, PlayInstance);\n\t\n\t    delay = delay || 0;\n\t    this._master = samplingMaster;\n\t    var context = samplingMaster.audioContext;\n\t    var source = context.createBufferSource();\n\t    source.buffer = buffer;\n\t    source.onended = function () {\n\t      return _this.stop();\n\t    };\n\t    var gain = context.createGain();\n\t    source.connect(gain);\n\t    gain.connect(node || context.destination);\n\t    this._source = source;\n\t    this._gain = gain;\n\t    source.start(!delay ? 0 : Math.max(0, context.currentTime + delay));\n\t    this._master._startPlaying(this);\n\t  }\n\t\n\t  _createClass(PlayInstance, {\n\t    stop: {\n\t\n\t      // Stops the sample and disconnects the underlying Web Audio nodes.\n\t\n\t      value: function stop() {\n\t        if (!this._source) {\n\t          return;\n\t        }this._source.stop(0);\n\t        this._source.disconnect();\n\t        this._gain.disconnect();\n\t        this._source = null;\n\t        this._gain = null;\n\t        this._master._stoppedPlaying(this);\n\t        if (this.onstop) this.onstop();\n\t      }\n\t    },\n\t    bad: {\n\t\n\t      // Makes this PlayInstance sound off-pitch, as a result of badly hitting\n\t      // a note.\n\t\n\t      value: function bad() {\n\t        if (!this._source) {\n\t          return;\n\t        }this._source.playbackRate.value = Math.random() < 0.5 ? Math.pow(2, 1 / 12) : Math.pow(2, -1 / 12);\n\t      }\n\t    },\n\t    destroy: {\n\t\n\t      // Destroys this PlayInstance.\n\t\n\t      value: function destroy() {\n\t        this.stop();\n\t      }\n\t    }\n\t  });\n\t\n\t  return PlayInstance;\n\t})();\n\t\n\texports[\"default\"] = SamplingMaster;\n\t\n\tfunction unmuteAudio(ctx) {\n\t  var gain = ctx.createGain();\n\t  gain.connect(ctx.destination);\n\t  gain.disconnect();\n\t}\n\n/***/ },\n\n/***/ 85:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = match\n\t\n\tfunction match(text) {\n\t  var matched = false\n\t  return {\n\t    when: function(pattern, callback) {\n\t      if (matched) return this\n\t      var match = text.match(pattern)\n\t      if (match) {\n\t        matched = true\n\t        callback(match)\n\t      }\n\t      return this\n\t    },\n\t    else: function(callback) {\n\t      if (matched) return this\n\t      callback()\n\t    }\n\t  }\n\t}\n\t\n\n\n/***/ },\n\n/***/ 114:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * `BMSChart` holds information about a particular BMS notechart.\n\t *\n\t * @module bms/chart\n\t */\n\t\n\tvar BMSHeaders = __webpack_require__(115)\n\tvar BMSObjects = __webpack_require__(116)\n\tvar TimeSignatures = __webpack_require__(118)\n\t\n\tmodule.exports = BMSChart\n\t\n\t/**\n\t * Generates an empty `BMSChart`.\n\t *\n\t * @class BMSChart\n\t * @constructor\n\t */\n\tfunction BMSChart() {\n\t  this.headers = new BMSHeaders()\n\t  this.objects = new BMSObjects()\n\t  this.timeSignatures = new TimeSignatures()\n\t}\n\t\n\t/**\n\t * Converts measure+fraction into beat.\n\t *\n\t * @method measureToBeat\n\t * @param {Number} measure   Measure number starting from 0\n\t * @param {Number} fraction  Fraction inside the measure (0 to 1)\n\t * @return {Number} The beat number starting from 0\n\t */\n\tBMSChart.prototype.measureToBeat = function(measure, fraction) {\n\t  return this.timeSignatures.measureToBeat(measure, fraction)\n\t}\n\t\n\n\n/***/ },\n\n/***/ 115:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * @module bms/headers\n\t */\n\tmodule.exports = BMSHeaders\n\t\n\t/**\n\t * @class BMSHeaders\n\t * @constructor\n\t */\n\tfunction BMSHeaders() {\n\t  this._data = { }\n\t  this._dataAll = { }\n\t}\n\t\n\t/**\n\t * Invokes a function at each header.\n\t *\n\t * @method each\n\t * @param  {Function} callback function to be invoked\n\t * @return {BMSHeaders} self\n\t */\n\tBMSHeaders.prototype.each = function(callback) {\n\t  for (var i in this._data) {\n\t    callback(i, this._data[i])\n\t  }\n\t}\n\t\n\t/**\n\t * Retrieves the header.\n\t *\n\t * @method get\n\t * @param  {String} name The header name (case-insensitive)\n\t * @return {String} The value of specified header\n\t */\n\tBMSHeaders.prototype.get = function(name) {\n\t  return this._data[name.toLowerCase()]\n\t}\n\t\n\t/**\n\t * Retrieves all headers (when header is specified multiple times).\n\t *\n\t * @method get\n\t * @param  {String} name The header name (case-insensitive)\n\t * @return {String[]} The values of specified header\n\t */\n\tBMSHeaders.prototype.getAll = function(name) {\n\t  return this._dataAll[name.toLowerCase()]\n\t}\n\t\n\t/**\n\t * Sets the header.\n\t *\n\t * @method set\n\t * @param  {String} name The header name (case-insensitive)\n\t * @param  {String} value The value to set\n\t */\n\tBMSHeaders.prototype.set = function(name, value) {\n\t  var key = name.toLowerCase()\n\t  this._data[key] = value\n\t  ;(this._dataAll[key] || (this._dataAll[key] = [])).push(value)\n\t}\n\t\n\n\n/***/ },\n\n/***/ 116:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * @module bms/objects\n\t */\n\tmodule.exports = BMSObjects\n\t\n\t/**\n\t * Holds a collection of objects inside a BMS notechart.\n\t *\n\t * @class BMSObjects\n\t * @constructor\n\t */\n\tfunction BMSObjects() {\n\t  this._objects = []\n\t}\n\t\n\t/**\n\t * Adds a new object to the collection. If an object already exists on the\n\t * same channel and position, the object is replaced (except for autokeysound\n\t * tracks).\n\t *\n\t * @method add\n\t * @param {BMSObject} object\n\t */\n\tBMSObjects.prototype.add = function(object) {\n\t  if (object.channel !== '01') {\n\t    for (var i = 0; i < this._objects.length; i ++) {\n\t      var test = this._objects[i]\n\t      if (test.channel === object.channel &&\n\t          test.measure === object.measure &&\n\t          test.fraction === object.fraction) {\n\t        this._objects[i] = object\n\t        return\n\t      }\n\t    }\n\t  }\n\t  this._objects.push(object)\n\t}\n\t\n\t/**\n\t * Returns a list of all objects.\n\t *\n\t * @method all\n\t * @return {BMSObject[]}\n\t */\n\tBMSObjects.prototype.all = function() {\n\t  return this._objects.slice()\n\t}\n\t\n\t/**\n\t * Returns a sorted list of all objects.\n\t *\n\t * @method all\n\t * @return {BMSObject[]}\n\t */\n\tBMSObjects.prototype.allSorted = function() {\n\t  var list = this.all()\n\t  list.sort(function(a, b) {\n\t    return (a.measure + a.fraction) - (b.measure + b.fraction)\n\t  })\n\t  return list\n\t}\n\t\n\t\n\t/**\n\t * @class BMSObject\n\t */\n\t/**\n\t * The raw two-character BMS channel of this object.\n\t *\n\t * @property channel\n\t * @type String\n\t */\n\t/**\n\t * The measure number, starting at 0 (corresponds to `#000`)\n\t *\n\t * @property measure\n\t * @type Number\n\t */\n\t/**\n\t * The fractional position inside the measure, ranging from 0 (inclusive)\n\t * to 1 (exclusive). 0 means that the object is at the start of the measure,\n\t * where 1 means that the object is at the end of the measure.\n\t *\n\t * @property fraction\n\t * @type Number\n\t */\n\t/**\n\t * The raw value of the BMS object — a two-character string.\n\t *\n\t * @property value\n\t * @type String\n\t */\n\n\n/***/ },\n\n/***/ 117:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar Segment = __webpack_require__(149)\n\t\n\t/**\n\t * Speedcore is a library to help compute the speed and position\n\t * of linear motion. A Speedcore is constructed from an array of Segments.\n\t *\n\t * @module speedcore\n\t */\n\tmodule.exports = Speedcore\n\t\n\t/**\n\t * Construct a new `Speedcore` from segments\n\t *\n\t * @class Speedcore\n\t * @constructor\n\t * @param {Segment[]} segments  An array of segments.\n\t */\n\tfunction Speedcore(segments) {\n\t  this._segments = segments.map(Segment)\n\t}\n\t\n\tvar T = function(segment) { return segment.t }\n\tvar X = function(segment) { return segment.x }\n\tSpeedcore.prototype._reached = function(index, typeFn, position) {\n\t  if (index >= this._segments.length) return false\n\t  var segment = this._segments[index]\n\t  var target  = typeFn(segment)\n\t  return segment.inclusive ? position >= target : position > target\n\t}\n\t\n\tSpeedcore.prototype._segmentAt = function(typeFn, position) {\n\t  for (var i = 0; i < this._segments.length; i ++) {\n\t    if (!this._reached(i + 1, typeFn, position)) return this._segments[i]\n\t  }\n\t}\n\t\n\tSpeedcore.prototype.segmentAtX = function(x) {\n\t  return this._segmentAt(X, x)\n\t}\n\t\n\tSpeedcore.prototype.segmentAtT = function(t) {\n\t  return this._segmentAt(T, t)\n\t}\n\t\n\tSpeedcore.prototype.t = function(x) {\n\t  var segment = this.segmentAtX(x)\n\t  return segment.t + (x - segment.x) / (segment.dx || 1)\n\t}\n\t\n\tSpeedcore.prototype.x = function(t) {\n\t  var segment = this.segmentAtT(t)\n\t  return segment.x + (t - segment.t) * segment.dx\n\t}\n\t\n\n\n/***/ },\n\n/***/ 118:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * @module time-signatures\n\t */\n\tmodule.exports = TimeSignatures\n\t\n\t/**\n\t * @class TimeSignatures\n\t * @constructor\n\t */\n\tfunction TimeSignatures() {\n\t  this._values = { }\n\t}\n\t\n\t/**\n\t * @method set\n\t * @param {Number} measure  The measure number\n\t * @param {Number} value    The time signature value. 1 represents 4/4, and\n\t *                          0.75 represents 3/4. You get the idea.\n\t */\n\tTimeSignatures.prototype.set = function(measure, value) {\n\t  this._values[measure] = value\n\t}\n\t\n\t/**\n\t * @method get\n\t * @param {Number} measure\n\t * @return {Number}\n\t */\n\tTimeSignatures.prototype.get = function(measure) {\n\t  return this._values[measure] || 1\n\t}\n\t\n\t/**\n\t * @method getBeats\n\t * @param {Number} measure\n\t * @return {Number}\n\t */\n\tTimeSignatures.prototype.getBeats = function(measure) {\n\t  return this.get(measure) * 4\n\t}\n\t\n\t/**\n\t * @method measureToBeat\n\t * @param {Number} measure\n\t * @param {Number} fraction\n\t */\n\tTimeSignatures.prototype.measureToBeat = function(measure, fraction) {\n\t  var sum = 0\n\t  for (var i = 0; i < measure; i ++) sum += this.getBeats(i)\n\t  return sum + this.getBeats(measure) * fraction\n\t}\n\t\n\n\n/***/ },\n\n/***/ 119:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t\n\tvar base64 = __webpack_require__(249)\n\tvar ieee754 = __webpack_require__(250)\n\tvar isArray = __webpack_require__(251)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\tvar kMaxLength = 0x3fffffff\n\tvar rootParent = {}\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Note:\n\t *\n\t * - Implementation must support adding new properties to `Uint8Array` instances.\n\t *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n\t *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *    incorrect length in some situations.\n\t *\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n\t * get the Object implementation, which is slower but will work correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = (function () {\n\t  try {\n\t    var buf = new ArrayBuffer(0)\n\t    var arr = new Uint8Array(buf)\n\t    arr.foo = function () { return 42 }\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t})()\n\t\n\t/**\n\t * Class: Buffer\n\t * =============\n\t *\n\t * The Buffer constructor returns instances of `Uint8Array` that are augmented\n\t * with function properties for all the node `Buffer` API functions. We use\n\t * `Uint8Array` so that square bracket notation works as expected -- it returns\n\t * a single octet.\n\t *\n\t * By augmenting the instances, we can avoid modifying the `Uint8Array`\n\t * prototype.\n\t */\n\tfunction Buffer (arg) {\n\t  if (!(this instanceof Buffer)) {\n\t    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n\t    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n\t    return new Buffer(arg)\n\t  }\n\t\n\t  this.length = 0\n\t  this.parent = undefined\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    return fromNumber(this, arg)\n\t  }\n\t\n\t  // Slightly less common case.\n\t  if (typeof arg === 'string') {\n\t    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n\t  }\n\t\n\t  // Unusual.\n\t  return fromObject(this, arg)\n\t}\n\t\n\tfunction fromNumber (that, length) {\n\t  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < length; i++) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\t\n\t  // Assumption: byteLength() return value is always < kMaxLength.\n\t  var length = byteLength(string, encoding) | 0\n\t  that = allocate(that, length)\n\t\n\t  that.write(string, encoding)\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, object) {\n\t  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\t\n\t  if (isArray(object)) return fromArray(that, object)\n\t\n\t  if (object == null) {\n\t    throw new TypeError('must start with number, buffer, array or string')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && object.buffer instanceof ArrayBuffer) {\n\t    return fromTypedArray(that, object)\n\t  }\n\t\n\t  if (object.length) return fromArrayLike(that, object)\n\t\n\t  return fromJsonObject(that, object)\n\t}\n\t\n\tfunction fromBuffer (that, buffer) {\n\t  var length = checked(buffer.length) | 0\n\t  that = allocate(that, length)\n\t  buffer.copy(that, 0, 0, length)\n\t  return that\n\t}\n\t\n\tfunction fromArray (that, array) {\n\t  var length = checked(array.length) | 0\n\t  that = allocate(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\t// Duplicate of fromArray() to keep fromArray() monomorphic.\n\tfunction fromTypedArray (that, array) {\n\t  var length = checked(array.length) | 0\n\t  that = allocate(that, length)\n\t  // Truncating the elements is probably not what people expect from typed\n\t  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n\t  // of the old Buffer constructor.\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = checked(array.length) | 0\n\t  that = allocate(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\t// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n\t// Returns a zero-length buffer for inputs that don't conform to the spec.\n\tfunction fromJsonObject (that, object) {\n\t  var array\n\t  var length = 0\n\t\n\t  if (object.type === 'Buffer' && isArray(object.data)) {\n\t    array = object.data\n\t    length = checked(array.length) | 0\n\t  }\n\t  that = allocate(that, length)\n\t\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction allocate (that, length) {\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = Buffer._augment(new Uint8Array(length))\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that.length = length\n\t    that._isBuffer = true\n\t  }\n\t\n\t  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n\t  if (fromPool) that.parent = rootParent\n\t\n\t  return that\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength.toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (subject, encoding) {\n\t  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\t\n\t  var buf = new Buffer(subject, encoding)\n\t  delete buf.parent\n\t  return buf\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  var i = 0\n\t  var len = Math.min(x, y)\n\t  while (i < len) {\n\t    if (a[i] !== b[i]) break\n\t\n\t    ++i\n\t  }\n\t\n\t  if (i !== len) {\n\t    x = a[i]\n\t    y = b[i]\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'raw':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\t\n\t  if (list.length === 0) {\n\t    return new Buffer(0)\n\t  } else if (list.length === 1) {\n\t    return list[0]\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; i++) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buf = new Buffer(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; i++) {\n\t    var item = list[i]\n\t    item.copy(buf, pos)\n\t    pos += item.length\n\t  }\n\t  return buf\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (typeof string !== 'string') string = String(string)\n\t\n\t  if (string.length === 0) return 0\n\t\n\t  switch (encoding || 'utf8') {\n\t    case 'ascii':\n\t    case 'binary':\n\t    case 'raw':\n\t      return string.length\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return string.length * 2\n\t    case 'hex':\n\t      return string.length >>> 1\n\t    case 'utf8':\n\t    case 'utf-8':\n\t      return utf8ToBytes(string).length\n\t    case 'base64':\n\t      return base64ToBytes(string).length\n\t    default:\n\t      return string.length\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\t// pre-set for values that may exist in the future\n\tBuffer.prototype.length = undefined\n\tBuffer.prototype.parent = undefined\n\t\n\t// toString(encoding, start=0, end=buffer.length)\n\tBuffer.prototype.toString = function toString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  start = start | 0\n\t  end = end === undefined || end === Infinity ? this.length : end | 0\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t  if (start < 0) start = 0\n\t  if (end > this.length) end = this.length\n\t  if (end <= start) return ''\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'binary':\n\t        return binarySlice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return 0\n\t  return Buffer.compare(this, b)\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n\t  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n\t  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n\t  byteOffset >>= 0\n\t\n\t  if (this.length === 0) return -1\n\t  if (byteOffset >= this.length) return -1\n\t\n\t  // Negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\t\n\t  if (typeof val === 'string') {\n\t    if (val.length === 0) return -1 // special case: looking for empty string always fails\n\t    return String.prototype.indexOf.call(this, val, byteOffset)\n\t  }\n\t  if (Buffer.isBuffer(val)) {\n\t    return arrayIndexOf(this, val, byteOffset)\n\t  }\n\t  if (typeof val === 'number') {\n\t    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n\t      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n\t    }\n\t    return arrayIndexOf(this, [ val ], byteOffset)\n\t  }\n\t\n\t  function arrayIndexOf (arr, val, byteOffset) {\n\t    var foundIndex = -1\n\t    for (var i = 0; byteOffset + i < arr.length; i++) {\n\t      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n\t      } else {\n\t        foundIndex = -1\n\t      }\n\t    }\n\t    return -1\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\t// `get` will be removed in Node 0.13+\n\tBuffer.prototype.get = function get (offset) {\n\t  console.log('.get() is deprecated. Access using array indexes instead.')\n\t  return this.readUInt8(offset)\n\t}\n\t\n\t// `set` will be removed in Node 0.13+\n\tBuffer.prototype.set = function set (v, offset) {\n\t  console.log('.set() is deprecated. Access using array indexes instead.')\n\t  return this.writeUInt8(v, offset)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; i++) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) throw new Error('Invalid hex string')\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction binaryWrite (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    var swap = encoding\n\t    encoding = offset\n\t    offset = length | 0\n\t    length = swap\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'binary':\n\t        return binaryWrite(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  var res = ''\n\t  var tmp = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; i++) {\n\t    if (buf[i] <= 0x7F) {\n\t      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n\t      tmp = ''\n\t    } else {\n\t      tmp += '%' + buf[i].toString(16)\n\t    }\n\t  }\n\t\n\t  return res + decodeUtf8Char(tmp)\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; i++) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction binarySlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; i++) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; i++) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = Buffer._augment(this.subarray(start, end))\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; i++) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  if (newBuf.length) newBuf.parent = this.parent || this\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('value is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = value\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = value\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = value\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = value\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = value < 0 ? 1 : 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = value < 0 ? 1 : 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = value\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = value\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = value\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (value > max || value < min) throw new RangeError('value is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('index out of range')\n\t  if (offset < 0) throw new RangeError('index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t\n\t  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < len; i++) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    target._set(this.subarray(start, start + len), targetStart)\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// fill(value, start=0, end=buffer.length)\n\tBuffer.prototype.fill = function fill (value, start, end) {\n\t  if (!value) value = 0\n\t  if (!start) start = 0\n\t  if (!end) end = this.length\n\t\n\t  if (end < start) throw new RangeError('end < start')\n\t\n\t  // Fill 0 bytes; we're done\n\t  if (end === start) return\n\t  if (this.length === 0) return\n\t\n\t  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n\t  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\t\n\t  var i\n\t  if (typeof value === 'number') {\n\t    for (i = start; i < end; i++) {\n\t      this[i] = value\n\t    }\n\t  } else {\n\t    var bytes = utf8ToBytes(value.toString())\n\t    var len = bytes.length\n\t    for (i = start; i < end; i++) {\n\t      this[i] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t/**\n\t * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n\t * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n\t */\n\tBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n\t  if (typeof Uint8Array !== 'undefined') {\n\t    if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t      return (new Buffer(this)).buffer\n\t    } else {\n\t      var buf = new Uint8Array(this.length)\n\t      for (var i = 0, len = buf.length; i < len; i += 1) {\n\t        buf[i] = this[i]\n\t      }\n\t      return buf.buffer\n\t    }\n\t  } else {\n\t    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n\t  }\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar BP = Buffer.prototype\n\t\n\t/**\n\t * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n\t */\n\tBuffer._augment = function _augment (arr) {\n\t  arr.constructor = Buffer\n\t  arr._isBuffer = true\n\t\n\t  // save reference to original Uint8Array set method before overwriting\n\t  arr._set = arr.set\n\t\n\t  // deprecated, will be removed in node 0.13+\n\t  arr.get = BP.get\n\t  arr.set = BP.set\n\t\n\t  arr.write = BP.write\n\t  arr.toString = BP.toString\n\t  arr.toLocaleString = BP.toString\n\t  arr.toJSON = BP.toJSON\n\t  arr.equals = BP.equals\n\t  arr.compare = BP.compare\n\t  arr.indexOf = BP.indexOf\n\t  arr.copy = BP.copy\n\t  arr.slice = BP.slice\n\t  arr.readUIntLE = BP.readUIntLE\n\t  arr.readUIntBE = BP.readUIntBE\n\t  arr.readUInt8 = BP.readUInt8\n\t  arr.readUInt16LE = BP.readUInt16LE\n\t  arr.readUInt16BE = BP.readUInt16BE\n\t  arr.readUInt32LE = BP.readUInt32LE\n\t  arr.readUInt32BE = BP.readUInt32BE\n\t  arr.readIntLE = BP.readIntLE\n\t  arr.readIntBE = BP.readIntBE\n\t  arr.readInt8 = BP.readInt8\n\t  arr.readInt16LE = BP.readInt16LE\n\t  arr.readInt16BE = BP.readInt16BE\n\t  arr.readInt32LE = BP.readInt32LE\n\t  arr.readInt32BE = BP.readInt32BE\n\t  arr.readFloatLE = BP.readFloatLE\n\t  arr.readFloatBE = BP.readFloatBE\n\t  arr.readDoubleLE = BP.readDoubleLE\n\t  arr.readDoubleBE = BP.readDoubleBE\n\t  arr.writeUInt8 = BP.writeUInt8\n\t  arr.writeUIntLE = BP.writeUIntLE\n\t  arr.writeUIntBE = BP.writeUIntBE\n\t  arr.writeUInt16LE = BP.writeUInt16LE\n\t  arr.writeUInt16BE = BP.writeUInt16BE\n\t  arr.writeUInt32LE = BP.writeUInt32LE\n\t  arr.writeUInt32BE = BP.writeUInt32BE\n\t  arr.writeIntLE = BP.writeIntLE\n\t  arr.writeIntBE = BP.writeIntBE\n\t  arr.writeInt8 = BP.writeInt8\n\t  arr.writeInt16LE = BP.writeInt16LE\n\t  arr.writeInt16BE = BP.writeInt16BE\n\t  arr.writeInt32LE = BP.writeInt32LE\n\t  arr.writeInt32BE = BP.writeInt32BE\n\t  arr.writeFloatLE = BP.writeFloatLE\n\t  arr.writeFloatBE = BP.writeFloatBE\n\t  arr.writeDoubleLE = BP.writeDoubleLE\n\t  arr.writeDoubleBE = BP.writeDoubleBE\n\t  arr.fill = BP.fill\n\t  arr.inspect = BP.inspect\n\t  arr.toArrayBuffer = BP.toArrayBuffer\n\t\n\t  return arr\n\t}\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t  var i = 0\n\t\n\t  for (; i < length; i++) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (leadSurrogate) {\n\t        // 2 leads in a row\n\t        if (codePoint < 0xDC00) {\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          leadSurrogate = codePoint\n\t          continue\n\t        } else {\n\t          // valid surrogate pair\n\t          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n\t          leadSurrogate = null\n\t        }\n\t      } else {\n\t        // no lead yet\n\t\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else {\n\t          // valid lead\n\t          leadSurrogate = codePoint\n\t          continue\n\t        }\n\t      }\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t      leadSurrogate = null\n\t    }\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x200000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; i++) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; i++) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; i++) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction decodeUtf8Char (str) {\n\t  try {\n\t    return decodeURIComponent(str)\n\t  } catch (err) {\n\t    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(119).Buffer))\n\n/***/ },\n\n/***/ 120:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar window = __webpack_require__(134);\n\t\n\tvar Context = window.AudioContext || window.webkitAudioContext;\n\tif (Context) module.exports = new Context;\n\n\n/***/ },\n\n/***/ 128:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Parse byte `size` string.\n\t *\n\t * @param {String} size\n\t * @return {Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(size) {\n\t  if ('number' == typeof size) return convert(size);\n\t  var parts = size.match(/^(\\d+(?:\\.\\d+)?) *(kb|mb|gb|tb)$/)\n\t    , n = parseFloat(parts[1])\n\t    , type = parts[2];\n\t\n\t  var map = {\n\t      kb: 1 << 10\n\t    , mb: 1 << 20\n\t    , gb: 1 << 30\n\t    , tb: ((1 << 30) * 1024)\n\t  };\n\t\n\t  return map[type] * n;\n\t};\n\t\n\t/**\n\t * convert bytes into string.\n\t *\n\t * @param {Number} b - bytes to convert\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\tfunction convert (b) {\n\t  var tb = ((1 << 30) * 1024), gb = 1 << 30, mb = 1 << 20, kb = 1 << 10, abs = Math.abs(b);\n\t  if (abs >= tb) return (Math.round(b / tb * 100) / 100) + 'tb';\n\t  if (abs >= gb) return (Math.round(b / gb * 100) / 100) + 'gb';\n\t  if (abs >= mb) return (Math.round(b / mb * 100) / 100) + 'mb';\n\t  if (abs >= kb) return (Math.round(b / kb * 100) / 100) + 'kb';\n\t  return b + 'b';\n\t}\n\n\n/***/ },\n\n/***/ 134:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {if (typeof window !== \"undefined\") {\n\t    module.exports = window;\n\t} else if (typeof global !== \"undefined\") {\n\t    module.exports = global;\n\t} else {\n\t    module.exports = {};\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 138:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar match = __webpack_require__(85)\n\tvar BMSChart = __webpack_require__(114)\n\t\n\texports.compile = function(text, options) {\n\t\n\t  options = options || { }\n\t\n\t  var chart = new BMSChart()\n\t\n\t  var rng = options.rng || function(max) {\n\t    return 1 + Math.floor(Math.random() * max)\n\t  }\n\t\n\t  var randomStack = []\n\t  var skipStack = [false]\n\t\n\t  var result = {\n\t    headerSentences: 0,\n\t    channelSentences: 0,\n\t    controlSentences: 0,\n\t    skippedSentences: 0,\n\t    malformedSentences: 0,\n\t    chart: chart,\n\t    warnings: []\n\t  }\n\t\n\t  eachLine(text, function(text, lineNumber) {\n\t    var flow = true\n\t    if (text.charAt(0) !== '#') return\n\t    match(text)\n\t    .when(/^#RANDOM\\s+(\\d+)$/i, function(m) {\n\t      result.controlSentences += 1\n\t      randomStack.push(rng(+m[1]))\n\t    })\n\t    .when(/^#IF\\s+(\\d+)$/i, function(m) {\n\t      result.controlSentences += 1\n\t      skipStack.push(randomStack[randomStack.length - 1] !== +m[1])\n\t    })\n\t    .when(/^#ENDIF$/i, function(m) {\n\t      result.controlSentences += 1\n\t      skipStack.pop()\n\t    })\n\t    .else(function() {\n\t      flow = false\n\t    })\n\t    if (flow) return\n\t    var skipped = skipStack[skipStack.length - 1]\n\t    match(text)\n\t    .when(/^#(\\d\\d\\d)02:(\\S*)$/, function(m) {\n\t      result.channelSentences += 1\n\t      if (!skipped) chart.timeSignatures.set(+m[1], +m[2])\n\t    })\n\t    .when(/^#(\\d\\d\\d)(\\S\\S):(\\S*)$/, function(m) {\n\t      result.channelSentences += 1\n\t      if (!skipped) handleChannelSentence(+m[1], m[2], m[3], lineNumber)\n\t    })\n\t    .when(/^#(\\w+)(?:\\s+(\\S.*))?$/, function(m) {\n\t      result.headerSentences += 1\n\t      if (!skipped) chart.headers.set(m[1], m[2])\n\t    })\n\t    .else(function() {\n\t      warn(lineNumber, 'Invalid command')\n\t    })\n\t  })\n\t\n\t  return result\n\t\n\t  function handleChannelSentence(measure, channel, string, lineNumber) {\n\t    var items = Math.floor(string.length / 2)\n\t    if (items === 0) return\n\t    for (var i = 0; i < items; i ++) {\n\t      var value = string.substr(i * 2, 2)\n\t      var fraction = i / items\n\t      if (value === '00') continue\n\t      chart.objects.add({\n\t        measure: measure, \n\t        fraction: fraction,\n\t        value: value,\n\t        channel: channel,\n\t        lineNumber: lineNumber,\n\t      })\n\t    }\n\t  }\n\t\n\t  function warn(lineNumber, message) {\n\t    result.warnings.push({\n\t      lineNumber: lineNumber,\n\t      message: message,\n\t    })\n\t  }\n\t\n\t}\n\t\n\tfunction eachLine(text, callback) {\n\t  text.split(/\\r\\n|\\r|\\n/)\n\t      .map(function(line) { return line.trim() })\n\t      .forEach(function(line, index) {\n\t    callback(line, index + 1)\n\t  })\n\t}\n\t\n\n\n/***/ },\n\n/***/ 139:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar utf8  = __webpack_require__(144),\n\t  unicode = __webpack_require__(143),\n\t  mbcs    = __webpack_require__(141),\n\t  sbcs    = __webpack_require__(142),\n\t  iso2022 = __webpack_require__(140);\n\t\n\tvar self = this;\n\t\n\tvar recognisers = [\n\t  new utf8,\n\t  new unicode.UTF_16BE,\n\t  new unicode.UTF_16LE,\n\t  new mbcs.sjis,\n\t  new mbcs.euc_kr\n\t];\n\t\n\tmodule.exports.detect = function(buffer) {\n\t\n\t  // Tally up the byte occurence statistics.\n\t  var fByteStats = [];\n\t  for (var i = 0; i < 256; i++)\n\t    fByteStats[i] = 0;\n\t\n\t  for (var i = buffer.length - 1; i >= 0; i--)\n\t    fByteStats[buffer[i] & 0x00ff]++;\n\t\n\t  var fC1Bytes = false;\n\t  for (var i = 0x80; i <= 0x9F; i += 1) {\n\t    if (fByteStats[i] != 0) {\n\t      fC1Bytes = true;\n\t      break;\n\t    }\n\t  }\n\t\n\t  var context = {\n\t    fByteStats:  fByteStats,\n\t    fC1Bytes:    fC1Bytes,\n\t    fRawInput:   buffer,\n\t    fRawLength:  buffer.length,\n\t    fInputBytes: buffer,\n\t    fInputLen:   buffer.length\n\t  };\n\t\n\t  var match = recognisers.map(function(rec) {\n\t    return rec.match(context);\n\t  }).filter(function(match) {\n\t    return !!match;\n\t  }).sort(function(a, b) {\n\t    return a.confidence - b.confidence;\n\t  }).pop();\n\t\n\t  return match ? match.name : null;\n\t};\n\n\n/***/ },\n\n/***/ 140:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar util = __webpack_require__(40),\n\t  Match = __webpack_require__ (31);\n\t\n\t\n\t/**\n\t * This is a superclass for the individual detectors for\n\t * each of the detectable members of the ISO 2022 family\n\t * of encodings.\n\t */\n\t\n\tfunction ISO_2022() {}\n\t\n\tISO_2022.prototype.match = function(det) {\n\t\n\t  /**\n\t   * Matching function shared among the 2022 detectors JP, CN and KR\n\t   * Counts up the number of legal an unrecognized escape sequences in\n\t   * the sample of text, and computes a score based on the total number &\n\t   * the proportion that fit the encoding.\n\t   *\n\t   *\n\t   * @param text the byte buffer containing text to analyse\n\t   * @param textLen  the size of the text in the byte.\n\t   * @param escapeSequences the byte escape sequences to test for.\n\t   * @return match quality, in the range of 0-100.\n\t   */\n\t\n\t  var i, j;\n\t  var escN;\n\t  var hits   = 0;\n\t  var misses = 0;\n\t  var shifts = 0;\n\t  var quality;\n\t\n\t  // TODO: refactor me\n\t  var text = det.fInputBytes;\n\t  var textLen = det.fInputLen;\n\t\n\t  scanInput:\n\t    for (i = 0; i < textLen; i++) {\n\t      if (text[i] == 0x1b) {\n\t        checkEscapes:\n\t          for (escN = 0; escN < this.escapeSequences.length; escN++) {\n\t            var seq = this.escapeSequences[escN];\n\t\n\t            if ((textLen - i) < seq.length)\n\t              continue checkEscapes;\n\t\n\t            for (j = 1; j < seq.length; j++)\n\t              if (seq[j] != text[i + j])\n\t                continue checkEscapes;\n\t\n\t\n\t            hits++;\n\t            i += seq.length - 1;\n\t            continue scanInput;\n\t          }\n\t\n\t          misses++;\n\t      }\n\t\n\t      // Shift in/out\n\t      if (text[i] == 0x0e || text[i] == 0x0f)\n\t        shifts++;\n\t\n\t    }\n\t\n\t  if (hits == 0)\n\t    return null;\n\t\n\t  //\n\t  // Initial quality is based on relative proportion of recongized vs.\n\t  //   unrecognized escape sequences.\n\t  //   All good:  quality = 100;\n\t  //   half or less good: quality = 0;\n\t  //   linear inbetween.\n\t  quality = (100 * hits - 100 * misses) / (hits + misses);\n\t\n\t  // Back off quality if there were too few escape sequences seen.\n\t  //   Include shifts in this computation, so that KR does not get penalized\n\t  //   for having only a single Escape sequence, but many shifts.\n\t  if (hits + shifts < 5)\n\t    quality -= (5 - (hits + shifts)) * 10;\n\t\n\t  return quality <= 0 ? null : new Match(det, this, quality);\n\t};\n\t\n\tmodule.exports.ISO_2022_JP = function() {\n\t  this.name = function() {\n\t    return 'ISO-2022-JP';\n\t  };\n\t  this.escapeSequences = [\n\t    [ 0x1b, 0x24, 0x28, 0x43 ],   // KS X 1001:1992\n\t    [ 0x1b, 0x24, 0x28, 0x44 ],   // JIS X 212-1990\n\t    [ 0x1b, 0x24, 0x40 ],         // JIS C 6226-1978\n\t    [ 0x1b, 0x24, 0x41 ],         // GB 2312-80\n\t    [ 0x1b, 0x24, 0x42 ],         // JIS X 208-1983\n\t    [ 0x1b, 0x26, 0x40 ],         // JIS X 208 1990, 1997\n\t    [ 0x1b, 0x28, 0x42 ],         // ASCII\n\t    [ 0x1b, 0x28, 0x48 ],         // JIS-Roman\n\t    [ 0x1b, 0x28, 0x49 ],         // Half-width katakana\n\t    [ 0x1b, 0x28, 0x4a ],         // JIS-Roman\n\t    [ 0x1b, 0x2e, 0x41 ],         // ISO 8859-1\n\t    [ 0x1b, 0x2e, 0x46 ]          // ISO 8859-7\n\t  ];\n\t};\n\tutil.inherits(module.exports.ISO_2022_JP, ISO_2022);\n\t\n\t\n\t\n\tmodule.exports.ISO_2022_KR = function() {\n\t  this.name = function() {\n\t    return 'ISO-2022-KR';\n\t  };\n\t  this.escapeSequences = [\n\t    [ 0x1b, 0x24, 0x29, 0x43 ]\n\t  ];\n\t};\n\tutil.inherits(module.exports.ISO_2022_KR, ISO_2022);\n\t\n\t\n\t\n\tmodule.exports.ISO_2022_CN = function() {\n\t  this.name = function() {\n\t    return 'ISO-2022-CN';\n\t  };\n\t  this.escapeSequences = [\n\t    [ 0x1b, 0x24, 0x29, 0x41 ],   // GB 2312-80\n\t    [ 0x1b, 0x24, 0x29, 0x47 ],   // CNS 11643-1992 Plane 1\n\t    [ 0x1b, 0x24, 0x2A, 0x48 ],   // CNS 11643-1992 Plane 2\n\t    [ 0x1b, 0x24, 0x29, 0x45 ],   // ISO-IR-165\n\t    [ 0x1b, 0x24, 0x2B, 0x49 ],   // CNS 11643-1992 Plane 3\n\t    [ 0x1b, 0x24, 0x2B, 0x4A ],   // CNS 11643-1992 Plane 4\n\t    [ 0x1b, 0x24, 0x2B, 0x4B ],   // CNS 11643-1992 Plane 5\n\t    [ 0x1b, 0x24, 0x2B, 0x4C ],   // CNS 11643-1992 Plane 6\n\t    [ 0x1b, 0x24, 0x2B, 0x4D ],   // CNS 11643-1992 Plane 7\n\t    [ 0x1b, 0x4e ],               // SS2\n\t    [ 0x1b, 0x4f ]                // SS3\n\t  ];\n\t};\n\tutil.inherits(module.exports.ISO_2022_CN, ISO_2022);\n\n\n/***/ },\n\n/***/ 141:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar util = __webpack_require__(40),\n\t  Match = __webpack_require__ (31);\n\t\n\t/**\n\t * Binary search implementation (recursive)\n\t */\n\tfunction binarySearch(arr, searchValue) {\n\t  function find(arr, searchValue, left, right) {\n\t    if (right < left)\n\t      return -1;\n\t\n\t    /*\n\t    int mid = mid = (left + right) / 2;\n\t    There is a bug in the above line;\n\t    Joshua Bloch suggests the following replacement:\n\t    */\n\t    var mid = Math.floor((left + right) >>> 1);\n\t    if (searchValue > arr[mid])\n\t      return find(arr, searchValue, mid + 1, right);\n\t\n\t    if (searchValue < arr[mid])\n\t      return find(arr, searchValue, left, mid - 1);\n\t\n\t    return mid;\n\t  };\n\t\n\t  return find(arr, searchValue, 0, arr.length - 1);\n\t};\n\t\n\t// 'Character'  iterated character class.\n\t//    Recognizers for specific mbcs encodings make their 'characters' available\n\t//    by providing a nextChar() function that fills in an instance of iteratedChar\n\t//    with the next char from the input.\n\t//    The returned characters are not converted to Unicode, but remain as the raw\n\t//    bytes (concatenated into an int) from the codepage data.\n\t//\n\t//  For Asian charsets, use the raw input rather than the input that has been\n\t//   stripped of markup.  Detection only considers multi-byte chars, effectively\n\t//   stripping markup anyway, and double byte chars do occur in markup too.\n\t//\n\tfunction IteratedChar() {\n\t\n\t  this.charValue = 0; // 1-4 bytes from the raw input data\n\t  this.index     = 0;\n\t  this.nextIndex = 0;\n\t  this.error     = false;\n\t  this.done      = false;\n\t\n\t  this.reset = function() {\n\t    this.charValue = 0;\n\t    this.index     = -1;\n\t    this.nextIndex = 0;\n\t    this.error     = false;\n\t    this.done      = false;\n\t  };\n\t\n\t  this.nextByte = function(det) {\n\t    if (this.nextIndex >= det.fRawLength) {\n\t      this.done = true;\n\t      return -1;\n\t    }\n\t    var byteValue = det.fRawInput[this.nextIndex++] & 0x00ff;\n\t    return byteValue;\n\t  };\n\t};\n\t\n\t\n\t\n\t/**\n\t * Asian double or multi-byte - charsets.\n\t * Match is determined mostly by the input data adhering to the\n\t * encoding scheme for the charset, and, optionally,\n\t * frequency-of-occurence of characters.\n\t */\n\t\n\tfunction mbcs() {};\n\t\n\t/**\n\t * Test the match of this charset with the input text data\n\t *      which is obtained via the CharsetDetector object.\n\t *\n\t * @param det  The CharsetDetector, which contains the input text\n\t *             to be checked for being in this charset.\n\t * @return     Two values packed into one int  (Damn java, anyhow)\n\t *             bits 0-7:  the match confidence, ranging from 0-100\n\t *             bits 8-15: The match reason, an enum-like value.\n\t */\n\tmbcs.prototype.match = function(det) {\n\t\n\t  var singleByteCharCount = 0,  //TODO Do we really need this?\n\t    doubleByteCharCount = 0,\n\t    commonCharCount     = 0,\n\t    badCharCount        = 0,\n\t    totalCharCount      = 0,\n\t    confidence          = 0;\n\t\n\t  var iter = new IteratedChar();\n\t\n\t  detectBlock: {\n\t    for (iter.reset(); this.nextChar(iter, det);) {\n\t      totalCharCount++;\n\t      if (iter.error) {\n\t        badCharCount++;\n\t      } else {\n\t        var cv = iter.charValue & 0xFFFFFFFF;\n\t\n\t        if (cv <= 0xff) {\n\t          singleByteCharCount++;\n\t        } else {\n\t          doubleByteCharCount++;\n\t          if (this.commonChars != null) {\n\t            // NOTE: This assumes that there are no 4-byte common chars.\n\t            if (binarySearch(this.commonChars, cv) >= 0) {\n\t              commonCharCount++;\n\t            }\n\t          }\n\t        }\n\t      }\n\t      if (badCharCount >= 2 && badCharCount * 5 >= doubleByteCharCount) {\n\t        // console.log('its here!')\n\t        // Bail out early if the byte data is not matching the encoding scheme.\n\t        break detectBlock;\n\t      }\n\t    }\n\t\n\t    if (doubleByteCharCount <= 10 && badCharCount== 0) {\n\t      // Not many multi-byte chars.\n\t      if (doubleByteCharCount == 0 && totalCharCount < 10) {\n\t        // There weren't any multibyte sequences, and there was a low density of non-ASCII single bytes.\n\t        // We don't have enough data to have any confidence.\n\t        // Statistical analysis of single byte non-ASCII charcters would probably help here.\n\t        confidence = 0;\n\t      }\n\t      else {\n\t        //   ASCII or ISO file?  It's probably not our encoding,\n\t        //   but is not incompatible with our encoding, so don't give it a zero.\n\t        confidence = 10;\n\t      }\n\t      break detectBlock;\n\t    }\n\t\n\t    //\n\t    //  No match if there are too many characters that don't fit the encoding scheme.\n\t    //    (should we have zero tolerance for these?)\n\t    //\n\t    if (doubleByteCharCount < 20 * badCharCount) {\n\t      confidence = 0;\n\t      break detectBlock;\n\t    }\n\t\n\t    if (this.commonChars == null) {\n\t      // We have no statistics on frequently occuring characters.\n\t      //  Assess confidence purely on having a reasonable number of\n\t      //  multi-byte characters (the more the better\n\t      confidence = 30 + doubleByteCharCount - 20 * badCharCount;\n\t      if (confidence > 100) {\n\t        confidence = 100;\n\t      }\n\t    } else {\n\t      //\n\t      // Frequency of occurence statistics exist.\n\t      //\n\t      var maxVal = Math.log(parseFloat(doubleByteCharCount) / 4);\n\t      var scaleFactor = 90.0 / maxVal;\n\t      confidence = Math.floor(Math.log(commonCharCount + 1) * scaleFactor + 10);\n\t      confidence = Math.min(confidence, 100);\n\t    }\n\t  }   // end of detectBlock:\n\t\n\t  return confidence == 0 ? null : new Match(det, this, confidence);\n\t};\n\t\n\t/**\n\t * Get the next character (however many bytes it is) from the input data\n\t *    Subclasses for specific charset encodings must implement this function\n\t *    to get characters according to the rules of their encoding scheme.\n\t *\n\t *  This function is not a method of class iteratedChar only because\n\t *   that would require a lot of extra derived classes, which is awkward.\n\t * @param it  The iteratedChar 'struct' into which the returned char is placed.\n\t * @param det The charset detector, which is needed to get at the input byte data\n\t *            being iterated over.\n\t * @return    True if a character was returned, false at end of input.\n\t */\n\t\n\tmbcs.prototype.nextChar = function(iter, det) {};\n\t\n\t\n\t\n\t/**\n\t * Shift-JIS charset recognizer.\n\t */\n\tmodule.exports.sjis = function() {\n\t  this.name = function() {\n\t    return 'Shift-JIS';\n\t  };\n\t  this.language = function() {\n\t    return 'ja';\n\t  };\n\t\n\t  // TODO:  This set of data comes from the character frequency-\n\t  //        of-occurence analysis tool.  The data needs to be moved\n\t  //        into a resource and loaded from there.\n\t  this.commonChars = [\n\t    0x8140, 0x8141, 0x8142, 0x8145, 0x815b, 0x8169, 0x816a, 0x8175, 0x8176, 0x82a0,\n\t    0x82a2, 0x82a4, 0x82a9, 0x82aa, 0x82ab, 0x82ad, 0x82af, 0x82b1, 0x82b3, 0x82b5,\n\t    0x82b7, 0x82bd, 0x82be, 0x82c1, 0x82c4, 0x82c5, 0x82c6, 0x82c8, 0x82c9, 0x82cc,\n\t    0x82cd, 0x82dc, 0x82e0, 0x82e7, 0x82e8, 0x82e9, 0x82ea, 0x82f0, 0x82f1, 0x8341,\n\t    0x8343, 0x834e, 0x834f, 0x8358, 0x835e, 0x8362, 0x8367, 0x8375, 0x8376, 0x8389,\n\t    0x838a, 0x838b, 0x838d, 0x8393, 0x8e96, 0x93fa, 0x95aa\n\t  ];\n\t\n\t  this.nextChar = function(iter, det) {\n\t    iter.index = iter.nextIndex;\n\t    iter.error = false;\n\t\n\t    var firstByte;\n\t    firstByte = iter.charValue = iter.nextByte(det);\n\t    if (firstByte < 0)\n\t      return false;\n\t\n\t    if (firstByte <= 0x7f || (firstByte > 0xa0 && firstByte <= 0xdf))\n\t      return true;\n\t\n\t    var secondByte = iter.nextByte(det);\n\t    if (secondByte < 0)\n\t      return false;\n\t\n\t    iter.charValue = (firstByte << 8) | secondByte;\n\t    if (! ((secondByte >= 0x40 && secondByte <= 0x7f) || (secondByte >= 0x80 && secondByte <= 0xff))) {\n\t      // Illegal second byte value.\n\t      iter.error = true;\n\t    }\n\t    return true;\n\t  };\n\t};\n\tutil.inherits(module.exports.sjis, mbcs);\n\t\n\t\n\t\n\t/**\n\t *   Big5 charset recognizer.\n\t */\n\tmodule.exports.big5 = function() {\n\t  this.name = function() {\n\t    return 'Big5';\n\t  };\n\t  this.language = function() {\n\t    return 'zh';\n\t  };\n\t  // TODO:  This set of data comes from the character frequency-\n\t  //        of-occurence analysis tool.  The data needs to be moved\n\t  //        into a resource and loaded from there.\n\t  this.commonChars = [\n\t    0xa140, 0xa141, 0xa142, 0xa143, 0xa147, 0xa149, 0xa175, 0xa176, 0xa440, 0xa446,\n\t    0xa447, 0xa448, 0xa451, 0xa454, 0xa457, 0xa464, 0xa46a, 0xa46c, 0xa477, 0xa4a3,\n\t    0xa4a4, 0xa4a7, 0xa4c1, 0xa4ce, 0xa4d1, 0xa4df, 0xa4e8, 0xa4fd, 0xa540, 0xa548,\n\t    0xa558, 0xa569, 0xa5cd, 0xa5e7, 0xa657, 0xa661, 0xa662, 0xa668, 0xa670, 0xa6a8,\n\t    0xa6b3, 0xa6b9, 0xa6d3, 0xa6db, 0xa6e6, 0xa6f2, 0xa740, 0xa751, 0xa759, 0xa7da,\n\t    0xa8a3, 0xa8a5, 0xa8ad, 0xa8d1, 0xa8d3, 0xa8e4, 0xa8fc, 0xa9c0, 0xa9d2, 0xa9f3,\n\t    0xaa6b, 0xaaba, 0xaabe, 0xaacc, 0xaafc, 0xac47, 0xac4f, 0xacb0, 0xacd2, 0xad59,\n\t    0xaec9, 0xafe0, 0xb0ea, 0xb16f, 0xb2b3, 0xb2c4, 0xb36f, 0xb44c, 0xb44e, 0xb54c,\n\t    0xb5a5, 0xb5bd, 0xb5d0, 0xb5d8, 0xb671, 0xb7ed, 0xb867, 0xb944, 0xbad8, 0xbb44,\n\t    0xbba1, 0xbdd1, 0xc2c4, 0xc3b9, 0xc440, 0xc45f\n\t  ];\n\t  this.nextChar = function(iter, det) {\n\t    iter.index = iter.nextIndex;\n\t    iter.error = false;\n\t\n\t    var firstByte = iter.charValue = iter.nextByte(det);\n\t\n\t    if (firstByte < 0)\n\t      return false;\n\t\n\t    // single byte character.\n\t    if (firstByte <= 0x7f || firstByte == 0xff)\n\t      return true;\n\t\n\t    var secondByte = iter.nextByte(det);\n\t\n\t    if (secondByte < 0)\n\t      return false;\n\t\n\t    iter.charValue = (iter.charValue << 8) | secondByte;\n\t\n\t    if (secondByte < 0x40 || secondByte == 0x7f || secondByte == 0xff)\n\t      iter.error = true;\n\t\n\t    return true;\n\t  };\n\t};\n\tutil.inherits(module.exports.big5, mbcs);\n\t\n\t\n\t\n\t/**\n\t *  EUC charset recognizers.  One abstract class that provides the common function\n\t *  for getting the next character according to the EUC encoding scheme,\n\t *  and nested derived classes for EUC_KR, EUC_JP, EUC_CN.\n\t *\n\t *  Get the next character value for EUC based encodings.\n\t *  Character 'value' is simply the raw bytes that make up the character\n\t *     packed into an int.\n\t */\n\tfunction eucNextChar(iter, det) {\n\t  iter.index = iter.nextIndex;\n\t  iter.error = false;\n\t  var firstByte  = 0;\n\t  var secondByte = 0;\n\t  var thirdByte  = 0;\n\t  //int fourthByte = 0;\n\t  buildChar: {\n\t    firstByte = iter.charValue = iter.nextByte(det);\n\t    if (firstByte < 0) {\n\t      // Ran off the end of the input data\n\t      iter.done = true;\n\t      break buildChar;\n\t    }\n\t    if (firstByte <= 0x8d) {\n\t      // single byte char\n\t      break buildChar;\n\t    }\n\t    secondByte = iter.nextByte(det);\n\t    iter.charValue = (iter.charValue << 8) | secondByte;\n\t    if (firstByte >= 0xA1 && firstByte <= 0xfe) {\n\t      // Two byte Char\n\t      if (secondByte < 0xa1) {\n\t        iter.error = true;\n\t      }\n\t      break buildChar;\n\t    }\n\t    if (firstByte == 0x8e) {\n\t      // Code Set 2.\n\t      //   In EUC-JP, total char size is 2 bytes, only one byte of actual char value.\n\t      //   In EUC-TW, total char size is 4 bytes, three bytes contribute to char value.\n\t      // We don't know which we've got.\n\t      // Treat it like EUC-JP.  If the data really was EUC-TW, the following two\n\t      //   bytes will look like a well formed 2 byte char.\n\t      if (secondByte < 0xa1) {\n\t        iter.error = true;\n\t      }\n\t      break buildChar;\n\t    }\n\t    if (firstByte == 0x8f) {\n\t      // Code set 3.\n\t      // Three byte total char size, two bytes of actual char value.\n\t      thirdByte = iter.nextByte(det);\n\t      iter.charValue = (iter.charValue << 8) | thirdByte;\n\t      if (thirdByte < 0xa1) {\n\t        iter.error = true;\n\t      }\n\t    }\n\t  }\n\t  return iter.done == false;\n\t};\n\t\n\t\n\t\n\t/**\n\t * The charset recognize for EUC-JP.  A singleton instance of this class\n\t *    is created and kept by the public CharsetDetector class\n\t */\n\tmodule.exports.euc_jp = function() {\n\t  this.name = function() {\n\t    return 'EUC-JP';\n\t  };\n\t  this.language = function() {\n\t    return 'ja';\n\t  };\n\t\n\t  // TODO:  This set of data comes from the character frequency-\n\t  //        of-occurence analysis tool.  The data needs to be moved\n\t  //        into a resource and loaded from there.\n\t  this.commonChars = [\n\t    0xa1a1, 0xa1a2, 0xa1a3, 0xa1a6, 0xa1bc, 0xa1ca, 0xa1cb, 0xa1d6, 0xa1d7, 0xa4a2,\n\t    0xa4a4, 0xa4a6, 0xa4a8, 0xa4aa, 0xa4ab, 0xa4ac, 0xa4ad, 0xa4af, 0xa4b1, 0xa4b3,\n\t    0xa4b5, 0xa4b7, 0xa4b9, 0xa4bb, 0xa4bd, 0xa4bf, 0xa4c0, 0xa4c1, 0xa4c3, 0xa4c4,\n\t    0xa4c6, 0xa4c7, 0xa4c8, 0xa4c9, 0xa4ca, 0xa4cb, 0xa4ce, 0xa4cf, 0xa4d0, 0xa4de,\n\t    0xa4df, 0xa4e1, 0xa4e2, 0xa4e4, 0xa4e8, 0xa4e9, 0xa4ea, 0xa4eb, 0xa4ec, 0xa4ef,\n\t    0xa4f2, 0xa4f3, 0xa5a2, 0xa5a3, 0xa5a4, 0xa5a6, 0xa5a7, 0xa5aa, 0xa5ad, 0xa5af,\n\t    0xa5b0, 0xa5b3, 0xa5b5, 0xa5b7, 0xa5b8, 0xa5b9, 0xa5bf, 0xa5c3, 0xa5c6, 0xa5c7,\n\t    0xa5c8, 0xa5c9, 0xa5cb, 0xa5d0, 0xa5d5, 0xa5d6, 0xa5d7, 0xa5de, 0xa5e0, 0xa5e1,\n\t    0xa5e5, 0xa5e9, 0xa5ea, 0xa5eb, 0xa5ec, 0xa5ed, 0xa5f3, 0xb8a9, 0xb9d4, 0xbaee,\n\t    0xbbc8, 0xbef0, 0xbfb7, 0xc4ea, 0xc6fc, 0xc7bd, 0xcab8, 0xcaf3, 0xcbdc, 0xcdd1\n\t  ];\n\t\n\t  this.nextChar = eucNextChar;\n\t};\n\tutil.inherits(module.exports.euc_jp, mbcs);\n\t\n\t\n\t\n\t/**\n\t * The charset recognize for EUC-KR.  A singleton instance of this class\n\t *    is created and kept by the public CharsetDetector class\n\t */\n\tmodule.exports.euc_kr = function() {\n\t  this.name = function() {\n\t    return 'EUC-KR';\n\t  };\n\t  this.language = function() {\n\t    return 'ko';\n\t  };\n\t\n\t  // TODO:  This set of data comes from the character frequency-\n\t  //        of-occurence analysis tool.  The data needs to be moved\n\t  //        into a resource and loaded from there.\n\t  this.commonChars = [\n\t    0xb0a1, 0xb0b3, 0xb0c5, 0xb0cd, 0xb0d4, 0xb0e6, 0xb0ed, 0xb0f8, 0xb0fa, 0xb0fc,\n\t    0xb1b8, 0xb1b9, 0xb1c7, 0xb1d7, 0xb1e2, 0xb3aa, 0xb3bb, 0xb4c2, 0xb4cf, 0xb4d9,\n\t    0xb4eb, 0xb5a5, 0xb5b5, 0xb5bf, 0xb5c7, 0xb5e9, 0xb6f3, 0xb7af, 0xb7c2, 0xb7ce,\n\t    0xb8a6, 0xb8ae, 0xb8b6, 0xb8b8, 0xb8bb, 0xb8e9, 0xb9ab, 0xb9ae, 0xb9cc, 0xb9ce,\n\t    0xb9fd, 0xbab8, 0xbace, 0xbad0, 0xbaf1, 0xbbe7, 0xbbf3, 0xbbfd, 0xbcad, 0xbcba,\n\t    0xbcd2, 0xbcf6, 0xbdba, 0xbdc0, 0xbdc3, 0xbdc5, 0xbec6, 0xbec8, 0xbedf, 0xbeee,\n\t    0xbef8, 0xbefa, 0xbfa1, 0xbfa9, 0xbfc0, 0xbfe4, 0xbfeb, 0xbfec, 0xbff8, 0xc0a7,\n\t    0xc0af, 0xc0b8, 0xc0ba, 0xc0bb, 0xc0bd, 0xc0c7, 0xc0cc, 0xc0ce, 0xc0cf, 0xc0d6,\n\t    0xc0da, 0xc0e5, 0xc0fb, 0xc0fc, 0xc1a4, 0xc1a6, 0xc1b6, 0xc1d6, 0xc1df, 0xc1f6,\n\t    0xc1f8, 0xc4a1, 0xc5cd, 0xc6ae, 0xc7cf, 0xc7d1, 0xc7d2, 0xc7d8, 0xc7e5, 0xc8ad\n\t  ];\n\t\n\t  this.nextChar = eucNextChar;\n\t};\n\tutil.inherits(module.exports.euc_kr, mbcs);\n\t\n\t\n\t\n\t/**\n\t *   GB-18030 recognizer. Uses simplified Chinese statistics.\n\t */\n\tmodule.exports.gb_18030 = function() {\n\t  this.name = function() {\n\t    return 'GB18030';\n\t  };\n\t  this.language = function() {\n\t    return 'zh';\n\t  };\n\t\n\t  /*\n\t   *  Get the next character value for EUC based encodings.\n\t   *  Character 'value' is simply the raw bytes that make up the character\n\t   *     packed into an int.\n\t   */\n\t  this.nextChar = function(iter, det) {\n\t    iter.index = iter.nextIndex;\n\t    iter.error = false;\n\t    var firstByte  = 0;\n\t    var secondByte = 0;\n\t    var thirdByte  = 0;\n\t    var fourthByte = 0;\n\t    buildChar: {\n\t      firstByte = iter.charValue = iter.nextByte(det);\n\t      if (firstByte < 0) {\n\t        // Ran off the end of the input data\n\t        iter.done = true;\n\t        break buildChar;\n\t      }\n\t      if (firstByte <= 0x80) {\n\t        // single byte char\n\t        break buildChar;\n\t      }\n\t      secondByte = iter.nextByte(det);\n\t      iter.charValue = (iter.charValue << 8) | secondByte;\n\t      if (firstByte >= 0x81 && firstByte <= 0xFE) {\n\t        // Two byte Char\n\t        if ((secondByte >= 0x40 && secondByte <= 0x7E) || (secondByte >=80 && secondByte <= 0xFE)) {\n\t          break buildChar;\n\t        }\n\t        // Four byte char\n\t        if (secondByte >= 0x30 && secondByte <= 0x39) {\n\t          thirdByte = iter.nextByte(det);\n\t          if (thirdByte >= 0x81 && thirdByte <= 0xFE) {\n\t            fourthByte = iter.nextByte(det);\n\t            if (fourthByte >= 0x30 && fourthByte <= 0x39) {\n\t              iter.charValue = (iter.charValue << 16) | (thirdByte << 8) | fourthByte;\n\t              break buildChar;\n\t            }\n\t          }\n\t        }\n\t        iter.error = true;\n\t        break buildChar;\n\t      }\n\t    }\n\t    return iter.done == false;\n\t  };\n\t\n\t  // TODO:  This set of data comes from the character frequency-\n\t  //        of-occurence analysis tool.  The data needs to be moved\n\t  //        into a resource and loaded from there.\n\t  this.commonChars = [\n\t    0xa1a1, 0xa1a2, 0xa1a3, 0xa1a4, 0xa1b0, 0xa1b1, 0xa1f1, 0xa1f3, 0xa3a1, 0xa3ac,\n\t    0xa3ba, 0xb1a8, 0xb1b8, 0xb1be, 0xb2bb, 0xb3c9, 0xb3f6, 0xb4f3, 0xb5bd, 0xb5c4,\n\t    0xb5e3, 0xb6af, 0xb6d4, 0xb6e0, 0xb7a2, 0xb7a8, 0xb7bd, 0xb7d6, 0xb7dd, 0xb8b4,\n\t    0xb8df, 0xb8f6, 0xb9ab, 0xb9c9, 0xb9d8, 0xb9fa, 0xb9fd, 0xbacd, 0xbba7, 0xbbd6,\n\t    0xbbe1, 0xbbfa, 0xbcbc, 0xbcdb, 0xbcfe, 0xbdcc, 0xbecd, 0xbedd, 0xbfb4, 0xbfc6,\n\t    0xbfc9, 0xc0b4, 0xc0ed, 0xc1cb, 0xc2db, 0xc3c7, 0xc4dc, 0xc4ea, 0xc5cc, 0xc6f7,\n\t    0xc7f8, 0xc8ab, 0xc8cb, 0xc8d5, 0xc8e7, 0xc9cf, 0xc9fa, 0xcab1, 0xcab5, 0xcac7,\n\t    0xcad0, 0xcad6, 0xcaf5, 0xcafd, 0xccec, 0xcdf8, 0xceaa, 0xcec4, 0xced2, 0xcee5,\n\t    0xcfb5, 0xcfc2, 0xcfd6, 0xd0c2, 0xd0c5, 0xd0d0, 0xd0d4, 0xd1a7, 0xd2aa, 0xd2b2,\n\t    0xd2b5, 0xd2bb, 0xd2d4, 0xd3c3, 0xd3d0, 0xd3fd, 0xd4c2, 0xd4da, 0xd5e2, 0xd6d0\n\t  ];\n\t};\n\tutil.inherits(module.exports.gb_18030, mbcs);\n\n\n/***/ },\n\n/***/ 142:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar util = __webpack_require__(40),\n\t  Match = __webpack_require__ (31);\n\t\n\t/**\n\t * This class recognizes single-byte encodings. Because the encoding scheme is so\n\t * simple, language statistics are used to do the matching.\n\t */\n\t\n\tfunction NGramParser(theNgramList, theByteMap) {\n\t  var N_GRAM_MASK = 0xFFFFFF;\n\t\n\t  this.byteIndex = 0;\n\t  this.ngram = 0;\n\t\n\t  this.ngramList = theNgramList;\n\t  this.byteMap = theByteMap;\n\t\n\t  this.ngramCount = 0;\n\t  this.hitCount = 0;\n\t\n\t  this.spaceChar;\n\t\n\t  /*\n\t   * Binary search for value in table, which must have exactly 64 entries.\n\t   */\n\t  this.search = function(table, value) {\n\t    var index = 0;\n\t\n\t    if (table[index + 32] <= value) index += 32;\n\t    if (table[index + 16] <= value) index += 16;\n\t    if (table[index + 8]  <= value) index += 8;\n\t    if (table[index + 4]  <= value) index += 4;\n\t    if (table[index + 2]  <= value) index += 2;\n\t    if (table[index + 1]  <= value) index += 1;\n\t    if (table[index]      > value)  index -= 1;\n\t\n\t    if (index < 0 || table[index] != value)\n\t      return -1;\n\t\n\t    return index;\n\t  };\n\t\n\t  this.lookup = function(thisNgram) {\n\t    this.ngramCount += 1;\n\t    if (this.search(this.ngramList, thisNgram) >= 0) {\n\t      this.hitCount += 1;\n\t    }\n\t  };\n\t\n\t  this.addByte = function(b) {\n\t    this.ngram = ((this.ngram << 8) + (b & 0xFF)) & N_GRAM_MASK;\n\t    this.lookup(this.ngram);\n\t  }\n\t\n\t  this.nextByte = function(det) {\n\t    if (this.byteIndex >= det.fInputLen)\n\t      return -1;\n\t\n\t    return det.fInputBytes[this.byteIndex++] & 0xFF;\n\t  }\n\t\n\t  this.parse = function(det, spaceCh) {\n\t    var b, ignoreSpace = false;\n\t    this.spaceChar = spaceCh;\n\t\n\t    while ((b = this.nextByte(det)) >= 0) {\n\t      var mb = this.byteMap[b];\n\t\n\t      // TODO: 0x20 might not be a space in all character sets...\n\t      if (mb != 0) {\n\t        if (!(mb == this.spaceChar && ignoreSpace)) {\n\t          this.addByte(mb);\n\t        }\n\t\n\t        ignoreSpace = (mb == this.spaceChar);\n\t      }\n\t    }\n\t\n\t    // TODO: Is this OK? The buffer could have ended in the middle of a word...\n\t    this.addByte(this.spaceChar);\n\t\n\t    var rawPercent = this.hitCount / this.ngramCount;\n\t\n\t    // TODO - This is a bit of a hack to take care of a case\n\t    // were we were getting a confidence of 135...\n\t    if (rawPercent > 0.33)\n\t      return 98;\n\t\n\t    return Math.floor(rawPercent * 300.0);\n\t  };\n\t};\n\t\n\tfunction NGramsPlusLang(la, ng) {\n\t  this.fLang = la;\n\t  this.fNGrams = ng;\n\t};\n\t\n\tfunction sbcs() {};\n\tsbcs.prototype.spaceChar = 0x20;\n\tsbcs.prototype.ngrams = function() {};\n\tsbcs.prototype.byteMap = function() {};\n\tsbcs.prototype.match = function(det) {\n\t\n\t  var ngrams = this.ngrams();\n\t  var multiple = (Array.isArray(ngrams) && ngrams[0] instanceof NGramsPlusLang);\n\t\n\t  if (!multiple) {\n\t    var parser = new NGramParser(ngrams, this.byteMap());\n\t    var confidence = parser.parse(det, this.spaceChar);\n\t    return confidence <= 0 ? null : new Match(det, this, confidence);\n\t  }\n\t\n\t  var bestConfidenceSoFar = -1;\n\t  var lang = null;\n\t\n\t  for (var i = ngrams.length - 1; i >= 0; i--) {\n\t    var ngl = ngrams[i];\n\t\n\t    var parser = new NGramParser(ngl.fNGrams, this.byteMap());\n\t    var confidence = parser.parse(det, this.spaceChar);\n\t    if (confidence > bestConfidenceSoFar) {\n\t      bestConfidenceSoFar = confidence;\n\t      lang = ngl.fLang;\n\t    }\n\t  }\n\t\n\t  var name = this.name(det);\n\t  return bestConfidenceSoFar <= 0 ? null : new Match(det, this, bestConfidenceSoFar, name, lang);\n\t};\n\t\n\t\n\tmodule.exports.ISO_8859_1 = function() {\n\t  this.byteMap = function() {\n\t    return [\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0xAA, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0xB5, 0x20, 0x20,\n\t      0x20, 0x20, 0xBA, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n\t      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xDF,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n\t      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF\n\t    ];\n\t  };\n\t\n\t  this.ngrams = function() {\n\t    return [\n\t      new NGramsPlusLang('da', [\n\t        0x206166, 0x206174, 0x206465, 0x20656E, 0x206572, 0x20666F, 0x206861, 0x206920,\n\t        0x206D65, 0x206F67, 0x2070E5, 0x207369, 0x207374, 0x207469, 0x207669, 0x616620,\n\t        0x616E20, 0x616E64, 0x617220, 0x617420, 0x646520, 0x64656E, 0x646572, 0x646574,\n\t        0x652073, 0x656420, 0x656465, 0x656E20, 0x656E64, 0x657220, 0x657265, 0x657320,\n\t        0x657420, 0x666F72, 0x676520, 0x67656E, 0x676572, 0x696765, 0x696C20, 0x696E67,\n\t        0x6B6520, 0x6B6B65, 0x6C6572, 0x6C6967, 0x6C6C65, 0x6D6564, 0x6E6465, 0x6E6520,\n\t        0x6E6720, 0x6E6765, 0x6F6720, 0x6F6D20, 0x6F7220, 0x70E520, 0x722064, 0x722065,\n\t        0x722073, 0x726520, 0x737465, 0x742073, 0x746520, 0x746572, 0x74696C, 0x766572\n\t      ]),\n\t      new NGramsPlusLang('de', [\n\t        0x20616E, 0x206175, 0x206265, 0x206461, 0x206465, 0x206469, 0x206569, 0x206765,\n\t        0x206861, 0x20696E, 0x206D69, 0x207363, 0x207365, 0x20756E, 0x207665, 0x20766F,\n\t        0x207765, 0x207A75, 0x626572, 0x636820, 0x636865, 0x636874, 0x646173, 0x64656E,\n\t        0x646572, 0x646965, 0x652064, 0x652073, 0x65696E, 0x656974, 0x656E20, 0x657220,\n\t        0x657320, 0x67656E, 0x68656E, 0x687420, 0x696368, 0x696520, 0x696E20, 0x696E65,\n\t        0x697420, 0x6C6963, 0x6C6C65, 0x6E2061, 0x6E2064, 0x6E2073, 0x6E6420, 0x6E6465,\n\t        0x6E6520, 0x6E6720, 0x6E6765, 0x6E7465, 0x722064, 0x726465, 0x726569, 0x736368,\n\t        0x737465, 0x742064, 0x746520, 0x74656E, 0x746572, 0x756E64, 0x756E67, 0x766572\n\t      ]),\n\t      new NGramsPlusLang('en', [\n\t        0x206120, 0x20616E, 0x206265, 0x20636F, 0x20666F, 0x206861, 0x206865, 0x20696E,\n\t        0x206D61, 0x206F66, 0x207072, 0x207265, 0x207361, 0x207374, 0x207468, 0x20746F,\n\t        0x207768, 0x616964, 0x616C20, 0x616E20, 0x616E64, 0x617320, 0x617420, 0x617465,\n\t        0x617469, 0x642061, 0x642074, 0x652061, 0x652073, 0x652074, 0x656420, 0x656E74,\n\t        0x657220, 0x657320, 0x666F72, 0x686174, 0x686520, 0x686572, 0x696420, 0x696E20,\n\t        0x696E67, 0x696F6E, 0x697320, 0x6E2061, 0x6E2074, 0x6E6420, 0x6E6720, 0x6E7420,\n\t        0x6F6620, 0x6F6E20, 0x6F7220, 0x726520, 0x727320, 0x732061, 0x732074, 0x736169,\n\t        0x737420, 0x742074, 0x746572, 0x746861, 0x746865, 0x74696F, 0x746F20, 0x747320\n\t      ]),\n\t      new NGramsPlusLang('es', [\n\t        0x206120, 0x206361, 0x20636F, 0x206465, 0x20656C, 0x20656E, 0x206573, 0x20696E,\n\t        0x206C61, 0x206C6F, 0x207061, 0x20706F, 0x207072, 0x207175, 0x207265, 0x207365,\n\t        0x20756E, 0x207920, 0x612063, 0x612064, 0x612065, 0x61206C, 0x612070, 0x616369,\n\t        0x61646F, 0x616C20, 0x617220, 0x617320, 0x6369F3, 0x636F6E, 0x646520, 0x64656C,\n\t        0x646F20, 0x652064, 0x652065, 0x65206C, 0x656C20, 0x656E20, 0x656E74, 0x657320,\n\t        0x657374, 0x69656E, 0x69F36E, 0x6C6120, 0x6C6F73, 0x6E2065, 0x6E7465, 0x6F2064,\n\t        0x6F2065, 0x6F6E20, 0x6F7220, 0x6F7320, 0x706172, 0x717565, 0x726120, 0x726573,\n\t        0x732064, 0x732065, 0x732070, 0x736520, 0x746520, 0x746F20, 0x756520, 0xF36E20\n\t      ]),\n\t      new NGramsPlusLang('fr', [\n\t        0x206175, 0x20636F, 0x206461, 0x206465, 0x206475, 0x20656E, 0x206574, 0x206C61,\n\t        0x206C65, 0x207061, 0x20706F, 0x207072, 0x207175, 0x207365, 0x20736F, 0x20756E,\n\t        0x20E020, 0x616E74, 0x617469, 0x636520, 0x636F6E, 0x646520, 0x646573, 0x647520,\n\t        0x652061, 0x652063, 0x652064, 0x652065, 0x65206C, 0x652070, 0x652073, 0x656E20,\n\t        0x656E74, 0x657220, 0x657320, 0x657420, 0x657572, 0x696F6E, 0x697320, 0x697420,\n\t        0x6C6120, 0x6C6520, 0x6C6573, 0x6D656E, 0x6E2064, 0x6E6520, 0x6E7320, 0x6E7420,\n\t        0x6F6E20, 0x6F6E74, 0x6F7572, 0x717565, 0x72206C, 0x726520, 0x732061, 0x732064,\n\t        0x732065, 0x73206C, 0x732070, 0x742064, 0x746520, 0x74696F, 0x756520, 0x757220\n\t      ]),\n\t      new NGramsPlusLang('it', [\n\t        0x20616C, 0x206368, 0x20636F, 0x206465, 0x206469, 0x206520, 0x20696C, 0x20696E,\n\t        0x206C61, 0x207065, 0x207072, 0x20756E, 0x612063, 0x612064, 0x612070, 0x612073,\n\t        0x61746F, 0x636865, 0x636F6E, 0x64656C, 0x646920, 0x652061, 0x652063, 0x652064,\n\t        0x652069, 0x65206C, 0x652070, 0x652073, 0x656C20, 0x656C6C, 0x656E74, 0x657220,\n\t        0x686520, 0x692061, 0x692063, 0x692064, 0x692073, 0x696120, 0x696C20, 0x696E20,\n\t        0x696F6E, 0x6C6120, 0x6C6520, 0x6C6920, 0x6C6C61, 0x6E6520, 0x6E6920, 0x6E6F20,\n\t        0x6E7465, 0x6F2061, 0x6F2064, 0x6F2069, 0x6F2073, 0x6F6E20, 0x6F6E65, 0x706572,\n\t        0x726120, 0x726520, 0x736920, 0x746120, 0x746520, 0x746920, 0x746F20, 0x7A696F\n\t      ]),\n\t      new NGramsPlusLang('nl', [\n\t        0x20616C, 0x206265, 0x206461, 0x206465, 0x206469, 0x206565, 0x20656E, 0x206765,\n\t        0x206865, 0x20696E, 0x206D61, 0x206D65, 0x206F70, 0x207465, 0x207661, 0x207665,\n\t        0x20766F, 0x207765, 0x207A69, 0x61616E, 0x616172, 0x616E20, 0x616E64, 0x617220,\n\t        0x617420, 0x636874, 0x646520, 0x64656E, 0x646572, 0x652062, 0x652076, 0x65656E,\n\t        0x656572, 0x656E20, 0x657220, 0x657273, 0x657420, 0x67656E, 0x686574, 0x696520,\n\t        0x696E20, 0x696E67, 0x697320, 0x6E2062, 0x6E2064, 0x6E2065, 0x6E2068, 0x6E206F,\n\t        0x6E2076, 0x6E6465, 0x6E6720, 0x6F6E64, 0x6F6F72, 0x6F7020, 0x6F7220, 0x736368,\n\t        0x737465, 0x742064, 0x746520, 0x74656E, 0x746572, 0x76616E, 0x766572, 0x766F6F\n\t      ]),\n\t      new NGramsPlusLang('no', [\n\t        0x206174, 0x206176, 0x206465, 0x20656E, 0x206572, 0x20666F, 0x206861, 0x206920,\n\t        0x206D65, 0x206F67, 0x2070E5, 0x207365, 0x20736B, 0x20736F, 0x207374, 0x207469,\n\t        0x207669, 0x20E520, 0x616E64, 0x617220, 0x617420, 0x646520, 0x64656E, 0x646574,\n\t        0x652073, 0x656420, 0x656E20, 0x656E65, 0x657220, 0x657265, 0x657420, 0x657474,\n\t        0x666F72, 0x67656E, 0x696B6B, 0x696C20, 0x696E67, 0x6B6520, 0x6B6B65, 0x6C6520,\n\t        0x6C6C65, 0x6D6564, 0x6D656E, 0x6E2073, 0x6E6520, 0x6E6720, 0x6E6765, 0x6E6E65,\n\t        0x6F6720, 0x6F6D20, 0x6F7220, 0x70E520, 0x722073, 0x726520, 0x736F6D, 0x737465,\n\t        0x742073, 0x746520, 0x74656E, 0x746572, 0x74696C, 0x747420, 0x747465, 0x766572\n\t      ]),\n\t      new NGramsPlusLang('pt', [\n\t        0x206120, 0x20636F, 0x206461, 0x206465, 0x20646F, 0x206520, 0x206573, 0x206D61,\n\t        0x206E6F, 0x206F20, 0x207061, 0x20706F, 0x207072, 0x207175, 0x207265, 0x207365,\n\t        0x20756D, 0x612061, 0x612063, 0x612064, 0x612070, 0x616465, 0x61646F, 0x616C20,\n\t        0x617220, 0x617261, 0x617320, 0x636F6D, 0x636F6E, 0x646120, 0x646520, 0x646F20,\n\t        0x646F73, 0x652061, 0x652064, 0x656D20, 0x656E74, 0x657320, 0x657374, 0x696120,\n\t        0x696361, 0x6D656E, 0x6E7465, 0x6E746F, 0x6F2061, 0x6F2063, 0x6F2064, 0x6F2065,\n\t        0x6F2070, 0x6F7320, 0x706172, 0x717565, 0x726120, 0x726573, 0x732061, 0x732064,\n\t        0x732065, 0x732070, 0x737461, 0x746520, 0x746F20, 0x756520, 0xE36F20, 0xE7E36F\n\t      ]),\n\t      new NGramsPlusLang('sv', [\n\t        0x206174, 0x206176, 0x206465, 0x20656E, 0x2066F6, 0x206861, 0x206920, 0x20696E,\n\t        0x206B6F, 0x206D65, 0x206F63, 0x2070E5, 0x20736B, 0x20736F, 0x207374, 0x207469,\n\t        0x207661, 0x207669, 0x20E472, 0x616465, 0x616E20, 0x616E64, 0x617220, 0x617474,\n\t        0x636820, 0x646520, 0x64656E, 0x646572, 0x646574, 0x656420, 0x656E20, 0x657220,\n\t        0x657420, 0x66F672, 0x67656E, 0x696C6C, 0x696E67, 0x6B6120, 0x6C6C20, 0x6D6564,\n\t        0x6E2073, 0x6E6120, 0x6E6465, 0x6E6720, 0x6E6765, 0x6E696E, 0x6F6368, 0x6F6D20,\n\t        0x6F6E20, 0x70E520, 0x722061, 0x722073, 0x726120, 0x736B61, 0x736F6D, 0x742073,\n\t        0x746120, 0x746520, 0x746572, 0x74696C, 0x747420, 0x766172, 0xE47220, 0xF67220,\n\t      ])\n\t    ];\n\t  };\n\t\n\t  this.name = function(det) {\n\t    return (det && det.fC1Bytes) ? 'windows-1252' : 'ISO-8859-1';\n\t  };\n\t};\n\tutil.inherits(module.exports.ISO_8859_1, sbcs);\n\t\n\t\n\tmodule.exports.ISO_8859_2 = function() {\n\t  this.byteMap = function() {\n\t    return [\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0xB1, 0x20, 0xB3, 0x20, 0xB5, 0xB6, 0x20,\n\t      0x20, 0xB9, 0xBA, 0xBB, 0xBC, 0x20, 0xBE, 0xBF,\n\t      0x20, 0xB1, 0x20, 0xB3, 0x20, 0xB5, 0xB6, 0xB7,\n\t      0x20, 0xB9, 0xBA, 0xBB, 0xBC, 0x20, 0xBE, 0xBF,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n\t      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xDF,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n\t      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x20\n\t    ];\n\t  }\n\t\n\t  this.ngrams = function() {\n\t    return [\n\t      new NGramsPlusLang('cs', [\n\t        0x206120, 0x206279, 0x20646F, 0x206A65, 0x206E61, 0x206E65, 0x206F20, 0x206F64,\n\t        0x20706F, 0x207072, 0x2070F8, 0x20726F, 0x207365, 0x20736F, 0x207374, 0x20746F,\n\t        0x207620, 0x207679, 0x207A61, 0x612070, 0x636520, 0x636820, 0x652070, 0x652073,\n\t        0x652076, 0x656D20, 0x656EED, 0x686F20, 0x686F64, 0x697374, 0x6A6520, 0x6B7465,\n\t        0x6C6520, 0x6C6920, 0x6E6120, 0x6EE920, 0x6EEC20, 0x6EED20, 0x6F2070, 0x6F646E,\n\t        0x6F6A69, 0x6F7374, 0x6F7520, 0x6F7661, 0x706F64, 0x706F6A, 0x70726F, 0x70F865,\n\t        0x736520, 0x736F75, 0x737461, 0x737469, 0x73746E, 0x746572, 0x746EED, 0x746F20,\n\t        0x752070, 0xBE6520, 0xE16EED, 0xE9686F, 0xED2070, 0xED2073, 0xED6D20, 0xF86564,\n\t      ]),\n\t      new NGramsPlusLang('hu', [\n\t        0x206120, 0x20617A, 0x206265, 0x206567, 0x20656C, 0x206665, 0x206861, 0x20686F,\n\t        0x206973, 0x206B65, 0x206B69, 0x206BF6, 0x206C65, 0x206D61, 0x206D65, 0x206D69,\n\t        0x206E65, 0x20737A, 0x207465, 0x20E973, 0x612061, 0x61206B, 0x61206D, 0x612073,\n\t        0x616B20, 0x616E20, 0x617A20, 0x62616E, 0x62656E, 0x656779, 0x656B20, 0x656C20,\n\t        0x656C65, 0x656D20, 0x656E20, 0x657265, 0x657420, 0x657465, 0x657474, 0x677920,\n\t        0x686F67, 0x696E74, 0x697320, 0x6B2061, 0x6BF67A, 0x6D6567, 0x6D696E, 0x6E2061,\n\t        0x6E616B, 0x6E656B, 0x6E656D, 0x6E7420, 0x6F6779, 0x732061, 0x737A65, 0x737A74,\n\t        0x737AE1, 0x73E967, 0x742061, 0x747420, 0x74E173, 0x7A6572, 0xE16E20, 0xE97320,\n\t      ]),\n\t      new NGramsPlusLang('pl', [\n\t        0x20637A, 0x20646F, 0x206920, 0x206A65, 0x206B6F, 0x206D61, 0x206D69, 0x206E61,\n\t        0x206E69, 0x206F64, 0x20706F, 0x207072, 0x207369, 0x207720, 0x207769, 0x207779,\n\t        0x207A20, 0x207A61, 0x612070, 0x612077, 0x616E69, 0x636820, 0x637A65, 0x637A79,\n\t        0x646F20, 0x647A69, 0x652070, 0x652073, 0x652077, 0x65207A, 0x65676F, 0x656A20,\n\t        0x656D20, 0x656E69, 0x676F20, 0x696120, 0x696520, 0x69656A, 0x6B6120, 0x6B6920,\n\t        0x6B6965, 0x6D6965, 0x6E6120, 0x6E6961, 0x6E6965, 0x6F2070, 0x6F7761, 0x6F7769,\n\t        0x706F6C, 0x707261, 0x70726F, 0x70727A, 0x727A65, 0x727A79, 0x7369EA, 0x736B69,\n\t        0x737461, 0x776965, 0x796368, 0x796D20, 0x7A6520, 0x7A6965, 0x7A7920, 0xF37720,\n\t      ]),\n\t      new NGramsPlusLang('ro', [\n\t        0x206120, 0x206163, 0x206361, 0x206365, 0x20636F, 0x206375, 0x206465, 0x206469,\n\t        0x206C61, 0x206D61, 0x207065, 0x207072, 0x207365, 0x2073E3, 0x20756E, 0x20BA69,\n\t        0x20EE6E, 0x612063, 0x612064, 0x617265, 0x617420, 0x617465, 0x617520, 0x636172,\n\t        0x636F6E, 0x637520, 0x63E320, 0x646520, 0x652061, 0x652063, 0x652064, 0x652070,\n\t        0x652073, 0x656120, 0x656920, 0x656C65, 0x656E74, 0x657374, 0x692061, 0x692063,\n\t        0x692064, 0x692070, 0x696520, 0x696920, 0x696E20, 0x6C6120, 0x6C6520, 0x6C6F72,\n\t        0x6C7569, 0x6E6520, 0x6E7472, 0x6F7220, 0x70656E, 0x726520, 0x726561, 0x727520,\n\t        0x73E320, 0x746520, 0x747275, 0x74E320, 0x756920, 0x756C20, 0xBA6920, 0xEE6E20,\n\t      ])\n\t    ];\n\t  };\n\t\n\t  this.name = function(det) {\n\t    return (det && det.fC1Bytes) ? 'windows-1250' : 'ISO-8859-2';\n\t  };\n\t};\n\tutil.inherits(module.exports.ISO_8859_2, sbcs);\n\t\n\t\n\tmodule.exports.ISO_8859_5 = function() {\n\t  this.byteMap = function() {\n\t    return [\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n\t      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0x20, 0xFE, 0xFF,\n\t      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n\t      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n\t      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0x20, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n\t      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0x20, 0xFE, 0xFF\n\t    ];\n\t  };\n\t\n\t  this.ngrams = function() {\n\t    return [\n\t      0x20D220, 0x20D2DE, 0x20D4DE, 0x20D7D0, 0x20D820, 0x20DAD0, 0x20DADE, 0x20DDD0,\n\t      0x20DDD5, 0x20DED1, 0x20DFDE, 0x20DFE0, 0x20E0D0, 0x20E1DE, 0x20E1E2, 0x20E2DE,\n\t      0x20E7E2, 0x20EDE2, 0xD0DDD8, 0xD0E2EC, 0xD3DE20, 0xD5DBEC, 0xD5DDD8, 0xD5E1E2,\n\t      0xD5E220, 0xD820DF, 0xD8D520, 0xD8D820, 0xD8EF20, 0xDBD5DD, 0xDBD820, 0xDBECDD,\n\t      0xDDD020, 0xDDD520, 0xDDD8D5, 0xDDD8EF, 0xDDDE20, 0xDDDED2, 0xDE20D2, 0xDE20DF,\n\t      0xDE20E1, 0xDED220, 0xDED2D0, 0xDED3DE, 0xDED920, 0xDEDBEC, 0xDEDC20, 0xDEE1E2,\n\t      0xDFDEDB, 0xDFE0D5, 0xDFE0D8, 0xDFE0DE, 0xE0D0D2, 0xE0D5D4, 0xE1E2D0, 0xE1E2D2,\n\t      0xE1E2D8, 0xE1EF20, 0xE2D5DB, 0xE2DE20, 0xE2DEE0, 0xE2EC20, 0xE7E2DE, 0xEBE520\n\t    ];\n\t  };\n\t\n\t  this.name = function(det) {\n\t    return 'ISO-8859-5';\n\t  };\n\t\n\t  this.language = function() {\n\t    return 'ru';\n\t  };\n\t};\n\tutil.inherits(module.exports.ISO_8859_5, sbcs);\n\t\n\t\n\tmodule.exports.ISO_8859_6 = function() {\n\t  this.byteMap = function() {\n\t    return [\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n\t      0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,\n\t      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n\t      0xD8, 0xD9, 0xDA, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20\n\t    ];\n\t  };\n\t\n\t  this.ngrams = function() {\n\t    return [\n\t      0x20C7E4, 0x20C7E6, 0x20C8C7, 0x20D9E4, 0x20E1EA, 0x20E4E4, 0x20E5E6, 0x20E8C7,\n\t      0xC720C7, 0xC7C120, 0xC7CA20, 0xC7D120, 0xC7E420, 0xC7E4C3, 0xC7E4C7, 0xC7E4C8,\n\t      0xC7E4CA, 0xC7E4CC, 0xC7E4CD, 0xC7E4CF, 0xC7E4D3, 0xC7E4D9, 0xC7E4E2, 0xC7E4E5,\n\t      0xC7E4E8, 0xC7E4EA, 0xC7E520, 0xC7E620, 0xC7E6CA, 0xC820C7, 0xC920C7, 0xC920E1,\n\t      0xC920E4, 0xC920E5, 0xC920E8, 0xCA20C7, 0xCF20C7, 0xCFC920, 0xD120C7, 0xD1C920,\n\t      0xD320C7, 0xD920C7, 0xD9E4E9, 0xE1EA20, 0xE420C7, 0xE4C920, 0xE4E920, 0xE4EA20,\n\t      0xE520C7, 0xE5C720, 0xE5C920, 0xE5E620, 0xE620C7, 0xE720C7, 0xE7C720, 0xE8C7E4,\n\t      0xE8E620, 0xE920C7, 0xEA20C7, 0xEA20E5, 0xEA20E8, 0xEAC920, 0xEAD120, 0xEAE620\n\t    ];\n\t  };\n\t\n\t  this.name = function(det) {\n\t    return 'ISO-8859-6';\n\t  };\n\t\n\t  this.language = function() {\n\t    return 'ar';\n\t  };\n\t};\n\tutil.inherits(module.exports.ISO_8859_6, sbcs);\n\t\n\t\n\tmodule.exports.ISO_8859_7 = function() {\n\t  this.byteMap = function() {\n\t    return [\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0xA1, 0xA2, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xDC, 0x20,\n\t      0xDD, 0xDE, 0xDF, 0x20, 0xFC, 0x20, 0xFD, 0xFE,\n\t      0xC0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0xF0, 0xF1, 0x20, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n\t      0xF8, 0xF9, 0xFA, 0xFB, 0xDC, 0xDD, 0xDE, 0xDF,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n\t      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x20\n\t    ];\n\t  };\n\t\n\t  this.ngrams = function() {\n\t    return [\n\t      0x20E1ED, 0x20E1F0, 0x20E3E9, 0x20E4E9, 0x20E5F0, 0x20E720, 0x20EAE1, 0x20ECE5,\n\t      0x20EDE1, 0x20EF20, 0x20F0E1, 0x20F0EF, 0x20F0F1, 0x20F3F4, 0x20F3F5, 0x20F4E7,\n\t      0x20F4EF, 0xDFE120, 0xE120E1, 0xE120F4, 0xE1E920, 0xE1ED20, 0xE1F0FC, 0xE1F220,\n\t      0xE3E9E1, 0xE5E920, 0xE5F220, 0xE720F4, 0xE7ED20, 0xE7F220, 0xE920F4, 0xE9E120,\n\t      0xE9EADE, 0xE9F220, 0xEAE1E9, 0xEAE1F4, 0xECE520, 0xED20E1, 0xED20E5, 0xED20F0,\n\t      0xEDE120, 0xEFF220, 0xEFF520, 0xF0EFF5, 0xF0F1EF, 0xF0FC20, 0xF220E1, 0xF220E5,\n\t      0xF220EA, 0xF220F0, 0xF220F4, 0xF3E520, 0xF3E720, 0xF3F4EF, 0xF4E120, 0xF4E1E9,\n\t      0xF4E7ED, 0xF4E7F2, 0xF4E9EA, 0xF4EF20, 0xF4EFF5, 0xF4F9ED, 0xF9ED20, 0xFEED20\n\t    ];\n\t  };\n\t\n\t  this.name = function(det) {\n\t    return (det && det.fC1Bytes) ? 'windows-1253' : 'ISO-8859-7';\n\t  };\n\t\n\t  this.language = function() {\n\t    return 'el';\n\t  };\n\t};\n\tutil.inherits(module.exports.ISO_8859_7, sbcs);\n\t\n\tmodule.exports.ISO_8859_8 = function() {\n\t\n\t  this.byteMap = function() {\n\t    return [\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0xB5, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n\t      0xF8, 0xF9, 0xFA, 0x20, 0x20, 0x20, 0x20, 0x20\n\t    ];\n\t  };\n\t\n\t  this.ngrams = function() {\n\t    return [\n\t      new NGramsPlusLang('he', [\n\t        0x20E0E5, 0x20E0E7, 0x20E0E9, 0x20E0FA, 0x20E1E9, 0x20E1EE, 0x20E4E0, 0x20E4E5,\n\t        0x20E4E9, 0x20E4EE, 0x20E4F2, 0x20E4F9, 0x20E4FA, 0x20ECE0, 0x20ECE4, 0x20EEE0,\n\t        0x20F2EC, 0x20F9EC, 0xE0FA20, 0xE420E0, 0xE420E1, 0xE420E4, 0xE420EC, 0xE420EE,\n\t        0xE420F9, 0xE4E5E0, 0xE5E020, 0xE5ED20, 0xE5EF20, 0xE5F820, 0xE5FA20, 0xE920E4,\n\t        0xE9E420, 0xE9E5FA, 0xE9E9ED, 0xE9ED20, 0xE9EF20, 0xE9F820, 0xE9FA20, 0xEC20E0,\n\t        0xEC20E4, 0xECE020, 0xECE420, 0xED20E0, 0xED20E1, 0xED20E4, 0xED20EC, 0xED20EE,\n\t        0xED20F9, 0xEEE420, 0xEF20E4, 0xF0E420, 0xF0E920, 0xF0E9ED, 0xF2EC20, 0xF820E4,\n\t        0xF8E9ED, 0xF9EC20, 0xFA20E0, 0xFA20E1, 0xFA20E4, 0xFA20EC, 0xFA20EE, 0xFA20F9,\n\t      ]),\n\t      new NGramsPlusLang('he', [\n\t        0x20E0E5, 0x20E0EC, 0x20E4E9, 0x20E4EC, 0x20E4EE, 0x20E4F0, 0x20E9F0, 0x20ECF2,\n\t        0x20ECF9, 0x20EDE5, 0x20EDE9, 0x20EFE5, 0x20EFE9, 0x20F8E5, 0x20F8E9, 0x20FAE0,\n\t        0x20FAE5, 0x20FAE9, 0xE020E4, 0xE020EC, 0xE020ED, 0xE020FA, 0xE0E420, 0xE0E5E4,\n\t        0xE0EC20, 0xE0EE20, 0xE120E4, 0xE120ED, 0xE120FA, 0xE420E4, 0xE420E9, 0xE420EC,\n\t        0xE420ED, 0xE420EF, 0xE420F8, 0xE420FA, 0xE4EC20, 0xE5E020, 0xE5E420, 0xE7E020,\n\t        0xE9E020, 0xE9E120, 0xE9E420, 0xEC20E4, 0xEC20ED, 0xEC20FA, 0xECF220, 0xECF920,\n\t        0xEDE9E9, 0xEDE9F0, 0xEDE9F8, 0xEE20E4, 0xEE20ED, 0xEE20FA, 0xEEE120, 0xEEE420,\n\t        0xF2E420, 0xF920E4, 0xF920ED, 0xF920FA, 0xF9E420, 0xFAE020, 0xFAE420, 0xFAE5E9,\n\t      ])\n\t    ];\n\t  };\n\t\n\t  this.name = function(det) {\n\t    return (det && det.fC1Bytes) ? 'windows-1255' : 'ISO-8859-8';\n\t  };\n\t\n\t  this.language = function() {\n\t    return 'he';\n\t  };\n\t\n\t};\n\tutil.inherits(module.exports.ISO_8859_8, sbcs);\n\t\n\t\n\tmodule.exports.ISO_8859_9 = function() {\n\t  this.byteMap = function() {\n\t    return [\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0xAA, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0xB5, 0x20, 0x20,\n\t      0x20, 0x20, 0xBA, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n\t      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0x69, 0xFE, 0xDF,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n\t      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF\n\t    ];\n\t  };\n\t\n\t  this.ngrams = function() {\n\t    return [\n\t      0x206261, 0x206269, 0x206275, 0x206461, 0x206465, 0x206765, 0x206861, 0x20696C,\n\t      0x206B61, 0x206B6F, 0x206D61, 0x206F6C, 0x207361, 0x207461, 0x207665, 0x207961,\n\t      0x612062, 0x616B20, 0x616C61, 0x616D61, 0x616E20, 0x616EFD, 0x617220, 0x617261,\n\t      0x6172FD, 0x6173FD, 0x617961, 0x626972, 0x646120, 0x646520, 0x646920, 0x652062,\n\t      0x65206B, 0x656469, 0x656E20, 0x657220, 0x657269, 0x657369, 0x696C65, 0x696E20,\n\t      0x696E69, 0x697220, 0x6C616E, 0x6C6172, 0x6C6520, 0x6C6572, 0x6E2061, 0x6E2062,\n\t      0x6E206B, 0x6E6461, 0x6E6465, 0x6E6520, 0x6E6920, 0x6E696E, 0x6EFD20, 0x72696E,\n\t      0x72FD6E, 0x766520, 0x796120, 0x796F72, 0xFD6E20, 0xFD6E64, 0xFD6EFD, 0xFDF0FD\n\t    ];\n\t  };\n\t\n\t  this.name = function(det) {\n\t    return (det && det.fC1Bytes) ? 'windows-1254' : 'ISO-8859-9';\n\t  };\n\t\n\t  this.language = function() {\n\t    return 'tr';\n\t  };\n\t};\n\tutil.inherits(module.exports.ISO_8859_9, sbcs);\n\t\n\t\n\tmodule.exports.windows_1251 = function() {\n\t  this.byteMap = function() {\n\t    return [\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x90, 0x83, 0x20, 0x83, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x9A, 0x20, 0x9C, 0x9D, 0x9E, 0x9F,\n\t      0x90, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x9A, 0x20, 0x9C, 0x9D, 0x9E, 0x9F,\n\t      0x20, 0xA2, 0xA2, 0xBC, 0x20, 0xB4, 0x20, 0x20,\n\t      0xB8, 0x20, 0xBA, 0x20, 0x20, 0x20, 0x20, 0xBF,\n\t      0x20, 0x20, 0xB3, 0xB3, 0xB4, 0xB5, 0x20, 0x20,\n\t      0xB8, 0x20, 0xBA, 0x20, 0xBC, 0xBE, 0xBE, 0xBF,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n\t      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n\t      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF\n\t    ];\n\t  };\n\t\n\t  this.ngrams = function() {\n\t    return [\n\t      0x20E220, 0x20E2EE, 0x20E4EE, 0x20E7E0, 0x20E820, 0x20EAE0, 0x20EAEE, 0x20EDE0,\n\t      0x20EDE5, 0x20EEE1, 0x20EFEE, 0x20EFF0, 0x20F0E0, 0x20F1EE, 0x20F1F2, 0x20F2EE,\n\t      0x20F7F2, 0x20FDF2, 0xE0EDE8, 0xE0F2FC, 0xE3EE20, 0xE5EBFC, 0xE5EDE8, 0xE5F1F2,\n\t      0xE5F220, 0xE820EF, 0xE8E520, 0xE8E820, 0xE8FF20, 0xEBE5ED, 0xEBE820, 0xEBFCED,\n\t      0xEDE020, 0xEDE520, 0xEDE8E5, 0xEDE8FF, 0xEDEE20, 0xEDEEE2, 0xEE20E2, 0xEE20EF,\n\t      0xEE20F1, 0xEEE220, 0xEEE2E0, 0xEEE3EE, 0xEEE920, 0xEEEBFC, 0xEEEC20, 0xEEF1F2,\n\t      0xEFEEEB, 0xEFF0E5, 0xEFF0E8, 0xEFF0EE, 0xF0E0E2, 0xF0E5E4, 0xF1F2E0, 0xF1F2E2,\n\t      0xF1F2E8, 0xF1FF20, 0xF2E5EB, 0xF2EE20, 0xF2EEF0, 0xF2FC20, 0xF7F2EE, 0xFBF520\n\t    ];\n\t  };\n\t\n\t  this.name = function(det) {\n\t    return 'windows-1251';\n\t  };\n\t\n\t  this.language = function() {\n\t    return 'ru';\n\t  };\n\t};\n\tutil.inherits(module.exports.windows_1251, sbcs);\n\t\n\t\n\tmodule.exports.windows_1256 = function() {\n\t  this.byteMap = function() {\n\t    return [\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x81, 0x20, 0x83, 0x20, 0x20, 0x20, 0x20,\n\t      0x88, 0x20, 0x8A, 0x20, 0x9C, 0x8D, 0x8E, 0x8F,\n\t      0x90, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x98, 0x20, 0x9A, 0x20, 0x9C, 0x20, 0x20, 0x9F,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0xAA, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0xB5, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n\t      0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,\n\t      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0x20,\n\t      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,\n\t      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n\t      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n\t      0x20, 0x20, 0x20, 0x20, 0xF4, 0x20, 0x20, 0x20,\n\t      0x20, 0xF9, 0x20, 0xFB, 0xFC, 0x20, 0x20, 0xFF\n\t    ];\n\t  };\n\t\n\t  this.ngrams = function() {\n\t    return [\n\t      0x20C7E1, 0x20C7E4, 0x20C8C7, 0x20DAE1, 0x20DDED, 0x20E1E1, 0x20E3E4, 0x20E6C7,\n\t      0xC720C7, 0xC7C120, 0xC7CA20, 0xC7D120, 0xC7E120, 0xC7E1C3, 0xC7E1C7, 0xC7E1C8,\n\t      0xC7E1CA, 0xC7E1CC, 0xC7E1CD, 0xC7E1CF, 0xC7E1D3, 0xC7E1DA, 0xC7E1DE, 0xC7E1E3,\n\t      0xC7E1E6, 0xC7E1ED, 0xC7E320, 0xC7E420, 0xC7E4CA, 0xC820C7, 0xC920C7, 0xC920DD,\n\t      0xC920E1, 0xC920E3, 0xC920E6, 0xCA20C7, 0xCF20C7, 0xCFC920, 0xD120C7, 0xD1C920,\n\t      0xD320C7, 0xDA20C7, 0xDAE1EC, 0xDDED20, 0xE120C7, 0xE1C920, 0xE1EC20, 0xE1ED20,\n\t      0xE320C7, 0xE3C720, 0xE3C920, 0xE3E420, 0xE420C7, 0xE520C7, 0xE5C720, 0xE6C7E1,\n\t      0xE6E420, 0xEC20C7, 0xED20C7, 0xED20E3, 0xED20E6, 0xEDC920, 0xEDD120, 0xEDE420\n\t    ];\n\t  };\n\t\n\t  this.name = function(det) {\n\t    return 'windows-1256';\n\t  };\n\t\n\t  this.language = function() {\n\t    return 'ar';\n\t  };\n\t};\n\tutil.inherits(module.exports.windows_1256, sbcs);\n\t\n\t\n\tmodule.exports.KOI8_R = function() {\n\t  this.byteMap = function() {\n\t    return [\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n\t      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n\t      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n\t      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0xA3, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0xA3, 0x20, 0x20, 0x20, 0x20,\n\t      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n\t      0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n\t      0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,\n\t      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n\t      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,\n\t      0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n\t      0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,\n\t      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n\t      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF\n\t    ];\n\t  };\n\t\n\t  this.ngrams = function() {\n\t    return [\n\t      0x20C4CF, 0x20C920, 0x20CBC1, 0x20CBCF, 0x20CEC1, 0x20CEC5, 0x20CFC2, 0x20D0CF,\n\t      0x20D0D2, 0x20D2C1, 0x20D3CF, 0x20D3D4, 0x20D4CF, 0x20D720, 0x20D7CF, 0x20DAC1,\n\t      0x20DCD4, 0x20DED4, 0xC1CEC9, 0xC1D4D8, 0xC5CCD8, 0xC5CEC9, 0xC5D3D4, 0xC5D420,\n\t      0xC7CF20, 0xC920D0, 0xC9C520, 0xC9C920, 0xC9D120, 0xCCC5CE, 0xCCC920, 0xCCD8CE,\n\t      0xCEC120, 0xCEC520, 0xCEC9C5, 0xCEC9D1, 0xCECF20, 0xCECFD7, 0xCF20D0, 0xCF20D3,\n\t      0xCF20D7, 0xCFC7CF, 0xCFCA20, 0xCFCCD8, 0xCFCD20, 0xCFD3D4, 0xCFD720, 0xCFD7C1,\n\t      0xD0CFCC, 0xD0D2C5, 0xD0D2C9, 0xD0D2CF, 0xD2C1D7, 0xD2C5C4, 0xD3D120, 0xD3D4C1,\n\t      0xD3D4C9, 0xD3D4D7, 0xD4C5CC, 0xD4CF20, 0xD4CFD2, 0xD4D820, 0xD9C820, 0xDED4CF\n\t    ];\n\t  };\n\t\n\t  this.name = function(det) {\n\t    return 'KOI8-R';\n\t  };\n\t\n\t  this.language = function() {\n\t    return 'ru';\n\t  };\n\t};\n\tutil.inherits(module.exports.KOI8_R, sbcs);\n\t\n\t\n\t/*\n\tmodule.exports.ISO_8859_7 = function() {\n\t  this.byteMap = function() {\n\t    return [\n\t\n\t    ];\n\t  };\n\t\n\t  this.ngrams = function() {\n\t    return [\n\t\n\t    ];\n\t  };\n\t\n\t  this.name = function(det) {\n\t    if (typeof det == 'undefined')\n\t      return 'ISO-8859-7';\n\t    return det.fC1Bytes ? 'windows-1253' : 'ISO-8859-7';\n\t  };\n\t\n\t  this.language = function() {\n\t    return 'el';\n\t  };\n\t};\n\tutil.inherits(module.exports.ISO_8859_7, sbcs);\n\t*/\n\t\n\n\n/***/ },\n\n/***/ 143:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar util = __webpack_require__(40),\n\t  Match = __webpack_require__ (31);\n\t\n\t/**\n\t * This class matches UTF-16 and UTF-32, both big- and little-endian. The\n\t * BOM will be used if it is present.\n\t */\n\tmodule.exports.UTF_16BE = function() {\n\t  this.name = function() {\n\t    return 'UTF-16BE';\n\t  };\n\t  this.match = function(det) {\n\t    var input = det.fRawInput;\n\t\n\t    if (input.length >= 2 && ((input[0] & 0xff) == 0xfe && (input[1] & 0xff) == 0xff))\n\t      return new Match(det, this, confidence = 100);\n\t\n\t    // TODO: Do some statistics to check for unsigned UTF-16BE\n\t    return null;\n\t  };\n\t};\n\t\n\tmodule.exports.UTF_16LE = function() {\n\t  this.name = function() {\n\t    return 'UTF-16LE';\n\t  };\n\t  this.match = function(det) {\n\t    var input = det.fRawInput;\n\t\n\t    if (input.length >= 2 && ((input[0] & 0xff) == 0xff && (input[1] & 0xff) == 0xfe)) {\n\t       // An LE BOM is present.\n\t       if (input.length >= 4 && input[2] == 0x00 && input[3] == 0x00)\n\t         // It is probably UTF-32 LE, not UTF-16\n\t         return null;\n\t\n\t       return new Match(det, this, confidence = 100);\n\t    }\n\t\n\t    // TODO: Do some statistics to check for unsigned UTF-16LE\n\t    return null;\n\t  }\n\t};\n\t\n\tfunction UTF_32() {};\n\tUTF_32.prototype.match = function(det) {\n\t  var input      = det.fRawInput,\n\t    limit      = (det.fRawLength / 4) * 4,\n\t    numValid   = 0,\n\t    numInvalid = 0,\n\t    hasBOM     = false,\n\t    confidence = 0;\n\t\n\t  if (limit == 0)\n\t    return null;\n\t\n\t  if (this.getChar(input, 0) == 0x0000FEFF)\n\t    hasBOM = true;\n\t\n\t  for (var i = 0; i < limit; i += 4) {\n\t    var ch = this.getChar(input, i);\n\t\n\t    if (ch < 0 || ch >= 0x10FFFF || (ch >= 0xD800 && ch <= 0xDFFF))\n\t      numInvalid += 1;\n\t    else\n\t      numValid += 1;\n\t  }\n\t\n\t  // Cook up some sort of confidence score, based on presence of a BOM\n\t  //    and the existence of valid and/or invalid multi-byte sequences.\n\t  if (hasBOM && numInvalid == 0) {\n\t    confidence = 100;\n\t  } else if (hasBOM && numValid > numInvalid * 10) {\n\t    confidence = 80;\n\t  } else if (numValid > 3 && numInvalid == 0) {\n\t    confidence = 100;\n\t  } else if (numValid > 0 && numInvalid == 0) {\n\t    confidence = 80;\n\t  } else if (numValid > numInvalid * 10) {\n\t    // Probably corrupt UTF-32BE data.  Valid sequences aren't likely by chance.\n\t    confidence = 25;\n\t  }\n\t\n\t  // return confidence == 0 ? null : new CharsetMatch(det, this, confidence);\n\t  return confidence == 0 ? null : new Match(det, this, confidence);\n\t};\n\t\n\tmodule.exports.UTF_32BE = function() {\n\t  this.name = function() {\n\t    return 'UTF-32BE';\n\t  };\n\t  this.getChar = function(input, index) {\n\t    return (input[index + 0] & 0xff) << 24 | (input[index + 1] & 0xff) << 16 |\n\t         (input[index + 2] & 0xff) <<  8 | (input[index + 3] & 0xff);\n\t  };\n\t};\n\tutil.inherits(module.exports.UTF_32BE, UTF_32);\n\t\n\tmodule.exports.UTF_32LE = function() {\n\t  this.name = function() {\n\t    return 'UTF-32LE';\n\t  };\n\t  this.getChar = function(input, index) {\n\t    return (input[index + 3] & 0xff) << 24 | (input[index + 2] & 0xff) << 16 |\n\t         (input[index + 1] & 0xff) <<  8 | (input[index + 0] & 0xff);\n\t  };\n\t};\n\tutil.inherits(module.exports.UTF_32LE, UTF_32);\n\n\n/***/ },\n\n/***/ 144:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar Match = __webpack_require__ (31);\n\t\n\t/**\n\t * Charset recognizer for UTF-8\n\t */\n\tmodule.exports = function() {\n\t  this.name = function() {\n\t    return 'UTF-8';\n\t  };\n\t  this.match = function(det) {\n\t\n\t    var hasBOM = false,\n\t      numValid = 0,\n\t      numInvalid = 0,\n\t      input = det.fRawInput,\n\t      trailBytes = 0,\n\t      confidence;\n\t\n\t    if (det.fRawLength >= 3 &&\n\t      (input[0] & 0xff) == 0xef && (input[1] & 0xff) == 0xbb && (input[2] & 0xff) == 0xbf) {\n\t      hasBOM = true;\n\t    }\n\t\n\t    // Scan for multi-byte sequences\n\t    for (var i = 0; i < det.fRawLength; i++) {\n\t      var b = input[i];\n\t      if ((b & 0x80) == 0)\n\t        continue; // ASCII\n\t\n\t      // Hi bit on char found.  Figure out how long the sequence should be\n\t      if ((b & 0x0e0) == 0x0c0) {\n\t        trailBytes = 1;\n\t      } else if ((b & 0x0f0) == 0x0e0) {\n\t        trailBytes = 2;\n\t      } else if ((b & 0x0f8) == 0xf0) {\n\t        trailBytes = 3;\n\t      } else {\n\t        numInvalid++;\n\t        if (numInvalid > 5)\n\t          break;\n\t        trailBytes = 0;\n\t      }\n\t\n\t      // Verify that we've got the right number of trail bytes in the sequence\n\t      for (;;) {\n\t        i++;\n\t        if (i >= det.fRawLength)\n\t          break;\n\t\n\t        if ((input[i] & 0xc0) != 0x080) {\n\t          numInvalid++;\n\t          break;\n\t        }\n\t        if (--trailBytes == 0) {\n\t          numValid++;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Cook up some sort of confidence score, based on presense of a BOM\n\t    //    and the existence of valid and/or invalid multi-byte sequences.\n\t    confidence = 0;\n\t    if (hasBOM && numInvalid == 0)\n\t      confidence = 100;\n\t    else if (hasBOM && numValid > numInvalid * 10)\n\t      confidence = 80;\n\t    else if (numValid > 3 && numInvalid == 0)\n\t      confidence = 100;\n\t    else if (numValid > 0 && numInvalid == 0)\n\t      confidence = 80;\n\t    else if (numValid == 0 && numInvalid == 0)\n\t      // Plain ASCII.\n\t      confidence = 10;\n\t    else if (numValid > numInvalid * 10)\n\t      // Probably corruput utf-8 data.  Valid sequences aren't likely by chance.\n\t      confidence = 25;\n\t    else\n\t      return null\n\t\n\t    return new Match(det, this, confidence);\n\t  };\n\t};\n\n\n/***/ },\n\n/***/ 145:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar Note = __webpack_require__(146)\n\t\n\tmodule.exports = Notes\n\t\n\tvar CHANNEL_MAPPING = {\n\t  IIDX_P1: {\n\t    '11': { column: '1'  },\n\t    '12': { column: '2'  },\n\t    '13': { column: '3'  },\n\t    '14': { column: '4'  },\n\t    '15': { column: '5'  },\n\t    '18': { column: '6'  },\n\t    '19': { column: '7'  },\n\t    '16': { column: 'SC' },\n\t  },\n\t}\n\t\n\t/**\n\t * The Notes class holds the Note objects in the game. A note object may or\n\t * may not be playable.\n\t *\n\t * @class Notes\n\t * @constructor\n\t */\n\tfunction Notes(notes) {\n\t  notes.forEach(Note.validate)\n\t  this._notes = notes\n\t}\n\t\n\t/**\n\t * Returns the number of notes in this object.\n\t *\n\t * @method count\n\t * @return {Number}\n\t */\n\tNotes.prototype.count = function() {\n\t  return this._notes.length\n\t}\n\t\n\t/**\n\t * Returns an Array of all notes.\n\t *\n\t * @method all\n\t * @return {Note[]}\n\t */\n\tNotes.prototype.all = function() {\n\t  return this._notes.slice()\n\t}\n\t\n\t/**\n\t * Creates a Notes object from a BMSChart.\n\t *\n\t * @static\n\t * @method fromBMSChart\n\t * @param {BMSChart} chart    the chart to process\n\t * @param {Object}   options  the note options\n\t */\n\tNotes.fromBMSChart = function(chart, options) {\n\t  options = options || { }\n\t  var builder = new BMSNoteBuilder(chart)\n\t  return builder.build()\n\t}\n\t\n\tfunction BMSNoteBuilder(chart) {\n\t  this._chart = chart\n\t}\n\t\n\tBMSNoteBuilder.prototype.build = function() {\n\t  this._notes = []\n\t  this._activeLN = { }\n\t  this._lastNote = { }\n\t  this._lnObj = (this._chart.headers.get('lnobj') || '').toLowerCase()\n\t  this._channelMapping = CHANNEL_MAPPING.IIDX_P1\n\t  this._objects = this._chart.objects.allSorted()\n\t  this._objects.forEach(function(object) {\n\t    this._handle(object)\n\t  }.bind(this))\n\t  return new Notes(this._notes)\n\t}\n\t\n\tBMSNoteBuilder.prototype._handle = function(object) {\n\t  if (object.channel === '01') {\n\t    this._handleNormalNote(object)\n\t  } else {\n\t    switch (object.channel.charAt(0)) {\n\t    case '1': case '2':\n\t      this._handleNormalNote(object)\n\t      break\n\t    case '5': case '6':\n\t      this._handleLongNote(object)\n\t      break\n\t    }\n\t  }\n\t}\n\t\n\tBMSNoteBuilder.prototype._handleNormalNote = function(object) {\n\t  var channel = this._normalizeChannel(object.channel)\n\t  var beat = this._getBeat(object)\n\t  if (object.value.toLowerCase() === this._lnObj) {\n\t    if (this._lastNote[channel]) {\n\t      this._lastNote[channel].endBeat = beat\n\t    }\n\t  } else {\n\t    var note = {\n\t      beat: beat,\n\t      endBeat: undefined,\n\t      keysound: object.value,\n\t      column: this._getColumn(channel),\n\t    }\n\t    this._lastNote[channel] = note\n\t    this._notes.push(note)\n\t  }\n\t}\n\t\n\tBMSNoteBuilder.prototype._handleLongNote = function(object) {\n\t  var channel = this._normalizeChannel(object.channel)\n\t  var beat = this._getBeat(object)\n\t  if (this._activeLN[channel]) {\n\t    var note = this._activeLN[channel]\n\t    note.endBeat = beat\n\t    this._notes.push(note)\n\t    ;delete this._activeLN[channel]\n\t  } else {\n\t    this._activeLN[channel] = {\n\t      beat: beat,\n\t      keysound: object.value,\n\t      column: this._getColumn(channel),\n\t    }\n\t  }\n\t}\n\t\n\tBMSNoteBuilder.prototype._getBeat = function(object) {\n\t  return this._chart.measureToBeat(object.measure, object.fraction)\n\t}\n\t\n\tBMSNoteBuilder.prototype._getColumn = function(channel) {\n\t  return this._channelMapping[channel]\n\t}\n\t\n\tBMSNoteBuilder.prototype._normalizeChannel = function(channel) {\n\t  return channel.replace(/^5/, '1').replace(/^6/, '2')\n\t}\n\t\n\n\n/***/ },\n\n/***/ 146:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar DataStructure = __webpack_require__(52)\n\t\n\tvar Column = new DataStructure({\n\t  column: String,\n\t})\n\t\n\t/**\n\t * @class Note\n\t */\n\tmodule.exports = new DataStructure({\n\t\n\t  /**\n\t   * @property beat\n\t   * @type Number\n\t   */\n\t  beat: Number,\n\t\n\t  /**\n\t   * @property endBeat\n\t   * @type Number|undefined\n\t   */\n\t  endBeat: DataStructure.maybe(Number),\n\t\n\t  /**\n\t   * @property column\n\t   * @type Column|undefined\n\t   */\n\t  column: DataStructure.maybe(Column),\n\t\n\t  /**\n\t   * @property keysound\n\t   * @type String\n\t   */\n\t  keysound: String,\n\t\n\t})\n\n\n/***/ },\n\n/***/ 147:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar chardet = __webpack_require__(139)\n\t\n\texports.read = function read(buffer) {\n\t  throw new Error('Synchronous read unsupported in browser!')\n\t}\n\t\n\texports.readAsync = function read(buffer, callback) {\n\t  var charset = chardet.detect(buffer)\n\t  var reader = new FileReader()\n\t  reader.onload = function() {\n\t    callback(null, reader.result)\n\t  }\n\t  reader.onerror = function() {\n\t    callback(new Error('cannot read it'))\n\t  }\n\t  reader.readAsText(new Blob([buffer]), charset)\n\t}\n\t\n\n\n/***/ },\n\n/***/ 148:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar match = __webpack_require__(85)\n\tmodule.exports = SongInfo\n\t\n\tfunction SongInfo() {\n\t  this.title      = 'NO TITLE'\n\t  this.artist     = 'NO ARTIST'\n\t  this.genre      = 'NO GENRE'\n\t  this.subtitles  = []\n\t  this.subartists = []\n\t  this.difficulty = 0\n\t  this.level      = 0\n\t}\n\t\n\tSongInfo.fromBMSChart = function(chart) {\n\t  var info = new SongInfo()\n\t  var title      = chart.headers.get('title')\n\t  var artist     = chart.headers.get('artist')\n\t  var genre      = chart.headers.get('genre')\n\t  var difficulty = +chart.headers.get('difficulty')\n\t  var level      = +chart.headers.get('playlevel')\n\t  var subtitles  = chart.headers.getAll('subtitle')\n\t  var subartists = chart.headers.getAll('subartist')\n\t  if (typeof title === 'string' && !subtitles) {\n\t    var extractSubtitle = function(m) {\n\t      title = m[1]\n\t      subtitles = [m[2]]\n\t    }\n\t    match(title)\n\t    .when(/^(.*\\S)\\s*-(.+?)-$/,   extractSubtitle)\n\t    .when(/^(.*\\S)\\s*～(.+?)～$/, extractSubtitle)\n\t    .when(/^(.*\\S)\\s*\\((.+?)\\)$/, extractSubtitle)\n\t    .when(/^(.*\\S)\\s*\\[(.+?)\\]$/, extractSubtitle)\n\t    .when(/^(.*\\S)\\s*<(.+?)>$/,   extractSubtitle)\n\t  }\n\t  if (title)      info.title      = title\n\t  if (artist)     info.artist     = artist\n\t  if (genre)      info.genre      = genre\n\t  if (subtitles)  info.subtitles  = subtitles\n\t  if (subartists) info.subartists = subartists\n\t  if (difficulty) info.difficulty = difficulty\n\t  if (level)      info.level      = level\n\t  return info\n\t}\n\t\n\n\n/***/ },\n\n/***/ 149:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar DataStructure = __webpack_require__(52)\n\t\n\t/**\n\t * @class Segment\n\t */\n\tmodule.exports = new DataStructure({\n\t\n\t  /**\n\t   * @property t\n\t   * @type Number\n\t   */\n\t  t: Number,\n\t\n\t  /**\n\t   * @property x\n\t   * @type Number\n\t   */\n\t  x: Number,\n\t\n\t  /**\n\t   * @property dx\n\t   * @type Number\n\t   */\n\t  dx: Number,\n\t\n\t})\n\t\n\n\n/***/ },\n\n/***/ 150:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t// The Timing module converts between beats and seconds.\n\t// They are created from a notechart.\n\t\n\tvar Speedcore = __webpack_require__(117)\n\tvar _ = __webpack_require__(12)\n\t\n\t/**\n\t * @module timing\n\t */\n\tmodule.exports = Timing\n\t\n\tvar precedence = { bpm: 1, stop: 2 }\n\t\n\tfunction Timing(initialBPM, actions) {\n\t  var state = { bpm: initialBPM, beat: 0, seconds: 0 }\n\t  var segments = [ ]\n\t  segments.push({\n\t    t: 0,\n\t    x: 0,\n\t    dx: state.bpm / 60,\n\t    bpm: state.bpm,\n\t    inclusive: true,\n\t  })\n\t  actions = actions.slice()\n\t  actions.sort(function(a, b) {\n\t    return a.beat - b.beat || precedence[a.type] - precedence[b.type]\n\t  })\n\t  actions.forEach(function(action) {\n\t    var beat    = action.beat\n\t    var seconds = state.seconds + (beat - state.beat) * 60 / state.bpm\n\t    switch (action.type) {\n\t    case 'bpm':\n\t      state.bpm = action.bpm\n\t      segments.push({\n\t        t: seconds,\n\t        x: beat,\n\t        dx: state.bpm / 60,\n\t        bpm: state.bpm,\n\t        inclusive: true,\n\t      })\n\t      break\n\t    case 'stop':\n\t      segments.push({\n\t        t: seconds,\n\t        x: beat,\n\t        dx: 0,\n\t        bpm: state.bpm,\n\t        inclusive: true,\n\t      })\n\t      seconds += (action.stopBeats || 0) * 60 / state.bpm\n\t      segments.push({\n\t        t: seconds,\n\t        x: beat,\n\t        dx: state.bpm / 60,\n\t        bpm: state.bpm,\n\t        inclusive: false,\n\t      })\n\t      break\n\t    default:\n\t      throw new Error(\"Unrecognized segment object!\")\n\t    }\n\t    state.beat    = beat\n\t    state.seconds = seconds\n\t  })\n\t  this._speedcore   = new Speedcore(segments)\n\t  this._eventBeats  = _.uniq(_.pluck(actions, 'beat'), true)\n\t}\n\t\n\tTiming.prototype.beatToSeconds = function(beat) {\n\t  return this._speedcore.t(beat)\n\t}\n\t\n\tTiming.prototype.secondsToBeat = function(seconds) {\n\t  return this._speedcore.x(seconds)\n\t}\n\t\n\tTiming.prototype.bpmAtBeat = function(beat) {\n\t  return this._speedcore.segmentAtX(beat).bpm\n\t}\n\t\n\tTiming.prototype.getEventBeats = function(beat) {\n\t  return this._eventBeats\n\t}\n\t\n\tTiming.fromBMSChart = function(chart) {\n\t  var actions = []\n\t  chart.objects.all().forEach(function(object) {\n\t    var bpm\n\t    var beat = chart.measureToBeat(object.measure, object.fraction)\n\t    if (object.channel === '03') {\n\t      bpm = parseInt(object.value, 16)\n\t      actions.push({ type: 'bpm', beat: beat, bpm: bpm })\n\t    } else if (object.channel === '08') {\n\t      bpm = +chart.headers.get('bpm' + object.value)\n\t      if (!isNaN(bpm)) actions.push({ type: 'bpm', beat: beat, bpm: bpm })\n\t    } else if (object.channel === '09') {\n\t      var stopBeats = chart.headers.get('stop' + object.value) / 48\n\t      actions.push({ type: 'stop', beat: beat, stopBeats: stopBeats })\n\t    }\n\t  })\n\t  return new Timing(+chart.headers.get('bpm') || 60, actions)\n\t}\n\t\n\n\n/***/ },\n\n/***/ 151:\n/***/ function(module, exports, __webpack_require__) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 152:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ },\n\n/***/ 245:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; };\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar _toConsumableArray = function (arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar co = _interopRequire(__webpack_require__(38));\n\t\n\tvar readBlob = _interopRequire(__webpack_require__(77));\n\t\n\tvar ProgressUtils = _interopRequireWildcard(__webpack_require__(76));\n\t\n\tvar DndResources = exports.DndResources = (function () {\n\t  function DndResources(event) {\n\t    _classCallCheck(this, DndResources);\n\t\n\t    this._files = getFilesFromEvent(event);\n\t  }\n\t\n\t  _createClass(DndResources, {\n\t    file: {\n\t      value: function file(name) {\n\t        return this._files.then(function (files) {\n\t          var _iteratorNormalCompletion = true;\n\t          var _didIteratorError = false;\n\t          var _iteratorError = undefined;\n\t\n\t          try {\n\t            for (var _iterator = files[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t              var file = _step.value;\n\t\n\t              if (file.name.toLowerCase() === name.toLowerCase()) {\n\t                return new FileResource(file.file);\n\t              }\n\t            }\n\t          } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t          } finally {\n\t            try {\n\t              if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t                _iterator[\"return\"]();\n\t              }\n\t            } finally {\n\t              if (_didIteratorError) {\n\t                throw _iteratorError;\n\t              }\n\t            }\n\t          }\n\t\n\t          throw new Error(\"unable to find \" + name);\n\t        });\n\t      }\n\t    },\n\t    fileList: {\n\t      get: function () {\n\t        return Promise.resolve(this._files.map(function (f) {\n\t          return f.name;\n\t        }));\n\t      }\n\t    }\n\t  });\n\t\n\t  return DndResources;\n\t})();\n\t\n\tvar FileResource = exports.FileResource = (function () {\n\t  function FileResource(file) {\n\t    _classCallCheck(this, FileResource);\n\t\n\t    this._file = file;\n\t  }\n\t\n\t  _createClass(FileResource, {\n\t    read: {\n\t      value: function read(progress) {\n\t        return ProgressUtils.atomic(progress, readBlob(this._file).as(\"arraybuffer\"));\n\t      }\n\t    },\n\t    name: {\n\t      get: function () {\n\t        return this._file.name;\n\t      }\n\t    }\n\t  });\n\t\n\t  return FileResource;\n\t})();\n\t\n\texports[\"default\"] = DndResources;\n\t\n\tfunction getFilesFromEvent(event) {\n\t\n\t  var out = [];\n\t\n\t  return co(regeneratorRuntime.mark(function callee$1$0() {\n\t    var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, item, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, file;\n\t\n\t    return regeneratorRuntime.wrap(function callee$1$0$(context$2$0) {\n\t      while (1) switch (context$2$0.prev = context$2$0.next) {\n\t        case 0:\n\t          if (!event.dataTransfer.items) {\n\t            context$2$0.next = 29;\n\t            break;\n\t          }\n\t\n\t          _iteratorNormalCompletion = true;\n\t          _didIteratorError = false;\n\t          _iteratorError = undefined;\n\t          context$2$0.prev = 4;\n\t          _iterator = Array.from(event.dataTransfer.items)[Symbol.iterator]();\n\t\n\t        case 6:\n\t          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t            context$2$0.next = 13;\n\t            break;\n\t          }\n\t\n\t          item = _step.value;\n\t          context$2$0.next = 10;\n\t          return readItem(item);\n\t\n\t        case 10:\n\t          _iteratorNormalCompletion = true;\n\t          context$2$0.next = 6;\n\t          break;\n\t\n\t        case 13:\n\t          context$2$0.next = 19;\n\t          break;\n\t\n\t        case 15:\n\t          context$2$0.prev = 15;\n\t          context$2$0.t3 = context$2$0[\"catch\"](4);\n\t          _didIteratorError = true;\n\t          _iteratorError = context$2$0.t3;\n\t\n\t        case 19:\n\t          context$2$0.prev = 19;\n\t          context$2$0.prev = 20;\n\t\n\t          if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t            _iterator[\"return\"]();\n\t          }\n\t\n\t        case 22:\n\t          context$2$0.prev = 22;\n\t\n\t          if (!_didIteratorError) {\n\t            context$2$0.next = 25;\n\t            break;\n\t          }\n\t\n\t          throw _iteratorError;\n\t\n\t        case 25:\n\t          return context$2$0.finish(22);\n\t\n\t        case 26:\n\t          return context$2$0.finish(19);\n\t\n\t        case 27:\n\t          context$2$0.next = 49;\n\t          break;\n\t\n\t        case 29:\n\t          if (!event.dataTransfer.files) {\n\t            context$2$0.next = 49;\n\t            break;\n\t          }\n\t\n\t          _iteratorNormalCompletion2 = true;\n\t          _didIteratorError2 = false;\n\t          _iteratorError2 = undefined;\n\t          context$2$0.prev = 33;\n\t\n\t          for (_iterator2 = Array.from(event.dataTransfer.files)[Symbol.iterator](); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            file = _step2.value;\n\t\n\t            addFile(file);\n\t          }\n\t          context$2$0.next = 41;\n\t          break;\n\t\n\t        case 37:\n\t          context$2$0.prev = 37;\n\t          context$2$0.t4 = context$2$0[\"catch\"](33);\n\t          _didIteratorError2 = true;\n\t          _iteratorError2 = context$2$0.t4;\n\t\n\t        case 41:\n\t          context$2$0.prev = 41;\n\t          context$2$0.prev = 42;\n\t\n\t          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"]) {\n\t            _iterator2[\"return\"]();\n\t          }\n\t\n\t        case 44:\n\t          context$2$0.prev = 44;\n\t\n\t          if (!_didIteratorError2) {\n\t            context$2$0.next = 47;\n\t            break;\n\t          }\n\t\n\t          throw _iteratorError2;\n\t\n\t        case 47:\n\t          return context$2$0.finish(44);\n\t\n\t        case 48:\n\t          return context$2$0.finish(41);\n\t\n\t        case 49:\n\t          return context$2$0.abrupt(\"return\", out);\n\t\n\t        case 50:\n\t        case \"end\":\n\t          return context$2$0.stop();\n\t      }\n\t    }, callee$1$0, this, [[4, 15, 19, 27], [20,, 22, 26], [33, 37, 41, 49], [42,, 44, 48]]);\n\t  }));\n\t\n\t  function readItem(item) {\n\t    return co(regeneratorRuntime.mark(function callee$2$0() {\n\t      var entry, file;\n\t      return regeneratorRuntime.wrap(function callee$2$0$(context$3$0) {\n\t        while (1) switch (context$3$0.prev = context$3$0.next) {\n\t          case 0:\n\t            entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\n\t\n\t            if (!entry) {\n\t              context$3$0.next = 6;\n\t              break;\n\t            }\n\t\n\t            context$3$0.next = 4;\n\t            return readEntry(entry, \"\");\n\t\n\t          case 4:\n\t            context$3$0.next = 8;\n\t            break;\n\t\n\t          case 6:\n\t            file = item.getAsFile && item.getAsFile();\n\t\n\t            addFile(file);\n\t\n\t          case 8:\n\t          case \"end\":\n\t            return context$3$0.stop();\n\t        }\n\t      }, callee$2$0, this);\n\t    }));\n\t  }\n\t\n\t  function readEntry(entry) {\n\t    if (entry.isFile) {\n\t      return readFile(entry);\n\t    } else if (entry.isDirectory) {\n\t      return readDirectory(entry);\n\t    }\n\t  }\n\t\n\t  function readFile(entry) {\n\t    return new Promise(function (resolve, reject) {\n\t      entry.file(resolve, reject);\n\t    }).tap(function (file) {\n\t      addFile(file);\n\t    });\n\t  }\n\t\n\t  function readDirectory(dir) {\n\t    return co(regeneratorRuntime.mark(function callee$2$0() {\n\t      var entries, reader, readMore, results, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, entry;\n\t\n\t      return regeneratorRuntime.wrap(function callee$2$0$(context$3$0) {\n\t        while (1) switch (context$3$0.prev = context$3$0.next) {\n\t          case 0:\n\t            entries = [];\n\t            reader = dir.createReader();\n\t\n\t            readMore = function () {\n\t              return new Promise(function (resolve, reject) {\n\t                reader.readEntries(resolve, reject);\n\t              });\n\t            };\n\t\n\t          case 3:\n\t            context$3$0.next = 5;\n\t            return readMore();\n\t\n\t          case 5:\n\t            results = context$3$0.sent;\n\t\n\t            if (!(!results || results.length === 0)) {\n\t              context$3$0.next = 8;\n\t              break;\n\t            }\n\t\n\t            return context$3$0.abrupt(\"break\", 11);\n\t\n\t          case 8:\n\t            entries.push.apply(entries, _toConsumableArray(Array.from(results)));\n\t\n\t          case 9:\n\t            context$3$0.next = 3;\n\t            break;\n\t\n\t          case 11:\n\t            _iteratorNormalCompletion = true;\n\t            _didIteratorError = false;\n\t            _iteratorError = undefined;\n\t            context$3$0.prev = 14;\n\t            _iterator = entries[Symbol.iterator]();\n\t\n\t          case 16:\n\t            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t              context$3$0.next = 23;\n\t              break;\n\t            }\n\t\n\t            entry = _step.value;\n\t            context$3$0.next = 20;\n\t            return readEntry(entry);\n\t\n\t          case 20:\n\t            _iteratorNormalCompletion = true;\n\t            context$3$0.next = 16;\n\t            break;\n\t\n\t          case 23:\n\t            context$3$0.next = 29;\n\t            break;\n\t\n\t          case 25:\n\t            context$3$0.prev = 25;\n\t            context$3$0.t5 = context$3$0[\"catch\"](14);\n\t            _didIteratorError = true;\n\t            _iteratorError = context$3$0.t5;\n\t\n\t          case 29:\n\t            context$3$0.prev = 29;\n\t            context$3$0.prev = 30;\n\t\n\t            if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t              _iterator[\"return\"]();\n\t            }\n\t\n\t          case 32:\n\t            context$3$0.prev = 32;\n\t\n\t            if (!_didIteratorError) {\n\t              context$3$0.next = 35;\n\t              break;\n\t            }\n\t\n\t            throw _iteratorError;\n\t\n\t          case 35:\n\t            return context$3$0.finish(32);\n\t\n\t          case 36:\n\t            return context$3$0.finish(29);\n\t\n\t          case 37:\n\t          case \"end\":\n\t            return context$3$0.stop();\n\t        }\n\t      }, callee$2$0, this, [[14, 25, 29, 37], [30,, 32, 36]]);\n\t    }));\n\t  }\n\t\n\t  function addFile(file) {\n\t    if (file) {\n\t      out.push({ name: file.name, file: file });\n\t    }\n\t  }\n\t}\n\n/***/ },\n\n/***/ 249:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t\n\t;(function (exports) {\n\t\t'use strict';\n\t\n\t  var Arr = (typeof Uint8Array !== 'undefined')\n\t    ? Uint8Array\n\t    : Array\n\t\n\t\tvar PLUS   = '+'.charCodeAt(0)\n\t\tvar SLASH  = '/'.charCodeAt(0)\n\t\tvar NUMBER = '0'.charCodeAt(0)\n\t\tvar LOWER  = 'a'.charCodeAt(0)\n\t\tvar UPPER  = 'A'.charCodeAt(0)\n\t\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\t\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\t\n\t\tfunction decode (elt) {\n\t\t\tvar code = elt.charCodeAt(0)\n\t\t\tif (code === PLUS ||\n\t\t\t    code === PLUS_URL_SAFE)\n\t\t\t\treturn 62 // '+'\n\t\t\tif (code === SLASH ||\n\t\t\t    code === SLASH_URL_SAFE)\n\t\t\t\treturn 63 // '/'\n\t\t\tif (code < NUMBER)\n\t\t\t\treturn -1 //no match\n\t\t\tif (code < NUMBER + 10)\n\t\t\t\treturn code - NUMBER + 26 + 26\n\t\t\tif (code < UPPER + 26)\n\t\t\t\treturn code - UPPER\n\t\t\tif (code < LOWER + 26)\n\t\t\t\treturn code - LOWER + 26\n\t\t}\n\t\n\t\tfunction b64ToByteArray (b64) {\n\t\t\tvar i, j, l, tmp, placeHolders, arr\n\t\n\t\t\tif (b64.length % 4 > 0) {\n\t\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t\t}\n\t\n\t\t\t// the number of equal signs (place holders)\n\t\t\t// if there are two placeholders, than the two characters before it\n\t\t\t// represent one byte\n\t\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t\t// this is just a cheap hack to not do indexOf twice\n\t\t\tvar len = b64.length\n\t\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\t\n\t\t\t// base64 is 4/3 + up to two characters of the original data\n\t\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\t\n\t\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\t\n\t\t\tvar L = 0\n\t\n\t\t\tfunction push (v) {\n\t\t\t\tarr[L++] = v\n\t\t\t}\n\t\n\t\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t}\n\t\n\t\t\tif (placeHolders === 2) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t} else if (placeHolders === 1) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t}\n\t\n\t\t\treturn arr\n\t\t}\n\t\n\t\tfunction uint8ToBase64 (uint8) {\n\t\t\tvar i,\n\t\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\t\toutput = \"\",\n\t\t\t\ttemp, length\n\t\n\t\t\tfunction encode (num) {\n\t\t\t\treturn lookup.charAt(num)\n\t\t\t}\n\t\n\t\t\tfunction tripletToBase64 (num) {\n\t\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t\t}\n\t\n\t\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\t\toutput += tripletToBase64(temp)\n\t\t\t}\n\t\n\t\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\t\tswitch (extraBytes) {\n\t\t\t\tcase 1:\n\t\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\t\toutput += '=='\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\t\toutput += '='\n\t\t\t\t\tbreak\n\t\t\t}\n\t\n\t\t\treturn output\n\t\t}\n\t\n\t\texports.toByteArray = b64ToByteArray\n\t\texports.fromByteArray = uint8ToBase64\n\t}(false ? (this.base64js = {}) : exports))\n\n\n/***/ },\n\n/***/ 250:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m,\n\t      eLen = nBytes * 8 - mLen - 1,\n\t      eMax = (1 << eLen) - 1,\n\t      eBias = eMax >> 1,\n\t      nBits = -7,\n\t      i = isLE ? (nBytes - 1) : 0,\n\t      d = isLE ? -1 : 1,\n\t      s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c,\n\t      eLen = nBytes * 8 - mLen - 1,\n\t      eMax = (1 << eLen) - 1,\n\t      eBias = eMax >> 1,\n\t      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n\t      i = isLE ? 0 : (nBytes - 1),\n\t      d = isLE ? 1 : -1,\n\t      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ },\n\n/***/ 251:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * isArray\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * toString\n\t */\n\t\n\tvar str = Object.prototype.toString;\n\t\n\t/**\n\t * Whether or not the given `val`\n\t * is an array.\n\t *\n\t * example:\n\t *\n\t *        isArray([]);\n\t *        // > true\n\t *        isArray(arguments);\n\t *        // > false\n\t *        isArray('');\n\t *        // > false\n\t *\n\t * @param {mixed} val\n\t * @return {bool}\n\t */\n\t\n\tmodule.exports = isArray || function (val) {\n\t  return !! val && '[object Array]' == str.call(val);\n\t};\n\n\n/***/ },\n\n/***/ 434:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\texports.main = main;\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar $ = _interopRequire(__webpack_require__(51));\n\t\n\tvar co = _interopRequire(__webpack_require__(38));\n\t\n\tvar SamplingMaster = _interopRequire(__webpack_require__(83));\n\t\n\tvar DndResources = _interopRequire(__webpack_require__(245));\n\t\n\tvar ctx = _interopRequire(__webpack_require__(120));\n\t\n\tvar Reader = _interopRequire(__webpack_require__(147));\n\t\n\tvar Compiler = _interopRequire(__webpack_require__(138));\n\t\n\tvar Timing = _interopRequire(__webpack_require__(150));\n\t\n\tvar Notes = _interopRequire(__webpack_require__(145));\n\t\n\tvar SongInfo = _interopRequire(__webpack_require__(148));\n\t\n\tvar template = _interopRequire(__webpack_require__(606));\n\t\n\t__webpack_require__(705);\n\t\n\tfunction main(element) {\n\t\n\t  $(element).text(\"Technical Demo!\").on(\"click\", handler);\n\t\n\t  function handler() {\n\t    ui();\n\t    $(element).off(\"click\", handler);\n\t    $(element).hide();\n\t    return false;\n\t  }\n\t\n\t  function ui() {\n\t    var el = $(template()).appendTo(\"body\");\n\t    el.find(\".js-play\").hide();\n\t    el.on(\"dragover\", function () {\n\t      return false;\n\t    }).on(\"drop\", function (e) {\n\t      e.preventDefault();\n\t      var dndLoader = new DndResources(e.originalEvent);\n\t      go(dndLoader, el);\n\t      return false;\n\t    });\n\t  }\n\t}\n\t\n\tfunction go(loader, element) {\n\t\n\t  var master = new SamplingMaster(ctx);\n\t  var $log = element.find(\".js-log\");\n\t  var $play = element.find(\".js-play\").hide();\n\t  var $sampler = element.find(\".js-sampler\");\n\t\n\t  co(regeneratorRuntime.mark(function callee$1$0() {\n\t    var list, bmsFile, arraybuffer, buffer, text, chart, timing, notes, info, samples;\n\t    return regeneratorRuntime.wrap(function callee$1$0$(context$2$0) {\n\t      while (1) switch (context$2$0.prev = context$2$0.next) {\n\t        case 0:\n\t          log(\"Loading file list\");\n\t          context$2$0.next = 3;\n\t          return loader.fileList;\n\t\n\t        case 3:\n\t          list = context$2$0.sent;\n\t          bmsFile = list.filter(function (f) {\n\t            return f.match(/\\.(?:bms|bme|bml|pms)$/i);\n\t          })[0];\n\t\n\t          log(\"Loading \" + bmsFile);\n\t\n\t          context$2$0.next = 8;\n\t          return loader.file(bmsFile);\n\t\n\t        case 8:\n\t          context$2$0.next = 10;\n\t          return context$2$0.sent.read();\n\t\n\t        case 10:\n\t          arraybuffer = context$2$0.sent;\n\t          buffer = new Buffer(new Uint8Array(arraybuffer));\n\t          context$2$0.next = 14;\n\t          return Promise.promisify(Reader.readAsync)(buffer);\n\t\n\t        case 14:\n\t          text = context$2$0.sent;\n\t          chart = Compiler.compile(text).chart;\n\t          timing = Timing.fromBMSChart(chart);\n\t          notes = Notes.fromBMSChart(chart);\n\t          info = SongInfo.fromBMSChart(chart);\n\t\n\t          $(\"<pre wrap></pre>\").text(JSON.stringify(info, null, 2)).appendTo($sampler);\n\t          log(\"Loading samples\");\n\t          context$2$0.next = 23;\n\t          return loadSamples(notes, chart);\n\t\n\t        case 23:\n\t          samples = context$2$0.sent;\n\t\n\t          log(\"Click the button to play!\");\n\t          context$2$0.next = 27;\n\t          return waitForPlay();\n\t\n\t        case 27:\n\t          void (function () {\n\t            master.unmute();\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t              for (var _iterator = notes.all()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                (function () {\n\t                  var note = _step.value;\n\t\n\t                  setTimeout(function () {\n\t                    var sample = samples[note.keysound];\n\t                    if (!sample) {\n\t                      console.log(\"warn: unknown sample \" + note.keysound);\n\t                      return;\n\t                    }\n\t                    var span = $(\"<span></span>\").text(\"[\" + note.keysound + \"] \").appendTo($sampler);\n\t                    var instance = sample.play();\n\t                    $sampler[0].scrollTop = $sampler[0].scrollHeight;\n\t                    instance.onstop = function () {\n\t                      span.addClass(\"is-off\");\n\t                    };\n\t                  }, timing.beatToSeconds(note.beat) * 1000);\n\t                })();\n\t              }\n\t            } catch (err) {\n\t              _didIteratorError = true;\n\t              _iteratorError = err;\n\t            } finally {\n\t              try {\n\t                if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t                  _iterator[\"return\"]();\n\t                }\n\t              } finally {\n\t                if (_didIteratorError) {\n\t                  throw _iteratorError;\n\t                }\n\t              }\n\t            }\n\t\n\t            return false;\n\t          })();\n\t\n\t        case 28:\n\t        case \"end\":\n\t          return context$2$0.stop();\n\t      }\n\t    }, callee$1$0, this);\n\t  })).done();\n\t\n\t  function waitForPlay() {\n\t    return new Promise(function (resolve) {\n\t      $play.show();\n\t      $play.on(\"click\", function () {\n\t        resolve();\n\t        $play.hide();\n\t      });\n\t    });\n\t  }\n\t\n\t  function log(t) {\n\t    $log.text(t);\n\t  }\n\t\n\t  function loadSamples(notes, chart) {\n\t    var samples = {};\n\t    var promises = [];\n\t    var completed = 0;\n\t\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t      for (var _iterator = notes.all()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        (function () {\n\t          var note = _step.value;\n\t\n\t          var keysound = note.keysound;\n\t          if (!(keysound in samples)) {\n\t            samples[keysound] = null;\n\t            promises.push(loadKeysound(chart.headers.get(\"wav\" + keysound)).then(function (blob) {\n\t              return master.sample(blob);\n\t            }).then(function (sample) {\n\t              return samples[keysound] = sample;\n\t            })[\"catch\"](function (e) {\n\t              return console.error(\"Unable to load \" + keysound + \": \" + e);\n\t            }).tap(function () {\n\t              return log(\"[loaded \" + ++completed + \"/\" + promises.length + \" samples]\");\n\t            }));\n\t          }\n\t        })();\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t          _iterator[\"return\"]();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\t\n\t    return Promise.all(promises).then(function () {\n\t      return samples;\n\t    });\n\t  }\n\t\n\t  function loadKeysound(name) {\n\t    if (typeof name !== \"string\") {\n\t      return Promise.reject(new Error(\"Empty name\"));\n\t    }return loader.file(name)[\"catch\"](function () {\n\t      return loader.file(name.replace(/\\.\\w+$/, \".ogg\"));\n\t    })[\"catch\"](function () {\n\t      return loader.file(name.replace(/\\.\\w+$/, \".mp3\"));\n\t    })[\"catch\"](function () {\n\t      return loader.file(name.replace(/\\.\\w+$/, \".wav\"));\n\t    }).then(function (file) {\n\t      return file.read();\n\t    });\n\t  }\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(119).Buffer))\n\n/***/ },\n\n/***/ 584:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(8)();\n\texports.push([module.id, \".jukebox--overlay{position:fixed;top:0;right:0;bottom:0;left:0;background:rgba(139,134,133,.5)}.jukebox--inner{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);border:2px solid #8b8685;background:#252423;padding:12px}.jukebox--sampler{background:#090807;padding:9px;border:1px solid #8b8685;margin-top:10px;height:192px;width:40em;overflow:auto}.jukebox--sampler span{font-size:12px;opacity:1;transition:.5s opacity}.jukebox--sampler span.is-off{color:#8b8685;opacity:0}.jukebox h1{margin:0 0 20px;font:30px Helvetica Neue,Helvetica,sans-serif}.jukebox p{margin:10px 0 0}.jukebox .jukebox--status{color:#8b8685;font-style:italic;margin-bottom:20px}.jukebox button{display:block;box-sizing:border-box;width:100%;background:#090807;color:#7f3;cursor:pointer;border:1px solid #8b8685;padding:8px;font:700 15px verdana,sans-serif;margin-top:18px}\", \"\"]);\n\n/***/ },\n\n/***/ 606:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(402);\n\t\n\tmodule.exports = function template(locals) {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tbuf.push(\"<div class=\\\"jukebox\\\"><div class=\\\"jukebox--overlay\\\"></div><div class=\\\"jukebox--inner\\\"><h1>BMS Jukebox</h1><p class=\\\"jukebox--status js-log\\\">Waiting for BMS file...</p><p>Google Chrome: Drag a BMS folder into this box.</p><p>Firefox, Safari: Select all files (BMS+sounds) and drag into this box.</p><button class=\\\"js-play\\\">Click Here to Play</button><div class=\\\"js-sampler jukebox--sampler\\\"></div></div></div>\");;return buf.join(\"\");\n\t}\n\n/***/ },\n\n/***/ 705:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(584);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(7)(content, {});\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tmodule.hot.accept(\"!!/home/ubuntu/bemuse/node_modules/css-loader/index.js!/home/ubuntu/bemuse/node_modules/autoprefixer-loader/index.js?browsers=last 2 version!/home/ubuntu/bemuse/node_modules/sass-loader/index.js?outputStyle=expanded!/home/ubuntu/bemuse/src/hacks/sass-import-rewriter/index.loader.js!/home/ubuntu/bemuse/src/coming-soon/demo/style.scss\", function() {\n\t\t\tvar newContent = require(\"!!/home/ubuntu/bemuse/node_modules/css-loader/index.js!/home/ubuntu/bemuse/node_modules/autoprefixer-loader/index.js?browsers=last 2 version!/home/ubuntu/bemuse/node_modules/sass-loader/index.js?outputStyle=expanded!/home/ubuntu/bemuse/src/hacks/sass-import-rewriter/index.loader.js!/home/ubuntu/bemuse/src/coming-soon/demo/style.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** comingSoonDemo-3b2c39a2b7357cd01d9a.js\n **/","/**\n * @license\n * lodash 3.9.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.9.3';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_DROP_WHILE_FLAG = 0,\n      LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n   * In addition to special characters the forward slash is escaped to allow for\n   * easier `eval` use and `Function` compilation.\n   */\n  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to detect and test for whitespace. */\n  var whitespace = (\n    // Basic whitespace characters.\n    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\n    // Line terminators.\n    '\\n\\r\\u2028\\u2029' +\n\n    // Unicode category \"Zs\" space separators.\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n    'isFinite', 'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', 'window'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of each element\n   * in a collection and stable sort them in the following order:\n   *\n   * If `orders` is unspecified, sort in ascending order for all properties.\n   * Otherwise, for each property, sort in ascending order if its corresponding value in\n   * orders is true, and descending order if false.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        return result * (orders[index] ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to detect DOM support. */\n    var document = (document = context.window) ? document.document : null;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = context._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      escapeRegExp(fnToString.call(hasOwnProperty))\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = getNative(context, 'ArrayBuffer'),\n        bufferSlice = getNative(ArrayBuffer && new ArrayBuffer(0), 'slice'),\n        ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        getPrototypeOf = getNative(Object, 'getPrototypeOf'),\n        parseFloat = context.parseFloat,\n        push = arrayProto.push,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = getNative(context, 'Uint8Array'),\n        WeakMap = getNative(context, 'WeakMap');\n\n    /** Used to clone array buffers. */\n    var Float64Array = (function() {\n      // Safari 5 errors when using an array buffer to initialize a typed array\n      // where the array buffer's `byteLength` is not a multiple of the typed\n      // array's `BYTES_PER_ELEMENT`.\n      try {\n        var func = getNative(context, 'Float64Array'),\n            result = new func(new ArrayBuffer(10), 0, 1) && func;\n      } catch(e) {}\n      return result || null;\n    }());\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCreate = getNative(Object, 'create'),\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeNumIsFinite = getNative(Number, 'isFinite'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /** Used as the size, in bytes, of each `Float64Array` element. */\n    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n    /**\n     * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that return a boolean or single value will\n     * automatically end the chain returning the unwrapped value. Explicit chaining\n     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n     * that is, execution is deferred until `_#value` is implicitly or explicitly\n     * called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization that merges iteratees to avoid creating intermediate\n     * arrays and reduce the number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n     * `difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n     * `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n     * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n     * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n     * `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `method`, `methodOf`, `mixin`, `negate`, `omit`, `once`,\n     * `pairs`, `partial`, `partialRight`, `partition`, `pick`, `plant`, `pluck`,\n     * `property`, `propertyOf`, `pull`, `pullAt`, `push`, `range`, `rearg`,\n     * `reject`, `remove`, `rest`, `restParam`, `reverse`, `set`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `sortByAll`, `sortByOrder`, `splice`, `spread`,\n     * `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,\n     * `thru`, `times`, `toArray`, `toPlainObject`, `transform`, `union`, `uniq`,\n     * `unshift`, `unzip`, `unzipWith`, `values`, `valuesIn`, `where`, `without`,\n     * `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `get`,\n     * `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`, `inRange`, `isArguments`,\n     * `isArray`, `isBoolean`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`,\n     * `isFinite` `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\n     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `lt`, `lte`,\n     * `max`, `min`, `noConflict`, `noop`, `now`, `pad`, `padLeft`, `padRight`,\n     * `parseInt`, `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`,\n     * `runInContext`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,\n     * `sortedLastIndex`, `startCase`, `startsWith`, `sum`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    (function(x) {\n      var Ctor = function() { this.x = x; },\n          object = { '0': x, 'length': x },\n          props = [];\n\n      Ctor.prototype = { 'valueOf': x, 'y': x };\n      for (var key in new Ctor) { props.push(key); }\n\n      /**\n       * Detect if the DOM is supported.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.dom = document.createDocumentFragment().nodeType === 11;\n      } catch(e) {\n        support.dom = false;\n      }\n    }(1, 0));\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = null;\n      this.__dir__ = 1;\n      this.__dropCount__ = 0;\n      this.__filtered__ = false;\n      this.__iteratees__ = null;\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = null;\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var actions = this.__actions__,\n          iteratees = this.__iteratees__,\n          views = this.__views__,\n          result = new LazyWrapper(this.__wrapped__);\n\n      result.__actions__ = actions ? arrayCopy(actions) : null;\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = iteratees ? arrayCopy(iteratees) : null;\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = views ? arrayCopy(views) : null;\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value();\n      if (!isArray(array)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var dir = this.__dir__,\n          isRight = dir < 0,\n          view = getView(0, array.length, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          takeCount = nativeMin(length, this.__takeCount__),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees ? iteratees.length : 0,\n          resIndex = 0,\n          result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type;\n\n          if (type == LAZY_DROP_WHILE_FLAG) {\n            if (data.done && (isRight ? (index > data.index) : (index < data.index))) {\n              data.count = 0;\n              data.done = false;\n            }\n            data.index = index;\n            if (!data.done) {\n              var limit = data.limit;\n              if (!(data.done = limit > -1 ? (data.count++ >= limit) : !iteratee(value))) {\n                continue outer;\n              }\n            }\n          } else {\n            var computed = iteratee(value);\n            if (type == LAZY_MAP_FLAG) {\n              value = computed;\n            } else if (!computed) {\n              if (type == LAZY_FILTER_FLAG) {\n                continue outer;\n              } else {\n                break outer;\n              }\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +array[length] || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = null;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= 200) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            value = baseFlatten(value, isDeep, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length;\n\n          while (++valIndex < valLength) {\n            result[++resIndex] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? null : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= 200,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var args = [result],\n            action = actions[index];\n\n        push.apply(args, action.args);\n        result = action.func.apply(action.thisArg, args);\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = floor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      return bufferSlice.call(buffer, 0);\n    }\n    if (!bufferSlice) {\n      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n        var byteLength = buffer.byteLength,\n            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n            result = new ArrayBuffer(byteLength);\n\n        if (floatLength) {\n          var view = new Float64Array(result, 0, floatLength);\n          view.set(new Float64Array(buffer, 0, floatLength));\n        }\n        if (byteLength != offset) {\n          view = new Uint8Array(result, offset);\n          view.set(new Uint8Array(buffer, offset));\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(argsLength + leftLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an accumulator\n     * object composed from the results of running each element in the collection\n     * through an iteratee.\n     *\n     * **Note:** This function is used to create `_.countBy`, `_.groupBy`, `_.indexBy`,\n     * and `_.partition`.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that assigns properties of source object(s) to a given\n     * destination object.\n     *\n     * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n      return new SetCache(values);\n    };\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = null;\n        }\n        var result = createWrapper(func, flag, null, null, null, null, null, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = null;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([]);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : null;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments;\n          if (wrapper && args.length == 1 && isArray(args[0])) {\n            return wrapper.plant(args[0]).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : args[0];\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, null, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? null : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : null,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : null,\n                newHoldersRight = isCurry ? null : argsHolders,\n                newPartials = isCurry ? args : null,\n                newPartialsRight = isCurry ? null : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(argsLength + leftLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = null;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = null;\n      }\n      var data = isBindKey ? null : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} value The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} [transforms] The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms ? transforms.length : 0;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `_.isPlainObject` which checks if `value`\n     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n     * of `null`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var Ctor,\n          support = lodash.support;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n          (!hasOwnProperty.call(value, 'constructor') &&\n            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(+size || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(ceil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value),\n            other = array[index];\n\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? baseDifference(result, array).concat(baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapper = wrapper.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapper.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapper = wrapper.plant(other);\n     *\n     * otherWrapper.value();\n     * // => [9, 16]\n     *\n     * wrapper.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        if (this.__actions__.length) {\n          value = new LazyWrapper(this);\n        }\n        return new LodashWrapper(value.reverse(), this.__chain__);\n      }\n      return this.thru(function(value) {\n        return value.reverse();\n      });\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (!length) {\n        return false;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n        : (getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : null);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `includes`, `merge`, `sortByAll`, and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. A truthy value in `orders` will\n     * sort the corresponding property name in ascending order while a falsey\n     * value will sort it in descending order.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], [true, false]), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = null;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = null;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, null, null, null, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = +wait;\n      debounceOptions.trailing = trailing;\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) && objToString.call(value) == argsTag;\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) &&\n        (objToString.call(value).indexOf('Element') > -1);\n    }\n    // Fallback for environments without DOM support.\n    if (!support.dom) {\n      isElement = function(value) {\n        return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n      };\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    var isFinite = nativeNumIsFinite || function(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    var isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return objToString.call(value) == funcTag;\n    };\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (objToString.call(value) == funcTag) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && objToString.call(value) == objectTag)) {\n        return false;\n      }\n      var valueOf = getNative(value, 'valueOf'),\n          objProto = valueOf && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObjectLike(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = null;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = restParam(function(args) {\n      var object = args[0];\n      if (object == null) {\n        return object;\n      }\n      args.push(assignDefaults);\n      return assign.apply(undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = null;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? null : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : null);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (typeof end === 'undefined') {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = null;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = floor(mid),\n          rightLength = ceil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard && isIterateeCall(string, radix, guard)) {\n        radix = 0;\n      }\n      return nativeParseInt(string, radix);\n    }\n    // Fallback for environments with pre-ES5 implementations.\n    if (nativeParseInt(whitespace + '08') != 8) {\n      parseInt = function(string, radix, guard) {\n        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n        // Chrome fails to trim leading <BOM> whitespace characters.\n        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n          radix = 0;\n        } else if (radix) {\n          radix = +radix;\n        }\n        string = trim(string);\n        return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n      };\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = floor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = null;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = null;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = null;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = null;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : null,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : null;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              var args = [this.value()];\n              push.apply(args, arguments);\n              return func.apply(object, args);\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = null;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = floor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      var callback = getCallback(),\n          noIteratee = iteratee == null;\n\n      if (!(noIteratee && callback === baseCallback)) {\n        noIteratee = false;\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return noIteratee\n        ? arraySum(isArray(collection) ? collection : toIterable(collection))\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['dropWhile', 'filter', 'map', 'takeWhile'], function(methodName, type) {\n      var isFilter = type != LAZY_MAP_FLAG,\n          isDropWhile = type == LAZY_DROP_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var filtered = this.__filtered__,\n            result = (filtered && isDropWhile) ? new LazyWrapper(this) : this.clone(),\n            iteratees = result.__iteratees__ || (result.__iteratees__ = []);\n\n        iteratees.push({\n          'done': false,\n          'count': 0,\n          'index': 0,\n          'iteratee': getCallback(iteratee, thisArg, 1),\n          'limit': -1,\n          'type': type\n        });\n\n        result.__filtered__ = filtered || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      var whileName = methodName + 'While';\n\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__,\n            result = (filtered && !index) ? this.dropWhile() : this.clone();\n\n        n = n == null ? 1 : nativeMax(floor(n) || 0, 0);\n        if (filtered) {\n          if (index) {\n            result.__takeCount__ = nativeMin(result.__takeCount__, n);\n          } else {\n            last(result.__iteratees__).limit = n;\n          }\n        } else {\n          var views = result.__views__ || (result.__views__ = []);\n          views.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n\n      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n        return this.reverse()[whileName](predicate, thisArg).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (start < 0) {\n        result = this.takeRight(-start);\n      } else if (start) {\n        result = this.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.drop(0);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (!lodashFunc) {\n        return;\n      }\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // avoid lazy use if the iteratee has a \"length\" value other than `1`\n          isLazy = useLazy = false;\n        }\n        var onlyLazy = isLazy && !isHybrid;\n        if (retUnwrapped && !chainAll) {\n          return onlyLazy\n            ? func.call(value)\n            : lodashFunc.call(lodash, this.value());\n        }\n        var interceptor = function(value) {\n          var otherArgs = [value];\n          push.apply(otherArgs, args);\n          return lodashFunc.apply(lodash, otherArgs);\n        };\n        if (useLazy) {\n          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n              result = func.apply(wrapper, args);\n\n          if (!retUnwrapped && (isHybrid || result.__actions__)) {\n            var actions = result.__actions__ || (result.__actions__ = []);\n            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n          }\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['concat', 'join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(null, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': null }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/index.js\n ** module id = 12\n ** module chunks = 2 3 4 5 6 8\n **/","\nmodule.exports = function(det, rec, confidence, name, lang) {\n  this.confidence = confidence;\n  this.name = name || rec.name(det);\n  this.lang = lang;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/~/bemuse-chardet/match.js\n ** module id = 31\n ** module chunks = 2 3 4 5 8\n **/","\r\n/**\r\n * slice() reference.\r\n */\r\n\r\nvar slice = Array.prototype.slice;\r\n\r\n/**\r\n * Expose `co`.\r\n */\r\n\r\nmodule.exports = co['default'] = co.co = co;\r\n\r\n/**\r\n * Wrap the given generator `fn` into a\r\n * function that returns a promise.\r\n * This is a separate function so that\r\n * every `co()` call doesn't create a new,\r\n * unnecessary closure.\r\n *\r\n * @param {GeneratorFunction} fn\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nco.wrap = function (fn) {\r\n  createPromise.__generatorFunction__ = fn;\r\n  return createPromise;\r\n  function createPromise() {\r\n    return co.call(this, fn.apply(this, arguments));\r\n  }\r\n};\r\n\r\n/**\r\n * Execute the generator function or a generator\r\n * and return a promise.\r\n *\r\n * @param {Function} fn\r\n * @return {Promise}\r\n * @api public\r\n */\r\n\r\nfunction co(gen) {\r\n  var ctx = this;\r\n\r\n  // we wrap everything in a promise to avoid promise chaining,\r\n  // which leads to memory leak errors.\r\n  // see https://github.com/tj/co/issues/180\r\n  return new Promise(function(resolve, reject) {\r\n    if (typeof gen === 'function') gen = gen.call(ctx);\r\n    if (!gen || typeof gen.next !== 'function') return resolve(gen);\r\n\r\n    onFulfilled();\r\n\r\n    /**\r\n     * @param {Mixed} res\r\n     * @return {Promise}\r\n     * @api private\r\n     */\r\n\r\n    function onFulfilled(res) {\r\n      var ret;\r\n      try {\r\n        ret = gen.next(res);\r\n      } catch (e) {\r\n        return reject(e);\r\n      }\r\n      next(ret);\r\n    }\r\n\r\n    /**\r\n     * @param {Error} err\r\n     * @return {Promise}\r\n     * @api private\r\n     */\r\n\r\n    function onRejected(err) {\r\n      var ret;\r\n      try {\r\n        ret = gen.throw(err);\r\n      } catch (e) {\r\n        return reject(e);\r\n      }\r\n      next(ret);\r\n    }\r\n\r\n    /**\r\n     * Get the next value in the generator,\r\n     * return a promise.\r\n     *\r\n     * @param {Object} ret\r\n     * @return {Promise}\r\n     * @api private\r\n     */\r\n\r\n    function next(ret) {\r\n      if (ret.done) return resolve(ret.value);\r\n      var value = toPromise.call(ctx, ret.value);\r\n      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\r\n      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\r\n        + 'but the following object was passed: \"' + String(ret.value) + '\"'));\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Convert a `yield`ed value into a promise.\r\n *\r\n * @param {Mixed} obj\r\n * @return {Promise}\r\n * @api private\r\n */\r\n\r\nfunction toPromise(obj) {\r\n  if (!obj) return obj;\r\n  if (isPromise(obj)) return obj;\r\n  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\r\n  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\r\n  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\r\n  if (isObject(obj)) return objectToPromise.call(this, obj);\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Convert a thunk to a promise.\r\n *\r\n * @param {Function}\r\n * @return {Promise}\r\n * @api private\r\n */\r\n\r\nfunction thunkToPromise(fn) {\r\n  var ctx = this;\r\n  return new Promise(function (resolve, reject) {\r\n    fn.call(ctx, function (err, res) {\r\n      if (err) return reject(err);\r\n      if (arguments.length > 2) res = slice.call(arguments, 1);\r\n      resolve(res);\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Convert an array of \"yieldables\" to a promise.\r\n * Uses `Promise.all()` internally.\r\n *\r\n * @param {Array} obj\r\n * @return {Promise}\r\n * @api private\r\n */\r\n\r\nfunction arrayToPromise(obj) {\r\n  return Promise.all(obj.map(toPromise, this));\r\n}\r\n\r\n/**\r\n * Convert an object of \"yieldables\" to a promise.\r\n * Uses `Promise.all()` internally.\r\n *\r\n * @param {Object} obj\r\n * @return {Promise}\r\n * @api private\r\n */\r\n\r\nfunction objectToPromise(obj){\r\n  var results = new obj.constructor();\r\n  var keys = Object.keys(obj);\r\n  var promises = [];\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i];\r\n    var promise = toPromise.call(this, obj[key]);\r\n    if (promise && isPromise(promise)) defer(promise, key);\r\n    else results[key] = obj[key];\r\n  }\r\n  return Promise.all(promises).then(function () {\r\n    return results;\r\n  });\r\n\r\n  function defer(promise, key) {\r\n    // predefine the key in the result\r\n    results[key] = undefined;\r\n    promises.push(promise.then(function (res) {\r\n      results[key] = res;\r\n    }));\r\n  }\r\n}\r\n\r\n/**\r\n * Check if `obj` is a promise.\r\n *\r\n * @param {Object} obj\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nfunction isPromise(obj) {\r\n  return 'function' == typeof obj.then;\r\n}\r\n\r\n/**\r\n * Check if `obj` is a generator.\r\n *\r\n * @param {Mixed} obj\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nfunction isGenerator(obj) {\r\n  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\r\n}\r\n\r\n/**\r\n * Check if `obj` is a generator function.\r\n *\r\n * @param {Mixed} obj\r\n * @return {Boolean}\r\n * @api private\r\n */\r\nfunction isGeneratorFunction(obj) {\r\n  var constructor = obj.constructor;\r\n  if (!constructor) return false;\r\n  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\r\n  return isGenerator(constructor.prototype);\r\n}\r\n\r\n/**\r\n * Check for plain object.\r\n *\r\n * @param {Mixed} val\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nfunction isObject(val) {\r\n  return Object == val.constructor;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/co/index.js\n ** module id = 38\n ** module chunks = 2 3 4 5 6 8\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/node-libs-browser/~/util/util.js\n ** module id = 40\n ** module chunks = 2 3 4 5 8\n **/","\nmodule.exports = DataStructure\n\nfunction DataStructure() {\n\n  var schemas = [].slice.call(arguments)\n\n  function Constructor(object) {\n    Constructor.validate(object)\n    return object\n  }\n\n  Constructor.validate = function(object) {\n    for (var i = 0; i < schemas.length; i ++) {\n      validate(schemas[i], object)\n    }\n  }\n\n  return Constructor\n\n}\n\nDataStructure.maybe = function maybe(schema) {\n  function MaybeValidator(object) {\n    MaybeValidator.validate(object)\n    return object\n  }\n  MaybeValidator.validate = function(value) {\n    if (value === null || value === undefined) return\n    validate(schema, value)\n  }\n  return MaybeValidator\n}\n\nfunction validate(schema, value) {\n  if (schema === Number) schema = 'number'\n  if (schema === String) schema = 'string'\n  if (typeof schema === 'string') {\n    if (typeof value !== schema) throw new Error('should be a ' + schema)\n  } else if (typeof schema === 'function') {\n    if (typeof schema.validate === 'function') {\n      schema.validate(value)\n    } else if (!(value instanceof schema)) {\n      throw new Error('should be an instance of ' + schema)\n    }\n  } else if (typeof schema === 'object') {\n    if (!value) throw new Error('should be an object')\n    validateObject(schema, value)\n  } else {\n    throw new Error('invalid schema')\n  }\n}\n\nfunction validateObject(schema, object) {\n  for (var prop in schema) {\n    if (!(prop in object)) {\n      throw new Error('missing property: \"' + prop + '\"')\n    }\n    try {\n      validate(schema[prop], object[prop])\n    } catch (e) {\n      throw new Error('error in property \"' + prop + '\": ' + e.message)\n    }\n  }\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/data-structure/index.js\n ** module id = 52\n ** module chunks = 2 3 4 5 8\n **/","\nimport bytes from 'bytes'\n\nlet wrap = f => progress => progress.progress !== null ? f(progress) : ''\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport let BYTES_FORMATTER = wrap(progress =>\n  bytes(progress.current) + ' / ' + bytes(progress.total))\n\n// Formats the `Progress` simply bu using the value of `Progress#extra`.\nexport let EXTRA_FORMATTER = wrap(progress =>\n  progress.extra + '')\n\n\n\n/** WEBPACK FOOTER **\n ** ./progress/formatters.js\n **/","\nimport { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\nexport function fixed(total, progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return (extra) => progress.report(++loaded, total, extra)\n}\n\n// Reports the progress as an atomic operation.\nexport function atomic(progress, promise) {\n  if (!progress) return promise\n  return Promise.resolve(promise)\n      .tap((data) => {\n        if (data && data.byteLength) {\n          progress.formatter = BYTES_FORMATTER\n          progress.report(data.byteLength, data.byteLength)\n        } else {\n          progress.report(1, 1)\n        }\n      })\n}\n\nexport function wrapPromise(progress, f) {\n  let current = 0\n  let total = 0\n  return function() {\n    progress.report(current, ++total)\n    return Promise.resolve(f.apply(this, arguments))\n      .tap(() => progress.report(++current, total))\n  }\n}\n\nexport function bind(from, to) {\n  return from.watch(() => to.report(from.current, from.total, from.extra))\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./progress/utils.js\n **/","\nexport default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob(blob) {\n  return {\n    as(type) {\n      return new Promise(function(resolve, reject) {\n        let reader = new FileReader()\n        reader.onload = function() {\n          resolve(reader.result)\n        }\n        reader.onerror = function() {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n        case 'arraybuffer':\n          reader.readAsArrayBuffer(blob)\n          break\n        case 'text':\n          reader.readAsText(blob)\n          break\n        }\n      })\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./utils/read-blob.js\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/buildin/module.js\n ** module id = 79\n ** module chunks = 2 3 4 5 6 8\n **/","\nimport readBlob from 'bemuse/utils/read-blob'\nimport defaultAudioContext from 'audio-context'\n\nlet dummyAudioTag = document.createElement('audio')\n\n// Checks whether an audio format is supported.\nexport function canPlay(type) {\n  return dummyAudioTag.canPlayType(type) === 'probably'\n}\n\n// The sampling master is a wrapper class around Web Audio API\n// that takes care of:\n//\n// - Decoding audio from an ArrayBuffer or Blob (resulting in a \"Sample\").\n// - Playing the `Sample` and managing its lifecycle.\nexport class SamplingMaster {\n  constructor(audioContext) {\n    this._audioContext  = audioContext || defaultAudioContext\n    this._samples       = []\n    this._instances     = new Set()\n  }\n\n  // Connects a dummy node to the audio, thereby unmuting the audio system on\n  // iOS devices (which keeps the audio muted until a user interacts with the\n  // page).\n  unmute() {\n    unmuteAudio(this._audioContext)\n  }\n\n  // The underlying AudioContext.\n  get audioContext() {\n    return this._audioContext\n  }\n\n  // Destroys this SamplingMaster, make it unusable.\n  destroy() {\n    if (this._destroyed) return\n    this._destroyed = true\n    for (let sample of this._samples) sample.destroy()\n    for (let instance of this._instances) instance.destroy()\n    this._samples = null\n    this._instances = null\n  }\n\n  // Creates a `Sample` from a Blob or an ArrayBuffer.\n  sample(blobOrArrayBuffer) {\n    return this._coerceToArrayBuffer(blobOrArrayBuffer)\n    .then(arrayBuffer => this._decodeAudio(arrayBuffer))\n    .then(audioBuffer => {\n      if (this._destroyed) throw new Error('SamplingMaster already destroyed!')\n      var sample = new Sample(this, audioBuffer)\n      this._samples.push(sample)\n      return sample\n    })\n  }\n\n  _coerceToArrayBuffer(blobOrArrayBuffer) {\n    if (blobOrArrayBuffer instanceof ArrayBuffer) {\n      return Promise.resolve(blobOrArrayBuffer)\n    } else {\n      return readBlob(blobOrArrayBuffer).as('arraybuffer')\n    }\n  }\n\n  _decodeAudio(arrayBuffer) {\n    return new Promise((resolve, reject) => {\n      this.audioContext.decodeAudioData(arrayBuffer,\n        function decodeAudioDataSuccess(audioBuffer) {\n          resolve(audioBuffer)\n        },\n        function decodeAudioDataFailure(e) {\n          reject('Unable to decode audio: ' + e)\n        }\n      )\n    })\n  }\n\n  _startPlaying(instance) {\n    this._instances.add(instance)\n  }\n\n  _stoppedPlaying(instance) {\n    this._instances.delete(instance)\n  }\n\n}\n\n// The Sample is created by and belongs to the `SamplingMaster`.\n//\n// You don't invoke this constructor directly; it is invoked by\n// `SamplingMaster#create`.\nclass Sample {\n\n  constructor(samplingMaster, audioBuffer) {\n    this._master = samplingMaster\n    this._buffer = audioBuffer\n  }\n\n  // Plays the sample and returns the new PlayInstance.\n  play(delay, node) {\n    return new PlayInstance(this._master, this._buffer, delay, node)\n  }\n\n  // Destroys this sample, thereby making it unusable.\n  destroy() {\n    this._master = null\n    this._buffer = null\n  }\n\n}\n\n// When a `Sample` is played, a PlayInstance is created.\n// A PlayInstance may not be reused; after the sound finishes playing,\n// you have to invoke `Sample#play` again.\n//\n// You don't invoke this constructor directly; it is invoked by `Sample#play`.\nclass PlayInstance {\n  constructor(samplingMaster, buffer, delay, node) {\n    delay = delay || 0\n    this._master = samplingMaster\n    let context = samplingMaster.audioContext\n    let source = context.createBufferSource()\n    source.buffer = buffer\n    source.onended = () => this.stop()\n    let gain = context.createGain()\n    source.connect(gain)\n    gain.connect(node || context.destination)\n    this._source = source\n    this._gain = gain\n    source.start(!delay ? 0 : Math.max(0, context.currentTime + delay))\n    this._master._startPlaying(this)\n  }\n\n  // Stops the sample and disconnects the underlying Web Audio nodes.\n  stop() {\n    if (!this._source) return\n    this._source.stop(0)\n    this._source.disconnect()\n    this._gain.disconnect()\n    this._source = null\n    this._gain = null\n    this._master._stoppedPlaying(this)\n    if (this.onstop) this.onstop()\n  }\n\n  // Makes this PlayInstance sound off-pitch, as a result of badly hitting\n  // a note.\n  bad() {\n    if (!this._source) return\n    this._source.playbackRate.value = (Math.random() < 0.5 ?\n      Math.pow(2,  1 / 12) :\n      Math.pow(2, -1 / 12))\n  }\n\n  // Destroys this PlayInstance.\n  destroy() {\n    this.stop()\n  }\n\n}\n\nexport default SamplingMaster\n\nexport function unmuteAudio(ctx) {\n  let gain = ctx.createGain()\n  gain.connect(ctx.destination)\n  gain.disconnect()\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./sampling-master/index.js\n **/","\nmodule.exports = match\n\nfunction match(text) {\n  var matched = false\n  return {\n    when: function(pattern, callback) {\n      if (matched) return this\n      var match = text.match(pattern)\n      if (match) {\n        matched = true\n        callback(match)\n      }\n      return this\n    },\n    else: function(callback) {\n      if (matched) return this\n      callback()\n    }\n  }\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/util/match.js\n ** module id = 85\n ** module chunks = 2 3 4 5 8\n **/","\n/**\n * `BMSChart` holds information about a particular BMS notechart.\n *\n * @module bms/chart\n */\n\nvar BMSHeaders = require('./headers')\nvar BMSObjects = require('./objects')\nvar TimeSignatures = require('../time-signatures')\n\nmodule.exports = BMSChart\n\n/**\n * Generates an empty `BMSChart`.\n *\n * @class BMSChart\n * @constructor\n */\nfunction BMSChart() {\n  this.headers = new BMSHeaders()\n  this.objects = new BMSObjects()\n  this.timeSignatures = new TimeSignatures()\n}\n\n/**\n * Converts measure+fraction into beat.\n *\n * @method measureToBeat\n * @param {Number} measure   Measure number starting from 0\n * @param {Number} fraction  Fraction inside the measure (0 to 1)\n * @return {Number} The beat number starting from 0\n */\nBMSChart.prototype.measureToBeat = function(measure, fraction) {\n  return this.timeSignatures.measureToBeat(measure, fraction)\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/bms/chart.js\n ** module id = 114\n ** module chunks = 2 3 4 5 8\n **/","\n/**\n * @module bms/headers\n */\nmodule.exports = BMSHeaders\n\n/**\n * @class BMSHeaders\n * @constructor\n */\nfunction BMSHeaders() {\n  this._data = { }\n  this._dataAll = { }\n}\n\n/**\n * Invokes a function at each header.\n *\n * @method each\n * @param  {Function} callback function to be invoked\n * @return {BMSHeaders} self\n */\nBMSHeaders.prototype.each = function(callback) {\n  for (var i in this._data) {\n    callback(i, this._data[i])\n  }\n}\n\n/**\n * Retrieves the header.\n *\n * @method get\n * @param  {String} name The header name (case-insensitive)\n * @return {String} The value of specified header\n */\nBMSHeaders.prototype.get = function(name) {\n  return this._data[name.toLowerCase()]\n}\n\n/**\n * Retrieves all headers (when header is specified multiple times).\n *\n * @method get\n * @param  {String} name The header name (case-insensitive)\n * @return {String[]} The values of specified header\n */\nBMSHeaders.prototype.getAll = function(name) {\n  return this._dataAll[name.toLowerCase()]\n}\n\n/**\n * Sets the header.\n *\n * @method set\n * @param  {String} name The header name (case-insensitive)\n * @param  {String} value The value to set\n */\nBMSHeaders.prototype.set = function(name, value) {\n  var key = name.toLowerCase()\n  this._data[key] = value\n  ;(this._dataAll[key] || (this._dataAll[key] = [])).push(value)\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/bms/headers.js\n ** module id = 115\n ** module chunks = 2 3 4 5 8\n **/","\n/**\n * @module bms/objects\n */\nmodule.exports = BMSObjects\n\n/**\n * Holds a collection of objects inside a BMS notechart.\n *\n * @class BMSObjects\n * @constructor\n */\nfunction BMSObjects() {\n  this._objects = []\n}\n\n/**\n * Adds a new object to the collection. If an object already exists on the\n * same channel and position, the object is replaced (except for autokeysound\n * tracks).\n *\n * @method add\n * @param {BMSObject} object\n */\nBMSObjects.prototype.add = function(object) {\n  if (object.channel !== '01') {\n    for (var i = 0; i < this._objects.length; i ++) {\n      var test = this._objects[i]\n      if (test.channel === object.channel &&\n          test.measure === object.measure &&\n          test.fraction === object.fraction) {\n        this._objects[i] = object\n        return\n      }\n    }\n  }\n  this._objects.push(object)\n}\n\n/**\n * Returns a list of all objects.\n *\n * @method all\n * @return {BMSObject[]}\n */\nBMSObjects.prototype.all = function() {\n  return this._objects.slice()\n}\n\n/**\n * Returns a sorted list of all objects.\n *\n * @method all\n * @return {BMSObject[]}\n */\nBMSObjects.prototype.allSorted = function() {\n  var list = this.all()\n  list.sort(function(a, b) {\n    return (a.measure + a.fraction) - (b.measure + b.fraction)\n  })\n  return list\n}\n\n\n/**\n * @class BMSObject\n */\n/**\n * The raw two-character BMS channel of this object.\n *\n * @property channel\n * @type String\n */\n/**\n * The measure number, starting at 0 (corresponds to `#000`)\n *\n * @property measure\n * @type Number\n */\n/**\n * The fractional position inside the measure, ranging from 0 (inclusive)\n * to 1 (exclusive). 0 means that the object is at the start of the measure,\n * where 1 means that the object is at the end of the measure.\n *\n * @property fraction\n * @type Number\n */\n/**\n * The raw value of the BMS object — a two-character string.\n *\n * @property value\n * @type String\n */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/bms/objects.js\n ** module id = 116\n ** module chunks = 2 3 4 5 8\n **/","\nvar Segment = require('./segment')\n\n/**\n * Speedcore is a library to help compute the speed and position\n * of linear motion. A Speedcore is constructed from an array of Segments.\n *\n * @module speedcore\n */\nmodule.exports = Speedcore\n\n/**\n * Construct a new `Speedcore` from segments\n *\n * @class Speedcore\n * @constructor\n * @param {Segment[]} segments  An array of segments.\n */\nfunction Speedcore(segments) {\n  this._segments = segments.map(Segment)\n}\n\nvar T = function(segment) { return segment.t }\nvar X = function(segment) { return segment.x }\nSpeedcore.prototype._reached = function(index, typeFn, position) {\n  if (index >= this._segments.length) return false\n  var segment = this._segments[index]\n  var target  = typeFn(segment)\n  return segment.inclusive ? position >= target : position > target\n}\n\nSpeedcore.prototype._segmentAt = function(typeFn, position) {\n  for (var i = 0; i < this._segments.length; i ++) {\n    if (!this._reached(i + 1, typeFn, position)) return this._segments[i]\n  }\n}\n\nSpeedcore.prototype.segmentAtX = function(x) {\n  return this._segmentAt(X, x)\n}\n\nSpeedcore.prototype.segmentAtT = function(t) {\n  return this._segmentAt(T, t)\n}\n\nSpeedcore.prototype.t = function(x) {\n  var segment = this.segmentAtX(x)\n  return segment.t + (x - segment.x) / (segment.dx || 1)\n}\n\nSpeedcore.prototype.x = function(t) {\n  var segment = this.segmentAtT(t)\n  return segment.x + (t - segment.t) * segment.dx\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/speedcore/index.js\n ** module id = 117\n ** module chunks = 2 3 4 5 8\n **/","\n/**\n * @module time-signatures\n */\nmodule.exports = TimeSignatures\n\n/**\n * @class TimeSignatures\n * @constructor\n */\nfunction TimeSignatures() {\n  this._values = { }\n}\n\n/**\n * @method set\n * @param {Number} measure  The measure number\n * @param {Number} value    The time signature value. 1 represents 4/4, and\n *                          0.75 represents 3/4. You get the idea.\n */\nTimeSignatures.prototype.set = function(measure, value) {\n  this._values[measure] = value\n}\n\n/**\n * @method get\n * @param {Number} measure\n * @return {Number}\n */\nTimeSignatures.prototype.get = function(measure) {\n  return this._values[measure] || 1\n}\n\n/**\n * @method getBeats\n * @param {Number} measure\n * @return {Number}\n */\nTimeSignatures.prototype.getBeats = function(measure) {\n  return this.get(measure) * 4\n}\n\n/**\n * @method measureToBeat\n * @param {Number} measure\n * @param {Number} fraction\n */\nTimeSignatures.prototype.measureToBeat = function(measure, fraction) {\n  var sum = 0\n  for (var i = 0; i < measure; i ++) sum += this.getBeats(i)\n  return sum + this.getBeats(measure) * fraction\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/time-signatures/index.js\n ** module id = 118\n ** module chunks = 2 3 4 5 8\n **/","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  this.length = 0\n  this.parent = undefined\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && object.buffer instanceof ArrayBuffer) {\n    return fromTypedArray(that, object)\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length))\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n    that._isBuffer = true\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = String(string)\n\n  if (string.length === 0) return 0\n\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      return string.length\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return string.length * 2\n    case 'hex':\n      return string.length >>> 1\n    case 'utf8':\n    case 'utf-8':\n      return utf8ToBytes(string).length\n    case 'base64':\n      return base64ToBytes(string).length\n    default:\n      return string.length\n  }\n}\nBuffer.byteLength = byteLength\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function toString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n  var i = 0\n\n  for (; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (leadSurrogate) {\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          leadSurrogate = codePoint\n          continue\n        } else {\n          // valid surrogate pair\n          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n          leadSurrogate = null\n        }\n      } else {\n        // no lead yet\n\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else {\n          // valid lead\n          leadSurrogate = codePoint\n          continue\n        }\n      }\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n      leadSurrogate = null\n    }\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x200000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/node-libs-browser/~/buffer/index.js\n ** module id = 119\n ** module chunks = 2 3 5 8\n **/","var window = require('global/window');\n\nvar Context = window.AudioContext || window.webkitAudioContext;\nif (Context) module.exports = new Context;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/audio-context/index.js\n ** module id = 120\n ** module chunks = 2 3 5 6 8\n **/","\n/**\n * Parse byte `size` string.\n *\n * @param {String} size\n * @return {Number}\n * @api public\n */\n\nmodule.exports = function(size) {\n  if ('number' == typeof size) return convert(size);\n  var parts = size.match(/^(\\d+(?:\\.\\d+)?) *(kb|mb|gb|tb)$/)\n    , n = parseFloat(parts[1])\n    , type = parts[2];\n\n  var map = {\n      kb: 1 << 10\n    , mb: 1 << 20\n    , gb: 1 << 30\n    , tb: ((1 << 30) * 1024)\n  };\n\n  return map[type] * n;\n};\n\n/**\n * convert bytes into string.\n *\n * @param {Number} b - bytes to convert\n * @return {String}\n * @api public\n */\n\nfunction convert (b) {\n  var tb = ((1 << 30) * 1024), gb = 1 << 30, mb = 1 << 20, kb = 1 << 10, abs = Math.abs(b);\n  if (abs >= tb) return (Math.round(b / tb * 100) / 100) + 'tb';\n  if (abs >= gb) return (Math.round(b / gb * 100) / 100) + 'gb';\n  if (abs >= mb) return (Math.round(b / mb * 100) / 100) + 'mb';\n  if (abs >= kb) return (Math.round(b / kb * 100) / 100) + 'kb';\n  return b + 'b';\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bytes/index.js\n ** module id = 128\n ** module chunks = 2 3 4 5 6 8\n **/","if (typeof window !== \"undefined\") {\n    module.exports = window;\n} else if (typeof global !== \"undefined\") {\n    module.exports = global;\n} else {\n    module.exports = {};\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/audio-context/~/global/window.js\n ** module id = 134\n ** module chunks = 2 3 5 6 8\n **/","\nvar match = require('../util/match')\nvar BMSChart = require('../bms/chart')\n\nexports.compile = function(text, options) {\n\n  options = options || { }\n\n  var chart = new BMSChart()\n\n  var rng = options.rng || function(max) {\n    return 1 + Math.floor(Math.random() * max)\n  }\n\n  var randomStack = []\n  var skipStack = [false]\n\n  var result = {\n    headerSentences: 0,\n    channelSentences: 0,\n    controlSentences: 0,\n    skippedSentences: 0,\n    malformedSentences: 0,\n    chart: chart,\n    warnings: []\n  }\n\n  eachLine(text, function(text, lineNumber) {\n    var flow = true\n    if (text.charAt(0) !== '#') return\n    match(text)\n    .when(/^#RANDOM\\s+(\\d+)$/i, function(m) {\n      result.controlSentences += 1\n      randomStack.push(rng(+m[1]))\n    })\n    .when(/^#IF\\s+(\\d+)$/i, function(m) {\n      result.controlSentences += 1\n      skipStack.push(randomStack[randomStack.length - 1] !== +m[1])\n    })\n    .when(/^#ENDIF$/i, function(m) {\n      result.controlSentences += 1\n      skipStack.pop()\n    })\n    .else(function() {\n      flow = false\n    })\n    if (flow) return\n    var skipped = skipStack[skipStack.length - 1]\n    match(text)\n    .when(/^#(\\d\\d\\d)02:(\\S*)$/, function(m) {\n      result.channelSentences += 1\n      if (!skipped) chart.timeSignatures.set(+m[1], +m[2])\n    })\n    .when(/^#(\\d\\d\\d)(\\S\\S):(\\S*)$/, function(m) {\n      result.channelSentences += 1\n      if (!skipped) handleChannelSentence(+m[1], m[2], m[3], lineNumber)\n    })\n    .when(/^#(\\w+)(?:\\s+(\\S.*))?$/, function(m) {\n      result.headerSentences += 1\n      if (!skipped) chart.headers.set(m[1], m[2])\n    })\n    .else(function() {\n      warn(lineNumber, 'Invalid command')\n    })\n  })\n\n  return result\n\n  function handleChannelSentence(measure, channel, string, lineNumber) {\n    var items = Math.floor(string.length / 2)\n    if (items === 0) return\n    for (var i = 0; i < items; i ++) {\n      var value = string.substr(i * 2, 2)\n      var fraction = i / items\n      if (value === '00') continue\n      chart.objects.add({\n        measure: measure, \n        fraction: fraction,\n        value: value,\n        channel: channel,\n        lineNumber: lineNumber,\n      })\n    }\n  }\n\n  function warn(lineNumber, message) {\n    result.warnings.push({\n      lineNumber: lineNumber,\n      message: message,\n    })\n  }\n\n}\n\nfunction eachLine(text, callback) {\n  text.split(/\\r\\n|\\r|\\n/)\n      .map(function(line) { return line.trim() })\n      .forEach(function(line, index) {\n    callback(line, index + 1)\n  })\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/compiler/index.js\n ** module id = 138\n ** module chunks = 2 3 4 5 8\n **/","\nvar utf8  = require('./encoding/utf8'),\n  unicode = require('./encoding/unicode'),\n  mbcs    = require('./encoding/mbcs'),\n  sbcs    = require('./encoding/sbcs'),\n  iso2022 = require('./encoding/iso2022');\n\nvar self = this;\n\nvar recognisers = [\n  new utf8,\n  new unicode.UTF_16BE,\n  new unicode.UTF_16LE,\n  new mbcs.sjis,\n  new mbcs.euc_kr\n];\n\nmodule.exports.detect = function(buffer) {\n\n  // Tally up the byte occurence statistics.\n  var fByteStats = [];\n  for (var i = 0; i < 256; i++)\n    fByteStats[i] = 0;\n\n  for (var i = buffer.length - 1; i >= 0; i--)\n    fByteStats[buffer[i] & 0x00ff]++;\n\n  var fC1Bytes = false;\n  for (var i = 0x80; i <= 0x9F; i += 1) {\n    if (fByteStats[i] != 0) {\n      fC1Bytes = true;\n      break;\n    }\n  }\n\n  var context = {\n    fByteStats:  fByteStats,\n    fC1Bytes:    fC1Bytes,\n    fRawInput:   buffer,\n    fRawLength:  buffer.length,\n    fInputBytes: buffer,\n    fInputLen:   buffer.length\n  };\n\n  var match = recognisers.map(function(rec) {\n    return rec.match(context);\n  }).filter(function(match) {\n    return !!match;\n  }).sort(function(a, b) {\n    return a.confidence - b.confidence;\n  }).pop();\n\n  return match ? match.name : null;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/~/bemuse-chardet/bemuse-chardet.js\n ** module id = 139\n ** module chunks = 2 3 4 5 8\n **/","var util = require('util'),\n  Match = require ('../match');\n\n\n/**\n * This is a superclass for the individual detectors for\n * each of the detectable members of the ISO 2022 family\n * of encodings.\n */\n\nfunction ISO_2022() {}\n\nISO_2022.prototype.match = function(det) {\n\n  /**\n   * Matching function shared among the 2022 detectors JP, CN and KR\n   * Counts up the number of legal an unrecognized escape sequences in\n   * the sample of text, and computes a score based on the total number &\n   * the proportion that fit the encoding.\n   *\n   *\n   * @param text the byte buffer containing text to analyse\n   * @param textLen  the size of the text in the byte.\n   * @param escapeSequences the byte escape sequences to test for.\n   * @return match quality, in the range of 0-100.\n   */\n\n  var i, j;\n  var escN;\n  var hits   = 0;\n  var misses = 0;\n  var shifts = 0;\n  var quality;\n\n  // TODO: refactor me\n  var text = det.fInputBytes;\n  var textLen = det.fInputLen;\n\n  scanInput:\n    for (i = 0; i < textLen; i++) {\n      if (text[i] == 0x1b) {\n        checkEscapes:\n          for (escN = 0; escN < this.escapeSequences.length; escN++) {\n            var seq = this.escapeSequences[escN];\n\n            if ((textLen - i) < seq.length)\n              continue checkEscapes;\n\n            for (j = 1; j < seq.length; j++)\n              if (seq[j] != text[i + j])\n                continue checkEscapes;\n\n\n            hits++;\n            i += seq.length - 1;\n            continue scanInput;\n          }\n\n          misses++;\n      }\n\n      // Shift in/out\n      if (text[i] == 0x0e || text[i] == 0x0f)\n        shifts++;\n\n    }\n\n  if (hits == 0)\n    return null;\n\n  //\n  // Initial quality is based on relative proportion of recongized vs.\n  //   unrecognized escape sequences.\n  //   All good:  quality = 100;\n  //   half or less good: quality = 0;\n  //   linear inbetween.\n  quality = (100 * hits - 100 * misses) / (hits + misses);\n\n  // Back off quality if there were too few escape sequences seen.\n  //   Include shifts in this computation, so that KR does not get penalized\n  //   for having only a single Escape sequence, but many shifts.\n  if (hits + shifts < 5)\n    quality -= (5 - (hits + shifts)) * 10;\n\n  return quality <= 0 ? null : new Match(det, this, quality);\n};\n\nmodule.exports.ISO_2022_JP = function() {\n  this.name = function() {\n    return 'ISO-2022-JP';\n  };\n  this.escapeSequences = [\n    [ 0x1b, 0x24, 0x28, 0x43 ],   // KS X 1001:1992\n    [ 0x1b, 0x24, 0x28, 0x44 ],   // JIS X 212-1990\n    [ 0x1b, 0x24, 0x40 ],         // JIS C 6226-1978\n    [ 0x1b, 0x24, 0x41 ],         // GB 2312-80\n    [ 0x1b, 0x24, 0x42 ],         // JIS X 208-1983\n    [ 0x1b, 0x26, 0x40 ],         // JIS X 208 1990, 1997\n    [ 0x1b, 0x28, 0x42 ],         // ASCII\n    [ 0x1b, 0x28, 0x48 ],         // JIS-Roman\n    [ 0x1b, 0x28, 0x49 ],         // Half-width katakana\n    [ 0x1b, 0x28, 0x4a ],         // JIS-Roman\n    [ 0x1b, 0x2e, 0x41 ],         // ISO 8859-1\n    [ 0x1b, 0x2e, 0x46 ]          // ISO 8859-7\n  ];\n};\nutil.inherits(module.exports.ISO_2022_JP, ISO_2022);\n\n\n\nmodule.exports.ISO_2022_KR = function() {\n  this.name = function() {\n    return 'ISO-2022-KR';\n  };\n  this.escapeSequences = [\n    [ 0x1b, 0x24, 0x29, 0x43 ]\n  ];\n};\nutil.inherits(module.exports.ISO_2022_KR, ISO_2022);\n\n\n\nmodule.exports.ISO_2022_CN = function() {\n  this.name = function() {\n    return 'ISO-2022-CN';\n  };\n  this.escapeSequences = [\n    [ 0x1b, 0x24, 0x29, 0x41 ],   // GB 2312-80\n    [ 0x1b, 0x24, 0x29, 0x47 ],   // CNS 11643-1992 Plane 1\n    [ 0x1b, 0x24, 0x2A, 0x48 ],   // CNS 11643-1992 Plane 2\n    [ 0x1b, 0x24, 0x29, 0x45 ],   // ISO-IR-165\n    [ 0x1b, 0x24, 0x2B, 0x49 ],   // CNS 11643-1992 Plane 3\n    [ 0x1b, 0x24, 0x2B, 0x4A ],   // CNS 11643-1992 Plane 4\n    [ 0x1b, 0x24, 0x2B, 0x4B ],   // CNS 11643-1992 Plane 5\n    [ 0x1b, 0x24, 0x2B, 0x4C ],   // CNS 11643-1992 Plane 6\n    [ 0x1b, 0x24, 0x2B, 0x4D ],   // CNS 11643-1992 Plane 7\n    [ 0x1b, 0x4e ],               // SS2\n    [ 0x1b, 0x4f ]                // SS3\n  ];\n};\nutil.inherits(module.exports.ISO_2022_CN, ISO_2022);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/~/bemuse-chardet/encoding/iso2022.js\n ** module id = 140\n ** module chunks = 2 3 4 5 8\n **/","var util = require('util'),\n  Match = require ('../match');\n\n/**\n * Binary search implementation (recursive)\n */\nfunction binarySearch(arr, searchValue) {\n  function find(arr, searchValue, left, right) {\n    if (right < left)\n      return -1;\n\n    /*\n    int mid = mid = (left + right) / 2;\n    There is a bug in the above line;\n    Joshua Bloch suggests the following replacement:\n    */\n    var mid = Math.floor((left + right) >>> 1);\n    if (searchValue > arr[mid])\n      return find(arr, searchValue, mid + 1, right);\n\n    if (searchValue < arr[mid])\n      return find(arr, searchValue, left, mid - 1);\n\n    return mid;\n  };\n\n  return find(arr, searchValue, 0, arr.length - 1);\n};\n\n// 'Character'  iterated character class.\n//    Recognizers for specific mbcs encodings make their 'characters' available\n//    by providing a nextChar() function that fills in an instance of iteratedChar\n//    with the next char from the input.\n//    The returned characters are not converted to Unicode, but remain as the raw\n//    bytes (concatenated into an int) from the codepage data.\n//\n//  For Asian charsets, use the raw input rather than the input that has been\n//   stripped of markup.  Detection only considers multi-byte chars, effectively\n//   stripping markup anyway, and double byte chars do occur in markup too.\n//\nfunction IteratedChar() {\n\n  this.charValue = 0; // 1-4 bytes from the raw input data\n  this.index     = 0;\n  this.nextIndex = 0;\n  this.error     = false;\n  this.done      = false;\n\n  this.reset = function() {\n    this.charValue = 0;\n    this.index     = -1;\n    this.nextIndex = 0;\n    this.error     = false;\n    this.done      = false;\n  };\n\n  this.nextByte = function(det) {\n    if (this.nextIndex >= det.fRawLength) {\n      this.done = true;\n      return -1;\n    }\n    var byteValue = det.fRawInput[this.nextIndex++] & 0x00ff;\n    return byteValue;\n  };\n};\n\n\n\n/**\n * Asian double or multi-byte - charsets.\n * Match is determined mostly by the input data adhering to the\n * encoding scheme for the charset, and, optionally,\n * frequency-of-occurence of characters.\n */\n\nfunction mbcs() {};\n\n/**\n * Test the match of this charset with the input text data\n *      which is obtained via the CharsetDetector object.\n *\n * @param det  The CharsetDetector, which contains the input text\n *             to be checked for being in this charset.\n * @return     Two values packed into one int  (Damn java, anyhow)\n *             bits 0-7:  the match confidence, ranging from 0-100\n *             bits 8-15: The match reason, an enum-like value.\n */\nmbcs.prototype.match = function(det) {\n\n  var singleByteCharCount = 0,  //TODO Do we really need this?\n    doubleByteCharCount = 0,\n    commonCharCount     = 0,\n    badCharCount        = 0,\n    totalCharCount      = 0,\n    confidence          = 0;\n\n  var iter = new IteratedChar();\n\n  detectBlock: {\n    for (iter.reset(); this.nextChar(iter, det);) {\n      totalCharCount++;\n      if (iter.error) {\n        badCharCount++;\n      } else {\n        var cv = iter.charValue & 0xFFFFFFFF;\n\n        if (cv <= 0xff) {\n          singleByteCharCount++;\n        } else {\n          doubleByteCharCount++;\n          if (this.commonChars != null) {\n            // NOTE: This assumes that there are no 4-byte common chars.\n            if (binarySearch(this.commonChars, cv) >= 0) {\n              commonCharCount++;\n            }\n          }\n        }\n      }\n      if (badCharCount >= 2 && badCharCount * 5 >= doubleByteCharCount) {\n        // console.log('its here!')\n        // Bail out early if the byte data is not matching the encoding scheme.\n        break detectBlock;\n      }\n    }\n\n    if (doubleByteCharCount <= 10 && badCharCount== 0) {\n      // Not many multi-byte chars.\n      if (doubleByteCharCount == 0 && totalCharCount < 10) {\n        // There weren't any multibyte sequences, and there was a low density of non-ASCII single bytes.\n        // We don't have enough data to have any confidence.\n        // Statistical analysis of single byte non-ASCII charcters would probably help here.\n        confidence = 0;\n      }\n      else {\n        //   ASCII or ISO file?  It's probably not our encoding,\n        //   but is not incompatible with our encoding, so don't give it a zero.\n        confidence = 10;\n      }\n      break detectBlock;\n    }\n\n    //\n    //  No match if there are too many characters that don't fit the encoding scheme.\n    //    (should we have zero tolerance for these?)\n    //\n    if (doubleByteCharCount < 20 * badCharCount) {\n      confidence = 0;\n      break detectBlock;\n    }\n\n    if (this.commonChars == null) {\n      // We have no statistics on frequently occuring characters.\n      //  Assess confidence purely on having a reasonable number of\n      //  multi-byte characters (the more the better\n      confidence = 30 + doubleByteCharCount - 20 * badCharCount;\n      if (confidence > 100) {\n        confidence = 100;\n      }\n    } else {\n      //\n      // Frequency of occurence statistics exist.\n      //\n      var maxVal = Math.log(parseFloat(doubleByteCharCount) / 4);\n      var scaleFactor = 90.0 / maxVal;\n      confidence = Math.floor(Math.log(commonCharCount + 1) * scaleFactor + 10);\n      confidence = Math.min(confidence, 100);\n    }\n  }   // end of detectBlock:\n\n  return confidence == 0 ? null : new Match(det, this, confidence);\n};\n\n/**\n * Get the next character (however many bytes it is) from the input data\n *    Subclasses for specific charset encodings must implement this function\n *    to get characters according to the rules of their encoding scheme.\n *\n *  This function is not a method of class iteratedChar only because\n *   that would require a lot of extra derived classes, which is awkward.\n * @param it  The iteratedChar 'struct' into which the returned char is placed.\n * @param det The charset detector, which is needed to get at the input byte data\n *            being iterated over.\n * @return    True if a character was returned, false at end of input.\n */\n\nmbcs.prototype.nextChar = function(iter, det) {};\n\n\n\n/**\n * Shift-JIS charset recognizer.\n */\nmodule.exports.sjis = function() {\n  this.name = function() {\n    return 'Shift-JIS';\n  };\n  this.language = function() {\n    return 'ja';\n  };\n\n  // TODO:  This set of data comes from the character frequency-\n  //        of-occurence analysis tool.  The data needs to be moved\n  //        into a resource and loaded from there.\n  this.commonChars = [\n    0x8140, 0x8141, 0x8142, 0x8145, 0x815b, 0x8169, 0x816a, 0x8175, 0x8176, 0x82a0,\n    0x82a2, 0x82a4, 0x82a9, 0x82aa, 0x82ab, 0x82ad, 0x82af, 0x82b1, 0x82b3, 0x82b5,\n    0x82b7, 0x82bd, 0x82be, 0x82c1, 0x82c4, 0x82c5, 0x82c6, 0x82c8, 0x82c9, 0x82cc,\n    0x82cd, 0x82dc, 0x82e0, 0x82e7, 0x82e8, 0x82e9, 0x82ea, 0x82f0, 0x82f1, 0x8341,\n    0x8343, 0x834e, 0x834f, 0x8358, 0x835e, 0x8362, 0x8367, 0x8375, 0x8376, 0x8389,\n    0x838a, 0x838b, 0x838d, 0x8393, 0x8e96, 0x93fa, 0x95aa\n  ];\n\n  this.nextChar = function(iter, det) {\n    iter.index = iter.nextIndex;\n    iter.error = false;\n\n    var firstByte;\n    firstByte = iter.charValue = iter.nextByte(det);\n    if (firstByte < 0)\n      return false;\n\n    if (firstByte <= 0x7f || (firstByte > 0xa0 && firstByte <= 0xdf))\n      return true;\n\n    var secondByte = iter.nextByte(det);\n    if (secondByte < 0)\n      return false;\n\n    iter.charValue = (firstByte << 8) | secondByte;\n    if (! ((secondByte >= 0x40 && secondByte <= 0x7f) || (secondByte >= 0x80 && secondByte <= 0xff))) {\n      // Illegal second byte value.\n      iter.error = true;\n    }\n    return true;\n  };\n};\nutil.inherits(module.exports.sjis, mbcs);\n\n\n\n/**\n *   Big5 charset recognizer.\n */\nmodule.exports.big5 = function() {\n  this.name = function() {\n    return 'Big5';\n  };\n  this.language = function() {\n    return 'zh';\n  };\n  // TODO:  This set of data comes from the character frequency-\n  //        of-occurence analysis tool.  The data needs to be moved\n  //        into a resource and loaded from there.\n  this.commonChars = [\n    0xa140, 0xa141, 0xa142, 0xa143, 0xa147, 0xa149, 0xa175, 0xa176, 0xa440, 0xa446,\n    0xa447, 0xa448, 0xa451, 0xa454, 0xa457, 0xa464, 0xa46a, 0xa46c, 0xa477, 0xa4a3,\n    0xa4a4, 0xa4a7, 0xa4c1, 0xa4ce, 0xa4d1, 0xa4df, 0xa4e8, 0xa4fd, 0xa540, 0xa548,\n    0xa558, 0xa569, 0xa5cd, 0xa5e7, 0xa657, 0xa661, 0xa662, 0xa668, 0xa670, 0xa6a8,\n    0xa6b3, 0xa6b9, 0xa6d3, 0xa6db, 0xa6e6, 0xa6f2, 0xa740, 0xa751, 0xa759, 0xa7da,\n    0xa8a3, 0xa8a5, 0xa8ad, 0xa8d1, 0xa8d3, 0xa8e4, 0xa8fc, 0xa9c0, 0xa9d2, 0xa9f3,\n    0xaa6b, 0xaaba, 0xaabe, 0xaacc, 0xaafc, 0xac47, 0xac4f, 0xacb0, 0xacd2, 0xad59,\n    0xaec9, 0xafe0, 0xb0ea, 0xb16f, 0xb2b3, 0xb2c4, 0xb36f, 0xb44c, 0xb44e, 0xb54c,\n    0xb5a5, 0xb5bd, 0xb5d0, 0xb5d8, 0xb671, 0xb7ed, 0xb867, 0xb944, 0xbad8, 0xbb44,\n    0xbba1, 0xbdd1, 0xc2c4, 0xc3b9, 0xc440, 0xc45f\n  ];\n  this.nextChar = function(iter, det) {\n    iter.index = iter.nextIndex;\n    iter.error = false;\n\n    var firstByte = iter.charValue = iter.nextByte(det);\n\n    if (firstByte < 0)\n      return false;\n\n    // single byte character.\n    if (firstByte <= 0x7f || firstByte == 0xff)\n      return true;\n\n    var secondByte = iter.nextByte(det);\n\n    if (secondByte < 0)\n      return false;\n\n    iter.charValue = (iter.charValue << 8) | secondByte;\n\n    if (secondByte < 0x40 || secondByte == 0x7f || secondByte == 0xff)\n      iter.error = true;\n\n    return true;\n  };\n};\nutil.inherits(module.exports.big5, mbcs);\n\n\n\n/**\n *  EUC charset recognizers.  One abstract class that provides the common function\n *  for getting the next character according to the EUC encoding scheme,\n *  and nested derived classes for EUC_KR, EUC_JP, EUC_CN.\n *\n *  Get the next character value for EUC based encodings.\n *  Character 'value' is simply the raw bytes that make up the character\n *     packed into an int.\n */\nfunction eucNextChar(iter, det) {\n  iter.index = iter.nextIndex;\n  iter.error = false;\n  var firstByte  = 0;\n  var secondByte = 0;\n  var thirdByte  = 0;\n  //int fourthByte = 0;\n  buildChar: {\n    firstByte = iter.charValue = iter.nextByte(det);\n    if (firstByte < 0) {\n      // Ran off the end of the input data\n      iter.done = true;\n      break buildChar;\n    }\n    if (firstByte <= 0x8d) {\n      // single byte char\n      break buildChar;\n    }\n    secondByte = iter.nextByte(det);\n    iter.charValue = (iter.charValue << 8) | secondByte;\n    if (firstByte >= 0xA1 && firstByte <= 0xfe) {\n      // Two byte Char\n      if (secondByte < 0xa1) {\n        iter.error = true;\n      }\n      break buildChar;\n    }\n    if (firstByte == 0x8e) {\n      // Code Set 2.\n      //   In EUC-JP, total char size is 2 bytes, only one byte of actual char value.\n      //   In EUC-TW, total char size is 4 bytes, three bytes contribute to char value.\n      // We don't know which we've got.\n      // Treat it like EUC-JP.  If the data really was EUC-TW, the following two\n      //   bytes will look like a well formed 2 byte char.\n      if (secondByte < 0xa1) {\n        iter.error = true;\n      }\n      break buildChar;\n    }\n    if (firstByte == 0x8f) {\n      // Code set 3.\n      // Three byte total char size, two bytes of actual char value.\n      thirdByte = iter.nextByte(det);\n      iter.charValue = (iter.charValue << 8) | thirdByte;\n      if (thirdByte < 0xa1) {\n        iter.error = true;\n      }\n    }\n  }\n  return iter.done == false;\n};\n\n\n\n/**\n * The charset recognize for EUC-JP.  A singleton instance of this class\n *    is created and kept by the public CharsetDetector class\n */\nmodule.exports.euc_jp = function() {\n  this.name = function() {\n    return 'EUC-JP';\n  };\n  this.language = function() {\n    return 'ja';\n  };\n\n  // TODO:  This set of data comes from the character frequency-\n  //        of-occurence analysis tool.  The data needs to be moved\n  //        into a resource and loaded from there.\n  this.commonChars = [\n    0xa1a1, 0xa1a2, 0xa1a3, 0xa1a6, 0xa1bc, 0xa1ca, 0xa1cb, 0xa1d6, 0xa1d7, 0xa4a2,\n    0xa4a4, 0xa4a6, 0xa4a8, 0xa4aa, 0xa4ab, 0xa4ac, 0xa4ad, 0xa4af, 0xa4b1, 0xa4b3,\n    0xa4b5, 0xa4b7, 0xa4b9, 0xa4bb, 0xa4bd, 0xa4bf, 0xa4c0, 0xa4c1, 0xa4c3, 0xa4c4,\n    0xa4c6, 0xa4c7, 0xa4c8, 0xa4c9, 0xa4ca, 0xa4cb, 0xa4ce, 0xa4cf, 0xa4d0, 0xa4de,\n    0xa4df, 0xa4e1, 0xa4e2, 0xa4e4, 0xa4e8, 0xa4e9, 0xa4ea, 0xa4eb, 0xa4ec, 0xa4ef,\n    0xa4f2, 0xa4f3, 0xa5a2, 0xa5a3, 0xa5a4, 0xa5a6, 0xa5a7, 0xa5aa, 0xa5ad, 0xa5af,\n    0xa5b0, 0xa5b3, 0xa5b5, 0xa5b7, 0xa5b8, 0xa5b9, 0xa5bf, 0xa5c3, 0xa5c6, 0xa5c7,\n    0xa5c8, 0xa5c9, 0xa5cb, 0xa5d0, 0xa5d5, 0xa5d6, 0xa5d7, 0xa5de, 0xa5e0, 0xa5e1,\n    0xa5e5, 0xa5e9, 0xa5ea, 0xa5eb, 0xa5ec, 0xa5ed, 0xa5f3, 0xb8a9, 0xb9d4, 0xbaee,\n    0xbbc8, 0xbef0, 0xbfb7, 0xc4ea, 0xc6fc, 0xc7bd, 0xcab8, 0xcaf3, 0xcbdc, 0xcdd1\n  ];\n\n  this.nextChar = eucNextChar;\n};\nutil.inherits(module.exports.euc_jp, mbcs);\n\n\n\n/**\n * The charset recognize for EUC-KR.  A singleton instance of this class\n *    is created and kept by the public CharsetDetector class\n */\nmodule.exports.euc_kr = function() {\n  this.name = function() {\n    return 'EUC-KR';\n  };\n  this.language = function() {\n    return 'ko';\n  };\n\n  // TODO:  This set of data comes from the character frequency-\n  //        of-occurence analysis tool.  The data needs to be moved\n  //        into a resource and loaded from there.\n  this.commonChars = [\n    0xb0a1, 0xb0b3, 0xb0c5, 0xb0cd, 0xb0d4, 0xb0e6, 0xb0ed, 0xb0f8, 0xb0fa, 0xb0fc,\n    0xb1b8, 0xb1b9, 0xb1c7, 0xb1d7, 0xb1e2, 0xb3aa, 0xb3bb, 0xb4c2, 0xb4cf, 0xb4d9,\n    0xb4eb, 0xb5a5, 0xb5b5, 0xb5bf, 0xb5c7, 0xb5e9, 0xb6f3, 0xb7af, 0xb7c2, 0xb7ce,\n    0xb8a6, 0xb8ae, 0xb8b6, 0xb8b8, 0xb8bb, 0xb8e9, 0xb9ab, 0xb9ae, 0xb9cc, 0xb9ce,\n    0xb9fd, 0xbab8, 0xbace, 0xbad0, 0xbaf1, 0xbbe7, 0xbbf3, 0xbbfd, 0xbcad, 0xbcba,\n    0xbcd2, 0xbcf6, 0xbdba, 0xbdc0, 0xbdc3, 0xbdc5, 0xbec6, 0xbec8, 0xbedf, 0xbeee,\n    0xbef8, 0xbefa, 0xbfa1, 0xbfa9, 0xbfc0, 0xbfe4, 0xbfeb, 0xbfec, 0xbff8, 0xc0a7,\n    0xc0af, 0xc0b8, 0xc0ba, 0xc0bb, 0xc0bd, 0xc0c7, 0xc0cc, 0xc0ce, 0xc0cf, 0xc0d6,\n    0xc0da, 0xc0e5, 0xc0fb, 0xc0fc, 0xc1a4, 0xc1a6, 0xc1b6, 0xc1d6, 0xc1df, 0xc1f6,\n    0xc1f8, 0xc4a1, 0xc5cd, 0xc6ae, 0xc7cf, 0xc7d1, 0xc7d2, 0xc7d8, 0xc7e5, 0xc8ad\n  ];\n\n  this.nextChar = eucNextChar;\n};\nutil.inherits(module.exports.euc_kr, mbcs);\n\n\n\n/**\n *   GB-18030 recognizer. Uses simplified Chinese statistics.\n */\nmodule.exports.gb_18030 = function() {\n  this.name = function() {\n    return 'GB18030';\n  };\n  this.language = function() {\n    return 'zh';\n  };\n\n  /*\n   *  Get the next character value for EUC based encodings.\n   *  Character 'value' is simply the raw bytes that make up the character\n   *     packed into an int.\n   */\n  this.nextChar = function(iter, det) {\n    iter.index = iter.nextIndex;\n    iter.error = false;\n    var firstByte  = 0;\n    var secondByte = 0;\n    var thirdByte  = 0;\n    var fourthByte = 0;\n    buildChar: {\n      firstByte = iter.charValue = iter.nextByte(det);\n      if (firstByte < 0) {\n        // Ran off the end of the input data\n        iter.done = true;\n        break buildChar;\n      }\n      if (firstByte <= 0x80) {\n        // single byte char\n        break buildChar;\n      }\n      secondByte = iter.nextByte(det);\n      iter.charValue = (iter.charValue << 8) | secondByte;\n      if (firstByte >= 0x81 && firstByte <= 0xFE) {\n        // Two byte Char\n        if ((secondByte >= 0x40 && secondByte <= 0x7E) || (secondByte >=80 && secondByte <= 0xFE)) {\n          break buildChar;\n        }\n        // Four byte char\n        if (secondByte >= 0x30 && secondByte <= 0x39) {\n          thirdByte = iter.nextByte(det);\n          if (thirdByte >= 0x81 && thirdByte <= 0xFE) {\n            fourthByte = iter.nextByte(det);\n            if (fourthByte >= 0x30 && fourthByte <= 0x39) {\n              iter.charValue = (iter.charValue << 16) | (thirdByte << 8) | fourthByte;\n              break buildChar;\n            }\n          }\n        }\n        iter.error = true;\n        break buildChar;\n      }\n    }\n    return iter.done == false;\n  };\n\n  // TODO:  This set of data comes from the character frequency-\n  //        of-occurence analysis tool.  The data needs to be moved\n  //        into a resource and loaded from there.\n  this.commonChars = [\n    0xa1a1, 0xa1a2, 0xa1a3, 0xa1a4, 0xa1b0, 0xa1b1, 0xa1f1, 0xa1f3, 0xa3a1, 0xa3ac,\n    0xa3ba, 0xb1a8, 0xb1b8, 0xb1be, 0xb2bb, 0xb3c9, 0xb3f6, 0xb4f3, 0xb5bd, 0xb5c4,\n    0xb5e3, 0xb6af, 0xb6d4, 0xb6e0, 0xb7a2, 0xb7a8, 0xb7bd, 0xb7d6, 0xb7dd, 0xb8b4,\n    0xb8df, 0xb8f6, 0xb9ab, 0xb9c9, 0xb9d8, 0xb9fa, 0xb9fd, 0xbacd, 0xbba7, 0xbbd6,\n    0xbbe1, 0xbbfa, 0xbcbc, 0xbcdb, 0xbcfe, 0xbdcc, 0xbecd, 0xbedd, 0xbfb4, 0xbfc6,\n    0xbfc9, 0xc0b4, 0xc0ed, 0xc1cb, 0xc2db, 0xc3c7, 0xc4dc, 0xc4ea, 0xc5cc, 0xc6f7,\n    0xc7f8, 0xc8ab, 0xc8cb, 0xc8d5, 0xc8e7, 0xc9cf, 0xc9fa, 0xcab1, 0xcab5, 0xcac7,\n    0xcad0, 0xcad6, 0xcaf5, 0xcafd, 0xccec, 0xcdf8, 0xceaa, 0xcec4, 0xced2, 0xcee5,\n    0xcfb5, 0xcfc2, 0xcfd6, 0xd0c2, 0xd0c5, 0xd0d0, 0xd0d4, 0xd1a7, 0xd2aa, 0xd2b2,\n    0xd2b5, 0xd2bb, 0xd2d4, 0xd3c3, 0xd3d0, 0xd3fd, 0xd4c2, 0xd4da, 0xd5e2, 0xd6d0\n  ];\n};\nutil.inherits(module.exports.gb_18030, mbcs);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/~/bemuse-chardet/encoding/mbcs.js\n ** module id = 141\n ** module chunks = 2 3 4 5 8\n **/","var util = require('util'),\n  Match = require ('../match');\n\n/**\n * This class recognizes single-byte encodings. Because the encoding scheme is so\n * simple, language statistics are used to do the matching.\n */\n\nfunction NGramParser(theNgramList, theByteMap) {\n  var N_GRAM_MASK = 0xFFFFFF;\n\n  this.byteIndex = 0;\n  this.ngram = 0;\n\n  this.ngramList = theNgramList;\n  this.byteMap = theByteMap;\n\n  this.ngramCount = 0;\n  this.hitCount = 0;\n\n  this.spaceChar;\n\n  /*\n   * Binary search for value in table, which must have exactly 64 entries.\n   */\n  this.search = function(table, value) {\n    var index = 0;\n\n    if (table[index + 32] <= value) index += 32;\n    if (table[index + 16] <= value) index += 16;\n    if (table[index + 8]  <= value) index += 8;\n    if (table[index + 4]  <= value) index += 4;\n    if (table[index + 2]  <= value) index += 2;\n    if (table[index + 1]  <= value) index += 1;\n    if (table[index]      > value)  index -= 1;\n\n    if (index < 0 || table[index] != value)\n      return -1;\n\n    return index;\n  };\n\n  this.lookup = function(thisNgram) {\n    this.ngramCount += 1;\n    if (this.search(this.ngramList, thisNgram) >= 0) {\n      this.hitCount += 1;\n    }\n  };\n\n  this.addByte = function(b) {\n    this.ngram = ((this.ngram << 8) + (b & 0xFF)) & N_GRAM_MASK;\n    this.lookup(this.ngram);\n  }\n\n  this.nextByte = function(det) {\n    if (this.byteIndex >= det.fInputLen)\n      return -1;\n\n    return det.fInputBytes[this.byteIndex++] & 0xFF;\n  }\n\n  this.parse = function(det, spaceCh) {\n    var b, ignoreSpace = false;\n    this.spaceChar = spaceCh;\n\n    while ((b = this.nextByte(det)) >= 0) {\n      var mb = this.byteMap[b];\n\n      // TODO: 0x20 might not be a space in all character sets...\n      if (mb != 0) {\n        if (!(mb == this.spaceChar && ignoreSpace)) {\n          this.addByte(mb);\n        }\n\n        ignoreSpace = (mb == this.spaceChar);\n      }\n    }\n\n    // TODO: Is this OK? The buffer could have ended in the middle of a word...\n    this.addByte(this.spaceChar);\n\n    var rawPercent = this.hitCount / this.ngramCount;\n\n    // TODO - This is a bit of a hack to take care of a case\n    // were we were getting a confidence of 135...\n    if (rawPercent > 0.33)\n      return 98;\n\n    return Math.floor(rawPercent * 300.0);\n  };\n};\n\nfunction NGramsPlusLang(la, ng) {\n  this.fLang = la;\n  this.fNGrams = ng;\n};\n\nfunction sbcs() {};\nsbcs.prototype.spaceChar = 0x20;\nsbcs.prototype.ngrams = function() {};\nsbcs.prototype.byteMap = function() {};\nsbcs.prototype.match = function(det) {\n\n  var ngrams = this.ngrams();\n  var multiple = (Array.isArray(ngrams) && ngrams[0] instanceof NGramsPlusLang);\n\n  if (!multiple) {\n    var parser = new NGramParser(ngrams, this.byteMap());\n    var confidence = parser.parse(det, this.spaceChar);\n    return confidence <= 0 ? null : new Match(det, this, confidence);\n  }\n\n  var bestConfidenceSoFar = -1;\n  var lang = null;\n\n  for (var i = ngrams.length - 1; i >= 0; i--) {\n    var ngl = ngrams[i];\n\n    var parser = new NGramParser(ngl.fNGrams, this.byteMap());\n    var confidence = parser.parse(det, this.spaceChar);\n    if (confidence > bestConfidenceSoFar) {\n      bestConfidenceSoFar = confidence;\n      lang = ngl.fLang;\n    }\n  }\n\n  var name = this.name(det);\n  return bestConfidenceSoFar <= 0 ? null : new Match(det, this, bestConfidenceSoFar, name, lang);\n};\n\n\nmodule.exports.ISO_8859_1 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0xAA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0xB5, 0x20, 0x20,\n      0x20, 0x20, 0xBA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      new NGramsPlusLang('da', [\n        0x206166, 0x206174, 0x206465, 0x20656E, 0x206572, 0x20666F, 0x206861, 0x206920,\n        0x206D65, 0x206F67, 0x2070E5, 0x207369, 0x207374, 0x207469, 0x207669, 0x616620,\n        0x616E20, 0x616E64, 0x617220, 0x617420, 0x646520, 0x64656E, 0x646572, 0x646574,\n        0x652073, 0x656420, 0x656465, 0x656E20, 0x656E64, 0x657220, 0x657265, 0x657320,\n        0x657420, 0x666F72, 0x676520, 0x67656E, 0x676572, 0x696765, 0x696C20, 0x696E67,\n        0x6B6520, 0x6B6B65, 0x6C6572, 0x6C6967, 0x6C6C65, 0x6D6564, 0x6E6465, 0x6E6520,\n        0x6E6720, 0x6E6765, 0x6F6720, 0x6F6D20, 0x6F7220, 0x70E520, 0x722064, 0x722065,\n        0x722073, 0x726520, 0x737465, 0x742073, 0x746520, 0x746572, 0x74696C, 0x766572\n      ]),\n      new NGramsPlusLang('de', [\n        0x20616E, 0x206175, 0x206265, 0x206461, 0x206465, 0x206469, 0x206569, 0x206765,\n        0x206861, 0x20696E, 0x206D69, 0x207363, 0x207365, 0x20756E, 0x207665, 0x20766F,\n        0x207765, 0x207A75, 0x626572, 0x636820, 0x636865, 0x636874, 0x646173, 0x64656E,\n        0x646572, 0x646965, 0x652064, 0x652073, 0x65696E, 0x656974, 0x656E20, 0x657220,\n        0x657320, 0x67656E, 0x68656E, 0x687420, 0x696368, 0x696520, 0x696E20, 0x696E65,\n        0x697420, 0x6C6963, 0x6C6C65, 0x6E2061, 0x6E2064, 0x6E2073, 0x6E6420, 0x6E6465,\n        0x6E6520, 0x6E6720, 0x6E6765, 0x6E7465, 0x722064, 0x726465, 0x726569, 0x736368,\n        0x737465, 0x742064, 0x746520, 0x74656E, 0x746572, 0x756E64, 0x756E67, 0x766572\n      ]),\n      new NGramsPlusLang('en', [\n        0x206120, 0x20616E, 0x206265, 0x20636F, 0x20666F, 0x206861, 0x206865, 0x20696E,\n        0x206D61, 0x206F66, 0x207072, 0x207265, 0x207361, 0x207374, 0x207468, 0x20746F,\n        0x207768, 0x616964, 0x616C20, 0x616E20, 0x616E64, 0x617320, 0x617420, 0x617465,\n        0x617469, 0x642061, 0x642074, 0x652061, 0x652073, 0x652074, 0x656420, 0x656E74,\n        0x657220, 0x657320, 0x666F72, 0x686174, 0x686520, 0x686572, 0x696420, 0x696E20,\n        0x696E67, 0x696F6E, 0x697320, 0x6E2061, 0x6E2074, 0x6E6420, 0x6E6720, 0x6E7420,\n        0x6F6620, 0x6F6E20, 0x6F7220, 0x726520, 0x727320, 0x732061, 0x732074, 0x736169,\n        0x737420, 0x742074, 0x746572, 0x746861, 0x746865, 0x74696F, 0x746F20, 0x747320\n      ]),\n      new NGramsPlusLang('es', [\n        0x206120, 0x206361, 0x20636F, 0x206465, 0x20656C, 0x20656E, 0x206573, 0x20696E,\n        0x206C61, 0x206C6F, 0x207061, 0x20706F, 0x207072, 0x207175, 0x207265, 0x207365,\n        0x20756E, 0x207920, 0x612063, 0x612064, 0x612065, 0x61206C, 0x612070, 0x616369,\n        0x61646F, 0x616C20, 0x617220, 0x617320, 0x6369F3, 0x636F6E, 0x646520, 0x64656C,\n        0x646F20, 0x652064, 0x652065, 0x65206C, 0x656C20, 0x656E20, 0x656E74, 0x657320,\n        0x657374, 0x69656E, 0x69F36E, 0x6C6120, 0x6C6F73, 0x6E2065, 0x6E7465, 0x6F2064,\n        0x6F2065, 0x6F6E20, 0x6F7220, 0x6F7320, 0x706172, 0x717565, 0x726120, 0x726573,\n        0x732064, 0x732065, 0x732070, 0x736520, 0x746520, 0x746F20, 0x756520, 0xF36E20\n      ]),\n      new NGramsPlusLang('fr', [\n        0x206175, 0x20636F, 0x206461, 0x206465, 0x206475, 0x20656E, 0x206574, 0x206C61,\n        0x206C65, 0x207061, 0x20706F, 0x207072, 0x207175, 0x207365, 0x20736F, 0x20756E,\n        0x20E020, 0x616E74, 0x617469, 0x636520, 0x636F6E, 0x646520, 0x646573, 0x647520,\n        0x652061, 0x652063, 0x652064, 0x652065, 0x65206C, 0x652070, 0x652073, 0x656E20,\n        0x656E74, 0x657220, 0x657320, 0x657420, 0x657572, 0x696F6E, 0x697320, 0x697420,\n        0x6C6120, 0x6C6520, 0x6C6573, 0x6D656E, 0x6E2064, 0x6E6520, 0x6E7320, 0x6E7420,\n        0x6F6E20, 0x6F6E74, 0x6F7572, 0x717565, 0x72206C, 0x726520, 0x732061, 0x732064,\n        0x732065, 0x73206C, 0x732070, 0x742064, 0x746520, 0x74696F, 0x756520, 0x757220\n      ]),\n      new NGramsPlusLang('it', [\n        0x20616C, 0x206368, 0x20636F, 0x206465, 0x206469, 0x206520, 0x20696C, 0x20696E,\n        0x206C61, 0x207065, 0x207072, 0x20756E, 0x612063, 0x612064, 0x612070, 0x612073,\n        0x61746F, 0x636865, 0x636F6E, 0x64656C, 0x646920, 0x652061, 0x652063, 0x652064,\n        0x652069, 0x65206C, 0x652070, 0x652073, 0x656C20, 0x656C6C, 0x656E74, 0x657220,\n        0x686520, 0x692061, 0x692063, 0x692064, 0x692073, 0x696120, 0x696C20, 0x696E20,\n        0x696F6E, 0x6C6120, 0x6C6520, 0x6C6920, 0x6C6C61, 0x6E6520, 0x6E6920, 0x6E6F20,\n        0x6E7465, 0x6F2061, 0x6F2064, 0x6F2069, 0x6F2073, 0x6F6E20, 0x6F6E65, 0x706572,\n        0x726120, 0x726520, 0x736920, 0x746120, 0x746520, 0x746920, 0x746F20, 0x7A696F\n      ]),\n      new NGramsPlusLang('nl', [\n        0x20616C, 0x206265, 0x206461, 0x206465, 0x206469, 0x206565, 0x20656E, 0x206765,\n        0x206865, 0x20696E, 0x206D61, 0x206D65, 0x206F70, 0x207465, 0x207661, 0x207665,\n        0x20766F, 0x207765, 0x207A69, 0x61616E, 0x616172, 0x616E20, 0x616E64, 0x617220,\n        0x617420, 0x636874, 0x646520, 0x64656E, 0x646572, 0x652062, 0x652076, 0x65656E,\n        0x656572, 0x656E20, 0x657220, 0x657273, 0x657420, 0x67656E, 0x686574, 0x696520,\n        0x696E20, 0x696E67, 0x697320, 0x6E2062, 0x6E2064, 0x6E2065, 0x6E2068, 0x6E206F,\n        0x6E2076, 0x6E6465, 0x6E6720, 0x6F6E64, 0x6F6F72, 0x6F7020, 0x6F7220, 0x736368,\n        0x737465, 0x742064, 0x746520, 0x74656E, 0x746572, 0x76616E, 0x766572, 0x766F6F\n      ]),\n      new NGramsPlusLang('no', [\n        0x206174, 0x206176, 0x206465, 0x20656E, 0x206572, 0x20666F, 0x206861, 0x206920,\n        0x206D65, 0x206F67, 0x2070E5, 0x207365, 0x20736B, 0x20736F, 0x207374, 0x207469,\n        0x207669, 0x20E520, 0x616E64, 0x617220, 0x617420, 0x646520, 0x64656E, 0x646574,\n        0x652073, 0x656420, 0x656E20, 0x656E65, 0x657220, 0x657265, 0x657420, 0x657474,\n        0x666F72, 0x67656E, 0x696B6B, 0x696C20, 0x696E67, 0x6B6520, 0x6B6B65, 0x6C6520,\n        0x6C6C65, 0x6D6564, 0x6D656E, 0x6E2073, 0x6E6520, 0x6E6720, 0x6E6765, 0x6E6E65,\n        0x6F6720, 0x6F6D20, 0x6F7220, 0x70E520, 0x722073, 0x726520, 0x736F6D, 0x737465,\n        0x742073, 0x746520, 0x74656E, 0x746572, 0x74696C, 0x747420, 0x747465, 0x766572\n      ]),\n      new NGramsPlusLang('pt', [\n        0x206120, 0x20636F, 0x206461, 0x206465, 0x20646F, 0x206520, 0x206573, 0x206D61,\n        0x206E6F, 0x206F20, 0x207061, 0x20706F, 0x207072, 0x207175, 0x207265, 0x207365,\n        0x20756D, 0x612061, 0x612063, 0x612064, 0x612070, 0x616465, 0x61646F, 0x616C20,\n        0x617220, 0x617261, 0x617320, 0x636F6D, 0x636F6E, 0x646120, 0x646520, 0x646F20,\n        0x646F73, 0x652061, 0x652064, 0x656D20, 0x656E74, 0x657320, 0x657374, 0x696120,\n        0x696361, 0x6D656E, 0x6E7465, 0x6E746F, 0x6F2061, 0x6F2063, 0x6F2064, 0x6F2065,\n        0x6F2070, 0x6F7320, 0x706172, 0x717565, 0x726120, 0x726573, 0x732061, 0x732064,\n        0x732065, 0x732070, 0x737461, 0x746520, 0x746F20, 0x756520, 0xE36F20, 0xE7E36F\n      ]),\n      new NGramsPlusLang('sv', [\n        0x206174, 0x206176, 0x206465, 0x20656E, 0x2066F6, 0x206861, 0x206920, 0x20696E,\n        0x206B6F, 0x206D65, 0x206F63, 0x2070E5, 0x20736B, 0x20736F, 0x207374, 0x207469,\n        0x207661, 0x207669, 0x20E472, 0x616465, 0x616E20, 0x616E64, 0x617220, 0x617474,\n        0x636820, 0x646520, 0x64656E, 0x646572, 0x646574, 0x656420, 0x656E20, 0x657220,\n        0x657420, 0x66F672, 0x67656E, 0x696C6C, 0x696E67, 0x6B6120, 0x6C6C20, 0x6D6564,\n        0x6E2073, 0x6E6120, 0x6E6465, 0x6E6720, 0x6E6765, 0x6E696E, 0x6F6368, 0x6F6D20,\n        0x6F6E20, 0x70E520, 0x722061, 0x722073, 0x726120, 0x736B61, 0x736F6D, 0x742073,\n        0x746120, 0x746520, 0x746572, 0x74696C, 0x747420, 0x766172, 0xE47220, 0xF67220,\n      ])\n    ];\n  };\n\n  this.name = function(det) {\n    return (det && det.fC1Bytes) ? 'windows-1252' : 'ISO-8859-1';\n  };\n};\nutil.inherits(module.exports.ISO_8859_1, sbcs);\n\n\nmodule.exports.ISO_8859_2 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0xB1, 0x20, 0xB3, 0x20, 0xB5, 0xB6, 0x20,\n      0x20, 0xB9, 0xBA, 0xBB, 0xBC, 0x20, 0xBE, 0xBF,\n      0x20, 0xB1, 0x20, 0xB3, 0x20, 0xB5, 0xB6, 0xB7,\n      0x20, 0xB9, 0xBA, 0xBB, 0xBC, 0x20, 0xBE, 0xBF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x20\n    ];\n  }\n\n  this.ngrams = function() {\n    return [\n      new NGramsPlusLang('cs', [\n        0x206120, 0x206279, 0x20646F, 0x206A65, 0x206E61, 0x206E65, 0x206F20, 0x206F64,\n        0x20706F, 0x207072, 0x2070F8, 0x20726F, 0x207365, 0x20736F, 0x207374, 0x20746F,\n        0x207620, 0x207679, 0x207A61, 0x612070, 0x636520, 0x636820, 0x652070, 0x652073,\n        0x652076, 0x656D20, 0x656EED, 0x686F20, 0x686F64, 0x697374, 0x6A6520, 0x6B7465,\n        0x6C6520, 0x6C6920, 0x6E6120, 0x6EE920, 0x6EEC20, 0x6EED20, 0x6F2070, 0x6F646E,\n        0x6F6A69, 0x6F7374, 0x6F7520, 0x6F7661, 0x706F64, 0x706F6A, 0x70726F, 0x70F865,\n        0x736520, 0x736F75, 0x737461, 0x737469, 0x73746E, 0x746572, 0x746EED, 0x746F20,\n        0x752070, 0xBE6520, 0xE16EED, 0xE9686F, 0xED2070, 0xED2073, 0xED6D20, 0xF86564,\n      ]),\n      new NGramsPlusLang('hu', [\n        0x206120, 0x20617A, 0x206265, 0x206567, 0x20656C, 0x206665, 0x206861, 0x20686F,\n        0x206973, 0x206B65, 0x206B69, 0x206BF6, 0x206C65, 0x206D61, 0x206D65, 0x206D69,\n        0x206E65, 0x20737A, 0x207465, 0x20E973, 0x612061, 0x61206B, 0x61206D, 0x612073,\n        0x616B20, 0x616E20, 0x617A20, 0x62616E, 0x62656E, 0x656779, 0x656B20, 0x656C20,\n        0x656C65, 0x656D20, 0x656E20, 0x657265, 0x657420, 0x657465, 0x657474, 0x677920,\n        0x686F67, 0x696E74, 0x697320, 0x6B2061, 0x6BF67A, 0x6D6567, 0x6D696E, 0x6E2061,\n        0x6E616B, 0x6E656B, 0x6E656D, 0x6E7420, 0x6F6779, 0x732061, 0x737A65, 0x737A74,\n        0x737AE1, 0x73E967, 0x742061, 0x747420, 0x74E173, 0x7A6572, 0xE16E20, 0xE97320,\n      ]),\n      new NGramsPlusLang('pl', [\n        0x20637A, 0x20646F, 0x206920, 0x206A65, 0x206B6F, 0x206D61, 0x206D69, 0x206E61,\n        0x206E69, 0x206F64, 0x20706F, 0x207072, 0x207369, 0x207720, 0x207769, 0x207779,\n        0x207A20, 0x207A61, 0x612070, 0x612077, 0x616E69, 0x636820, 0x637A65, 0x637A79,\n        0x646F20, 0x647A69, 0x652070, 0x652073, 0x652077, 0x65207A, 0x65676F, 0x656A20,\n        0x656D20, 0x656E69, 0x676F20, 0x696120, 0x696520, 0x69656A, 0x6B6120, 0x6B6920,\n        0x6B6965, 0x6D6965, 0x6E6120, 0x6E6961, 0x6E6965, 0x6F2070, 0x6F7761, 0x6F7769,\n        0x706F6C, 0x707261, 0x70726F, 0x70727A, 0x727A65, 0x727A79, 0x7369EA, 0x736B69,\n        0x737461, 0x776965, 0x796368, 0x796D20, 0x7A6520, 0x7A6965, 0x7A7920, 0xF37720,\n      ]),\n      new NGramsPlusLang('ro', [\n        0x206120, 0x206163, 0x206361, 0x206365, 0x20636F, 0x206375, 0x206465, 0x206469,\n        0x206C61, 0x206D61, 0x207065, 0x207072, 0x207365, 0x2073E3, 0x20756E, 0x20BA69,\n        0x20EE6E, 0x612063, 0x612064, 0x617265, 0x617420, 0x617465, 0x617520, 0x636172,\n        0x636F6E, 0x637520, 0x63E320, 0x646520, 0x652061, 0x652063, 0x652064, 0x652070,\n        0x652073, 0x656120, 0x656920, 0x656C65, 0x656E74, 0x657374, 0x692061, 0x692063,\n        0x692064, 0x692070, 0x696520, 0x696920, 0x696E20, 0x6C6120, 0x6C6520, 0x6C6F72,\n        0x6C7569, 0x6E6520, 0x6E7472, 0x6F7220, 0x70656E, 0x726520, 0x726561, 0x727520,\n        0x73E320, 0x746520, 0x747275, 0x74E320, 0x756920, 0x756C20, 0xBA6920, 0xEE6E20,\n      ])\n    ];\n  };\n\n  this.name = function(det) {\n    return (det && det.fC1Bytes) ? 'windows-1250' : 'ISO-8859-2';\n  };\n};\nutil.inherits(module.exports.ISO_8859_2, sbcs);\n\n\nmodule.exports.ISO_8859_5 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0x20, 0xFE, 0xFF,\n      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0x20, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0x20, 0xFE, 0xFF\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x20D220, 0x20D2DE, 0x20D4DE, 0x20D7D0, 0x20D820, 0x20DAD0, 0x20DADE, 0x20DDD0,\n      0x20DDD5, 0x20DED1, 0x20DFDE, 0x20DFE0, 0x20E0D0, 0x20E1DE, 0x20E1E2, 0x20E2DE,\n      0x20E7E2, 0x20EDE2, 0xD0DDD8, 0xD0E2EC, 0xD3DE20, 0xD5DBEC, 0xD5DDD8, 0xD5E1E2,\n      0xD5E220, 0xD820DF, 0xD8D520, 0xD8D820, 0xD8EF20, 0xDBD5DD, 0xDBD820, 0xDBECDD,\n      0xDDD020, 0xDDD520, 0xDDD8D5, 0xDDD8EF, 0xDDDE20, 0xDDDED2, 0xDE20D2, 0xDE20DF,\n      0xDE20E1, 0xDED220, 0xDED2D0, 0xDED3DE, 0xDED920, 0xDEDBEC, 0xDEDC20, 0xDEE1E2,\n      0xDFDEDB, 0xDFE0D5, 0xDFE0D8, 0xDFE0DE, 0xE0D0D2, 0xE0D5D4, 0xE1E2D0, 0xE1E2D2,\n      0xE1E2D8, 0xE1EF20, 0xE2D5DB, 0xE2DE20, 0xE2DEE0, 0xE2EC20, 0xE7E2DE, 0xEBE520\n    ];\n  };\n\n  this.name = function(det) {\n    return 'ISO-8859-5';\n  };\n\n  this.language = function() {\n    return 'ru';\n  };\n};\nutil.inherits(module.exports.ISO_8859_5, sbcs);\n\n\nmodule.exports.ISO_8859_6 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n      0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,\n      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n      0xD8, 0xD9, 0xDA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x20C7E4, 0x20C7E6, 0x20C8C7, 0x20D9E4, 0x20E1EA, 0x20E4E4, 0x20E5E6, 0x20E8C7,\n      0xC720C7, 0xC7C120, 0xC7CA20, 0xC7D120, 0xC7E420, 0xC7E4C3, 0xC7E4C7, 0xC7E4C8,\n      0xC7E4CA, 0xC7E4CC, 0xC7E4CD, 0xC7E4CF, 0xC7E4D3, 0xC7E4D9, 0xC7E4E2, 0xC7E4E5,\n      0xC7E4E8, 0xC7E4EA, 0xC7E520, 0xC7E620, 0xC7E6CA, 0xC820C7, 0xC920C7, 0xC920E1,\n      0xC920E4, 0xC920E5, 0xC920E8, 0xCA20C7, 0xCF20C7, 0xCFC920, 0xD120C7, 0xD1C920,\n      0xD320C7, 0xD920C7, 0xD9E4E9, 0xE1EA20, 0xE420C7, 0xE4C920, 0xE4E920, 0xE4EA20,\n      0xE520C7, 0xE5C720, 0xE5C920, 0xE5E620, 0xE620C7, 0xE720C7, 0xE7C720, 0xE8C7E4,\n      0xE8E620, 0xE920C7, 0xEA20C7, 0xEA20E5, 0xEA20E8, 0xEAC920, 0xEAD120, 0xEAE620\n    ];\n  };\n\n  this.name = function(det) {\n    return 'ISO-8859-6';\n  };\n\n  this.language = function() {\n    return 'ar';\n  };\n};\nutil.inherits(module.exports.ISO_8859_6, sbcs);\n\n\nmodule.exports.ISO_8859_7 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0xA1, 0xA2, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xDC, 0x20,\n      0xDD, 0xDE, 0xDF, 0x20, 0xFC, 0x20, 0xFD, 0xFE,\n      0xC0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0x20, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xDC, 0xDD, 0xDE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x20\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x20E1ED, 0x20E1F0, 0x20E3E9, 0x20E4E9, 0x20E5F0, 0x20E720, 0x20EAE1, 0x20ECE5,\n      0x20EDE1, 0x20EF20, 0x20F0E1, 0x20F0EF, 0x20F0F1, 0x20F3F4, 0x20F3F5, 0x20F4E7,\n      0x20F4EF, 0xDFE120, 0xE120E1, 0xE120F4, 0xE1E920, 0xE1ED20, 0xE1F0FC, 0xE1F220,\n      0xE3E9E1, 0xE5E920, 0xE5F220, 0xE720F4, 0xE7ED20, 0xE7F220, 0xE920F4, 0xE9E120,\n      0xE9EADE, 0xE9F220, 0xEAE1E9, 0xEAE1F4, 0xECE520, 0xED20E1, 0xED20E5, 0xED20F0,\n      0xEDE120, 0xEFF220, 0xEFF520, 0xF0EFF5, 0xF0F1EF, 0xF0FC20, 0xF220E1, 0xF220E5,\n      0xF220EA, 0xF220F0, 0xF220F4, 0xF3E520, 0xF3E720, 0xF3F4EF, 0xF4E120, 0xF4E1E9,\n      0xF4E7ED, 0xF4E7F2, 0xF4E9EA, 0xF4EF20, 0xF4EFF5, 0xF4F9ED, 0xF9ED20, 0xFEED20\n    ];\n  };\n\n  this.name = function(det) {\n    return (det && det.fC1Bytes) ? 'windows-1253' : 'ISO-8859-7';\n  };\n\n  this.language = function() {\n    return 'el';\n  };\n};\nutil.inherits(module.exports.ISO_8859_7, sbcs);\n\nmodule.exports.ISO_8859_8 = function() {\n\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0xB5, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0x20, 0x20, 0x20, 0x20, 0x20\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      new NGramsPlusLang('he', [\n        0x20E0E5, 0x20E0E7, 0x20E0E9, 0x20E0FA, 0x20E1E9, 0x20E1EE, 0x20E4E0, 0x20E4E5,\n        0x20E4E9, 0x20E4EE, 0x20E4F2, 0x20E4F9, 0x20E4FA, 0x20ECE0, 0x20ECE4, 0x20EEE0,\n        0x20F2EC, 0x20F9EC, 0xE0FA20, 0xE420E0, 0xE420E1, 0xE420E4, 0xE420EC, 0xE420EE,\n        0xE420F9, 0xE4E5E0, 0xE5E020, 0xE5ED20, 0xE5EF20, 0xE5F820, 0xE5FA20, 0xE920E4,\n        0xE9E420, 0xE9E5FA, 0xE9E9ED, 0xE9ED20, 0xE9EF20, 0xE9F820, 0xE9FA20, 0xEC20E0,\n        0xEC20E4, 0xECE020, 0xECE420, 0xED20E0, 0xED20E1, 0xED20E4, 0xED20EC, 0xED20EE,\n        0xED20F9, 0xEEE420, 0xEF20E4, 0xF0E420, 0xF0E920, 0xF0E9ED, 0xF2EC20, 0xF820E4,\n        0xF8E9ED, 0xF9EC20, 0xFA20E0, 0xFA20E1, 0xFA20E4, 0xFA20EC, 0xFA20EE, 0xFA20F9,\n      ]),\n      new NGramsPlusLang('he', [\n        0x20E0E5, 0x20E0EC, 0x20E4E9, 0x20E4EC, 0x20E4EE, 0x20E4F0, 0x20E9F0, 0x20ECF2,\n        0x20ECF9, 0x20EDE5, 0x20EDE9, 0x20EFE5, 0x20EFE9, 0x20F8E5, 0x20F8E9, 0x20FAE0,\n        0x20FAE5, 0x20FAE9, 0xE020E4, 0xE020EC, 0xE020ED, 0xE020FA, 0xE0E420, 0xE0E5E4,\n        0xE0EC20, 0xE0EE20, 0xE120E4, 0xE120ED, 0xE120FA, 0xE420E4, 0xE420E9, 0xE420EC,\n        0xE420ED, 0xE420EF, 0xE420F8, 0xE420FA, 0xE4EC20, 0xE5E020, 0xE5E420, 0xE7E020,\n        0xE9E020, 0xE9E120, 0xE9E420, 0xEC20E4, 0xEC20ED, 0xEC20FA, 0xECF220, 0xECF920,\n        0xEDE9E9, 0xEDE9F0, 0xEDE9F8, 0xEE20E4, 0xEE20ED, 0xEE20FA, 0xEEE120, 0xEEE420,\n        0xF2E420, 0xF920E4, 0xF920ED, 0xF920FA, 0xF9E420, 0xFAE020, 0xFAE420, 0xFAE5E9,\n      ])\n    ];\n  };\n\n  this.name = function(det) {\n    return (det && det.fC1Bytes) ? 'windows-1255' : 'ISO-8859-8';\n  };\n\n  this.language = function() {\n    return 'he';\n  };\n\n};\nutil.inherits(module.exports.ISO_8859_8, sbcs);\n\n\nmodule.exports.ISO_8859_9 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0xAA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0xB5, 0x20, 0x20,\n      0x20, 0x20, 0xBA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0x69, 0xFE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x206261, 0x206269, 0x206275, 0x206461, 0x206465, 0x206765, 0x206861, 0x20696C,\n      0x206B61, 0x206B6F, 0x206D61, 0x206F6C, 0x207361, 0x207461, 0x207665, 0x207961,\n      0x612062, 0x616B20, 0x616C61, 0x616D61, 0x616E20, 0x616EFD, 0x617220, 0x617261,\n      0x6172FD, 0x6173FD, 0x617961, 0x626972, 0x646120, 0x646520, 0x646920, 0x652062,\n      0x65206B, 0x656469, 0x656E20, 0x657220, 0x657269, 0x657369, 0x696C65, 0x696E20,\n      0x696E69, 0x697220, 0x6C616E, 0x6C6172, 0x6C6520, 0x6C6572, 0x6E2061, 0x6E2062,\n      0x6E206B, 0x6E6461, 0x6E6465, 0x6E6520, 0x6E6920, 0x6E696E, 0x6EFD20, 0x72696E,\n      0x72FD6E, 0x766520, 0x796120, 0x796F72, 0xFD6E20, 0xFD6E64, 0xFD6EFD, 0xFDF0FD\n    ];\n  };\n\n  this.name = function(det) {\n    return (det && det.fC1Bytes) ? 'windows-1254' : 'ISO-8859-9';\n  };\n\n  this.language = function() {\n    return 'tr';\n  };\n};\nutil.inherits(module.exports.ISO_8859_9, sbcs);\n\n\nmodule.exports.windows_1251 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x90, 0x83, 0x20, 0x83, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x9A, 0x20, 0x9C, 0x9D, 0x9E, 0x9F,\n      0x90, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x9A, 0x20, 0x9C, 0x9D, 0x9E, 0x9F,\n      0x20, 0xA2, 0xA2, 0xBC, 0x20, 0xB4, 0x20, 0x20,\n      0xB8, 0x20, 0xBA, 0x20, 0x20, 0x20, 0x20, 0xBF,\n      0x20, 0x20, 0xB3, 0xB3, 0xB4, 0xB5, 0x20, 0x20,\n      0xB8, 0x20, 0xBA, 0x20, 0xBC, 0xBE, 0xBE, 0xBF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x20E220, 0x20E2EE, 0x20E4EE, 0x20E7E0, 0x20E820, 0x20EAE0, 0x20EAEE, 0x20EDE0,\n      0x20EDE5, 0x20EEE1, 0x20EFEE, 0x20EFF0, 0x20F0E0, 0x20F1EE, 0x20F1F2, 0x20F2EE,\n      0x20F7F2, 0x20FDF2, 0xE0EDE8, 0xE0F2FC, 0xE3EE20, 0xE5EBFC, 0xE5EDE8, 0xE5F1F2,\n      0xE5F220, 0xE820EF, 0xE8E520, 0xE8E820, 0xE8FF20, 0xEBE5ED, 0xEBE820, 0xEBFCED,\n      0xEDE020, 0xEDE520, 0xEDE8E5, 0xEDE8FF, 0xEDEE20, 0xEDEEE2, 0xEE20E2, 0xEE20EF,\n      0xEE20F1, 0xEEE220, 0xEEE2E0, 0xEEE3EE, 0xEEE920, 0xEEEBFC, 0xEEEC20, 0xEEF1F2,\n      0xEFEEEB, 0xEFF0E5, 0xEFF0E8, 0xEFF0EE, 0xF0E0E2, 0xF0E5E4, 0xF1F2E0, 0xF1F2E2,\n      0xF1F2E8, 0xF1FF20, 0xF2E5EB, 0xF2EE20, 0xF2EEF0, 0xF2FC20, 0xF7F2EE, 0xFBF520\n    ];\n  };\n\n  this.name = function(det) {\n    return 'windows-1251';\n  };\n\n  this.language = function() {\n    return 'ru';\n  };\n};\nutil.inherits(module.exports.windows_1251, sbcs);\n\n\nmodule.exports.windows_1256 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x81, 0x20, 0x83, 0x20, 0x20, 0x20, 0x20,\n      0x88, 0x20, 0x8A, 0x20, 0x9C, 0x8D, 0x8E, 0x8F,\n      0x90, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x98, 0x20, 0x9A, 0x20, 0x9C, 0x20, 0x20, 0x9F,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0xAA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0xB5, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n      0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,\n      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0x20,\n      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0x20, 0x20, 0x20, 0x20, 0xF4, 0x20, 0x20, 0x20,\n      0x20, 0xF9, 0x20, 0xFB, 0xFC, 0x20, 0x20, 0xFF\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x20C7E1, 0x20C7E4, 0x20C8C7, 0x20DAE1, 0x20DDED, 0x20E1E1, 0x20E3E4, 0x20E6C7,\n      0xC720C7, 0xC7C120, 0xC7CA20, 0xC7D120, 0xC7E120, 0xC7E1C3, 0xC7E1C7, 0xC7E1C8,\n      0xC7E1CA, 0xC7E1CC, 0xC7E1CD, 0xC7E1CF, 0xC7E1D3, 0xC7E1DA, 0xC7E1DE, 0xC7E1E3,\n      0xC7E1E6, 0xC7E1ED, 0xC7E320, 0xC7E420, 0xC7E4CA, 0xC820C7, 0xC920C7, 0xC920DD,\n      0xC920E1, 0xC920E3, 0xC920E6, 0xCA20C7, 0xCF20C7, 0xCFC920, 0xD120C7, 0xD1C920,\n      0xD320C7, 0xDA20C7, 0xDAE1EC, 0xDDED20, 0xE120C7, 0xE1C920, 0xE1EC20, 0xE1ED20,\n      0xE320C7, 0xE3C720, 0xE3C920, 0xE3E420, 0xE420C7, 0xE520C7, 0xE5C720, 0xE6C7E1,\n      0xE6E420, 0xEC20C7, 0xED20C7, 0xED20E3, 0xED20E6, 0xEDC920, 0xEDD120, 0xEDE420\n    ];\n  };\n\n  this.name = function(det) {\n    return 'windows-1256';\n  };\n\n  this.language = function() {\n    return 'ar';\n  };\n};\nutil.inherits(module.exports.windows_1256, sbcs);\n\n\nmodule.exports.KOI8_R = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0xA3, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0xA3, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n      0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,\n      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,\n      0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n      0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,\n      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x20C4CF, 0x20C920, 0x20CBC1, 0x20CBCF, 0x20CEC1, 0x20CEC5, 0x20CFC2, 0x20D0CF,\n      0x20D0D2, 0x20D2C1, 0x20D3CF, 0x20D3D4, 0x20D4CF, 0x20D720, 0x20D7CF, 0x20DAC1,\n      0x20DCD4, 0x20DED4, 0xC1CEC9, 0xC1D4D8, 0xC5CCD8, 0xC5CEC9, 0xC5D3D4, 0xC5D420,\n      0xC7CF20, 0xC920D0, 0xC9C520, 0xC9C920, 0xC9D120, 0xCCC5CE, 0xCCC920, 0xCCD8CE,\n      0xCEC120, 0xCEC520, 0xCEC9C5, 0xCEC9D1, 0xCECF20, 0xCECFD7, 0xCF20D0, 0xCF20D3,\n      0xCF20D7, 0xCFC7CF, 0xCFCA20, 0xCFCCD8, 0xCFCD20, 0xCFD3D4, 0xCFD720, 0xCFD7C1,\n      0xD0CFCC, 0xD0D2C5, 0xD0D2C9, 0xD0D2CF, 0xD2C1D7, 0xD2C5C4, 0xD3D120, 0xD3D4C1,\n      0xD3D4C9, 0xD3D4D7, 0xD4C5CC, 0xD4CF20, 0xD4CFD2, 0xD4D820, 0xD9C820, 0xDED4CF\n    ];\n  };\n\n  this.name = function(det) {\n    return 'KOI8-R';\n  };\n\n  this.language = function() {\n    return 'ru';\n  };\n};\nutil.inherits(module.exports.KOI8_R, sbcs);\n\n\n/*\nmodule.exports.ISO_8859_7 = function() {\n  this.byteMap = function() {\n    return [\n\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n\n    ];\n  };\n\n  this.name = function(det) {\n    if (typeof det == 'undefined')\n      return 'ISO-8859-7';\n    return det.fC1Bytes ? 'windows-1253' : 'ISO-8859-7';\n  };\n\n  this.language = function() {\n    return 'el';\n  };\n};\nutil.inherits(module.exports.ISO_8859_7, sbcs);\n*/\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/~/bemuse-chardet/encoding/sbcs.js\n ** module id = 142\n ** module chunks = 2 3 4 5 8\n **/","var util = require('util'),\n  Match = require ('../match');\n\n/**\n * This class matches UTF-16 and UTF-32, both big- and little-endian. The\n * BOM will be used if it is present.\n */\nmodule.exports.UTF_16BE = function() {\n  this.name = function() {\n    return 'UTF-16BE';\n  };\n  this.match = function(det) {\n    var input = det.fRawInput;\n\n    if (input.length >= 2 && ((input[0] & 0xff) == 0xfe && (input[1] & 0xff) == 0xff))\n      return new Match(det, this, confidence = 100);\n\n    // TODO: Do some statistics to check for unsigned UTF-16BE\n    return null;\n  };\n};\n\nmodule.exports.UTF_16LE = function() {\n  this.name = function() {\n    return 'UTF-16LE';\n  };\n  this.match = function(det) {\n    var input = det.fRawInput;\n\n    if (input.length >= 2 && ((input[0] & 0xff) == 0xff && (input[1] & 0xff) == 0xfe)) {\n       // An LE BOM is present.\n       if (input.length >= 4 && input[2] == 0x00 && input[3] == 0x00)\n         // It is probably UTF-32 LE, not UTF-16\n         return null;\n\n       return new Match(det, this, confidence = 100);\n    }\n\n    // TODO: Do some statistics to check for unsigned UTF-16LE\n    return null;\n  }\n};\n\nfunction UTF_32() {};\nUTF_32.prototype.match = function(det) {\n  var input      = det.fRawInput,\n    limit      = (det.fRawLength / 4) * 4,\n    numValid   = 0,\n    numInvalid = 0,\n    hasBOM     = false,\n    confidence = 0;\n\n  if (limit == 0)\n    return null;\n\n  if (this.getChar(input, 0) == 0x0000FEFF)\n    hasBOM = true;\n\n  for (var i = 0; i < limit; i += 4) {\n    var ch = this.getChar(input, i);\n\n    if (ch < 0 || ch >= 0x10FFFF || (ch >= 0xD800 && ch <= 0xDFFF))\n      numInvalid += 1;\n    else\n      numValid += 1;\n  }\n\n  // Cook up some sort of confidence score, based on presence of a BOM\n  //    and the existence of valid and/or invalid multi-byte sequences.\n  if (hasBOM && numInvalid == 0) {\n    confidence = 100;\n  } else if (hasBOM && numValid > numInvalid * 10) {\n    confidence = 80;\n  } else if (numValid > 3 && numInvalid == 0) {\n    confidence = 100;\n  } else if (numValid > 0 && numInvalid == 0) {\n    confidence = 80;\n  } else if (numValid > numInvalid * 10) {\n    // Probably corrupt UTF-32BE data.  Valid sequences aren't likely by chance.\n    confidence = 25;\n  }\n\n  // return confidence == 0 ? null : new CharsetMatch(det, this, confidence);\n  return confidence == 0 ? null : new Match(det, this, confidence);\n};\n\nmodule.exports.UTF_32BE = function() {\n  this.name = function() {\n    return 'UTF-32BE';\n  };\n  this.getChar = function(input, index) {\n    return (input[index + 0] & 0xff) << 24 | (input[index + 1] & 0xff) << 16 |\n         (input[index + 2] & 0xff) <<  8 | (input[index + 3] & 0xff);\n  };\n};\nutil.inherits(module.exports.UTF_32BE, UTF_32);\n\nmodule.exports.UTF_32LE = function() {\n  this.name = function() {\n    return 'UTF-32LE';\n  };\n  this.getChar = function(input, index) {\n    return (input[index + 3] & 0xff) << 24 | (input[index + 2] & 0xff) << 16 |\n         (input[index + 1] & 0xff) <<  8 | (input[index + 0] & 0xff);\n  };\n};\nutil.inherits(module.exports.UTF_32LE, UTF_32);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/~/bemuse-chardet/encoding/unicode.js\n ** module id = 143\n ** module chunks = 2 3 4 5 8\n **/","\nvar Match = require ('../match');\n\n/**\n * Charset recognizer for UTF-8\n */\nmodule.exports = function() {\n  this.name = function() {\n    return 'UTF-8';\n  };\n  this.match = function(det) {\n\n    var hasBOM = false,\n      numValid = 0,\n      numInvalid = 0,\n      input = det.fRawInput,\n      trailBytes = 0,\n      confidence;\n\n    if (det.fRawLength >= 3 &&\n      (input[0] & 0xff) == 0xef && (input[1] & 0xff) == 0xbb && (input[2] & 0xff) == 0xbf) {\n      hasBOM = true;\n    }\n\n    // Scan for multi-byte sequences\n    for (var i = 0; i < det.fRawLength; i++) {\n      var b = input[i];\n      if ((b & 0x80) == 0)\n        continue; // ASCII\n\n      // Hi bit on char found.  Figure out how long the sequence should be\n      if ((b & 0x0e0) == 0x0c0) {\n        trailBytes = 1;\n      } else if ((b & 0x0f0) == 0x0e0) {\n        trailBytes = 2;\n      } else if ((b & 0x0f8) == 0xf0) {\n        trailBytes = 3;\n      } else {\n        numInvalid++;\n        if (numInvalid > 5)\n          break;\n        trailBytes = 0;\n      }\n\n      // Verify that we've got the right number of trail bytes in the sequence\n      for (;;) {\n        i++;\n        if (i >= det.fRawLength)\n          break;\n\n        if ((input[i] & 0xc0) != 0x080) {\n          numInvalid++;\n          break;\n        }\n        if (--trailBytes == 0) {\n          numValid++;\n          break;\n        }\n      }\n    }\n\n    // Cook up some sort of confidence score, based on presense of a BOM\n    //    and the existence of valid and/or invalid multi-byte sequences.\n    confidence = 0;\n    if (hasBOM && numInvalid == 0)\n      confidence = 100;\n    else if (hasBOM && numValid > numInvalid * 10)\n      confidence = 80;\n    else if (numValid > 3 && numInvalid == 0)\n      confidence = 100;\n    else if (numValid > 0 && numInvalid == 0)\n      confidence = 80;\n    else if (numValid == 0 && numInvalid == 0)\n      // Plain ASCII.\n      confidence = 10;\n    else if (numValid > numInvalid * 10)\n      // Probably corruput utf-8 data.  Valid sequences aren't likely by chance.\n      confidence = 25;\n    else\n      return null\n\n    return new Match(det, this, confidence);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/~/bemuse-chardet/encoding/utf8.js\n ** module id = 144\n ** module chunks = 2 3 4 5 8\n **/","\nvar Note = require('./note')\n\nmodule.exports = Notes\n\nvar CHANNEL_MAPPING = {\n  IIDX_P1: {\n    '11': { column: '1'  },\n    '12': { column: '2'  },\n    '13': { column: '3'  },\n    '14': { column: '4'  },\n    '15': { column: '5'  },\n    '18': { column: '6'  },\n    '19': { column: '7'  },\n    '16': { column: 'SC' },\n  },\n}\n\n/**\n * The Notes class holds the Note objects in the game. A note object may or\n * may not be playable.\n *\n * @class Notes\n * @constructor\n */\nfunction Notes(notes) {\n  notes.forEach(Note.validate)\n  this._notes = notes\n}\n\n/**\n * Returns the number of notes in this object.\n *\n * @method count\n * @return {Number}\n */\nNotes.prototype.count = function() {\n  return this._notes.length\n}\n\n/**\n * Returns an Array of all notes.\n *\n * @method all\n * @return {Note[]}\n */\nNotes.prototype.all = function() {\n  return this._notes.slice()\n}\n\n/**\n * Creates a Notes object from a BMSChart.\n *\n * @static\n * @method fromBMSChart\n * @param {BMSChart} chart    the chart to process\n * @param {Object}   options  the note options\n */\nNotes.fromBMSChart = function(chart, options) {\n  options = options || { }\n  var builder = new BMSNoteBuilder(chart)\n  return builder.build()\n}\n\nfunction BMSNoteBuilder(chart) {\n  this._chart = chart\n}\n\nBMSNoteBuilder.prototype.build = function() {\n  this._notes = []\n  this._activeLN = { }\n  this._lastNote = { }\n  this._lnObj = (this._chart.headers.get('lnobj') || '').toLowerCase()\n  this._channelMapping = CHANNEL_MAPPING.IIDX_P1\n  this._objects = this._chart.objects.allSorted()\n  this._objects.forEach(function(object) {\n    this._handle(object)\n  }.bind(this))\n  return new Notes(this._notes)\n}\n\nBMSNoteBuilder.prototype._handle = function(object) {\n  if (object.channel === '01') {\n    this._handleNormalNote(object)\n  } else {\n    switch (object.channel.charAt(0)) {\n    case '1': case '2':\n      this._handleNormalNote(object)\n      break\n    case '5': case '6':\n      this._handleLongNote(object)\n      break\n    }\n  }\n}\n\nBMSNoteBuilder.prototype._handleNormalNote = function(object) {\n  var channel = this._normalizeChannel(object.channel)\n  var beat = this._getBeat(object)\n  if (object.value.toLowerCase() === this._lnObj) {\n    if (this._lastNote[channel]) {\n      this._lastNote[channel].endBeat = beat\n    }\n  } else {\n    var note = {\n      beat: beat,\n      endBeat: undefined,\n      keysound: object.value,\n      column: this._getColumn(channel),\n    }\n    this._lastNote[channel] = note\n    this._notes.push(note)\n  }\n}\n\nBMSNoteBuilder.prototype._handleLongNote = function(object) {\n  var channel = this._normalizeChannel(object.channel)\n  var beat = this._getBeat(object)\n  if (this._activeLN[channel]) {\n    var note = this._activeLN[channel]\n    note.endBeat = beat\n    this._notes.push(note)\n    ;delete this._activeLN[channel]\n  } else {\n    this._activeLN[channel] = {\n      beat: beat,\n      keysound: object.value,\n      column: this._getColumn(channel),\n    }\n  }\n}\n\nBMSNoteBuilder.prototype._getBeat = function(object) {\n  return this._chart.measureToBeat(object.measure, object.fraction)\n}\n\nBMSNoteBuilder.prototype._getColumn = function(channel) {\n  return this._channelMapping[channel]\n}\n\nBMSNoteBuilder.prototype._normalizeChannel = function(channel) {\n  return channel.replace(/^5/, '1').replace(/^6/, '2')\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/notes/index.js\n ** module id = 145\n ** module chunks = 2 3 4 5 8\n **/","\nvar DataStructure = require('data-structure')\n\nvar Column = new DataStructure({\n  column: String,\n})\n\n/**\n * @class Note\n */\nmodule.exports = new DataStructure({\n\n  /**\n   * @property beat\n   * @type Number\n   */\n  beat: Number,\n\n  /**\n   * @property endBeat\n   * @type Number|undefined\n   */\n  endBeat: DataStructure.maybe(Number),\n\n  /**\n   * @property column\n   * @type Column|undefined\n   */\n  column: DataStructure.maybe(Column),\n\n  /**\n   * @property keysound\n   * @type String\n   */\n  keysound: String,\n\n})\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/notes/note.js\n ** module id = 146\n ** module chunks = 2 3 4 5 8\n **/","\nvar chardet = require('bemuse-chardet/bemuse-chardet')\n\nexports.read = function read(buffer) {\n  throw new Error('Synchronous read unsupported in browser!')\n}\n\nexports.readAsync = function read(buffer, callback) {\n  var charset = chardet.detect(buffer)\n  var reader = new FileReader()\n  reader.onload = function() {\n    callback(null, reader.result)\n  }\n  reader.onerror = function() {\n    callback(new Error('cannot read it'))\n  }\n  reader.readAsText(new Blob([buffer]), charset)\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/reader/index.web.js\n ** module id = 147\n ** module chunks = 2 3 4 5 8\n **/","\nvar match = require('../util/match')\nmodule.exports = SongInfo\n\nfunction SongInfo() {\n  this.title      = 'NO TITLE'\n  this.artist     = 'NO ARTIST'\n  this.genre      = 'NO GENRE'\n  this.subtitles  = []\n  this.subartists = []\n  this.difficulty = 0\n  this.level      = 0\n}\n\nSongInfo.fromBMSChart = function(chart) {\n  var info = new SongInfo()\n  var title      = chart.headers.get('title')\n  var artist     = chart.headers.get('artist')\n  var genre      = chart.headers.get('genre')\n  var difficulty = +chart.headers.get('difficulty')\n  var level      = +chart.headers.get('playlevel')\n  var subtitles  = chart.headers.getAll('subtitle')\n  var subartists = chart.headers.getAll('subartist')\n  if (typeof title === 'string' && !subtitles) {\n    var extractSubtitle = function(m) {\n      title = m[1]\n      subtitles = [m[2]]\n    }\n    match(title)\n    .when(/^(.*\\S)\\s*-(.+?)-$/,   extractSubtitle)\n    .when(/^(.*\\S)\\s*～(.+?)～$/, extractSubtitle)\n    .when(/^(.*\\S)\\s*\\((.+?)\\)$/, extractSubtitle)\n    .when(/^(.*\\S)\\s*\\[(.+?)\\]$/, extractSubtitle)\n    .when(/^(.*\\S)\\s*<(.+?)>$/,   extractSubtitle)\n  }\n  if (title)      info.title      = title\n  if (artist)     info.artist     = artist\n  if (genre)      info.genre      = genre\n  if (subtitles)  info.subtitles  = subtitles\n  if (subartists) info.subartists = subartists\n  if (difficulty) info.difficulty = difficulty\n  if (level)      info.level      = level\n  return info\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/song-info/index.js\n ** module id = 148\n ** module chunks = 2 3 4 5 8\n **/","\nvar DataStructure = require('data-structure')\n\n/**\n * @class Segment\n */\nmodule.exports = new DataStructure({\n\n  /**\n   * @property t\n   * @type Number\n   */\n  t: Number,\n\n  /**\n   * @property x\n   * @type Number\n   */\n  x: Number,\n\n  /**\n   * @property dx\n   * @type Number\n   */\n  dx: Number,\n\n})\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/speedcore/segment.js\n ** module id = 149\n ** module chunks = 2 3 4 5 8\n **/","\n// The Timing module converts between beats and seconds.\n// They are created from a notechart.\n\nvar Speedcore = require('../speedcore')\nvar _ = require('lodash')\n\n/**\n * @module timing\n */\nmodule.exports = Timing\n\nvar precedence = { bpm: 1, stop: 2 }\n\nfunction Timing(initialBPM, actions) {\n  var state = { bpm: initialBPM, beat: 0, seconds: 0 }\n  var segments = [ ]\n  segments.push({\n    t: 0,\n    x: 0,\n    dx: state.bpm / 60,\n    bpm: state.bpm,\n    inclusive: true,\n  })\n  actions = actions.slice()\n  actions.sort(function(a, b) {\n    return a.beat - b.beat || precedence[a.type] - precedence[b.type]\n  })\n  actions.forEach(function(action) {\n    var beat    = action.beat\n    var seconds = state.seconds + (beat - state.beat) * 60 / state.bpm\n    switch (action.type) {\n    case 'bpm':\n      state.bpm = action.bpm\n      segments.push({\n        t: seconds,\n        x: beat,\n        dx: state.bpm / 60,\n        bpm: state.bpm,\n        inclusive: true,\n      })\n      break\n    case 'stop':\n      segments.push({\n        t: seconds,\n        x: beat,\n        dx: 0,\n        bpm: state.bpm,\n        inclusive: true,\n      })\n      seconds += (action.stopBeats || 0) * 60 / state.bpm\n      segments.push({\n        t: seconds,\n        x: beat,\n        dx: state.bpm / 60,\n        bpm: state.bpm,\n        inclusive: false,\n      })\n      break\n    default:\n      throw new Error(\"Unrecognized segment object!\")\n    }\n    state.beat    = beat\n    state.seconds = seconds\n  })\n  this._speedcore   = new Speedcore(segments)\n  this._eventBeats  = _.uniq(_.pluck(actions, 'beat'), true)\n}\n\nTiming.prototype.beatToSeconds = function(beat) {\n  return this._speedcore.t(beat)\n}\n\nTiming.prototype.secondsToBeat = function(seconds) {\n  return this._speedcore.x(seconds)\n}\n\nTiming.prototype.bpmAtBeat = function(beat) {\n  return this._speedcore.segmentAtX(beat).bpm\n}\n\nTiming.prototype.getEventBeats = function(beat) {\n  return this._eventBeats\n}\n\nTiming.fromBMSChart = function(chart) {\n  var actions = []\n  chart.objects.all().forEach(function(object) {\n    var bpm\n    var beat = chart.measureToBeat(object.measure, object.fraction)\n    if (object.channel === '03') {\n      bpm = parseInt(object.value, 16)\n      actions.push({ type: 'bpm', beat: beat, bpm: bpm })\n    } else if (object.channel === '08') {\n      bpm = +chart.headers.get('bpm' + object.value)\n      if (!isNaN(bpm)) actions.push({ type: 'bpm', beat: beat, bpm: bpm })\n    } else if (object.channel === '09') {\n      var stopBeats = chart.headers.get('stop' + object.value) / 48\n      actions.push({ type: 'stop', beat: beat, stopBeats: stopBeats })\n    }\n  })\n  return new Timing(+chart.headers.get('bpm') || 60, actions)\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/bms/timing/index.js\n ** module id = 150\n ** module chunks = 2 3 4 5 8\n **/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/node-libs-browser/~/util/~/inherits/inherits_browser.js\n ** module id = 151\n ** module chunks = 2 3 4 5 8\n **/","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/node-libs-browser/~/util/support/isBufferBrowser.js\n ** module id = 152\n ** module chunks = 2 3 4 5 8\n **/","\nimport co from 'co'\nimport readBlob from 'bemuse/utils/read-blob'\nimport * as ProgressUtils from 'bemuse/progress/utils'\n\nexport class DndResources {\n  constructor(event) {\n    this._files = getFilesFromEvent(event)\n  }\n  file(name) {\n    return this._files.then(function(files) {\n      for (let file of files) {\n        if (file.name.toLowerCase() === name.toLowerCase()) {\n          return new FileResource(file.file)\n        }\n      }\n      throw new Error('unable to find ' + name)\n    })\n  }\n  get fileList() {\n    return Promise.resolve(this._files.map(f => f.name))\n  }\n}\n\nexport class FileResource {\n  constructor(file) {\n    this._file = file\n  }\n  read(progress) {\n    return ProgressUtils.atomic(progress,\n        readBlob(this._file).as('arraybuffer'))\n  }\n  get name() {\n    return this._file.name\n  }\n}\n\nexport default DndResources\n\nfunction getFilesFromEvent(event) {\n\n  let out = []\n\n  return co(function*() {\n    if (event.dataTransfer.items) {\n      for (let item of Array.from(event.dataTransfer.items)) {\n        yield readItem(item)\n      }\n    } else if (event.dataTransfer.files) {\n      for (let file of Array.from(event.dataTransfer.files)) {\n        addFile(file)\n      }\n    }\n    return out\n  })\n\n  function readItem(item) {\n    return co(function*() {\n      let entry = item.webkitGetAsEntry && item.webkitGetAsEntry()\n      if (entry) {\n        yield readEntry(entry, '')\n      } else {\n        let file = item.getAsFile && item.getAsFile()\n        addFile(file)\n      }\n    })\n  }\n\n  function readEntry(entry) {\n    if (entry.isFile) {\n      return readFile(entry)\n    } else if (entry.isDirectory) {\n      return readDirectory(entry)\n    }\n  }\n\n  function readFile(entry) {\n    return new Promise((resolve, reject) => {\n      entry.file(resolve, reject)\n    })\n    .tap((file) => {\n      addFile(file)\n    })\n  }\n\n  function readDirectory(dir) {\n    return co(function*() {\n      let entries = []\n      let reader = dir.createReader()\n      let readMore = () => new Promise((resolve, reject) => {\n        reader.readEntries(resolve, reject)\n      })\n      for (;;) {\n        let results = yield readMore()\n        if (!results || results.length === 0) break\n        entries.push(...Array.from(results))\n      }\n      for (let entry of entries) {\n        yield readEntry(entry)\n      }\n    })\n  }\n\n  function addFile(file) {\n    if (file) {\n      out.push({ name: file.name, file })\n    }\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./resources/dnd-resources.js\n **/","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/node-libs-browser/~/buffer/~/base64-js/lib/b64.js\n ** module id = 249\n ** module chunks = 2 3 5 8\n **/","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/node-libs-browser/~/buffer/~/ieee754/index.js\n ** module id = 250\n ** module chunks = 2 3 5 8\n **/","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/node-libs-browser/~/buffer/~/is-array/index.js\n ** module id = 251\n ** module chunks = 2 3 5 8\n **/","\nimport $ from 'jquery'\nimport co from 'co'\n\nimport SamplingMaster from 'bemuse/sampling-master'\nimport DndResources   from 'bemuse/resources/dnd-resources'\nimport ctx            from 'audio-context'\n\nimport Reader   from 'bms/reader'\nimport Compiler from 'bms/compiler'\nimport Timing   from 'bms/timing'\nimport Notes    from 'bms/notes'\nimport SongInfo from 'bms/song-info'\n\nimport template from './template.jade'\nimport './style.scss'\n\nexport function main(element) {\n\n  $(element).text('Technical Demo!').on('click', handler)\n\n  function handler() {\n    ui()\n    $(element).off('click', handler)\n    $(element).hide()\n    return false\n  }\n\n  function ui() {\n    var el = $(template()).appendTo('body')\n    el.find('.js-play').hide()\n    el\n    .on('dragover', () => false)\n    .on('drop', e => {\n      e.preventDefault()\n      let dndLoader = new DndResources(e.originalEvent)\n      go(dndLoader, el)\n      return false\n    })\n  }\n\n}\n\nfunction go(loader, element) {\n\n  let master    = new SamplingMaster(ctx)\n  let $log      = element.find('.js-log')\n  let $play     = element.find('.js-play').hide()\n  let $sampler  = element.find('.js-sampler')\n\n  co(function*() {\n    log('Loading file list')\n    let list = yield loader.fileList\n    let bmsFile = list.filter(f => f.match(/\\.(?:bms|bme|bml|pms)$/i))[0]\n    log('Loading ' + bmsFile)\n\n    let arraybuffer = yield (yield loader.file(bmsFile)).read()\n    let buffer = new Buffer(new Uint8Array(arraybuffer))\n    let text = yield Promise.promisify(Reader.readAsync)(buffer)\n    let chart = Compiler.compile(text).chart\n    var timing = Timing.fromBMSChart(chart)\n    var notes = Notes.fromBMSChart(chart)\n    var info = SongInfo.fromBMSChart(chart)\n    $('<pre wrap></pre>').text(JSON.stringify(info, null, 2)).appendTo($sampler)\n    log('Loading samples')\n    var samples = yield loadSamples(notes, chart)\n    log('Click the button to play!')\n    yield waitForPlay()\n    void (function() {\n      master.unmute()\n      for (let note of notes.all()) {\n        setTimeout(() => {\n          let sample = samples[note.keysound]\n          if (!sample) {\n            console.log('warn: unknown sample ' + note.keysound)\n            return\n          }\n          let span = $('<span></span>')\n                .text('[' + note.keysound + '] ')\n                .appendTo($sampler)\n          let instance = sample.play()\n          $sampler[0].scrollTop = $sampler[0].scrollHeight\n          instance.onstop = function() {\n            span.addClass('is-off')\n          }\n        }, timing.beatToSeconds(note.beat) * 1000)\n      }\n      return false\n    })()\n  }).done()\n\n  function waitForPlay() {\n    return new Promise(function(resolve) {\n      $play.show()\n      $play.on('click', () => {\n        resolve()\n        $play.hide()\n      })\n    })\n  }\n\n  function log(t) {\n    $log.text(t)\n  }\n\n  function loadSamples(notes, chart) {\n    var samples = {}\n    var promises = []\n    let completed = 0\n\n    for (let note of notes.all()) {\n      let keysound = note.keysound\n      if (!(keysound in samples)) {\n        samples[keysound] = null\n        promises.push(\n          loadKeysound(chart.headers.get('wav' + keysound))\n            .then(blob => master.sample(blob))\n            .then(sample => samples[keysound] = sample)\n            .catch(e => console.error('Unable to load ' + keysound + ': ' + e))\n            .tap(() => log('[loaded ' + (++completed) + '/' + promises.length +\n              ' samples]'))\n        )\n      }\n    }\n\n    return Promise.all(promises).then(() => samples)\n  }\n\n  function loadKeysound(name) {\n    if (typeof name !== 'string') return Promise.reject(new Error('Empty name'))\n    return loader.file(name)\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.ogg')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.mp3')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.wav')))\n      .then(file => file.read())\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./coming-soon/demo/index.js\n **/","exports = module.exports = require(\"/home/ubuntu/bemuse/node_modules/css-loader/cssToString.js\")();\nexports.push([module.id, \".jukebox--overlay{position:fixed;top:0;right:0;bottom:0;left:0;background:rgba(139,134,133,.5)}.jukebox--inner{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);border:2px solid #8b8685;background:#252423;padding:12px}.jukebox--sampler{background:#090807;padding:9px;border:1px solid #8b8685;margin-top:10px;height:192px;width:40em;overflow:auto}.jukebox--sampler span{font-size:12px;opacity:1;transition:.5s opacity}.jukebox--sampler span.is-off{color:#8b8685;opacity:0}.jukebox h1{margin:0 0 20px;font:30px Helvetica Neue,Helvetica,sans-serif}.jukebox p{margin:10px 0 0}.jukebox .jukebox--status{color:#8b8685;font-style:italic;margin-bottom:20px}.jukebox button{display:block;box-sizing:border-box;width:100%;background:#090807;color:#7f3;cursor:pointer;border:1px solid #8b8685;padding:8px;font:700 15px verdana,sans-serif;margin-top:18px}\", \"\"]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/css-loader!../~/autoprefixer-loader?browsers=last 2 version!../~/sass-loader?outputStyle=expanded!./hacks/sass-import-rewriter/index.loader.js!./coming-soon/demo/style.scss\n ** module id = 584\n ** module chunks = 8\n **/","var jade = require(\"/home/ubuntu/bemuse/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"jukebox\\\"><div class=\\\"jukebox--overlay\\\"></div><div class=\\\"jukebox--inner\\\"><h1>BMS Jukebox</h1><p class=\\\"jukebox--status js-log\\\">Waiting for BMS file...</p><p>Google Chrome: Drag a BMS folder into this box.</p><p>Firefox, Safari: Select all files (BMS+sounds) and drag into this box.</p><button class=\\\"js-play\\\">Click Here to Play</button><div class=\\\"js-sampler jukebox--sampler\\\"></div></div></div>\");;return buf.join(\"\");\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./coming-soon/demo/template.jade\n ** module id = 606\n ** module chunks = 8\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!/home/ubuntu/bemuse/node_modules/css-loader/index.js!/home/ubuntu/bemuse/node_modules/autoprefixer-loader/index.js?browsers=last 2 version!/home/ubuntu/bemuse/node_modules/sass-loader/index.js?outputStyle=expanded!/home/ubuntu/bemuse/src/hacks/sass-import-rewriter/index.loader.js!/home/ubuntu/bemuse/src/coming-soon/demo/style.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!/home/ubuntu/bemuse/node_modules/style-loader/addStyles.js\")(content, {});\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tmodule.hot.accept(\"!!/home/ubuntu/bemuse/node_modules/css-loader/index.js!/home/ubuntu/bemuse/node_modules/autoprefixer-loader/index.js?browsers=last 2 version!/home/ubuntu/bemuse/node_modules/sass-loader/index.js?outputStyle=expanded!/home/ubuntu/bemuse/src/hacks/sass-import-rewriter/index.loader.js!/home/ubuntu/bemuse/src/coming-soon/demo/style.scss\", function() {\n\t\tvar newContent = require(\"!!/home/ubuntu/bemuse/node_modules/css-loader/index.js!/home/ubuntu/bemuse/node_modules/autoprefixer-loader/index.js?browsers=last 2 version!/home/ubuntu/bemuse/node_modules/sass-loader/index.js?outputStyle=expanded!/home/ubuntu/bemuse/src/hacks/sass-import-rewriter/index.loader.js!/home/ubuntu/bemuse/src/coming-soon/demo/style.scss\");\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\tupdate(newContent);\n\t});\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./coming-soon/demo/style.scss\n ** module id = 705\n ** module chunks = 8\n **/"],"sourceRoot":""}